// runtime can't be in strict mode because a global variable is assign and maybe created.
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["src/middleware"],{

/***/ "node:async_hooks":
/*!***********************************!*\
  !*** external "node:async_hooks" ***!
  \***********************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:async_hooks");

/***/ }),

/***/ "buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:buffer");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CDuyChinhPro%5CDocuments%5Cf8-fullstack-KS2%5Cmind-map%5Csrc%5Cmiddleware.js&page=%2Fsrc%2Fmiddleware&rootDir=C%3A%5CUsers%5CDuyChinhPro%5CDocuments%5Cf8-fullstack-KS2%5Cmind-map&matchers=&preferredRegion=&middlewareConfig=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CDuyChinhPro%5CDocuments%5Cf8-fullstack-KS2%5Cmind-map%5Csrc%5Cmiddleware.js&page=%2Fsrc%2Fmiddleware&rootDir=C%3A%5CUsers%5CDuyChinhPro%5CDocuments%5Cf8-fullstack-KS2%5Cmind-map&matchers=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ nHandler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/adapter */ \"(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\");\n/* harmony import */ var _src_middleware_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./src/middleware.js */ \"(middleware)/./src/middleware.js\");\n\n\n// Import the userland code.\n\nconst mod = {\n    ..._src_middleware_js__WEBPACK_IMPORTED_MODULE_2__\n};\nconst handler = mod.middleware || mod.default;\nconst page = \"/src/middleware\";\nif (typeof handler !== \"function\") {\n    throw new Error(`The Middleware \"${page}\" must export a \\`middleware\\` or a \\`default\\` function`);\n}\nfunction nHandler(opts) {\n    return (0,next_dist_server_web_adapter__WEBPACK_IMPORTED_MODULE_1__.adapter)({\n        ...opts,\n        page,\n        handler\n    });\n}\n\n//# sourceMappingURL=middleware.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1taWRkbGV3YXJlLWxvYWRlci5qcz9hYnNvbHV0ZVBhZ2VQYXRoPUMlM0ElNUNVc2VycyU1Q0R1eUNoaW5oUHJvJTVDRG9jdW1lbnRzJTVDZjgtZnVsbHN0YWNrLUtTMiU1Q21pbmQtbWFwJTVDc3JjJTVDbWlkZGxld2FyZS5qcyZwYWdlPSUyRnNyYyUyRm1pZGRsZXdhcmUmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNEdXlDaGluaFBybyU1Q0RvY3VtZW50cyU1Q2Y4LWZ1bGxzdGFjay1LUzIlNUNtaW5kLW1hcCZtYXRjaGVycz0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFzQztBQUNpQjtBQUN2RDtBQUM0QztBQUM1QztBQUNBLE9BQU8sK0NBQUk7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxLQUFLO0FBQzVDO0FBQ2U7QUFDZixXQUFXLHFFQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvP2JkMTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwibmV4dC9kaXN0L3NlcnZlci93ZWIvZ2xvYmFsc1wiO1xuaW1wb3J0IHsgYWRhcHRlciB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3dlYi9hZGFwdGVyXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyBfbW9kIGZyb20gXCIuL3NyYy9taWRkbGV3YXJlLmpzXCI7XG5jb25zdCBtb2QgPSB7XG4gICAgLi4uX21vZFxufTtcbmNvbnN0IGhhbmRsZXIgPSBtb2QubWlkZGxld2FyZSB8fCBtb2QuZGVmYXVsdDtcbmNvbnN0IHBhZ2UgPSBcIi9zcmMvbWlkZGxld2FyZVwiO1xuaWYgKHR5cGVvZiBoYW5kbGVyICE9PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBNaWRkbGV3YXJlIFwiJHtwYWdlfVwiIG11c3QgZXhwb3J0IGEgXFxgbWlkZGxld2FyZVxcYCBvciBhIFxcYGRlZmF1bHRcXGAgZnVuY3Rpb25gKTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5IYW5kbGVyKG9wdHMpIHtcbiAgICByZXR1cm4gYWRhcHRlcih7XG4gICAgICAgIC4uLm9wdHMsXG4gICAgICAgIHBhZ2UsXG4gICAgICAgIGhhbmRsZXJcbiAgICB9KTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWlkZGxld2FyZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CDuyChinhPro%5CDocuments%5Cf8-fullstack-KS2%5Cmind-map%5Csrc%5Cmiddleware.js&page=%2Fsrc%2Fmiddleware&rootDir=C%3A%5CUsers%5CDuyChinhPro%5CDocuments%5Cf8-fullstack-KS2%5Cmind-map&matchers=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/client/abstract-client.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/client/abstract-client.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AbstractClient = void 0;\nclass AbstractClient {\n    constructor(config, telemetry){\n        this.config = config;\n        this.telemetry = telemetry;\n    }\n}\nexports.AbstractClient = AbstractClient; //# sourceMappingURL=abstract-client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2NsaWVudC9hYnN0cmFjdC1jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELHNCQUFzQixHQUFHLEtBQUs7QUFDOUIsTUFBTUU7SUFDRkMsWUFBWUMsTUFBTSxFQUFFQyxTQUFTLENBQUU7UUFDM0IsSUFBSSxDQUFDRCxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDQyxTQUFTLEdBQUdBO0lBQ3JCO0FBQ0o7QUFDQUwsc0JBQXNCLEdBQUdFLGdCQUN6QiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2NsaWVudC9hYnN0cmFjdC1jbGllbnQuanM/YjVlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuQWJzdHJhY3RDbGllbnQgPSB2b2lkIDA7XG5jbGFzcyBBYnN0cmFjdENsaWVudCB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnLCB0ZWxlbWV0cnkpIHtcbiAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgICAgIHRoaXMudGVsZW1ldHJ5ID0gdGVsZW1ldHJ5O1xuICAgIH1cbn1cbmV4cG9ydHMuQWJzdHJhY3RDbGllbnQgPSBBYnN0cmFjdENsaWVudDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFic3RyYWN0LWNsaWVudC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJBYnN0cmFjdENsaWVudCIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwidGVsZW1ldHJ5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/client/abstract-client.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/client/edge-client.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/client/edge-client.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.clientGetter = exports.EdgeClient = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst oauth = tslib_1.__importStar(__webpack_require__(/*! oauth4webapi */ \"(middleware)/./node_modules/oauth4webapi/build/index.js\"));\nconst jose = tslib_1.__importStar(__webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/browser/index.js\"));\nconst abstract_client_1 = __webpack_require__(/*! ./abstract-client */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/client/abstract-client.js\");\nconst errors_1 = __webpack_require__(/*! ../utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/errors.js\");\nconst errors_2 = __webpack_require__(/*! ../../utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/errors.js\");\nconst url_join_1 = tslib_1.__importDefault(__webpack_require__(/*! url-join */ \"(middleware)/./node_modules/url-join/lib/url-join.js\"));\nconst encodeBase64 = (input)=>{\n    const unencoded = new TextEncoder().encode(input);\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for(let i = 0; i < unencoded.length; i += CHUNK_SIZE){\n        // @ts-expect-error Argument of type 'Uint8Array' is not assignable to parameter of type 'number[]'.\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(\"\"));\n};\nclass EdgeClient extends abstract_client_1.AbstractClient {\n    constructor(config, telemetry){\n        super(config, telemetry);\n        this.config = config;\n        this.telemetry = telemetry;\n        if (config.authorizationParams.response_type !== \"code\") {\n            throw new Error(\"This SDK only supports `response_type=code` when used in an Edge runtime.\");\n        }\n        this.httpOptions = ()=>{\n            const headers = new Headers();\n            if (config.enableTelemetry) {\n                const { name, version } = telemetry;\n                headers.set(\"User-Agent\", `${name}/${version}`);\n                headers.set(\"Auth0-Client\", encodeBase64(JSON.stringify({\n                    name,\n                    version,\n                    env: {\n                        edge: true\n                    }\n                })));\n            }\n            return {\n                signal: AbortSignal.timeout(this.config.httpTimeout),\n                headers\n            };\n        };\n    }\n    async getClient() {\n        if (this.as) {\n            return [\n                this.as,\n                this.client\n            ];\n        }\n        const issuer = new URL(this.config.issuerBaseURL);\n        try {\n            this.as = await oauth.discoveryRequest(issuer, this.httpOptions()).then((response)=>oauth.processDiscoveryResponse(issuer, response));\n        } catch (e) {\n            throw new errors_1.DiscoveryError(e, this.config.issuerBaseURL);\n        }\n        if (this.config.pushedAuthorizationRequests && !this.as.pushed_authorization_request_endpoint) {\n            throw new TypeError(\"pushed_authorization_request_endpoint must be configured on the issuer to use pushedAuthorizationRequests\");\n        }\n        this.client = Object.assign(Object.assign({\n            client_id: this.config.clientID\n        }, !this.config.clientAssertionSigningKey && {\n            client_secret: this.config.clientSecret\n        }), {\n            token_endpoint_auth_method: this.config.clientAuthMethod,\n            id_token_signed_response_alg: this.config.idTokenSigningAlg,\n            [oauth.clockTolerance]: this.config.clockTolerance\n        });\n        return [\n            this.as,\n            this.client\n        ];\n    }\n    async authorizationUrl(parameters) {\n        const [as, client] = await this.getClient();\n        if (this.config.pushedAuthorizationRequests) {\n            const response = await oauth.pushedAuthorizationRequest(as, client, parameters);\n            const result = await oauth.processPushedAuthorizationResponse(as, client, response);\n            if (oauth.isOAuth2Error(result)) {\n                throw new errors_1.IdentityProviderError({\n                    message: result.error_description || result.error,\n                    error: result.error,\n                    error_description: result.error_description\n                });\n            }\n            parameters = {\n                request_uri: result.request_uri\n            };\n        }\n        const authorizationUrl = new URL(as.authorization_endpoint);\n        authorizationUrl.searchParams.set(\"client_id\", this.config.clientID);\n        Object.entries(parameters).forEach(([key, value])=>{\n            if (value === null || value === undefined) {\n                return;\n            }\n            authorizationUrl.searchParams.set(key, String(value));\n        });\n        return authorizationUrl.toString();\n    }\n    async callbackParams(req, expectedState) {\n        const [as, client] = await this.getClient();\n        const url = req.getMethod().toUpperCase() === \"GET\" ? new URL(req.getUrl()) : new URLSearchParams(await req.getBody());\n        let result;\n        try {\n            result = oauth.validateAuthResponse(as, client, url, expectedState);\n        } catch (e) {\n            throw new errors_1.ApplicationError(e);\n        }\n        if (oauth.isOAuth2Error(result)) {\n            throw new errors_1.IdentityProviderError({\n                message: result.error_description || result.error,\n                error: result.error,\n                error_description: result.error_description\n            });\n        }\n        return result;\n    }\n    async callback(redirectUri, parameters, checks, extras) {\n        const [as, client] = await this.getClient();\n        const { clientAssertionSigningKey, clientAssertionSigningAlg } = this.config;\n        let clientPrivateKey = clientAssertionSigningKey;\n        /* c8 ignore next 3 */ if (clientPrivateKey && !(clientPrivateKey instanceof CryptoKey)) {\n            clientPrivateKey = await jose.importPKCS8(clientPrivateKey, clientAssertionSigningAlg || \"RS256\");\n        }\n        const response = await oauth.authorizationCodeGrantRequest(as, client, parameters, redirectUri, checks.code_verifier, Object.assign(Object.assign({\n            additionalParameters: extras.exchangeBody\n        }, clientPrivateKey && {\n            clientPrivateKey\n        }), this.httpOptions()));\n        const result = await oauth.processAuthorizationCodeOpenIDResponse(as, client, response, checks.nonce, checks.max_age);\n        if (oauth.isOAuth2Error(result)) {\n            throw new errors_1.IdentityProviderError({\n                message: result.error_description || /* c8 ignore next  */ result.error,\n                error: result.error,\n                error_description: result.error_description\n            });\n        }\n        return result;\n    }\n    async endSessionUrl(parameters) {\n        const [as] = await this.getClient();\n        const issuerUrl = new URL(as.issuer);\n        if (this.config.idpLogout && (this.config.auth0Logout || issuerUrl.hostname.match(\"\\\\.auth0\\\\.com$\") && this.config.auth0Logout !== false)) {\n            const { id_token_hint, post_logout_redirect_uri } = parameters, extraParams = tslib_1.__rest(parameters, [\n                \"id_token_hint\",\n                \"post_logout_redirect_uri\"\n            ]);\n            const auth0LogoutUrl = new URL((0, url_join_1.default)(as.issuer, \"/v2/logout\"));\n            post_logout_redirect_uri && auth0LogoutUrl.searchParams.set(\"returnTo\", post_logout_redirect_uri);\n            auth0LogoutUrl.searchParams.set(\"client_id\", this.config.clientID);\n            Object.entries(extraParams).forEach(([key, value])=>{\n                if (value === null || value === undefined) {\n                    return;\n                }\n                auth0LogoutUrl.searchParams.set(key, value);\n            });\n            return auth0LogoutUrl.toString();\n        }\n        if (!as.end_session_endpoint) {\n            throw new Error(\"RP Initiated Logout is not supported on your Authorization Server.\");\n        }\n        const oidcLogoutUrl = new URL(as.end_session_endpoint);\n        Object.entries(parameters).forEach(([key, value])=>{\n            if (value === null || value === undefined) {\n                return;\n            }\n            oidcLogoutUrl.searchParams.set(key, value);\n        });\n        oidcLogoutUrl.searchParams.set(\"client_id\", this.config.clientID);\n        return oidcLogoutUrl.toString();\n    }\n    async userinfo(accessToken) {\n        const [as, client] = await this.getClient();\n        const response = await oauth.userInfoRequest(as, client, accessToken, this.httpOptions());\n        try {\n            return await oauth.processUserInfoResponse(as, client, oauth.skipSubjectCheck, response);\n        } catch (e) {\n            throw new errors_1.UserInfoError(e.message);\n        }\n    }\n    async refresh(refreshToken, extras) {\n        const [as, client] = await this.getClient();\n        const res = await oauth.refreshTokenGrantRequest(as, client, refreshToken, Object.assign({\n            additionalParameters: extras.exchangeBody\n        }, this.httpOptions()));\n        const result = await oauth.processRefreshTokenResponse(as, client, res);\n        if (oauth.isOAuth2Error(result)) {\n            throw new errors_2.AccessTokenError(errors_2.AccessTokenErrorCode.FAILED_REFRESH_GRANT, \"The request to refresh the access token failed.\", new errors_1.IdentityProviderError({\n                message: result.error_description || /* c8 ignore next  */ result.error,\n                error: result.error,\n                error_description: result.error_description\n            }));\n        }\n        return result;\n    }\n    generateRandomCodeVerifier() {\n        return oauth.generateRandomCodeVerifier();\n    }\n    generateRandomNonce() {\n        return oauth.generateRandomNonce();\n    }\n    calculateCodeChallenge(codeVerifier) {\n        return oauth.calculatePKCECodeChallenge(codeVerifier);\n    }\n    async getIssuerMetadata() {\n        const [as] = await this.getClient();\n        return as;\n    }\n}\nexports.EdgeClient = EdgeClient;\nconst clientGetter = (telemetry)=>{\n    let client;\n    return async (config)=>{\n        if (!client) {\n            client = new EdgeClient(config, telemetry);\n        }\n        return client;\n    };\n};\nexports.clientGetter = clientGetter; //# sourceMappingURL=edge-client.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/client/edge-client.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/get-config.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/get-config.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.get = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst joi_1 = tslib_1.__importDefault(__webpack_require__(/*! joi */ \"(middleware)/./node_modules/joi/dist/joi-browser.min.js\"));\nconst get_login_state_1 = __webpack_require__(/*! ./hooks/get-login-state */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/hooks/get-login-state.js\");\nconst isHttps = /^https:/i;\nconst paramsSchema = joi_1.default.object({\n    secret: joi_1.default.alternatives([\n        joi_1.default.string().min(8),\n        joi_1.default.array().items(joi_1.default.string().min(8))\n    ]).required(),\n    session: joi_1.default.object({\n        rolling: joi_1.default.boolean().optional().default(true),\n        rollingDuration: joi_1.default.when(joi_1.default.ref(\"rolling\"), {\n            is: true,\n            then: joi_1.default.number().integer().messages({\n                \"number.base\": '\"session.rollingDuration\" must be provided an integer value when \"session.rolling\" is true'\n            }),\n            otherwise: joi_1.default.boolean().valid(false).messages({\n                \"any.only\": '\"session.rollingDuration\" must be false when \"session.rolling\" is disabled'\n            })\n        }).optional().default((parent)=>parent.rolling ? 24 * 60 * 60 : false),\n        absoluteDuration: joi_1.default.when(joi_1.default.ref(\"rolling\"), {\n            is: false,\n            then: joi_1.default.number().integer().messages({\n                \"number.base\": '\"session.absoluteDuration\" must be provided an integer value when \"session.rolling\" is false'\n            }),\n            otherwise: joi_1.default.alternatives([\n                joi_1.default.number().integer(),\n                joi_1.default.boolean().valid(false)\n            ])\n        }).optional().default(7 * 24 * 60 * 60),\n        autoSave: joi_1.default.boolean().optional().default(true),\n        name: joi_1.default.string().token().optional().default(\"appSession\"),\n        store: joi_1.default.object().optional().when(joi_1.default.ref(\"/backchannelLogout\"), {\n            not: false,\n            then: joi_1.default.when(\"/backchannelLogout.store\", {\n                not: joi_1.default.exist(),\n                then: joi_1.default.object().required().messages({\n                    // eslint-disable-next-line max-len\n                    \"any.required\": `Back-Channel Logout requires a \"backchannelLogout.store\" (you can also reuse \"session.store\" if you have stateful sessions).`\n                })\n            })\n        }),\n        genId: joi_1.default.function().maxArity(2).when(joi_1.default.ref(\"store\"), {\n            then: joi_1.default.required()\n        }),\n        storeIDToken: joi_1.default.boolean().optional().default(true),\n        cookie: joi_1.default.object({\n            domain: joi_1.default.string().optional(),\n            transient: joi_1.default.boolean().optional().default(false),\n            httpOnly: joi_1.default.boolean().optional().default(true),\n            sameSite: joi_1.default.string().valid(\"lax\", \"strict\", \"none\").optional().default(\"lax\"),\n            secure: joi_1.default.when(joi_1.default.ref(\"/baseURL\"), {\n                is: joi_1.default.string().pattern(isHttps),\n                then: joi_1.default.boolean().valid(true).default(true).messages({\n                    \"any.only\": \"Cookies must be secure when base url is https.\"\n                }),\n                otherwise: joi_1.default.boolean().valid(false).default(false).messages({\n                    \"any.only\": \"Cookies set with the `Secure` property wont be attached to http requests\"\n                })\n            }),\n            path: joi_1.default.string().uri({\n                relativeOnly: true\n            }).optional()\n        }).default().unknown(false)\n    }).default().unknown(false),\n    auth0Logout: joi_1.default.boolean().optional(),\n    authorizationParams: joi_1.default.object({\n        response_type: joi_1.default.string().optional().valid(\"id_token\", \"code id_token\", \"code\").default(\"id_token\"),\n        scope: joi_1.default.string().optional().pattern(/\\bopenid\\b/, \"contains openid\").default(\"openid profile email\"),\n        response_mode: joi_1.default.string().optional().when(\"response_type\", {\n            is: \"code\",\n            then: joi_1.default.valid(\"query\", \"form_post\"),\n            otherwise: joi_1.default.valid(\"form_post\").default(\"form_post\")\n        })\n    }).optional().unknown(true).default(),\n    baseURL: joi_1.default.string().uri().required().when(joi_1.default.ref(\"authorizationParams.response_mode\"), {\n        is: \"form_post\",\n        then: joi_1.default.string().pattern(isHttps).rule({\n            warn: true,\n            message: \"Using 'form_post' for response_mode may cause issues for you logging in over http, \" + \"see https://github.com/auth0/express-openid-connect/blob/master/FAQ.md\"\n        })\n    }),\n    clientID: joi_1.default.string().required(),\n    clientSecret: joi_1.default.string().when(joi_1.default.ref(\"clientAuthMethod\", {\n        adjust: (value)=>value && value.includes(\"client_secret\")\n    }), {\n        is: true,\n        then: joi_1.default.string().required().messages({\n            \"any.required\": '\"clientSecret\" is required for the clientAuthMethod {{clientAuthMethod}}'\n        })\n    }).when(joi_1.default.ref(\"idTokenSigningAlg\", {\n        adjust: (value)=>value && value.startsWith(\"HS\")\n    }), {\n        is: true,\n        then: joi_1.default.string().required().messages({\n            \"any.required\": '\"clientSecret\" is required for ID tokens with HMAC based algorithms'\n        })\n    }),\n    clockTolerance: joi_1.default.number().optional().default(60),\n    httpTimeout: joi_1.default.number().optional().default(5000),\n    httpAgent: joi_1.default.object().optional(),\n    enableTelemetry: joi_1.default.boolean().optional().default(true),\n    getLoginState: joi_1.default.function().optional().default(()=>get_login_state_1.getLoginState),\n    identityClaimFilter: joi_1.default.array().optional().default([\n        \"aud\",\n        \"iss\",\n        \"iat\",\n        \"exp\",\n        \"nbf\",\n        \"nonce\",\n        \"azp\",\n        \"auth_time\",\n        \"s_hash\",\n        \"at_hash\",\n        \"c_hash\"\n    ]),\n    idpLogout: joi_1.default.boolean().optional().default((parent)=>parent.auth0Logout || false),\n    idTokenSigningAlg: joi_1.default.string().insensitive().not(\"none\").optional().default(\"RS256\"),\n    issuerBaseURL: joi_1.default.string().uri().required(),\n    legacySameSiteCookie: joi_1.default.boolean().optional().default(true),\n    routes: joi_1.default.object({\n        callback: joi_1.default.string().uri({\n            relativeOnly: true\n        }).required(),\n        postLogoutRedirect: joi_1.default.string().uri({\n            allowRelative: true\n        }).default(\"\")\n    }).default().unknown(false),\n    clientAuthMethod: joi_1.default.string().valid(\"client_secret_basic\", \"client_secret_post\", \"client_secret_jwt\", \"private_key_jwt\", \"none\").optional().default((parent)=>{\n        if (parent.authorizationParams.response_type === \"id_token\" && !parent.pushedAuthorizationRequests) {\n            return \"none\";\n        }\n        if (parent.clientAssertionSigningKey) {\n            return \"private_key_jwt\";\n        }\n        return \"client_secret_basic\";\n    }).when(joi_1.default.ref(\"authorizationParams.response_type\", {\n        adjust: (value)=>value && value.includes(\"code\")\n    }), {\n        is: true,\n        then: joi_1.default.string().invalid(\"none\").messages({\n            \"any.only\": \"Public code flow clients are not supported.\"\n        })\n    }).when(joi_1.default.ref(\"pushedAuthorizationRequests\"), {\n        is: true,\n        then: joi_1.default.string().invalid(\"none\").messages({\n            \"any.only\": \"Public PAR clients are not supported\"\n        })\n    }),\n    clientAssertionSigningKey: joi_1.default.any().optional().when(joi_1.default.ref(\"clientAuthMethod\"), {\n        is: \"private_key_jwt\",\n        then: joi_1.default.any().required().messages({\n            \"any.required\": '\"clientAssertionSigningKey\" is required for a \"clientAuthMethod\" of \"private_key_jwt\"'\n        })\n    }),\n    clientAssertionSigningAlg: joi_1.default.string().optional().valid(\"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES256K\", \"ES384\", \"ES512\", \"EdDSA\"),\n    transactionCookie: joi_1.default.object({\n        name: joi_1.default.string().default(\"auth_verification\"),\n        domain: joi_1.default.string().default(joi_1.default.ref(\"/session.cookie.domain\")),\n        secure: joi_1.default.boolean().default(joi_1.default.ref(\"/session.cookie.secure\")),\n        sameSite: joi_1.default.string().valid(\"lax\", \"strict\", \"none\").default(joi_1.default.ref(\"/session.cookie.sameSite\")),\n        path: joi_1.default.string().uri({\n            relativeOnly: true\n        }).default(joi_1.default.ref(\"/session.cookie.transient\"))\n    }).default().unknown(false),\n    backchannelLogout: joi_1.default.alternatives([\n        joi_1.default.object({\n            store: joi_1.default.object().optional()\n        }),\n        joi_1.default.boolean()\n    ]).default(false),\n    pushedAuthorizationRequests: joi_1.default.boolean().optional().default(false)\n});\nconst get = (params = {})=>{\n    const { value, error, warning } = paramsSchema.validate(params, {\n        allowUnknown: true\n    });\n    if (error) {\n        throw new TypeError(error.details[0].message);\n    }\n    if (warning) {\n        console.warn(warning.message);\n    }\n    return value;\n};\nexports.get = get; //# sourceMappingURL=get-config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/get-config.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/backchannel-logout.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/backchannel-logout.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.deleteSub = exports.isLoggedOut = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst logout_token_verifier_1 = tslib_1.__importDefault(__webpack_require__(/*! ../utils/logout-token-verifier */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/logout-token-verifier.js\"));\nconst errors_1 = __webpack_require__(/*! ../utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/errors.js\");\nconst getStore = (config)=>{\n    const { session: { store }, backchannelLogout } = config;\n    return typeof backchannelLogout === \"boolean\" ? store : backchannelLogout.store;\n};\nfunction backchannelLogoutHandlerFactory(getConfig, getClient) {\n    const getConfigFn = typeof getConfig === \"function\" ? getConfig : ()=>getConfig;\n    const verifyLogoutToken = (0, logout_token_verifier_1.default)();\n    return async (req, res)=>{\n        const config = await getConfigFn(req);\n        const client = await getClient(config);\n        res.setHeader(\"cache-control\", \"no-store\");\n        const body = new URLSearchParams(await req.getBody());\n        const logoutToken = body.get(\"logout_token\");\n        if (!logoutToken) {\n            throw new errors_1.BackchannelLogoutError(\"invalid_request\", \"Missing Logout Token\");\n        }\n        let token;\n        try {\n            token = await verifyLogoutToken(logoutToken, config, await client.getIssuerMetadata());\n        } catch (e) {\n            throw new errors_1.BackchannelLogoutError(\"invalid_request\", e.message);\n        }\n        const { clientID, session: { absoluteDuration, rolling: rollingEnabled, rollingDuration } } = config;\n        const store = getStore(config);\n        const maxAge = (rollingEnabled ? Math.min(absoluteDuration, rollingDuration) : absoluteDuration) * 1000;\n        const now = Date.now() / 1000 | 0;\n        const payload = {\n            header: {\n                iat: now,\n                uat: now,\n                exp: now + maxAge,\n                maxAge\n            },\n            data: {}\n        };\n        try {\n            const { sid, sub } = token;\n            await Promise.all([\n                sid && store.set(`sid|${clientID}|${sid}`, payload),\n                sub && store.set(`sub|${clientID}|${sub}`, payload)\n            ]);\n        } catch (e) {\n            throw new errors_1.BackchannelLogoutError(\"application_error\", e.message);\n        }\n        res.send204();\n    };\n}\nexports[\"default\"] = backchannelLogoutHandlerFactory;\nconst isLoggedOut = async (user, config)=>{\n    const { clientID } = config;\n    const store = getStore(config);\n    const { sid, sub } = user;\n    const [logoutSid, logoutSub] = await Promise.all([\n        store.get(`sid|${clientID}|${sid}`),\n        store.get(`sub|${clientID}|${sub}`)\n    ]);\n    return !!(logoutSid || logoutSub);\n};\nexports.isLoggedOut = isLoggedOut;\nconst deleteSub = async (sub, config)=>{\n    const { clientID } = config;\n    const store = getStore(config);\n    await store.delete(`sub|${clientID}|${sub}`);\n};\nexports.deleteSub = deleteSub; //# sourceMappingURL=backchannel-logout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/backchannel-logout.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/callback.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/callback.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst url_join_1 = tslib_1.__importDefault(__webpack_require__(/*! url-join */ \"(middleware)/./node_modules/url-join/lib/url-join.js\"));\nconst encoding_1 = __webpack_require__(/*! ../utils/encoding */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/encoding.js\");\nconst errors_1 = __webpack_require__(/*! ../utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/errors.js\");\nfunction getRedirectUri(config) {\n    return (0, url_join_1.default)(config.baseURL, config.routes.callback);\n}\nfunction callbackHandlerFactory(getConfig, getClient, sessionCache, transientCookieHandler) {\n    const getConfigFn = typeof getConfig === \"function\" ? getConfig : ()=>getConfig;\n    return async (req, res, options)=>{\n        const config = await getConfigFn(req);\n        const client = await getClient(config);\n        const redirectUri = (options === null || options === void 0 ? void 0 : options.redirectUri) || getRedirectUri(config);\n        let tokenResponse;\n        let authVerification;\n        const cookie = await transientCookieHandler.read(config.transactionCookie.name, req, res);\n        if (!cookie) {\n            throw new errors_1.MissingStateCookieError();\n        }\n        try {\n            authVerification = JSON.parse(cookie);\n        } catch (_) {\n            throw new errors_1.MalformedStateCookieError();\n        }\n        const { max_age, code_verifier, nonce, state: expectedState, response_type = config.authorizationParams.response_type } = authVerification;\n        let callbackParams;\n        try {\n            callbackParams = await client.callbackParams(req, expectedState);\n        } catch (err) {\n            err.status = 400;\n            err.statusCode = 400;\n            err.openIdState = (0, encoding_1.decodeState)(expectedState);\n            throw err;\n        }\n        if (!callbackParams.get(\"state\")) {\n            throw new errors_1.MissingStateParamError();\n        }\n        try {\n            tokenResponse = await client.callback(redirectUri, callbackParams, {\n                max_age: max_age !== undefined ? +max_age : undefined,\n                code_verifier,\n                nonce,\n                state: expectedState,\n                response_type\n            }, {\n                exchangeBody: options === null || options === void 0 ? void 0 : options.authorizationParams\n            });\n        } catch (err) {\n            err.status = 400;\n            err.statusCode = 400;\n            err.openIdState = (0, encoding_1.decodeState)(expectedState);\n            throw err;\n        }\n        const openidState = (0, encoding_1.decodeState)(expectedState);\n        let session = await sessionCache.fromTokenEndpointResponse(req, res, tokenResponse);\n        if (options === null || options === void 0 ? void 0 : options.afterCallback) {\n            session = await options.afterCallback(session, openidState);\n        }\n        if (session) {\n            await sessionCache.create(req.req, res.res, session);\n        }\n        res.redirect(openidState.returnTo || config.baseURL);\n    };\n}\nexports[\"default\"] = callbackHandlerFactory; //# sourceMappingURL=callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/callback.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/login.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/login.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst url_join_1 = tslib_1.__importDefault(__webpack_require__(/*! url-join */ \"(middleware)/./node_modules/url-join/lib/url-join.js\"));\nconst encoding_1 = __webpack_require__(/*! ../utils/encoding */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/encoding.js\");\nconst debug_1 = tslib_1.__importDefault(__webpack_require__(/*! ../utils/debug */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/debug.js\"));\nconst debug = (0, debug_1.default)(\"handlers\");\nfunction getRedirectUri(config) {\n    return (0, url_join_1.default)(config.baseURL, config.routes.callback);\n}\nfunction loginHandlerFactory(getConfig, getClient, transientHandler) {\n    const getConfigFn = typeof getConfig === \"function\" ? getConfig : ()=>getConfig;\n    return async (req, res, options = {})=>{\n        const config = await getConfigFn(req);\n        const client = await getClient(config);\n        const returnTo = options.returnTo || config.baseURL;\n        const opts = Object.assign({\n            returnTo,\n            getLoginState: config.getLoginState\n        }, options);\n        // Ensure a redirect_uri, merge in configuration options, then passed-in options.\n        opts.authorizationParams = Object.assign(Object.assign({\n            redirect_uri: getRedirectUri(config)\n        }, config.authorizationParams), opts.authorizationParams || {});\n        const stateValue = await opts.getLoginState(opts);\n        if (typeof stateValue !== \"object\") {\n            throw new Error(\"Custom state value must be an object.\");\n        }\n        stateValue.nonce = client.generateRandomNonce();\n        stateValue.returnTo = stateValue.returnTo || opts.returnTo;\n        const responseType = opts.authorizationParams.response_type;\n        const usePKCE = responseType.includes(\"code\");\n        if (usePKCE) {\n            debug(\"response_type includes code, the authorization request will use PKCE\");\n            stateValue.code_verifier = client.generateRandomCodeVerifier();\n        }\n        const validResponseTypes = [\n            \"id_token\",\n            \"code id_token\",\n            \"code\"\n        ];\n        if (!validResponseTypes.includes(responseType)) {\n            throw new Error(`response_type should be one of ${validResponseTypes.join(\", \")}`);\n        }\n        if (!/\\bopenid\\b/.test(opts.authorizationParams.scope)) {\n            throw new Error('scope should contain \"openid\"');\n        }\n        const authVerification = {\n            nonce: client.generateRandomNonce(),\n            state: (0, encoding_1.encodeState)(stateValue)\n        };\n        if (opts.authorizationParams.max_age) {\n            authVerification.max_age = opts.authorizationParams.max_age;\n        }\n        const authParams = Object.assign(Object.assign({}, opts.authorizationParams), authVerification);\n        if (usePKCE) {\n            authVerification.code_verifier = client.generateRandomCodeVerifier();\n            authParams.code_challenge_method = \"S256\";\n            authParams.code_challenge = await client.calculateCodeChallenge(authVerification.code_verifier);\n        }\n        if (responseType !== config.authorizationParams.response_type) {\n            authVerification.response_type = responseType;\n        }\n        await transientHandler.save(config.transactionCookie.name, req, res, {\n            sameSite: authParams.response_mode === \"form_post\" ? \"none\" : config.transactionCookie.sameSite,\n            value: JSON.stringify(authVerification)\n        });\n        const authorizationUrl = await client.authorizationUrl(authParams);\n        debug(\"redirecting to %s\", authorizationUrl);\n        res.redirect(authorizationUrl);\n    };\n}\nexports[\"default\"] = loginHandlerFactory; //# sourceMappingURL=login.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/login.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/logout.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/logout.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst url_join_1 = tslib_1.__importDefault(__webpack_require__(/*! url-join */ \"(middleware)/./node_modules/url-join/lib/url-join.js\"));\nconst debug_1 = tslib_1.__importDefault(__webpack_require__(/*! ../utils/debug */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/debug.js\"));\nconst debug = (0, debug_1.default)(\"logout\");\nfunction logoutHandlerFactory(getConfig, getClient, sessionCache) {\n    const getConfigFn = typeof getConfig === \"function\" ? getConfig : ()=>getConfig;\n    return async (req, res, options = {})=>{\n        const config = await getConfigFn(req);\n        const client = await getClient(config);\n        let returnURL = options.returnTo || config.routes.postLogoutRedirect;\n        debug(\"logout() with return url: %s\", returnURL);\n        try {\n            new URL(returnURL);\n        } catch (_) {\n            returnURL = (0, url_join_1.default)(config.baseURL, returnURL);\n        }\n        const isAuthenticated = await sessionCache.isAuthenticated(req.req, res.res);\n        if (!isAuthenticated) {\n            debug(\"end-user already logged out, redirecting to %s\", returnURL);\n            res.redirect(returnURL);\n            return;\n        }\n        const idToken = await sessionCache.getIdToken(req.req, res.res);\n        await sessionCache.delete(req.req, res.res);\n        if (!config.idpLogout) {\n            debug(\"performing a local only logout, redirecting to %s\", returnURL);\n            res.redirect(returnURL);\n            return;\n        }\n        returnURL = await client.endSessionUrl(Object.assign(Object.assign({}, options.logoutParams), {\n            post_logout_redirect_uri: returnURL,\n            id_token_hint: idToken\n        }));\n        debug(\"logging out of identity provider, redirecting to %s\", returnURL);\n        res.redirect(returnURL);\n    };\n}\nexports[\"default\"] = logoutHandlerFactory; //# sourceMappingURL=logout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2hhbmRsZXJzL2xvZ291dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyw4REFBTztBQUMvQixNQUFNQyxhQUFhRixRQUFRRyxlQUFlLENBQUNGLG1CQUFPQSxDQUFDLHNFQUFVO0FBQzdELE1BQU1HLFVBQVVKLFFBQVFHLGVBQWUsQ0FBQ0YsbUJBQU9BLENBQUMseUdBQWdCO0FBQ2hFLE1BQU1JLFFBQVEsQ0FBQyxHQUFHRCxRQUFRRSxPQUFPLEVBQUU7QUFDbkMsU0FBU0MscUJBQXFCQyxTQUFTLEVBQUVDLFNBQVMsRUFBRUMsWUFBWTtJQUM1RCxNQUFNQyxjQUFjLE9BQU9ILGNBQWMsYUFBYUEsWUFBWSxJQUFNQTtJQUN4RSxPQUFPLE9BQU9JLEtBQUtDLEtBQUtDLFVBQVUsQ0FBQyxDQUFDO1FBQ2hDLE1BQU1DLFNBQVMsTUFBTUosWUFBWUM7UUFDakMsTUFBTUksU0FBUyxNQUFNUCxVQUFVTTtRQUMvQixJQUFJRSxZQUFZSCxRQUFRSSxRQUFRLElBQUlILE9BQU9JLE1BQU0sQ0FBQ0Msa0JBQWtCO1FBQ3BFZixNQUFNLGdDQUFnQ1k7UUFDdEMsSUFBSTtZQUNBLElBQUlJLElBQUlKO1FBQ1osRUFDQSxPQUFPSyxHQUFHO1lBQ05MLFlBQVksQ0FBQyxHQUFHZixXQUFXSSxPQUFPLEVBQUVTLE9BQU9RLE9BQU8sRUFBRU47UUFDeEQ7UUFDQSxNQUFNTyxrQkFBa0IsTUFBTWQsYUFBYWMsZUFBZSxDQUFDWixJQUFJQSxHQUFHLEVBQUVDLElBQUlBLEdBQUc7UUFDM0UsSUFBSSxDQUFDVyxpQkFBaUI7WUFDbEJuQixNQUFNLGtEQUFrRFk7WUFDeERKLElBQUlZLFFBQVEsQ0FBQ1I7WUFDYjtRQUNKO1FBQ0EsTUFBTVMsVUFBVSxNQUFNaEIsYUFBYWlCLFVBQVUsQ0FBQ2YsSUFBSUEsR0FBRyxFQUFFQyxJQUFJQSxHQUFHO1FBQzlELE1BQU1ILGFBQWFrQixNQUFNLENBQUNoQixJQUFJQSxHQUFHLEVBQUVDLElBQUlBLEdBQUc7UUFDMUMsSUFBSSxDQUFDRSxPQUFPYyxTQUFTLEVBQUU7WUFDbkJ4QixNQUFNLHFEQUFxRFk7WUFDM0RKLElBQUlZLFFBQVEsQ0FBQ1I7WUFDYjtRQUNKO1FBQ0FBLFlBQVksTUFBTUQsT0FBT2MsYUFBYSxDQUFDbEMsT0FBT21DLE1BQU0sQ0FBQ25DLE9BQU9tQyxNQUFNLENBQUMsQ0FBQyxHQUFHakIsUUFBUWtCLFlBQVksR0FBRztZQUFFQywwQkFBMEJoQjtZQUFXaUIsZUFBZVI7UUFBUTtRQUM1SnJCLE1BQU0sdURBQXVEWTtRQUM3REosSUFBSVksUUFBUSxDQUFDUjtJQUNqQjtBQUNKO0FBQ0FuQixrQkFBZSxHQUFHUyxzQkFDbEIsa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3QvYXV0aDAtc2Vzc2lvbi9oYW5kbGVycy9sb2dvdXQuanM/MTM0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCB1cmxfam9pbl8xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcInVybC1qb2luXCIpKTtcbmNvbnN0IGRlYnVnXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi4vdXRpbHMvZGVidWdcIikpO1xuY29uc3QgZGVidWcgPSAoMCwgZGVidWdfMS5kZWZhdWx0KSgnbG9nb3V0Jyk7XG5mdW5jdGlvbiBsb2dvdXRIYW5kbGVyRmFjdG9yeShnZXRDb25maWcsIGdldENsaWVudCwgc2Vzc2lvbkNhY2hlKSB7XG4gICAgY29uc3QgZ2V0Q29uZmlnRm4gPSB0eXBlb2YgZ2V0Q29uZmlnID09PSAnZnVuY3Rpb24nID8gZ2V0Q29uZmlnIDogKCkgPT4gZ2V0Q29uZmlnO1xuICAgIHJldHVybiBhc3luYyAocmVxLCByZXMsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgICAgICBjb25zdCBjb25maWcgPSBhd2FpdCBnZXRDb25maWdGbihyZXEpO1xuICAgICAgICBjb25zdCBjbGllbnQgPSBhd2FpdCBnZXRDbGllbnQoY29uZmlnKTtcbiAgICAgICAgbGV0IHJldHVyblVSTCA9IG9wdGlvbnMucmV0dXJuVG8gfHwgY29uZmlnLnJvdXRlcy5wb3N0TG9nb3V0UmVkaXJlY3Q7XG4gICAgICAgIGRlYnVnKCdsb2dvdXQoKSB3aXRoIHJldHVybiB1cmw6ICVzJywgcmV0dXJuVVJMKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIG5ldyBVUkwocmV0dXJuVVJMKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoXykge1xuICAgICAgICAgICAgcmV0dXJuVVJMID0gKDAsIHVybF9qb2luXzEuZGVmYXVsdCkoY29uZmlnLmJhc2VVUkwsIHJldHVyblVSTCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaXNBdXRoZW50aWNhdGVkID0gYXdhaXQgc2Vzc2lvbkNhY2hlLmlzQXV0aGVudGljYXRlZChyZXEucmVxLCByZXMucmVzKTtcbiAgICAgICAgaWYgKCFpc0F1dGhlbnRpY2F0ZWQpIHtcbiAgICAgICAgICAgIGRlYnVnKCdlbmQtdXNlciBhbHJlYWR5IGxvZ2dlZCBvdXQsIHJlZGlyZWN0aW5nIHRvICVzJywgcmV0dXJuVVJMKTtcbiAgICAgICAgICAgIHJlcy5yZWRpcmVjdChyZXR1cm5VUkwpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGlkVG9rZW4gPSBhd2FpdCBzZXNzaW9uQ2FjaGUuZ2V0SWRUb2tlbihyZXEucmVxLCByZXMucmVzKTtcbiAgICAgICAgYXdhaXQgc2Vzc2lvbkNhY2hlLmRlbGV0ZShyZXEucmVxLCByZXMucmVzKTtcbiAgICAgICAgaWYgKCFjb25maWcuaWRwTG9nb3V0KSB7XG4gICAgICAgICAgICBkZWJ1ZygncGVyZm9ybWluZyBhIGxvY2FsIG9ubHkgbG9nb3V0LCByZWRpcmVjdGluZyB0byAlcycsIHJldHVyblVSTCk7XG4gICAgICAgICAgICByZXMucmVkaXJlY3QocmV0dXJuVVJMKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm5VUkwgPSBhd2FpdCBjbGllbnQuZW5kU2Vzc2lvblVybChPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMubG9nb3V0UGFyYW1zKSwgeyBwb3N0X2xvZ291dF9yZWRpcmVjdF91cmk6IHJldHVyblVSTCwgaWRfdG9rZW5faGludDogaWRUb2tlbiB9KSk7XG4gICAgICAgIGRlYnVnKCdsb2dnaW5nIG91dCBvZiBpZGVudGl0eSBwcm92aWRlciwgcmVkaXJlY3RpbmcgdG8gJXMnLCByZXR1cm5VUkwpO1xuICAgICAgICByZXMucmVkaXJlY3QocmV0dXJuVVJMKTtcbiAgICB9O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gbG9nb3V0SGFuZGxlckZhY3Rvcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1sb2dvdXQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJ1cmxfam9pbl8xIiwiX19pbXBvcnREZWZhdWx0IiwiZGVidWdfMSIsImRlYnVnIiwiZGVmYXVsdCIsImxvZ291dEhhbmRsZXJGYWN0b3J5IiwiZ2V0Q29uZmlnIiwiZ2V0Q2xpZW50Iiwic2Vzc2lvbkNhY2hlIiwiZ2V0Q29uZmlnRm4iLCJyZXEiLCJyZXMiLCJvcHRpb25zIiwiY29uZmlnIiwiY2xpZW50IiwicmV0dXJuVVJMIiwicmV0dXJuVG8iLCJyb3V0ZXMiLCJwb3N0TG9nb3V0UmVkaXJlY3QiLCJVUkwiLCJfIiwiYmFzZVVSTCIsImlzQXV0aGVudGljYXRlZCIsInJlZGlyZWN0IiwiaWRUb2tlbiIsImdldElkVG9rZW4iLCJkZWxldGUiLCJpZHBMb2dvdXQiLCJlbmRTZXNzaW9uVXJsIiwiYXNzaWduIiwibG9nb3V0UGFyYW1zIiwicG9zdF9sb2dvdXRfcmVkaXJlY3RfdXJpIiwiaWRfdG9rZW5faGludCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/logout.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/hooks/get-login-state.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/hooks/get-login-state.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getLoginState = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst debug_1 = tslib_1.__importDefault(__webpack_require__(/*! ../utils/debug */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/debug.js\"));\nconst debug = (0, debug_1.default)(\"get-login-state\");\n/**\n * Generate the state value for use during login transactions. It is used to store the intended\n * return URL after the user authenticates. State is not used to carry unique PRNG values here\n * because the library utilizes either nonce or PKCE for CSRF protection.\n *\n * @param {IncomingMessage} _req\n * @param {LoginOptions} options\n *\n * @return {object}\n */ const getLoginState = (options)=>{\n    const state = {\n        returnTo: options.returnTo\n    };\n    debug(\"adding default state %O\", state);\n    return state;\n};\nexports.getLoginState = getLoginState; //# sourceMappingURL=get-login-state.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2hvb2tzL2dldC1sb2dpbi1zdGF0ZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQscUJBQXFCLEdBQUcsS0FBSztBQUM3QixNQUFNRyxVQUFVQyxtQkFBT0EsQ0FBQyw4REFBTztBQUMvQixNQUFNQyxVQUFVRixRQUFRRyxlQUFlLENBQUNGLG1CQUFPQSxDQUFDLHlHQUFnQjtBQUNoRSxNQUFNRyxRQUFRLENBQUMsR0FBR0YsUUFBUUcsT0FBTyxFQUFFO0FBQ25DOzs7Ozs7Ozs7Q0FTQyxHQUNELE1BQU1OLGdCQUFnQixDQUFDTztJQUNuQixNQUFNQyxRQUFRO1FBQUVDLFVBQVVGLFFBQVFFLFFBQVE7SUFBQztJQUMzQ0osTUFBTSwyQkFBMkJHO0lBQ2pDLE9BQU9BO0FBQ1g7QUFDQVYscUJBQXFCLEdBQUdFLGVBQ3hCLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2F1dGgwLXNlc3Npb24vaG9va3MvZ2V0LWxvZ2luLXN0YXRlLmpzPzNkNDEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldExvZ2luU3RhdGUgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgZGVidWdfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuLi91dGlscy9kZWJ1Z1wiKSk7XG5jb25zdCBkZWJ1ZyA9ICgwLCBkZWJ1Z18xLmRlZmF1bHQpKCdnZXQtbG9naW4tc3RhdGUnKTtcbi8qKlxuICogR2VuZXJhdGUgdGhlIHN0YXRlIHZhbHVlIGZvciB1c2UgZHVyaW5nIGxvZ2luIHRyYW5zYWN0aW9ucy4gSXQgaXMgdXNlZCB0byBzdG9yZSB0aGUgaW50ZW5kZWRcbiAqIHJldHVybiBVUkwgYWZ0ZXIgdGhlIHVzZXIgYXV0aGVudGljYXRlcy4gU3RhdGUgaXMgbm90IHVzZWQgdG8gY2FycnkgdW5pcXVlIFBSTkcgdmFsdWVzIGhlcmVcbiAqIGJlY2F1c2UgdGhlIGxpYnJhcnkgdXRpbGl6ZXMgZWl0aGVyIG5vbmNlIG9yIFBLQ0UgZm9yIENTUkYgcHJvdGVjdGlvbi5cbiAqXG4gKiBAcGFyYW0ge0luY29taW5nTWVzc2FnZX0gX3JlcVxuICogQHBhcmFtIHtMb2dpbk9wdGlvbnN9IG9wdGlvbnNcbiAqXG4gKiBAcmV0dXJuIHtvYmplY3R9XG4gKi9cbmNvbnN0IGdldExvZ2luU3RhdGUgPSAob3B0aW9ucykgPT4ge1xuICAgIGNvbnN0IHN0YXRlID0geyByZXR1cm5Ubzogb3B0aW9ucy5yZXR1cm5UbyB9O1xuICAgIGRlYnVnKCdhZGRpbmcgZGVmYXVsdCBzdGF0ZSAlTycsIHN0YXRlKTtcbiAgICByZXR1cm4gc3RhdGU7XG59O1xuZXhwb3J0cy5nZXRMb2dpblN0YXRlID0gZ2V0TG9naW5TdGF0ZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1sb2dpbi1zdGF0ZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXRMb2dpblN0YXRlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJkZWJ1Z18xIiwiX19pbXBvcnREZWZhdWx0IiwiZGVidWciLCJkZWZhdWx0Iiwib3B0aW9ucyIsInN0YXRlIiwicmV0dXJuVG8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/hooks/get-login-state.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-request-cookies.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-request-cookies.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nclass Auth0RequestCookies {\n}\nexports[\"default\"] = Auth0RequestCookies; //# sourceMappingURL=auth0-request-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2h0dHAvYXV0aDAtcmVxdWVzdC1jb29raWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DO0FBQ047QUFDQUYsa0JBQWUsR0FBR0UscUJBQ2xCLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2F1dGgwLXNlc3Npb24vaHR0cC9hdXRoMC1yZXF1ZXN0LWNvb2tpZXMuanM/M2JkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNsYXNzIEF1dGgwUmVxdWVzdENvb2tpZXMge1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gQXV0aDBSZXF1ZXN0Q29va2llcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGgwLXJlcXVlc3QtY29va2llcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJBdXRoMFJlcXVlc3RDb29raWVzIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-request-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-request.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-request.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst auth0_request_cookies_1 = tslib_1.__importDefault(__webpack_require__(/*! ./auth0-request-cookies */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-request-cookies.js\"));\nclass Auth0Request extends auth0_request_cookies_1.default {\n    constructor(req){\n        super();\n        this.req = req;\n    }\n}\nexports[\"default\"] = Auth0Request; //# sourceMappingURL=auth0-request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2h0dHAvYXV0aDAtcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyw4REFBTztBQUMvQixNQUFNQywwQkFBMEJGLFFBQVFHLGVBQWUsQ0FBQ0YsbUJBQU9BLENBQUMsaUlBQXlCO0FBQ3pGLE1BQU1HLHFCQUFxQkYsd0JBQXdCRyxPQUFPO0lBQ3REQyxZQUFZQyxHQUFHLENBQUU7UUFDYixLQUFLO1FBQ0wsSUFBSSxDQUFDQSxHQUFHLEdBQUdBO0lBQ2Y7QUFDSjtBQUNBVCxrQkFBZSxHQUFHTSxjQUNsQix5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2h0dHAvYXV0aDAtcmVxdWVzdC5qcz80YjFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGF1dGgwX3JlcXVlc3RfY29va2llc18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYXV0aDAtcmVxdWVzdC1jb29raWVzXCIpKTtcbmNsYXNzIEF1dGgwUmVxdWVzdCBleHRlbmRzIGF1dGgwX3JlcXVlc3RfY29va2llc18xLmRlZmF1bHQge1xuICAgIGNvbnN0cnVjdG9yKHJlcSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnJlcSA9IHJlcTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBBdXRoMFJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoMC1yZXF1ZXN0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiYXV0aDBfcmVxdWVzdF9jb29raWVzXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJBdXRoMFJlcXVlc3QiLCJkZWZhdWx0IiwiY29uc3RydWN0b3IiLCJyZXEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-response-cookies.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-response-cookies.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nclass Auth0ResponseCookies {\n    clearCookie(name, options = {}) {\n        const { domain, path, secure, sameSite } = options;\n        const clearOptions = {\n            domain,\n            path,\n            maxAge: 0\n        };\n        // If SameSite=None is set, the cookie Secure attribute must also be set (or the cookie will be blocked)\n        // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite#none\n        if (sameSite === \"none\") {\n            clearOptions.secure = secure;\n            clearOptions.sameSite = sameSite;\n        }\n        this.setCookie(name, \"\", clearOptions);\n    }\n}\nexports[\"default\"] = Auth0ResponseCookies; //# sourceMappingURL=auth0-response-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2h0dHAvYXV0aDAtcmVzcG9uc2UtY29va2llcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQztJQUNGQyxZQUFZQyxJQUFJLEVBQUVDLFVBQVUsQ0FBQyxDQUFDLEVBQUU7UUFDNUIsTUFBTSxFQUFFQyxNQUFNLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0o7UUFDM0MsTUFBTUssZUFBZTtZQUNqQko7WUFDQUM7WUFDQUksUUFBUTtRQUNaO1FBQ0Esd0dBQXdHO1FBQ3hHLHFGQUFxRjtRQUNyRixJQUFJRixhQUFhLFFBQVE7WUFDckJDLGFBQWFGLE1BQU0sR0FBR0E7WUFDdEJFLGFBQWFELFFBQVEsR0FBR0E7UUFDNUI7UUFDQSxJQUFJLENBQUNHLFNBQVMsQ0FBQ1IsTUFBTSxJQUFJTTtJQUM3QjtBQUNKO0FBQ0FWLGtCQUFlLEdBQUdFLHNCQUNsQixrREFBa0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2h0dHAvYXV0aDAtcmVzcG9uc2UtY29va2llcy5qcz8xODQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY2xhc3MgQXV0aDBSZXNwb25zZUNvb2tpZXMge1xuICAgIGNsZWFyQ29va2llKG5hbWUsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB7IGRvbWFpbiwgcGF0aCwgc2VjdXJlLCBzYW1lU2l0ZSB9ID0gb3B0aW9ucztcbiAgICAgICAgY29uc3QgY2xlYXJPcHRpb25zID0ge1xuICAgICAgICAgICAgZG9tYWluLFxuICAgICAgICAgICAgcGF0aCxcbiAgICAgICAgICAgIG1heEFnZTogMFxuICAgICAgICB9O1xuICAgICAgICAvLyBJZiBTYW1lU2l0ZT1Ob25lIGlzIHNldCwgdGhlIGNvb2tpZSBTZWN1cmUgYXR0cmlidXRlIG11c3QgYWxzbyBiZSBzZXQgKG9yIHRoZSBjb29raWUgd2lsbCBiZSBibG9ja2VkKVxuICAgICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvU2V0LUNvb2tpZS9TYW1lU2l0ZSNub25lXG4gICAgICAgIGlmIChzYW1lU2l0ZSA9PT0gJ25vbmUnKSB7XG4gICAgICAgICAgICBjbGVhck9wdGlvbnMuc2VjdXJlID0gc2VjdXJlO1xuICAgICAgICAgICAgY2xlYXJPcHRpb25zLnNhbWVTaXRlID0gc2FtZVNpdGU7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zZXRDb29raWUobmFtZSwgJycsIGNsZWFyT3B0aW9ucyk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gQXV0aDBSZXNwb25zZUNvb2tpZXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoMC1yZXNwb25zZS1jb29raWVzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkF1dGgwUmVzcG9uc2VDb29raWVzIiwiY2xlYXJDb29raWUiLCJuYW1lIiwib3B0aW9ucyIsImRvbWFpbiIsInBhdGgiLCJzZWN1cmUiLCJzYW1lU2l0ZSIsImNsZWFyT3B0aW9ucyIsIm1heEFnZSIsInNldENvb2tpZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-response-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-response.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-response.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst auth0_response_cookies_1 = tslib_1.__importDefault(__webpack_require__(/*! ./auth0-response-cookies */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-response-cookies.js\"));\nclass Auth0Response extends auth0_response_cookies_1.default {\n    constructor(res){\n        super();\n        this.res = res;\n    }\n}\nexports[\"default\"] = Auth0Response; //# sourceMappingURL=auth0-response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2h0dHAvYXV0aDAtcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsVUFBVUMsbUJBQU9BLENBQUMsOERBQU87QUFDL0IsTUFBTUMsMkJBQTJCRixRQUFRRyxlQUFlLENBQUNGLG1CQUFPQSxDQUFDLG1JQUEwQjtBQUMzRixNQUFNRyxzQkFBc0JGLHlCQUF5QkcsT0FBTztJQUN4REMsWUFBWUMsR0FBRyxDQUFFO1FBQ2IsS0FBSztRQUNMLElBQUksQ0FBQ0EsR0FBRyxHQUFHQTtJQUNmO0FBQ0o7QUFDQVQsa0JBQWUsR0FBR00sZUFDbEIsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3QvYXV0aDAtc2Vzc2lvbi9odHRwL2F1dGgwLXJlc3BvbnNlLmpzPzk2MDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgYXV0aDBfcmVzcG9uc2VfY29va2llc18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vYXV0aDAtcmVzcG9uc2UtY29va2llc1wiKSk7XG5jbGFzcyBBdXRoMFJlc3BvbnNlIGV4dGVuZHMgYXV0aDBfcmVzcG9uc2VfY29va2llc18xLmRlZmF1bHQge1xuICAgIGNvbnN0cnVjdG9yKHJlcykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnJlcyA9IHJlcztcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBBdXRoMFJlc3BvbnNlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aDAtcmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJhdXRoMF9yZXNwb25zZV9jb29raWVzXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJBdXRoMFJlc3BvbnNlIiwiZGVmYXVsdCIsImNvbnN0cnVjdG9yIiwicmVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.NodeResponse = exports.NodeRequest = exports.Auth0ResponseCookies = exports.Auth0RequestCookies = exports.Auth0Response = exports.Auth0Request = void 0;\nvar auth0_request_1 = __webpack_require__(/*! ./auth0-request */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-request.js\");\nObject.defineProperty(exports, \"Auth0Request\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth0_request_1).default;\n    }\n}));\nvar auth0_response_1 = __webpack_require__(/*! ./auth0-response */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-response.js\");\nObject.defineProperty(exports, \"Auth0Response\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth0_response_1).default;\n    }\n}));\nvar auth0_request_cookies_1 = __webpack_require__(/*! ./auth0-request-cookies */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-request-cookies.js\");\nObject.defineProperty(exports, \"Auth0RequestCookies\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth0_request_cookies_1).default;\n    }\n}));\nvar auth0_response_cookies_1 = __webpack_require__(/*! ./auth0-response-cookies */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-response-cookies.js\");\nObject.defineProperty(exports, \"Auth0ResponseCookies\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth0_response_cookies_1).default;\n    }\n}));\nvar node_request_1 = __webpack_require__(/*! ./node-request */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/node-request.js\");\nObject.defineProperty(exports, \"NodeRequest\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(node_request_1).default;\n    }\n}));\nvar node_response_1 = __webpack_require__(/*! ./node-response */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/node-response.js\");\nObject.defineProperty(exports, \"NodeResponse\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(node_response_1).default;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2h0dHAvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYixJQUFJQSxrQkFBa0IsQ0FBQyxNQUFHLEtBQUssT0FBRyxFQUFFQSxlQUFlLElBQUssU0FBVUMsR0FBRztJQUNqRSxPQUFPLE9BQVFBLElBQUlDLFVBQVUsR0FBSUQsTUFBTTtRQUFFLFdBQVdBO0lBQUk7QUFDNUQ7QUFDQUUsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELG9CQUFvQixHQUFHQSxtQkFBbUIsR0FBR0EsNEJBQTRCLEdBQUdBLDJCQUEyQixHQUFHQSxxQkFBcUIsR0FBR0Esb0JBQW9CLEdBQUcsS0FBSztBQUM5SixJQUFJUSxrQkFBa0JDLG1CQUFPQSxDQUFDLGlIQUFpQjtBQUMvQ1gsZ0RBQStDO0lBQUVZLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9oQixnQkFBZ0JhLGlCQUFpQkksT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQzNJLElBQUlDLG1CQUFtQkosbUJBQU9BLENBQUMsbUhBQWtCO0FBQ2pEWCxpREFBZ0Q7SUFBRVksWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT2hCLGdCQUFnQmtCLGtCQUFrQkQsT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQzdJLElBQUlFLDBCQUEwQkwsbUJBQU9BLENBQUMsaUlBQXlCO0FBQy9EWCx1REFBc0Q7SUFBRVksWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT2hCLGdCQUFnQm1CLHlCQUF5QkYsT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQzFKLElBQUlHLDJCQUEyQk4sbUJBQU9BLENBQUMsbUlBQTBCO0FBQ2pFWCx3REFBdUQ7SUFBRVksWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT2hCLGdCQUFnQm9CLDBCQUEwQkgsT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQzVKLElBQUlJLGlCQUFpQlAsbUJBQU9BLENBQUMsK0dBQWdCO0FBQzdDWCwrQ0FBOEM7SUFBRVksWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT2hCLGdCQUFnQnFCLGdCQUFnQkosT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ3pJLElBQUlLLGtCQUFrQlIsbUJBQU9BLENBQUMsaUhBQWlCO0FBQy9DWCxnREFBK0M7SUFBRVksWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT2hCLGdCQUFnQnNCLGlCQUFpQkwsT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDLEVBQzNJLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2F1dGgwLXNlc3Npb24vaHR0cC9pbmRleC5qcz9lNGNkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Ob2RlUmVzcG9uc2UgPSBleHBvcnRzLk5vZGVSZXF1ZXN0ID0gZXhwb3J0cy5BdXRoMFJlc3BvbnNlQ29va2llcyA9IGV4cG9ydHMuQXV0aDBSZXF1ZXN0Q29va2llcyA9IGV4cG9ydHMuQXV0aDBSZXNwb25zZSA9IGV4cG9ydHMuQXV0aDBSZXF1ZXN0ID0gdm9pZCAwO1xudmFyIGF1dGgwX3JlcXVlc3RfMSA9IHJlcXVpcmUoXCIuL2F1dGgwLXJlcXVlc3RcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBdXRoMFJlcXVlc3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9faW1wb3J0RGVmYXVsdChhdXRoMF9yZXF1ZXN0XzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgYXV0aDBfcmVzcG9uc2VfMSA9IHJlcXVpcmUoXCIuL2F1dGgwLXJlc3BvbnNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXV0aDBSZXNwb25zZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGF1dGgwX3Jlc3BvbnNlXzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgYXV0aDBfcmVxdWVzdF9jb29raWVzXzEgPSByZXF1aXJlKFwiLi9hdXRoMC1yZXF1ZXN0LWNvb2tpZXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBdXRoMFJlcXVlc3RDb29raWVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQoYXV0aDBfcmVxdWVzdF9jb29raWVzXzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgYXV0aDBfcmVzcG9uc2VfY29va2llc18xID0gcmVxdWlyZShcIi4vYXV0aDAtcmVzcG9uc2UtY29va2llc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1dGgwUmVzcG9uc2VDb29raWVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQoYXV0aDBfcmVzcG9uc2VfY29va2llc18xKS5kZWZhdWx0OyB9IH0pO1xudmFyIG5vZGVfcmVxdWVzdF8xID0gcmVxdWlyZShcIi4vbm9kZS1yZXF1ZXN0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTm9kZVJlcXVlc3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9faW1wb3J0RGVmYXVsdChub2RlX3JlcXVlc3RfMSkuZGVmYXVsdDsgfSB9KTtcbnZhciBub2RlX3Jlc3BvbnNlXzEgPSByZXF1aXJlKFwiLi9ub2RlLXJlc3BvbnNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTm9kZVJlc3BvbnNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQobm9kZV9yZXNwb25zZV8xKS5kZWZhdWx0OyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIl9faW1wb3J0RGVmYXVsdCIsIm1vZCIsIl9fZXNNb2R1bGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIk5vZGVSZXNwb25zZSIsIk5vZGVSZXF1ZXN0IiwiQXV0aDBSZXNwb25zZUNvb2tpZXMiLCJBdXRoMFJlcXVlc3RDb29raWVzIiwiQXV0aDBSZXNwb25zZSIsIkF1dGgwUmVxdWVzdCIsImF1dGgwX3JlcXVlc3RfMSIsInJlcXVpcmUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmYXVsdCIsImF1dGgwX3Jlc3BvbnNlXzEiLCJhdXRoMF9yZXF1ZXN0X2Nvb2tpZXNfMSIsImF1dGgwX3Jlc3BvbnNlX2Nvb2tpZXNfMSIsIm5vZGVfcmVxdWVzdF8xIiwibm9kZV9yZXNwb25zZV8xIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/node-request.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/node-request.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst cookie_1 = __webpack_require__(/*! cookie */ \"(middleware)/./node_modules/cookie/index.js\");\nconst auth0_request_1 = tslib_1.__importDefault(__webpack_require__(/*! ./auth0-request */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-request.js\"));\nclass NodeRequest extends auth0_request_1.default {\n    constructor(req){\n        /* c8 ignore next */ super(req);\n        this.req = req;\n    }\n    getUrl() {\n        return this.req.url;\n    }\n    getMethod() {\n        return this.req.method;\n    }\n    getBody() {\n        return this.req.body;\n    }\n    getCookies() {\n        return (0, cookie_1.parse)(this.req.headers.cookie || \"\");\n    }\n}\nexports[\"default\"] = NodeRequest; //# sourceMappingURL=node-request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2h0dHAvbm9kZS1yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLDhEQUFPO0FBQy9CLE1BQU1DLFdBQVdELG1CQUFPQSxDQUFDLDJEQUFRO0FBQ2pDLE1BQU1FLGtCQUFrQkgsUUFBUUksZUFBZSxDQUFDSCxtQkFBT0EsQ0FBQyxpSEFBaUI7QUFDekUsTUFBTUksb0JBQW9CRixnQkFBZ0JHLE9BQU87SUFDN0NDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLGtCQUFrQixHQUNsQixLQUFLLENBQUNBO1FBQ04sSUFBSSxDQUFDQSxHQUFHLEdBQUdBO0lBQ2Y7SUFDQUMsU0FBUztRQUNMLE9BQU8sSUFBSSxDQUFDRCxHQUFHLENBQUNFLEdBQUc7SUFDdkI7SUFDQUMsWUFBWTtRQUNSLE9BQU8sSUFBSSxDQUFDSCxHQUFHLENBQUNJLE1BQU07SUFDMUI7SUFDQUMsVUFBVTtRQUNOLE9BQU8sSUFBSSxDQUFDTCxHQUFHLENBQUNNLElBQUk7SUFDeEI7SUFDQUMsYUFBYTtRQUNULE9BQU8sQ0FBQyxHQUFHYixTQUFTYyxLQUFLLEVBQUUsSUFBSSxDQUFDUixHQUFHLENBQUNTLE9BQU8sQ0FBQ0MsTUFBTSxJQUFJO0lBQzFEO0FBQ0o7QUFDQXBCLGtCQUFlLEdBQUdPLGFBQ2xCLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2F1dGgwLXNlc3Npb24vaHR0cC9ub2RlLXJlcXVlc3QuanM/ZWViMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBjb29raWVfMSA9IHJlcXVpcmUoXCJjb29raWVcIik7XG5jb25zdCBhdXRoMF9yZXF1ZXN0XzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9hdXRoMC1yZXF1ZXN0XCIpKTtcbmNsYXNzIE5vZGVSZXF1ZXN0IGV4dGVuZHMgYXV0aDBfcmVxdWVzdF8xLmRlZmF1bHQge1xuICAgIGNvbnN0cnVjdG9yKHJlcSkge1xuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICBzdXBlcihyZXEpO1xuICAgICAgICB0aGlzLnJlcSA9IHJlcTtcbiAgICB9XG4gICAgZ2V0VXJsKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXEudXJsO1xuICAgIH1cbiAgICBnZXRNZXRob2QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlcS5tZXRob2Q7XG4gICAgfVxuICAgIGdldEJvZHkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlcS5ib2R5O1xuICAgIH1cbiAgICBnZXRDb29raWVzKCkge1xuICAgICAgICByZXR1cm4gKDAsIGNvb2tpZV8xLnBhcnNlKSh0aGlzLnJlcS5oZWFkZXJzLmNvb2tpZSB8fCAnJyk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTm9kZVJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJjb29raWVfMSIsImF1dGgwX3JlcXVlc3RfMSIsIl9faW1wb3J0RGVmYXVsdCIsIk5vZGVSZXF1ZXN0IiwiZGVmYXVsdCIsImNvbnN0cnVjdG9yIiwicmVxIiwiZ2V0VXJsIiwidXJsIiwiZ2V0TWV0aG9kIiwibWV0aG9kIiwiZ2V0Qm9keSIsImJvZHkiLCJnZXRDb29raWVzIiwicGFyc2UiLCJoZWFkZXJzIiwiY29va2llIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/node-request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/node-response.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/node-response.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst cookie_1 = __webpack_require__(/*! cookie */ \"(middleware)/./node_modules/cookie/index.js\");\nconst auth0_response_1 = tslib_1.__importDefault(__webpack_require__(/*! ./auth0-response */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/auth0-response.js\"));\nconst errors_1 = __webpack_require__(/*! ../utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/errors.js\");\nclass NodeResponse extends auth0_response_1.default {\n    constructor(res){\n        /* c8 ignore next */ super(res);\n        this.res = res;\n    }\n    setCookie(name, value, options) {\n        let cookies = this.res.getHeader(\"Set-Cookie\") || [];\n        if (!Array.isArray(cookies)) {\n            cookies = [\n                cookies\n            ];\n        }\n        this.res.setHeader(\"Set-Cookie\", [\n            ...cookies.filter((cookie)=>!cookie.startsWith(`${name}=`)),\n            (0, cookie_1.serialize)(name, value, options)\n        ]);\n    }\n    redirect(location, status = 302) {\n        if (this.res.writableEnded) {\n            return;\n        }\n        this.res.writeHead(status, {\n            Location: this.res.getHeader(\"Location\") || location\n        });\n        this.res.end((0, errors_1.htmlSafe)(location));\n    }\n    send204() {\n        this.res.statusCode = 204;\n        this.res.end();\n    }\n    setHeader(name, value) {\n        this.res.setHeader(name, value);\n    }\n}\nexports[\"default\"] = NodeResponse; //# sourceMappingURL=node-response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL2h0dHAvbm9kZS1yZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxVQUFVQyxtQkFBT0EsQ0FBQyw4REFBTztBQUMvQixNQUFNQyxXQUFXRCxtQkFBT0EsQ0FBQywyREFBUTtBQUNqQyxNQUFNRSxtQkFBbUJILFFBQVFJLGVBQWUsQ0FBQ0gsbUJBQU9BLENBQUMsbUhBQWtCO0FBQzNFLE1BQU1JLFdBQVdKLG1CQUFPQSxDQUFDLDJHQUFpQjtBQUMxQyxNQUFNSyxxQkFBcUJILGlCQUFpQkksT0FBTztJQUMvQ0MsWUFBWUMsR0FBRyxDQUFFO1FBQ2Isa0JBQWtCLEdBQ2xCLEtBQUssQ0FBQ0E7UUFDTixJQUFJLENBQUNBLEdBQUcsR0FBR0E7SUFDZjtJQUNBQyxVQUFVQyxJQUFJLEVBQUVaLEtBQUssRUFBRWEsT0FBTyxFQUFFO1FBQzVCLElBQUlDLFVBQVUsSUFBSSxDQUFDSixHQUFHLENBQUNLLFNBQVMsQ0FBQyxpQkFBaUIsRUFBRTtRQUNwRCxJQUFJLENBQUNDLE1BQU1DLE9BQU8sQ0FBQ0gsVUFBVTtZQUN6QkEsVUFBVTtnQkFBQ0E7YUFBUTtRQUN2QjtRQUNBLElBQUksQ0FBQ0osR0FBRyxDQUFDUSxTQUFTLENBQUMsY0FBYztlQUMxQkosUUFBUUssTUFBTSxDQUFDLENBQUNDLFNBQVcsQ0FBQ0EsT0FBT0MsVUFBVSxDQUFDLENBQUMsRUFBRVQsS0FBSyxDQUFDLENBQUM7WUFDMUQsSUFBR1QsU0FBU21CLFNBQVMsRUFBRVYsTUFBTVosT0FBT2E7U0FDeEM7SUFDTDtJQUNBVSxTQUFTQyxRQUFRLEVBQUVDLFNBQVMsR0FBRyxFQUFFO1FBQzdCLElBQUksSUFBSSxDQUFDZixHQUFHLENBQUNnQixhQUFhLEVBQUU7WUFDeEI7UUFDSjtRQUNBLElBQUksQ0FBQ2hCLEdBQUcsQ0FBQ2lCLFNBQVMsQ0FBQ0YsUUFBUTtZQUN2QkcsVUFBVSxJQUFJLENBQUNsQixHQUFHLENBQUNLLFNBQVMsQ0FBQyxlQUFlUztRQUNoRDtRQUNBLElBQUksQ0FBQ2QsR0FBRyxDQUFDbUIsR0FBRyxDQUFDLENBQUMsR0FBR3ZCLFNBQVN3QixRQUFRLEVBQUVOO0lBQ3hDO0lBQ0FPLFVBQVU7UUFDTixJQUFJLENBQUNyQixHQUFHLENBQUNzQixVQUFVLEdBQUc7UUFDdEIsSUFBSSxDQUFDdEIsR0FBRyxDQUFDbUIsR0FBRztJQUNoQjtJQUNBWCxVQUFVTixJQUFJLEVBQUVaLEtBQUssRUFBRTtRQUNuQixJQUFJLENBQUNVLEdBQUcsQ0FBQ1EsU0FBUyxDQUFDTixNQUFNWjtJQUM3QjtBQUNKO0FBQ0FELGtCQUFlLEdBQUdRLGNBQ2xCLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2F1dGgwLXNlc3Npb24vaHR0cC9ub2RlLXJlc3BvbnNlLmpzPzEzNDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgY29va2llXzEgPSByZXF1aXJlKFwiY29va2llXCIpO1xuY29uc3QgYXV0aDBfcmVzcG9uc2VfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL2F1dGgwLXJlc3BvbnNlXCIpKTtcbmNvbnN0IGVycm9yc18xID0gcmVxdWlyZShcIi4uL3V0aWxzL2Vycm9yc1wiKTtcbmNsYXNzIE5vZGVSZXNwb25zZSBleHRlbmRzIGF1dGgwX3Jlc3BvbnNlXzEuZGVmYXVsdCB7XG4gICAgY29uc3RydWN0b3IocmVzKSB7XG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIHN1cGVyKHJlcyk7XG4gICAgICAgIHRoaXMucmVzID0gcmVzO1xuICAgIH1cbiAgICBzZXRDb29raWUobmFtZSwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgICAgICAgbGV0IGNvb2tpZXMgPSB0aGlzLnJlcy5nZXRIZWFkZXIoJ1NldC1Db29raWUnKSB8fCBbXTtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGNvb2tpZXMpKSB7XG4gICAgICAgICAgICBjb29raWVzID0gW2Nvb2tpZXNdO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVzLnNldEhlYWRlcignU2V0LUNvb2tpZScsIFtcbiAgICAgICAgICAgIC4uLmNvb2tpZXMuZmlsdGVyKChjb29raWUpID0+ICFjb29raWUuc3RhcnRzV2l0aChgJHtuYW1lfT1gKSksXG4gICAgICAgICAgICAoMCwgY29va2llXzEuc2VyaWFsaXplKShuYW1lLCB2YWx1ZSwgb3B0aW9ucylcbiAgICAgICAgXSk7XG4gICAgfVxuICAgIHJlZGlyZWN0KGxvY2F0aW9uLCBzdGF0dXMgPSAzMDIpIHtcbiAgICAgICAgaWYgKHRoaXMucmVzLndyaXRhYmxlRW5kZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJlcy53cml0ZUhlYWQoc3RhdHVzLCB7XG4gICAgICAgICAgICBMb2NhdGlvbjogdGhpcy5yZXMuZ2V0SGVhZGVyKCdMb2NhdGlvbicpIHx8IGxvY2F0aW9uXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnJlcy5lbmQoKDAsIGVycm9yc18xLmh0bWxTYWZlKShsb2NhdGlvbikpO1xuICAgIH1cbiAgICBzZW5kMjA0KCkge1xuICAgICAgICB0aGlzLnJlcy5zdGF0dXNDb2RlID0gMjA0O1xuICAgICAgICB0aGlzLnJlcy5lbmQoKTtcbiAgICB9XG4gICAgc2V0SGVhZGVyKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMucmVzLnNldEhlYWRlcihuYW1lLCB2YWx1ZSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gTm9kZVJlc3BvbnNlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9kZS1yZXNwb25zZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsImNvb2tpZV8xIiwiYXV0aDBfcmVzcG9uc2VfMSIsIl9faW1wb3J0RGVmYXVsdCIsImVycm9yc18xIiwiTm9kZVJlc3BvbnNlIiwiZGVmYXVsdCIsImNvbnN0cnVjdG9yIiwicmVzIiwic2V0Q29va2llIiwibmFtZSIsIm9wdGlvbnMiLCJjb29raWVzIiwiZ2V0SGVhZGVyIiwiQXJyYXkiLCJpc0FycmF5Iiwic2V0SGVhZGVyIiwiZmlsdGVyIiwiY29va2llIiwic3RhcnRzV2l0aCIsInNlcmlhbGl6ZSIsInJlZGlyZWN0IiwibG9jYXRpb24iLCJzdGF0dXMiLCJ3cml0YWJsZUVuZGVkIiwid3JpdGVIZWFkIiwiTG9jYXRpb24iLCJlbmQiLCJodG1sU2FmZSIsInNlbmQyMDQiLCJzdGF0dXNDb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/node-response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AbstractClient = exports.deleteSub = exports.isLoggedOut = exports.backchannelLogoutHandler = exports.callbackHandler = exports.logoutHandler = exports.loginHandler = exports.getConfig = exports.TransientStore = exports.StatefulSession = exports.AbstractSession = exports.StatelessSession = exports.ApplicationError = exports.IdentityProviderError = exports.MalformedStateCookieError = exports.MissingStateCookieError = exports.MissingStateParamError = void 0;\nvar errors_1 = __webpack_require__(/*! ./utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/errors.js\");\nObject.defineProperty(exports, \"MissingStateParamError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.MissingStateParamError;\n    }\n}));\nObject.defineProperty(exports, \"MissingStateCookieError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.MissingStateCookieError;\n    }\n}));\nObject.defineProperty(exports, \"MalformedStateCookieError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.MalformedStateCookieError;\n    }\n}));\nObject.defineProperty(exports, \"IdentityProviderError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.IdentityProviderError;\n    }\n}));\nObject.defineProperty(exports, \"ApplicationError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.ApplicationError;\n    }\n}));\nvar stateless_session_1 = __webpack_require__(/*! ./session/stateless-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/stateless-session.js\");\nObject.defineProperty(exports, \"StatelessSession\", ({\n    enumerable: true,\n    get: function() {\n        return stateless_session_1.StatelessSession;\n    }\n}));\nvar abstract_session_1 = __webpack_require__(/*! ./session/abstract-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/abstract-session.js\");\nObject.defineProperty(exports, \"AbstractSession\", ({\n    enumerable: true,\n    get: function() {\n        return abstract_session_1.AbstractSession;\n    }\n}));\nvar stateful_session_1 = __webpack_require__(/*! ./session/stateful-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/stateful-session.js\");\nObject.defineProperty(exports, \"StatefulSession\", ({\n    enumerable: true,\n    get: function() {\n        return stateful_session_1.StatefulSession;\n    }\n}));\nvar transient_store_1 = __webpack_require__(/*! ./transient-store */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/transient-store.js\");\nObject.defineProperty(exports, \"TransientStore\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(transient_store_1).default;\n    }\n}));\nvar get_config_1 = __webpack_require__(/*! ./get-config */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/get-config.js\");\nObject.defineProperty(exports, \"getConfig\", ({\n    enumerable: true,\n    get: function() {\n        return get_config_1.get;\n    }\n}));\nvar login_1 = __webpack_require__(/*! ./handlers/login */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/login.js\");\nObject.defineProperty(exports, \"loginHandler\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(login_1).default;\n    }\n}));\nvar logout_1 = __webpack_require__(/*! ./handlers/logout */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/logout.js\");\nObject.defineProperty(exports, \"logoutHandler\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(logout_1).default;\n    }\n}));\nvar callback_1 = __webpack_require__(/*! ./handlers/callback */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/callback.js\");\nObject.defineProperty(exports, \"callbackHandler\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(callback_1).default;\n    }\n}));\nvar backchannel_logout_1 = __webpack_require__(/*! ./handlers/backchannel-logout */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/handlers/backchannel-logout.js\");\nObject.defineProperty(exports, \"backchannelLogoutHandler\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(backchannel_logout_1).default;\n    }\n}));\nObject.defineProperty(exports, \"isLoggedOut\", ({\n    enumerable: true,\n    get: function() {\n        return backchannel_logout_1.isLoggedOut;\n    }\n}));\nObject.defineProperty(exports, \"deleteSub\", ({\n    enumerable: true,\n    get: function() {\n        return backchannel_logout_1.deleteSub;\n    }\n}));\nvar abstract_client_1 = __webpack_require__(/*! ./client/abstract-client */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/client/abstract-client.js\");\nObject.defineProperty(exports, \"AbstractClient\", ({\n    enumerable: true,\n    get: function() {\n        return abstract_client_1.AbstractClient;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/abstract-session.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/abstract-session.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AbstractSession = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst debug_1 = tslib_1.__importDefault(__webpack_require__(/*! ../utils/debug */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/debug.js\"));\nconst debug = (0, debug_1.default)(\"session\");\nconst epoch = ()=>Date.now() / 1000 | 0; // eslint-disable-line no-bitwise\nconst assert = (bool, msg)=>{\n    if (!bool) {\n        throw new Error(msg);\n    }\n};\nclass AbstractSession {\n    constructor(getConfig){\n        this.getConfig = typeof getConfig === \"function\" ? getConfig : ()=>getConfig;\n    }\n    async read(req) {\n        const config = await this.getConfig(req);\n        const { rollingDuration, absoluteDuration } = config.session;\n        try {\n            const existingSessionValue = await this.getSession(req);\n            if (existingSessionValue) {\n                const { header, data } = existingSessionValue;\n                const { iat, uat, exp } = header;\n                // check that the existing session isn't expired based on options when it was established\n                assert(exp > epoch(), \"it is expired based on options when it was established\");\n                // check that the existing session isn't expired based on current rollingDuration rules\n                if (rollingDuration) {\n                    assert(uat + rollingDuration > epoch(), \"it is expired based on current rollingDuration rules\");\n                }\n                // check that the existing session isn't expired based on current absoluteDuration rules\n                if (typeof absoluteDuration === \"number\") {\n                    assert(iat + absoluteDuration > epoch(), \"it is expired based on current absoluteDuration rules\");\n                }\n                return [\n                    data,\n                    iat\n                ];\n            }\n        } catch (err) {\n            debug(\"error handling session %O\", err);\n        }\n        return [];\n    }\n    async save(req, res, session, createdAt) {\n        const config = await this.getConfig(req);\n        const _a = config.session.cookie, { transient } = _a, cookieConfig = tslib_1.__rest(_a, [\n            \"transient\"\n        ]);\n        if (!session) {\n            await this.deleteSession(req, res, cookieConfig);\n            return;\n        }\n        const isNewSession = typeof createdAt === \"undefined\";\n        const uat = epoch();\n        const iat = typeof createdAt === \"number\" ? createdAt : uat;\n        const exp = this.calculateExp(iat, uat, config);\n        const cookieOptions = Object.assign({}, cookieConfig);\n        if (!transient) {\n            cookieOptions.expires = new Date(exp * 1000);\n        }\n        await this.setSession(req, res, session, uat, iat, exp, cookieOptions, isNewSession);\n    }\n    calculateExp(iat, uat, config) {\n        const { absoluteDuration } = config.session;\n        const { rolling, rollingDuration } = config.session;\n        if (typeof absoluteDuration !== \"number\") {\n            return uat + rollingDuration;\n        }\n        if (!rolling) {\n            return iat + absoluteDuration;\n        }\n        return Math.min(uat + rollingDuration, iat + absoluteDuration);\n    }\n}\nexports.AbstractSession = AbstractSession; //# sourceMappingURL=abstract-session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/abstract-session.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/stateful-session.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/stateful-session.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.StatefulSession = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst debug_1 = tslib_1.__importDefault(__webpack_require__(/*! ../utils/debug */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/debug.js\"));\nconst abstract_session_1 = __webpack_require__(/*! ./abstract-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/abstract-session.js\");\nconst signed_cookies_1 = __webpack_require__(/*! ../utils/signed-cookies */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/signed-cookies.js\");\nconst hkdf_1 = __webpack_require__(/*! ../utils/hkdf */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/hkdf.js\");\nconst debug = (0, debug_1.default)(\"stateful-session\");\nclass StatefulSession extends abstract_session_1.AbstractSession {\n    async getStore(config) {\n        if (!this.store) {\n            this.store = config.session.store;\n        }\n        return this.store;\n    }\n    async getKeys(config) {\n        if (!this.keys) {\n            const secret = config.secret;\n            const secrets = Array.isArray(secret) ? secret : [\n                secret\n            ];\n            this.keys = await Promise.all(secrets.map(hkdf_1.signing));\n        }\n        return this.keys;\n    }\n    async getSession(req) {\n        const config = await this.getConfig(req);\n        const { name: sessionName } = config.session;\n        const cookies = req.getCookies();\n        const keys = await this.getKeys(config);\n        const sessionId = await (0, signed_cookies_1.getCookieValue)(sessionName, cookies[sessionName], keys);\n        if (sessionId) {\n            const store = await this.getStore(config);\n            debug(\"reading session from %s store\", sessionId);\n            return store.get(sessionId);\n        }\n        return;\n    }\n    async setSession(req, res, session, uat, iat, exp, cookieOptions, isNewSession) {\n        const config = await this.getConfig(req);\n        const store = await this.getStore(config);\n        const { name: sessionName, genId } = config.session;\n        const cookies = req.getCookies();\n        const keys = await this.getKeys(config);\n        let sessionId = await (0, signed_cookies_1.getCookieValue)(sessionName, cookies[sessionName], keys);\n        // If this is a new session created by a new login we need to remove the old session\n        // from the store and regenerate the session id to prevent session fixation issue.\n        if (sessionId && isNewSession) {\n            debug(\"regenerating session id %o to prevent session fixation\", sessionId);\n            await store.delete(sessionId);\n            sessionId = undefined;\n        }\n        if (!sessionId) {\n            sessionId = await genId(req, session);\n            debug(\"generated new session id %o\", sessionId);\n        }\n        debug(\"set session %o\", sessionId);\n        const cookieValue = await (0, signed_cookies_1.generateCookieValue)(sessionName, sessionId, keys[0]);\n        res.setCookie(sessionName, cookieValue, cookieOptions);\n        await store.set(sessionId, {\n            header: {\n                iat,\n                uat,\n                exp\n            },\n            data: session\n        });\n    }\n    async deleteSession(req, res, cookieOptions) {\n        const config = await this.getConfig(req);\n        const { name: sessionName } = config.session;\n        const cookies = req.getCookies();\n        const keys = await this.getKeys(config);\n        const sessionId = await (0, signed_cookies_1.getCookieValue)(sessionName, cookies[sessionName], keys);\n        if (sessionId) {\n            const store = await this.getStore(config);\n            debug(\"deleting session %o\", sessionId);\n            res.clearCookie(sessionName, cookieOptions);\n            await store.delete(sessionId);\n        }\n    }\n}\nexports.StatefulSession = StatefulSession; //# sourceMappingURL=stateful-session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/stateful-session.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/stateless-session.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/stateless-session.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.StatelessSession = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst jose = tslib_1.__importStar(__webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/browser/index.js\"));\nconst cookie_1 = __webpack_require__(/*! cookie */ \"(middleware)/./node_modules/cookie/index.js\");\nconst debug_1 = tslib_1.__importDefault(__webpack_require__(/*! ../utils/debug */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/debug.js\"));\nconst hkdf_1 = __webpack_require__(/*! ../utils/hkdf */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/hkdf.js\");\nconst abstract_session_1 = __webpack_require__(/*! ./abstract-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/abstract-session.js\");\nconst debug = (0, debug_1.default)(\"stateless-session\");\nconst MAX_COOKIE_SIZE = 4096;\nconst alg = \"dir\";\nconst enc = \"A256GCM\";\nconst notNull = (value)=>value !== null;\nclass StatelessSession extends abstract_session_1.AbstractSession {\n    constructor(config){\n        super(config);\n        this.config = config;\n    }\n    async getChunkSize(config) {\n        if (this.chunkSize === undefined) {\n            const _a = config.session, _b = _a.cookie, { transient } = _b, cookieConfig = tslib_1.__rest(_b, [\n                \"transient\"\n            ]), { name: sessionName } = _a;\n            const cookieOptions = Object.assign({}, cookieConfig);\n            if (!transient) {\n                cookieOptions.expires = new Date();\n            }\n            const emptyCookie = (0, cookie_1.serialize)(`${sessionName}.0`, \"\", cookieOptions);\n            this.chunkSize = MAX_COOKIE_SIZE - emptyCookie.length;\n        }\n        return this.chunkSize;\n    }\n    async getKeys(config) {\n        if (!this.keys) {\n            const secret = config.secret;\n            const secrets = Array.isArray(secret) ? secret : [\n                secret\n            ];\n            this.keys = await Promise.all(secrets.map(hkdf_1.encryption));\n        }\n        return this.keys;\n    }\n    async encrypt(payload, { iat, uat, exp }, key) {\n        return await new jose.EncryptJWT(Object.assign({}, payload)).setProtectedHeader({\n            alg,\n            enc,\n            uat,\n            iat,\n            exp\n        }).encrypt(key);\n    }\n    async decrypt(jwe, keys) {\n        let err;\n        for (const key of keys){\n            try {\n                return await jose.jwtDecrypt(jwe, key);\n            } catch (e) {\n                err = e;\n            }\n        }\n        throw err;\n    }\n    async getSession(req) {\n        const config = await this.getConfig(req);\n        const { name: sessionName } = config.session;\n        const cookies = req.getCookies();\n        let existingSessionValue;\n        if (sessionName in cookies) {\n            // get JWE from un-chunked session cookie\n            debug(\"reading session from %s cookie\", sessionName);\n            existingSessionValue = cookies[sessionName];\n        } else if (`${sessionName}.0` in cookies) {\n            // get JWE from chunked session cookie\n            // iterate all cookie names\n            // match and filter for the ones that match sessionName.<number>\n            // sort by chunk index\n            // concat\n            existingSessionValue = Object.entries(cookies).map(([cookie, value])=>{\n                const match = cookie.match(`^${sessionName}\\\\.(\\\\d+)$`);\n                if (match) {\n                    return [\n                        match[1],\n                        value\n                    ];\n                }\n                return null;\n            }).filter(notNull).sort(([a], [b])=>{\n                return parseInt(a, 10) - parseInt(b, 10);\n            }).map(([i, chunk])=>{\n                debug(\"reading session chunk from %s.%d cookie\", sessionName, i);\n                return chunk;\n            }).join(\"\");\n        }\n        if (existingSessionValue) {\n            const keys = await this.getKeys(config);\n            const { protectedHeader, payload } = await this.decrypt(existingSessionValue, keys);\n            return {\n                header: protectedHeader,\n                data: payload\n            };\n        }\n        return;\n    }\n    async setSession(req, res, session, uat, iat, exp, cookieOptions) {\n        const config = await this.getConfig(req);\n        const { name: sessionName } = config.session;\n        const cookies = req.getCookies();\n        debug(\"found session, creating signed session cookie(s) with name %o(.i)\", sessionName);\n        const [key] = await this.getKeys(config);\n        const value = await this.encrypt(session, {\n            iat,\n            uat,\n            exp\n        }, key);\n        const chunkSize = await this.getChunkSize(config);\n        const chunkCount = Math.ceil(value.length / chunkSize);\n        const existingCookies = new Set(Object.keys(cookies).filter((cookie)=>cookie.match(`^${sessionName}(?:\\\\.\\\\d)?$`)));\n        if (chunkCount > 1) {\n            debug(\"cookie size greater than %d, chunking\", this.chunkSize);\n            for(let i = 0; i < chunkCount; i++){\n                const chunkValue = value.slice(i * chunkSize, (i + 1) * chunkSize);\n                const chunkCookieName = `${sessionName}.${i}`;\n                res.setCookie(chunkCookieName, chunkValue, cookieOptions);\n                existingCookies.delete(chunkCookieName);\n            }\n        } else {\n            res.setCookie(sessionName, value, cookieOptions);\n            existingCookies.delete(sessionName);\n        }\n        // When the number of chunks changes due to the cookie size changing,\n        // you need to delete any obsolete cookies.\n        existingCookies.forEach((cookie)=>res.clearCookie(cookie, cookieOptions));\n    }\n    async deleteSession(req, res, cookieOptions) {\n        const config = await this.getConfig(req);\n        const { name: sessionName } = config.session;\n        const cookies = req.getCookies();\n        for (const cookieName of Object.keys(cookies)){\n            if (cookieName.match(`^${sessionName}(?:\\\\.\\\\d)?$`)) {\n                res.clearCookie(cookieName, cookieOptions);\n            }\n        }\n    }\n}\nexports.StatelessSession = StatelessSession; //# sourceMappingURL=stateless-session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/session/stateless-session.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/transient-store.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/transient-store.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst signed_cookies_1 = __webpack_require__(/*! ./utils/signed-cookies */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/signed-cookies.js\");\nconst hkdf_1 = __webpack_require__(/*! ./utils/hkdf */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/hkdf.js\");\nclass TransientStore {\n    constructor(getConfig){\n        this.getConfig = typeof getConfig === \"function\" ? getConfig : ()=>getConfig;\n    }\n    async getKeys(config) {\n        if (!this.keys) {\n            const secret = config.secret;\n            const secrets = Array.isArray(secret) ? secret : [\n                secret\n            ];\n            this.keys = await Promise.all(secrets.map(hkdf_1.signing));\n        }\n        return this.keys;\n    }\n    /**\n     * Set a cookie with a value or a generated nonce.\n     *\n     * @param {String} key Cookie name to use.\n     * @param {IncomingMessage} req Server Request object.\n     * @param {ServerResponse} res Server Response object.\n     * @param {Object} opts Options object.\n     * @param {String} opts.sameSite SameSite attribute of `None`, `Lax`, or `Strict`. Defaults to `None`.\n     * @param {String} opts.value Cookie value. Omit this key to store a generated value.\n     *\n     * @return {String} Cookie value that was set.\n     */ async save(key, req, res, { sameSite = \"none\", value }) {\n        const isSameSiteNone = sameSite === \"none\";\n        const config = await this.getConfig(req);\n        const { domain, path, secure } = config.transactionCookie;\n        const basicAttr = {\n            httpOnly: true,\n            secure,\n            domain,\n            path\n        };\n        const [signingKey] = await this.getKeys(config);\n        {\n            const cookieValue = await (0, signed_cookies_1.generateCookieValue)(key, value, signingKey);\n            // Set the cookie with the SameSite attribute and, if needed, the Secure flag.\n            res.setCookie(key, cookieValue, Object.assign(Object.assign({}, basicAttr), {\n                sameSite,\n                secure: isSameSiteNone ? true : basicAttr.secure\n            }));\n        }\n        if (isSameSiteNone && config.legacySameSiteCookie) {\n            const cookieValue = await (0, signed_cookies_1.generateCookieValue)(`_${key}`, value, signingKey);\n            // Set the fallback cookie with no SameSite or Secure attributes.\n            res.setCookie(`_${key}`, cookieValue, basicAttr);\n        }\n        return value;\n    }\n    /**\n     * Get a cookie value then delete it.\n     *\n     * @param {String} key Cookie name to use.\n     * @param {IncomingMessage} req Express Request object.\n     * @param {ServerResponse} res Express Response object.\n     *\n     * @return {String|undefined} Cookie value or undefined if cookie was not found.\n     */ async read(key, req, res) {\n        const cookies = req.getCookies();\n        const cookie = cookies[key];\n        const config = await this.getConfig(req);\n        const cookieConfig = config.transactionCookie;\n        const verifyingKeys = await this.getKeys(config);\n        let value = await (0, signed_cookies_1.getCookieValue)(key, cookie, verifyingKeys);\n        res.clearCookie(key, cookieConfig);\n        if (config.legacySameSiteCookie) {\n            const fallbackKey = `_${key}`;\n            if (!value) {\n                const fallbackCookie = cookies[fallbackKey];\n                value = await (0, signed_cookies_1.getCookieValue)(fallbackKey, fallbackCookie, verifyingKeys);\n            }\n            res.clearCookie(fallbackKey, cookieConfig);\n        }\n        return value;\n    }\n}\nexports[\"default\"] = TransientStore; //# sourceMappingURL=transient-store.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL3RyYW5zaWVudC1zdG9yZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxtQkFBbUJDLG1CQUFPQSxDQUFDLDBIQUF3QjtBQUN6RCxNQUFNQyxTQUFTRCxtQkFBT0EsQ0FBQyxzR0FBYztBQUNyQyxNQUFNRTtJQUNGQyxZQUFZQyxTQUFTLENBQUU7UUFDbkIsSUFBSSxDQUFDQSxTQUFTLEdBQUcsT0FBT0EsY0FBYyxhQUFhQSxZQUFZLElBQU1BO0lBQ3pFO0lBQ0EsTUFBTUMsUUFBUUMsTUFBTSxFQUFFO1FBQ2xCLElBQUksQ0FBQyxJQUFJLENBQUNDLElBQUksRUFBRTtZQUNaLE1BQU1DLFNBQVNGLE9BQU9FLE1BQU07WUFDNUIsTUFBTUMsVUFBVUMsTUFBTUMsT0FBTyxDQUFDSCxVQUFVQSxTQUFTO2dCQUFDQTthQUFPO1lBQ3pELElBQUksQ0FBQ0QsSUFBSSxHQUFHLE1BQU1LLFFBQVFDLEdBQUcsQ0FBQ0osUUFBUUssR0FBRyxDQUFDYixPQUFPYyxPQUFPO1FBQzVEO1FBQ0EsT0FBTyxJQUFJLENBQUNSLElBQUk7SUFDcEI7SUFDQTs7Ozs7Ozs7Ozs7S0FXQyxHQUNELE1BQU1TLEtBQUtDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUUsRUFBRUMsV0FBVyxNQUFNLEVBQUV0QixLQUFLLEVBQUUsRUFBRTtRQUNwRCxNQUFNdUIsaUJBQWlCRCxhQUFhO1FBQ3BDLE1BQU1kLFNBQVMsTUFBTSxJQUFJLENBQUNGLFNBQVMsQ0FBQ2M7UUFDcEMsTUFBTSxFQUFFSSxNQUFNLEVBQUVDLElBQUksRUFBRUMsTUFBTSxFQUFFLEdBQUdsQixPQUFPbUIsaUJBQWlCO1FBQ3pELE1BQU1DLFlBQVk7WUFDZEMsVUFBVTtZQUNWSDtZQUNBRjtZQUNBQztRQUNKO1FBQ0EsTUFBTSxDQUFDSyxXQUFXLEdBQUcsTUFBTSxJQUFJLENBQUN2QixPQUFPLENBQUNDO1FBQ3hDO1lBQ0ksTUFBTXVCLGNBQWMsTUFBTSxDQUFDLEdBQUc5QixpQkFBaUIrQixtQkFBbUIsRUFBRWIsS0FBS25CLE9BQU84QjtZQUNoRiw4RUFBOEU7WUFDOUVULElBQUlZLFNBQVMsQ0FBQ2QsS0FBS1ksYUFBYWxDLE9BQU9xQyxNQUFNLENBQUNyQyxPQUFPcUMsTUFBTSxDQUFDLENBQUMsR0FBR04sWUFBWTtnQkFBRU47Z0JBQVVJLFFBQVFILGlCQUFpQixPQUFPSyxVQUFVRixNQUFNO1lBQUM7UUFDN0k7UUFDQSxJQUFJSCxrQkFBa0JmLE9BQU8yQixvQkFBb0IsRUFBRTtZQUMvQyxNQUFNSixjQUFjLE1BQU0sQ0FBQyxHQUFHOUIsaUJBQWlCK0IsbUJBQW1CLEVBQUUsQ0FBQyxDQUFDLEVBQUViLElBQUksQ0FBQyxFQUFFbkIsT0FBTzhCO1lBQ3RGLGlFQUFpRTtZQUNqRVQsSUFBSVksU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFZCxJQUFJLENBQUMsRUFBRVksYUFBYUg7UUFDMUM7UUFDQSxPQUFPNUI7SUFDWDtJQUNBOzs7Ozs7OztLQVFDLEdBQ0QsTUFBTW9DLEtBQUtqQixHQUFHLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFO1FBQ3RCLE1BQU1nQixVQUFVakIsSUFBSWtCLFVBQVU7UUFDOUIsTUFBTUMsU0FBU0YsT0FBTyxDQUFDbEIsSUFBSTtRQUMzQixNQUFNWCxTQUFTLE1BQU0sSUFBSSxDQUFDRixTQUFTLENBQUNjO1FBQ3BDLE1BQU1vQixlQUFlaEMsT0FBT21CLGlCQUFpQjtRQUM3QyxNQUFNYyxnQkFBZ0IsTUFBTSxJQUFJLENBQUNsQyxPQUFPLENBQUNDO1FBQ3pDLElBQUlSLFFBQVEsTUFBTSxDQUFDLEdBQUdDLGlCQUFpQnlDLGNBQWMsRUFBRXZCLEtBQUtvQixRQUFRRTtRQUNwRXBCLElBQUlzQixXQUFXLENBQUN4QixLQUFLcUI7UUFDckIsSUFBSWhDLE9BQU8yQixvQkFBb0IsRUFBRTtZQUM3QixNQUFNUyxjQUFjLENBQUMsQ0FBQyxFQUFFekIsSUFBSSxDQUFDO1lBQzdCLElBQUksQ0FBQ25CLE9BQU87Z0JBQ1IsTUFBTTZDLGlCQUFpQlIsT0FBTyxDQUFDTyxZQUFZO2dCQUMzQzVDLFFBQVEsTUFBTSxDQUFDLEdBQUdDLGlCQUFpQnlDLGNBQWMsRUFBRUUsYUFBYUMsZ0JBQWdCSjtZQUNwRjtZQUNBcEIsSUFBSXNCLFdBQVcsQ0FBQ0MsYUFBYUo7UUFDakM7UUFDQSxPQUFPeEM7SUFDWDtBQUNKO0FBQ0FELGtCQUFlLEdBQUdLLGdCQUNsQiwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL3RyYW5zaWVudC1zdG9yZS5qcz82NzIxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgc2lnbmVkX2Nvb2tpZXNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzL3NpZ25lZC1jb29raWVzXCIpO1xuY29uc3QgaGtkZl8xID0gcmVxdWlyZShcIi4vdXRpbHMvaGtkZlwiKTtcbmNsYXNzIFRyYW5zaWVudFN0b3JlIHtcbiAgICBjb25zdHJ1Y3RvcihnZXRDb25maWcpIHtcbiAgICAgICAgdGhpcy5nZXRDb25maWcgPSB0eXBlb2YgZ2V0Q29uZmlnID09PSAnZnVuY3Rpb24nID8gZ2V0Q29uZmlnIDogKCkgPT4gZ2V0Q29uZmlnO1xuICAgIH1cbiAgICBhc3luYyBnZXRLZXlzKGNvbmZpZykge1xuICAgICAgICBpZiAoIXRoaXMua2V5cykge1xuICAgICAgICAgICAgY29uc3Qgc2VjcmV0ID0gY29uZmlnLnNlY3JldDtcbiAgICAgICAgICAgIGNvbnN0IHNlY3JldHMgPSBBcnJheS5pc0FycmF5KHNlY3JldCkgPyBzZWNyZXQgOiBbc2VjcmV0XTtcbiAgICAgICAgICAgIHRoaXMua2V5cyA9IGF3YWl0IFByb21pc2UuYWxsKHNlY3JldHMubWFwKGhrZGZfMS5zaWduaW5nKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMua2V5cztcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IGEgY29va2llIHdpdGggYSB2YWx1ZSBvciBhIGdlbmVyYXRlZCBub25jZS5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBrZXkgQ29va2llIG5hbWUgdG8gdXNlLlxuICAgICAqIEBwYXJhbSB7SW5jb21pbmdNZXNzYWdlfSByZXEgU2VydmVyIFJlcXVlc3Qgb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7U2VydmVyUmVzcG9uc2V9IHJlcyBTZXJ2ZXIgUmVzcG9uc2Ugb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBvcHRzIE9wdGlvbnMgb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBvcHRzLnNhbWVTaXRlIFNhbWVTaXRlIGF0dHJpYnV0ZSBvZiBgTm9uZWAsIGBMYXhgLCBvciBgU3RyaWN0YC4gRGVmYXVsdHMgdG8gYE5vbmVgLlxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBvcHRzLnZhbHVlIENvb2tpZSB2YWx1ZS4gT21pdCB0aGlzIGtleSB0byBzdG9yZSBhIGdlbmVyYXRlZCB2YWx1ZS5cbiAgICAgKlxuICAgICAqIEByZXR1cm4ge1N0cmluZ30gQ29va2llIHZhbHVlIHRoYXQgd2FzIHNldC5cbiAgICAgKi9cbiAgICBhc3luYyBzYXZlKGtleSwgcmVxLCByZXMsIHsgc2FtZVNpdGUgPSAnbm9uZScsIHZhbHVlIH0pIHtcbiAgICAgICAgY29uc3QgaXNTYW1lU2l0ZU5vbmUgPSBzYW1lU2l0ZSA9PT0gJ25vbmUnO1xuICAgICAgICBjb25zdCBjb25maWcgPSBhd2FpdCB0aGlzLmdldENvbmZpZyhyZXEpO1xuICAgICAgICBjb25zdCB7IGRvbWFpbiwgcGF0aCwgc2VjdXJlIH0gPSBjb25maWcudHJhbnNhY3Rpb25Db29raWU7XG4gICAgICAgIGNvbnN0IGJhc2ljQXR0ciA9IHtcbiAgICAgICAgICAgIGh0dHBPbmx5OiB0cnVlLFxuICAgICAgICAgICAgc2VjdXJlLFxuICAgICAgICAgICAgZG9tYWluLFxuICAgICAgICAgICAgcGF0aFxuICAgICAgICB9O1xuICAgICAgICBjb25zdCBbc2lnbmluZ0tleV0gPSBhd2FpdCB0aGlzLmdldEtleXMoY29uZmlnKTtcbiAgICAgICAge1xuICAgICAgICAgICAgY29uc3QgY29va2llVmFsdWUgPSBhd2FpdCAoMCwgc2lnbmVkX2Nvb2tpZXNfMS5nZW5lcmF0ZUNvb2tpZVZhbHVlKShrZXksIHZhbHVlLCBzaWduaW5nS2V5KTtcbiAgICAgICAgICAgIC8vIFNldCB0aGUgY29va2llIHdpdGggdGhlIFNhbWVTaXRlIGF0dHJpYnV0ZSBhbmQsIGlmIG5lZWRlZCwgdGhlIFNlY3VyZSBmbGFnLlxuICAgICAgICAgICAgcmVzLnNldENvb2tpZShrZXksIGNvb2tpZVZhbHVlLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGJhc2ljQXR0ciksIHsgc2FtZVNpdGUsIHNlY3VyZTogaXNTYW1lU2l0ZU5vbmUgPyB0cnVlIDogYmFzaWNBdHRyLnNlY3VyZSB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzU2FtZVNpdGVOb25lICYmIGNvbmZpZy5sZWdhY3lTYW1lU2l0ZUNvb2tpZSkge1xuICAgICAgICAgICAgY29uc3QgY29va2llVmFsdWUgPSBhd2FpdCAoMCwgc2lnbmVkX2Nvb2tpZXNfMS5nZW5lcmF0ZUNvb2tpZVZhbHVlKShgXyR7a2V5fWAsIHZhbHVlLCBzaWduaW5nS2V5KTtcbiAgICAgICAgICAgIC8vIFNldCB0aGUgZmFsbGJhY2sgY29va2llIHdpdGggbm8gU2FtZVNpdGUgb3IgU2VjdXJlIGF0dHJpYnV0ZXMuXG4gICAgICAgICAgICByZXMuc2V0Q29va2llKGBfJHtrZXl9YCwgY29va2llVmFsdWUsIGJhc2ljQXR0cik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBHZXQgYSBjb29raWUgdmFsdWUgdGhlbiBkZWxldGUgaXQuXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30ga2V5IENvb2tpZSBuYW1lIHRvIHVzZS5cbiAgICAgKiBAcGFyYW0ge0luY29taW5nTWVzc2FnZX0gcmVxIEV4cHJlc3MgUmVxdWVzdCBvYmplY3QuXG4gICAgICogQHBhcmFtIHtTZXJ2ZXJSZXNwb25zZX0gcmVzIEV4cHJlc3MgUmVzcG9uc2Ugb2JqZWN0LlxuICAgICAqXG4gICAgICogQHJldHVybiB7U3RyaW5nfHVuZGVmaW5lZH0gQ29va2llIHZhbHVlIG9yIHVuZGVmaW5lZCBpZiBjb29raWUgd2FzIG5vdCBmb3VuZC5cbiAgICAgKi9cbiAgICBhc3luYyByZWFkKGtleSwgcmVxLCByZXMpIHtcbiAgICAgICAgY29uc3QgY29va2llcyA9IHJlcS5nZXRDb29raWVzKCk7XG4gICAgICAgIGNvbnN0IGNvb2tpZSA9IGNvb2tpZXNba2V5XTtcbiAgICAgICAgY29uc3QgY29uZmlnID0gYXdhaXQgdGhpcy5nZXRDb25maWcocmVxKTtcbiAgICAgICAgY29uc3QgY29va2llQ29uZmlnID0gY29uZmlnLnRyYW5zYWN0aW9uQ29va2llO1xuICAgICAgICBjb25zdCB2ZXJpZnlpbmdLZXlzID0gYXdhaXQgdGhpcy5nZXRLZXlzKGNvbmZpZyk7XG4gICAgICAgIGxldCB2YWx1ZSA9IGF3YWl0ICgwLCBzaWduZWRfY29va2llc18xLmdldENvb2tpZVZhbHVlKShrZXksIGNvb2tpZSwgdmVyaWZ5aW5nS2V5cyk7XG4gICAgICAgIHJlcy5jbGVhckNvb2tpZShrZXksIGNvb2tpZUNvbmZpZyk7XG4gICAgICAgIGlmIChjb25maWcubGVnYWN5U2FtZVNpdGVDb29raWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrS2V5ID0gYF8ke2tleX1gO1xuICAgICAgICAgICAgaWYgKCF2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZhbGxiYWNrQ29va2llID0gY29va2llc1tmYWxsYmFja0tleV07XG4gICAgICAgICAgICAgICAgdmFsdWUgPSBhd2FpdCAoMCwgc2lnbmVkX2Nvb2tpZXNfMS5nZXRDb29raWVWYWx1ZSkoZmFsbGJhY2tLZXksIGZhbGxiYWNrQ29va2llLCB2ZXJpZnlpbmdLZXlzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlcy5jbGVhckNvb2tpZShmYWxsYmFja0tleSwgY29va2llQ29uZmlnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gVHJhbnNpZW50U3RvcmU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFuc2llbnQtc3RvcmUuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwic2lnbmVkX2Nvb2tpZXNfMSIsInJlcXVpcmUiLCJoa2RmXzEiLCJUcmFuc2llbnRTdG9yZSIsImNvbnN0cnVjdG9yIiwiZ2V0Q29uZmlnIiwiZ2V0S2V5cyIsImNvbmZpZyIsImtleXMiLCJzZWNyZXQiLCJzZWNyZXRzIiwiQXJyYXkiLCJpc0FycmF5IiwiUHJvbWlzZSIsImFsbCIsIm1hcCIsInNpZ25pbmciLCJzYXZlIiwia2V5IiwicmVxIiwicmVzIiwic2FtZVNpdGUiLCJpc1NhbWVTaXRlTm9uZSIsImRvbWFpbiIsInBhdGgiLCJzZWN1cmUiLCJ0cmFuc2FjdGlvbkNvb2tpZSIsImJhc2ljQXR0ciIsImh0dHBPbmx5Iiwic2lnbmluZ0tleSIsImNvb2tpZVZhbHVlIiwiZ2VuZXJhdGVDb29raWVWYWx1ZSIsInNldENvb2tpZSIsImFzc2lnbiIsImxlZ2FjeVNhbWVTaXRlQ29va2llIiwicmVhZCIsImNvb2tpZXMiLCJnZXRDb29raWVzIiwiY29va2llIiwiY29va2llQ29uZmlnIiwidmVyaWZ5aW5nS2V5cyIsImdldENvb2tpZVZhbHVlIiwiY2xlYXJDb29raWUiLCJmYWxsYmFja0tleSIsImZhbGxiYWNrQ29va2llIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/transient-store.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/debug.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/debug.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst debug_1 = tslib_1.__importDefault(__webpack_require__(/*! debug */ \"(middleware)/./node_modules/debug/src/browser.js\"));\nexports[\"default\"] = (name)=>(0, debug_1.default)(\"nextjs-auth0\").extend(name); //# sourceMappingURL=debug.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL3V0aWxzL2RlYnVnLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFVBQVVDLG1CQUFPQSxDQUFDLDhEQUFPO0FBQy9CLE1BQU1DLFVBQVVGLFFBQVFHLGVBQWUsQ0FBQ0YsbUJBQU9BLENBQUMsK0RBQU87QUFDdkRILGtCQUFlLEdBQUcsQ0FBQ08sT0FBUyxDQUFDLEdBQUdILFFBQVFFLE9BQU8sRUFBRSxnQkFBZ0JFLE1BQU0sQ0FBQ0QsT0FDeEUsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3QvYXV0aDAtc2Vzc2lvbi91dGlscy9kZWJ1Zy5qcz83MWRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGRlYnVnXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZGVidWdcIikpO1xuZXhwb3J0cy5kZWZhdWx0ID0gKG5hbWUpID0+ICgwLCBkZWJ1Z18xLmRlZmF1bHQpKCduZXh0anMtYXV0aDAnKS5leHRlbmQobmFtZSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWJ1Zy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsImRlYnVnXzEiLCJfX2ltcG9ydERlZmF1bHQiLCJkZWZhdWx0IiwibmFtZSIsImV4dGVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/debug.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/encoding.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/encoding.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.decodeState = exports.encodeState = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst jose = tslib_1.__importStar(__webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/browser/index.js\"));\n/**\n * Prepare a state object to send.\n *\n * @param {object} stateObject\n *\n * @return {string}\n */ function encodeState(stateObject) {\n    // This filters out nonce, code_verifier, and max_age from the state object so that the values are\n    // only stored in its dedicated transient cookie.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { nonce, code_verifier, max_age } = stateObject, filteredState = tslib_1.__rest(stateObject, [\n        \"nonce\",\n        \"code_verifier\",\n        \"max_age\"\n    ]);\n    return jose.base64url.encode(JSON.stringify(filteredState));\n}\nexports.encodeState = encodeState;\n/**\n * Decode a state value.\n *\n * @param {string} stateValue\n *\n * @return {object|undefined}\n */ function decodeState(stateValue) {\n    try {\n        return JSON.parse(new TextDecoder().decode(jose.base64url.decode(stateValue)));\n    } catch (e) {\n        return undefined;\n    }\n}\nexports.decodeState = decodeState; //# sourceMappingURL=encoding.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL3V0aWxzL2VuY29kaW5nLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQkFBbUIsR0FBR0EsbUJBQW1CLEdBQUcsS0FBSztBQUNqRCxNQUFNSSxVQUFVQyxtQkFBT0EsQ0FBQyw4REFBTztBQUMvQixNQUFNQyxPQUFPRixRQUFRRyxZQUFZLENBQUNGLG1CQUFPQSxDQUFDLG9FQUFNO0FBQ2hEOzs7Ozs7Q0FNQyxHQUNELFNBQVNGLFlBQVlLLFdBQVc7SUFDNUIsa0dBQWtHO0lBQ2xHLGlEQUFpRDtJQUNqRCw2REFBNkQ7SUFDN0QsTUFBTSxFQUFFQyxLQUFLLEVBQUVDLGFBQWEsRUFBRUMsT0FBTyxFQUFFLEdBQUdILGFBQWFJLGdCQUFnQlIsUUFBUVMsTUFBTSxDQUFDTCxhQUFhO1FBQUM7UUFBUztRQUFpQjtLQUFVO0lBQ3hJLE9BQU9GLEtBQUtRLFNBQVMsQ0FBQ0MsTUFBTSxDQUFDQyxLQUFLQyxTQUFTLENBQUNMO0FBQ2hEO0FBQ0FaLG1CQUFtQixHQUFHRztBQUN0Qjs7Ozs7O0NBTUMsR0FDRCxTQUFTRCxZQUFZZ0IsVUFBVTtJQUMzQixJQUFJO1FBQ0EsT0FBT0YsS0FBS0csS0FBSyxDQUFDLElBQUlDLGNBQWNDLE1BQU0sQ0FBQ2YsS0FBS1EsU0FBUyxDQUFDTyxNQUFNLENBQUNIO0lBQ3JFLEVBQ0EsT0FBT0ksR0FBRztRQUNOLE9BQU9DO0lBQ1g7QUFDSjtBQUNBdkIsbUJBQW1CLEdBQUdFLGFBQ3RCLG9DQUFvQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2F1dGgwLXNlc3Npb24vdXRpbHMvZW5jb2RpbmcuanM/YzJjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVjb2RlU3RhdGUgPSBleHBvcnRzLmVuY29kZVN0YXRlID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGpvc2UgPSB0c2xpYl8xLl9faW1wb3J0U3RhcihyZXF1aXJlKFwiam9zZVwiKSk7XG4vKipcbiAqIFByZXBhcmUgYSBzdGF0ZSBvYmplY3QgdG8gc2VuZC5cbiAqXG4gKiBAcGFyYW0ge29iamVjdH0gc3RhdGVPYmplY3RcbiAqXG4gKiBAcmV0dXJuIHtzdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGVuY29kZVN0YXRlKHN0YXRlT2JqZWN0KSB7XG4gICAgLy8gVGhpcyBmaWx0ZXJzIG91dCBub25jZSwgY29kZV92ZXJpZmllciwgYW5kIG1heF9hZ2UgZnJvbSB0aGUgc3RhdGUgb2JqZWN0IHNvIHRoYXQgdGhlIHZhbHVlcyBhcmVcbiAgICAvLyBvbmx5IHN0b3JlZCBpbiBpdHMgZGVkaWNhdGVkIHRyYW5zaWVudCBjb29raWUuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuICAgIGNvbnN0IHsgbm9uY2UsIGNvZGVfdmVyaWZpZXIsIG1heF9hZ2UgfSA9IHN0YXRlT2JqZWN0LCBmaWx0ZXJlZFN0YXRlID0gdHNsaWJfMS5fX3Jlc3Qoc3RhdGVPYmplY3QsIFtcIm5vbmNlXCIsIFwiY29kZV92ZXJpZmllclwiLCBcIm1heF9hZ2VcIl0pO1xuICAgIHJldHVybiBqb3NlLmJhc2U2NHVybC5lbmNvZGUoSlNPTi5zdHJpbmdpZnkoZmlsdGVyZWRTdGF0ZSkpO1xufVxuZXhwb3J0cy5lbmNvZGVTdGF0ZSA9IGVuY29kZVN0YXRlO1xuLyoqXG4gKiBEZWNvZGUgYSBzdGF0ZSB2YWx1ZS5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gc3RhdGVWYWx1ZVxuICpcbiAqIEByZXR1cm4ge29iamVjdHx1bmRlZmluZWR9XG4gKi9cbmZ1bmN0aW9uIGRlY29kZVN0YXRlKHN0YXRlVmFsdWUpIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gSlNPTi5wYXJzZShuZXcgVGV4dERlY29kZXIoKS5kZWNvZGUoam9zZS5iYXNlNjR1cmwuZGVjb2RlKHN0YXRlVmFsdWUpKSk7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxufVxuZXhwb3J0cy5kZWNvZGVTdGF0ZSA9IGRlY29kZVN0YXRlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5jb2RpbmcuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVjb2RlU3RhdGUiLCJlbmNvZGVTdGF0ZSIsInRzbGliXzEiLCJyZXF1aXJlIiwiam9zZSIsIl9faW1wb3J0U3RhciIsInN0YXRlT2JqZWN0Iiwibm9uY2UiLCJjb2RlX3ZlcmlmaWVyIiwibWF4X2FnZSIsImZpbHRlcmVkU3RhdGUiLCJfX3Jlc3QiLCJiYXNlNjR1cmwiLCJlbmNvZGUiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RhdGVWYWx1ZSIsInBhcnNlIiwiVGV4dERlY29kZXIiLCJkZWNvZGUiLCJlIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/encoding.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/errors.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/errors.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.htmlSafe = exports.BackchannelLogoutError = exports.UserInfoError = exports.DiscoveryError = exports.IdentityProviderError = exports.ApplicationError = exports.MissingStateCookieError = exports.MalformedStateCookieError = exports.MissingStateParamError = exports.EscapedError = void 0;\nclass EscapedError extends Error {\n    /**\n     * **WARNING** The message can contain user input and is only escaped using basic escaping for putting untrusted data\n     * directly into the HTML body\n     */ constructor(message){\n        /* c8 ignore next */ super(htmlSafe(message));\n        Object.setPrototypeOf(this, EscapedError.prototype);\n    }\n}\nexports.EscapedError = EscapedError;\nclass MissingStateParamError extends Error {\n    constructor(){\n        /* c8 ignore next */ super(MissingStateParamError.message);\n        this.status = 400;\n        this.statusCode = 400;\n        Object.setPrototypeOf(this, MissingStateParamError.prototype);\n    }\n}\nexports.MissingStateParamError = MissingStateParamError;\nMissingStateParamError.message = \"Missing state parameter in Authorization Response.\";\nclass MalformedStateCookieError extends Error {\n    constructor(){\n        /* c8 ignore next */ super(MalformedStateCookieError.message);\n        this.status = 400;\n        this.statusCode = 400;\n        Object.setPrototypeOf(this, MalformedStateCookieError.prototype);\n    }\n}\nexports.MalformedStateCookieError = MalformedStateCookieError;\nMalformedStateCookieError.message = \"Your state cookie is not valid JSON.\";\nclass MissingStateCookieError extends Error {\n    constructor(){\n        /* c8 ignore next */ super(MissingStateCookieError.message);\n        this.status = 400;\n        this.statusCode = 400;\n        Object.setPrototypeOf(this, MissingStateCookieError.prototype);\n    }\n}\nexports.MissingStateCookieError = MissingStateCookieError;\nMissingStateCookieError.message = \"Missing state cookie from login request (check login URL, callback URL and cookie config).\";\nclass ApplicationError extends EscapedError {\n    /**\n     * **WARNING** The message can contain user input and is only escaped using basic escaping for putting untrusted data\n     * directly into the HTML body\n     */ constructor(rpError){\n        /* c8 ignore next */ super(rpError.message);\n        Object.setPrototypeOf(this, ApplicationError.prototype);\n    }\n}\nexports.ApplicationError = ApplicationError;\nclass IdentityProviderError extends EscapedError {\n    /**\n     * **WARNING** The message can contain user input and is only escaped using basic escaping for putting untrusted data\n     * directly into the HTML body\n     */ constructor(rpError){\n        /* c8 ignore next */ super(rpError.message);\n        this.error = htmlSafe(rpError.error);\n        this.errorDescription = htmlSafe(rpError.error_description);\n        Object.setPrototypeOf(this, IdentityProviderError.prototype);\n    }\n}\nexports.IdentityProviderError = IdentityProviderError;\nclass DiscoveryError extends EscapedError {\n    constructor(error, issuerBaseUrl){\n        /* c8 ignore next */ super(`Discovery requests failing for ${issuerBaseUrl}, ${error.message}`);\n        Object.setPrototypeOf(this, DiscoveryError.prototype);\n    }\n}\nexports.DiscoveryError = DiscoveryError;\nclass UserInfoError extends EscapedError {\n    constructor(msg){\n        /* c8 ignore next */ super(`Userinfo request failing with: ${msg}`);\n        Object.setPrototypeOf(this, UserInfoError.prototype);\n    }\n}\nexports.UserInfoError = UserInfoError;\nclass BackchannelLogoutError extends Error {\n    constructor(code, description){\n        /* c8 ignore next */ super(description);\n        this.code = code;\n        this.description = description;\n        Object.setPrototypeOf(this, BackchannelLogoutError.prototype);\n    }\n}\nexports.BackchannelLogoutError = BackchannelLogoutError;\n// eslint-disable-next-line max-len\n// Basic escaping for putting untrusted data directly into the HTML body, per: https://cheatsheetseries.owasp.org/cheatsheets/Cross_Site_Scripting_Prevention_Cheat_Sheet.html#rule-1-html-encode-before-inserting-untrusted-data-into-html-element-content.\nfunction htmlSafe(input) {\n    return input && input.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#39;\");\n}\nexports.htmlSafe = htmlSafe; //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/errors.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/hkdf.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/hkdf.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.signing = exports.encryption = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst hkdf_1 = tslib_1.__importDefault(__webpack_require__(/*! @panva/hkdf */ \"(middleware)/./node_modules/@panva/hkdf/dist/web/index.js\"));\nconst BYTE_LENGTH = 32;\nconst ENCRYPTION_INFO = \"JWE CEK\";\nconst SIGNING_INFO = \"JWS Cookie Signing\";\nconst digest = \"sha256\";\n/**\n *\n * Derives appropriate sized keys from the end-user provided secret random string/passphrase using\n * HKDF (HMAC-based Extract-and-Expand Key Derivation Function) defined in RFC 8569.\n *\n * @see https://tools.ietf.org/html/rfc5869\n *\n */ const encryption = (secret)=>(0, hkdf_1.default)(digest, secret, \"\", ENCRYPTION_INFO, BYTE_LENGTH);\nexports.encryption = encryption;\nconst signing = (secret)=>(0, hkdf_1.default)(digest, secret, \"\", SIGNING_INFO, BYTE_LENGTH);\nexports.signing = signing; //# sourceMappingURL=hkdf.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL3V0aWxzL2hrZGYuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWUsR0FBR0Esa0JBQWtCLEdBQUcsS0FBSztBQUM1QyxNQUFNSSxVQUFVQyxtQkFBT0EsQ0FBQyw4REFBTztBQUMvQixNQUFNQyxTQUFTRixRQUFRRyxlQUFlLENBQUNGLG1CQUFPQSxDQUFDLDhFQUFhO0FBQzVELE1BQU1HLGNBQWM7QUFDcEIsTUFBTUMsa0JBQWtCO0FBQ3hCLE1BQU1DLGVBQWU7QUFDckIsTUFBTUMsU0FBUztBQUNmOzs7Ozs7O0NBT0MsR0FDRCxNQUFNUixhQUFhLENBQUNTLFNBQVcsQ0FBQyxHQUFHTixPQUFPTyxPQUFPLEVBQUVGLFFBQVFDLFFBQVEsSUFBSUgsaUJBQWlCRDtBQUN4RlIsa0JBQWtCLEdBQUdHO0FBQ3JCLE1BQU1ELFVBQVUsQ0FBQ1UsU0FBVyxDQUFDLEdBQUdOLE9BQU9PLE9BQU8sRUFBRUYsUUFBUUMsUUFBUSxJQUFJRixjQUFjRjtBQUNsRlIsZUFBZSxHQUFHRSxTQUNsQixnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL3V0aWxzL2hrZGYuanM/NGEwMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2lnbmluZyA9IGV4cG9ydHMuZW5jcnlwdGlvbiA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBoa2RmXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiQHBhbnZhL2hrZGZcIikpO1xuY29uc3QgQllURV9MRU5HVEggPSAzMjtcbmNvbnN0IEVOQ1JZUFRJT05fSU5GTyA9ICdKV0UgQ0VLJztcbmNvbnN0IFNJR05JTkdfSU5GTyA9ICdKV1MgQ29va2llIFNpZ25pbmcnO1xuY29uc3QgZGlnZXN0ID0gJ3NoYTI1Nic7XG4vKipcbiAqXG4gKiBEZXJpdmVzIGFwcHJvcHJpYXRlIHNpemVkIGtleXMgZnJvbSB0aGUgZW5kLXVzZXIgcHJvdmlkZWQgc2VjcmV0IHJhbmRvbSBzdHJpbmcvcGFzc3BocmFzZSB1c2luZ1xuICogSEtERiAoSE1BQy1iYXNlZCBFeHRyYWN0LWFuZC1FeHBhbmQgS2V5IERlcml2YXRpb24gRnVuY3Rpb24pIGRlZmluZWQgaW4gUkZDIDg1NjkuXG4gKlxuICogQHNlZSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNTg2OVxuICpcbiAqL1xuY29uc3QgZW5jcnlwdGlvbiA9IChzZWNyZXQpID0+ICgwLCBoa2RmXzEuZGVmYXVsdCkoZGlnZXN0LCBzZWNyZXQsICcnLCBFTkNSWVBUSU9OX0lORk8sIEJZVEVfTEVOR1RIKTtcbmV4cG9ydHMuZW5jcnlwdGlvbiA9IGVuY3J5cHRpb247XG5jb25zdCBzaWduaW5nID0gKHNlY3JldCkgPT4gKDAsIGhrZGZfMS5kZWZhdWx0KShkaWdlc3QsIHNlY3JldCwgJycsIFNJR05JTkdfSU5GTywgQllURV9MRU5HVEgpO1xuZXhwb3J0cy5zaWduaW5nID0gc2lnbmluZztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhrZGYuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwic2lnbmluZyIsImVuY3J5cHRpb24iLCJ0c2xpYl8xIiwicmVxdWlyZSIsImhrZGZfMSIsIl9faW1wb3J0RGVmYXVsdCIsIkJZVEVfTEVOR1RIIiwiRU5DUllQVElPTl9JTkZPIiwiU0lHTklOR19JTkZPIiwiZGlnZXN0Iiwic2VjcmV0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/hkdf.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/logout-token-verifier.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/logout-token-verifier.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst jose_1 = __webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/browser/index.js\");\nfunction getLogoutTokenVerifier() {\n    let remoteJwkSet;\n    return async (logoutToken, config, issuerMetadata)=>{\n        let keyInput;\n        if (config.idTokenSigningAlg === \"RS256\") {\n            if (!remoteJwkSet) {\n                remoteJwkSet = (0, jose_1.createRemoteJWKSet)(new URL(issuerMetadata.jwks_uri));\n            }\n            keyInput = remoteJwkSet;\n        } else {\n            keyInput = new TextEncoder().encode(config.clientSecret);\n        }\n        const { payload } = await (0, jose_1.jwtVerify)(logoutToken, keyInput, {\n            issuer: issuerMetadata.issuer,\n            audience: config.clientID,\n            algorithms: [\n                config.idTokenSigningAlg\n            ],\n            requiredClaims: [\n                \"iat\"\n            ]\n        });\n        if (!(\"sid\" in payload) && !(\"sub\" in payload)) {\n            throw new Error('either \"sid\" or \"sub\" (or both) claims must be present');\n        }\n        if (\"nonce\" in payload) {\n            throw new Error('\"nonce\" claim is prohibited');\n        }\n        if (!(\"events\" in payload)) {\n            throw new Error('\"events\" claim is missing');\n        }\n        if (typeof payload.events !== \"object\" || payload.events === null) {\n            throw new Error('\"events\" claim must be an object');\n        }\n        if (!(\"http://schemas.openid.net/event/backchannel-logout\" in payload.events)) {\n            throw new Error('\"http://schemas.openid.net/event/backchannel-logout\" member is missing in the \"events\" claim');\n        }\n        if (typeof payload.events[\"http://schemas.openid.net/event/backchannel-logout\"] !== \"object\") {\n            throw new Error('\"http://schemas.openid.net/event/backchannel-logout\" member in the \"events\" claim must be an object');\n        }\n        return payload;\n    };\n}\nexports[\"default\"] = getLogoutTokenVerifier; //# sourceMappingURL=logout-token-verifier.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL3V0aWxzL2xvZ291dC10b2tlbi12ZXJpZmllci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQyxvRUFBTTtBQUM3QixTQUFTQztJQUNMLElBQUlDO0lBQ0osT0FBTyxPQUFPQyxhQUFhQyxRQUFRQztRQUMvQixJQUFJQztRQUNKLElBQUlGLE9BQU9HLGlCQUFpQixLQUFLLFNBQVM7WUFDdEMsSUFBSSxDQUFDTCxjQUFjO2dCQUNmQSxlQUFlLENBQUMsR0FBR0gsT0FBT1Msa0JBQWtCLEVBQUUsSUFBSUMsSUFBSUosZUFBZUssUUFBUTtZQUNqRjtZQUNBSixXQUFXSjtRQUNmLE9BQ0s7WUFDREksV0FBVyxJQUFJSyxjQUFjQyxNQUFNLENBQUNSLE9BQU9TLFlBQVk7UUFDM0Q7UUFDQSxNQUFNLEVBQUVDLE9BQU8sRUFBRSxHQUFHLE1BQU0sQ0FBQyxHQUFHZixPQUFPZ0IsU0FBUyxFQUFFWixhQUFhRyxVQUFVO1lBQ25FVSxRQUFRWCxlQUFlVyxNQUFNO1lBQzdCQyxVQUFVYixPQUFPYyxRQUFRO1lBQ3pCQyxZQUFZO2dCQUFDZixPQUFPRyxpQkFBaUI7YUFBQztZQUN0Q2EsZ0JBQWdCO2dCQUFDO2FBQU07UUFDM0I7UUFDQSxJQUFJLENBQUUsVUFBU04sT0FBTSxLQUFNLENBQUUsVUFBU0EsT0FBTSxHQUFJO1lBQzVDLE1BQU0sSUFBSU8sTUFBTTtRQUNwQjtRQUNBLElBQUksV0FBV1AsU0FBUztZQUNwQixNQUFNLElBQUlPLE1BQU07UUFDcEI7UUFDQSxJQUFJLENBQUUsYUFBWVAsT0FBTSxHQUFJO1lBQ3hCLE1BQU0sSUFBSU8sTUFBTTtRQUNwQjtRQUNBLElBQUksT0FBT1AsUUFBUVEsTUFBTSxLQUFLLFlBQVlSLFFBQVFRLE1BQU0sS0FBSyxNQUFNO1lBQy9ELE1BQU0sSUFBSUQsTUFBTTtRQUNwQjtRQUNBLElBQUksQ0FBRSx5REFBd0RQLFFBQVFRLE1BQU0sR0FBRztZQUMzRSxNQUFNLElBQUlELE1BQU07UUFDcEI7UUFDQSxJQUFJLE9BQU9QLFFBQVFRLE1BQU0sQ0FBQyxxREFBcUQsS0FBSyxVQUFVO1lBQzFGLE1BQU0sSUFBSUQsTUFBTTtRQUNwQjtRQUNBLE9BQU9QO0lBQ1g7QUFDSjtBQUNBakIsa0JBQWUsR0FBR0ksd0JBQ2xCLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2F1dGgwLXNlc3Npb24vdXRpbHMvbG9nb3V0LXRva2VuLXZlcmlmaWVyLmpzPzIxNzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBqb3NlXzEgPSByZXF1aXJlKFwiam9zZVwiKTtcbmZ1bmN0aW9uIGdldExvZ291dFRva2VuVmVyaWZpZXIoKSB7XG4gICAgbGV0IHJlbW90ZUp3a1NldDtcbiAgICByZXR1cm4gYXN5bmMgKGxvZ291dFRva2VuLCBjb25maWcsIGlzc3Vlck1ldGFkYXRhKSA9PiB7XG4gICAgICAgIGxldCBrZXlJbnB1dDtcbiAgICAgICAgaWYgKGNvbmZpZy5pZFRva2VuU2lnbmluZ0FsZyA9PT0gJ1JTMjU2Jykge1xuICAgICAgICAgICAgaWYgKCFyZW1vdGVKd2tTZXQpIHtcbiAgICAgICAgICAgICAgICByZW1vdGVKd2tTZXQgPSAoMCwgam9zZV8xLmNyZWF0ZVJlbW90ZUpXS1NldCkobmV3IFVSTChpc3N1ZXJNZXRhZGF0YS5qd2tzX3VyaSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAga2V5SW5wdXQgPSByZW1vdGVKd2tTZXQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBrZXlJbnB1dCA9IG5ldyBUZXh0RW5jb2RlcigpLmVuY29kZShjb25maWcuY2xpZW50U2VjcmV0KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB7IHBheWxvYWQgfSA9IGF3YWl0ICgwLCBqb3NlXzEuand0VmVyaWZ5KShsb2dvdXRUb2tlbiwga2V5SW5wdXQsIHtcbiAgICAgICAgICAgIGlzc3VlcjogaXNzdWVyTWV0YWRhdGEuaXNzdWVyLFxuICAgICAgICAgICAgYXVkaWVuY2U6IGNvbmZpZy5jbGllbnRJRCxcbiAgICAgICAgICAgIGFsZ29yaXRobXM6IFtjb25maWcuaWRUb2tlblNpZ25pbmdBbGddLFxuICAgICAgICAgICAgcmVxdWlyZWRDbGFpbXM6IFsnaWF0J11cbiAgICAgICAgfSk7XG4gICAgICAgIGlmICghKCdzaWQnIGluIHBheWxvYWQpICYmICEoJ3N1YicgaW4gcGF5bG9hZCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignZWl0aGVyIFwic2lkXCIgb3IgXCJzdWJcIiAob3IgYm90aCkgY2xhaW1zIG11c3QgYmUgcHJlc2VudCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICgnbm9uY2UnIGluIHBheWxvYWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignXCJub25jZVwiIGNsYWltIGlzIHByb2hpYml0ZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoISgnZXZlbnRzJyBpbiBwYXlsb2FkKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdcImV2ZW50c1wiIGNsYWltIGlzIG1pc3NpbmcnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHBheWxvYWQuZXZlbnRzICE9PSAnb2JqZWN0JyB8fCBwYXlsb2FkLmV2ZW50cyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdcImV2ZW50c1wiIGNsYWltIG11c3QgYmUgYW4gb2JqZWN0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCEoJ2h0dHA6Ly9zY2hlbWFzLm9wZW5pZC5uZXQvZXZlbnQvYmFja2NoYW5uZWwtbG9nb3V0JyBpbiBwYXlsb2FkLmV2ZW50cykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignXCJodHRwOi8vc2NoZW1hcy5vcGVuaWQubmV0L2V2ZW50L2JhY2tjaGFubmVsLWxvZ291dFwiIG1lbWJlciBpcyBtaXNzaW5nIGluIHRoZSBcImV2ZW50c1wiIGNsYWltJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBwYXlsb2FkLmV2ZW50c1snaHR0cDovL3NjaGVtYXMub3BlbmlkLm5ldC9ldmVudC9iYWNrY2hhbm5lbC1sb2dvdXQnXSAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignXCJodHRwOi8vc2NoZW1hcy5vcGVuaWQubmV0L2V2ZW50L2JhY2tjaGFubmVsLWxvZ291dFwiIG1lbWJlciBpbiB0aGUgXCJldmVudHNcIiBjbGFpbSBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXlsb2FkO1xuICAgIH07XG59XG5leHBvcnRzLmRlZmF1bHQgPSBnZXRMb2dvdXRUb2tlblZlcmlmaWVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nb3V0LXRva2VuLXZlcmlmaWVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImpvc2VfMSIsInJlcXVpcmUiLCJnZXRMb2dvdXRUb2tlblZlcmlmaWVyIiwicmVtb3RlSndrU2V0IiwibG9nb3V0VG9rZW4iLCJjb25maWciLCJpc3N1ZXJNZXRhZGF0YSIsImtleUlucHV0IiwiaWRUb2tlblNpZ25pbmdBbGciLCJjcmVhdGVSZW1vdGVKV0tTZXQiLCJVUkwiLCJqd2tzX3VyaSIsIlRleHRFbmNvZGVyIiwiZW5jb2RlIiwiY2xpZW50U2VjcmV0IiwicGF5bG9hZCIsImp3dFZlcmlmeSIsImlzc3VlciIsImF1ZGllbmNlIiwiY2xpZW50SUQiLCJhbGdvcml0aG1zIiwicmVxdWlyZWRDbGFpbXMiLCJFcnJvciIsImV2ZW50cyIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/logout-token-verifier.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/signed-cookies.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/signed-cookies.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.generateCookieValue = exports.getCookieValue = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst jose = tslib_1.__importStar(__webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/browser/index.js\"));\nconst getCookieValue = async (k, v, keys)=>{\n    if (!v) {\n        return undefined;\n    }\n    const [value, signature] = v.split(\".\");\n    const flattenedJWS = {\n        protected: jose.base64url.encode(JSON.stringify({\n            alg: \"HS256\",\n            b64: false,\n            crit: [\n                \"b64\"\n            ]\n        })),\n        payload: `${k}=${value}`,\n        signature\n    };\n    for (const key of keys){\n        try {\n            await jose.flattenedVerify(flattenedJWS, key, {\n                algorithms: [\n                    \"HS256\"\n                ]\n            });\n            return value;\n        } catch (e) {}\n    }\n    return;\n};\nexports.getCookieValue = getCookieValue;\nconst generateCookieValue = async (cookie, value, key)=>{\n    const { signature } = await new jose.FlattenedSign(new TextEncoder().encode(`${cookie}=${value}`)).setProtectedHeader({\n        alg: \"HS256\",\n        b64: false,\n        crit: [\n            \"b64\"\n        ]\n    }).sign(key);\n    return `${value}.${signature}`;\n};\nexports.generateCookieValue = generateCookieValue; //# sourceMappingURL=signed-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9hdXRoMC1zZXNzaW9uL3V0aWxzL3NpZ25lZC1jb29raWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCwyQkFBMkIsR0FBR0Esc0JBQXNCLEdBQUcsS0FBSztBQUM1RCxNQUFNSSxVQUFVQyxtQkFBT0EsQ0FBQyw4REFBTztBQUMvQixNQUFNQyxPQUFPRixRQUFRRyxZQUFZLENBQUNGLG1CQUFPQSxDQUFDLG9FQUFNO0FBQ2hELE1BQU1GLGlCQUFpQixPQUFPSyxHQUFHQyxHQUFHQztJQUNoQyxJQUFJLENBQUNELEdBQUc7UUFDSixPQUFPRTtJQUNYO0lBQ0EsTUFBTSxDQUFDVixPQUFPVyxVQUFVLEdBQUdILEVBQUVJLEtBQUssQ0FBQztJQUNuQyxNQUFNQyxlQUFlO1FBQ2pCQyxXQUFXVCxLQUFLVSxTQUFTLENBQUNDLE1BQU0sQ0FBQ0MsS0FBS0MsU0FBUyxDQUFDO1lBQUVDLEtBQUs7WUFBU0MsS0FBSztZQUFPQyxNQUFNO2dCQUFDO2FBQU07UUFBQztRQUMxRkMsU0FBUyxDQUFDLEVBQUVmLEVBQUUsQ0FBQyxFQUFFUCxNQUFNLENBQUM7UUFDeEJXO0lBQ0o7SUFDQSxLQUFLLE1BQU1ZLE9BQU9kLEtBQU07UUFDcEIsSUFBSTtZQUNBLE1BQU1KLEtBQUttQixlQUFlLENBQUNYLGNBQWNVLEtBQUs7Z0JBQzFDRSxZQUFZO29CQUFDO2lCQUFRO1lBQ3pCO1lBQ0EsT0FBT3pCO1FBQ1gsRUFDQSxPQUFPMEIsR0FBRyxDQUFFO0lBQ2hCO0lBQ0E7QUFDSjtBQUNBM0Isc0JBQXNCLEdBQUdHO0FBQ3pCLE1BQU1ELHNCQUFzQixPQUFPMEIsUUFBUTNCLE9BQU91QjtJQUM5QyxNQUFNLEVBQUVaLFNBQVMsRUFBRSxHQUFHLE1BQU0sSUFBSU4sS0FBS3VCLGFBQWEsQ0FBQyxJQUFJQyxjQUFjYixNQUFNLENBQUMsQ0FBQyxFQUFFVyxPQUFPLENBQUMsRUFBRTNCLE1BQU0sQ0FBQyxHQUMzRjhCLGtCQUFrQixDQUFDO1FBQUVYLEtBQUs7UUFBU0MsS0FBSztRQUFPQyxNQUFNO1lBQUM7U0FBTTtJQUFDLEdBQzdEVSxJQUFJLENBQUNSO0lBQ1YsT0FBTyxDQUFDLEVBQUV2QixNQUFNLENBQUMsRUFBRVcsVUFBVSxDQUFDO0FBQ2xDO0FBQ0FaLDJCQUEyQixHQUFHRSxxQkFDOUIsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3QvYXV0aDAtc2Vzc2lvbi91dGlscy9zaWduZWQtY29va2llcy5qcz81Y2FjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZW5lcmF0ZUNvb2tpZVZhbHVlID0gZXhwb3J0cy5nZXRDb29raWVWYWx1ZSA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBqb3NlID0gdHNsaWJfMS5fX2ltcG9ydFN0YXIocmVxdWlyZShcImpvc2VcIikpO1xuY29uc3QgZ2V0Q29va2llVmFsdWUgPSBhc3luYyAoaywgdiwga2V5cykgPT4ge1xuICAgIGlmICghdikge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCBbdmFsdWUsIHNpZ25hdHVyZV0gPSB2LnNwbGl0KCcuJyk7XG4gICAgY29uc3QgZmxhdHRlbmVkSldTID0ge1xuICAgICAgICBwcm90ZWN0ZWQ6IGpvc2UuYmFzZTY0dXJsLmVuY29kZShKU09OLnN0cmluZ2lmeSh7IGFsZzogJ0hTMjU2JywgYjY0OiBmYWxzZSwgY3JpdDogWydiNjQnXSB9KSksXG4gICAgICAgIHBheWxvYWQ6IGAke2t9PSR7dmFsdWV9YCxcbiAgICAgICAgc2lnbmF0dXJlXG4gICAgfTtcbiAgICBmb3IgKGNvbnN0IGtleSBvZiBrZXlzKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCBqb3NlLmZsYXR0ZW5lZFZlcmlmeShmbGF0dGVuZWRKV1MsIGtleSwge1xuICAgICAgICAgICAgICAgIGFsZ29yaXRobXM6IFsnSFMyNTYnXVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHsgfVxuICAgIH1cbiAgICByZXR1cm47XG59O1xuZXhwb3J0cy5nZXRDb29raWVWYWx1ZSA9IGdldENvb2tpZVZhbHVlO1xuY29uc3QgZ2VuZXJhdGVDb29raWVWYWx1ZSA9IGFzeW5jIChjb29raWUsIHZhbHVlLCBrZXkpID0+IHtcbiAgICBjb25zdCB7IHNpZ25hdHVyZSB9ID0gYXdhaXQgbmV3IGpvc2UuRmxhdHRlbmVkU2lnbihuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoYCR7Y29va2llfT0ke3ZhbHVlfWApKVxuICAgICAgICAuc2V0UHJvdGVjdGVkSGVhZGVyKHsgYWxnOiAnSFMyNTYnLCBiNjQ6IGZhbHNlLCBjcml0OiBbJ2I2NCddIH0pXG4gICAgICAgIC5zaWduKGtleSk7XG4gICAgcmV0dXJuIGAke3ZhbHVlfS4ke3NpZ25hdHVyZX1gO1xufTtcbmV4cG9ydHMuZ2VuZXJhdGVDb29raWVWYWx1ZSA9IGdlbmVyYXRlQ29va2llVmFsdWU7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaWduZWQtY29va2llcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZW5lcmF0ZUNvb2tpZVZhbHVlIiwiZ2V0Q29va2llVmFsdWUiLCJ0c2xpYl8xIiwicmVxdWlyZSIsImpvc2UiLCJfX2ltcG9ydFN0YXIiLCJrIiwidiIsImtleXMiLCJ1bmRlZmluZWQiLCJzaWduYXR1cmUiLCJzcGxpdCIsImZsYXR0ZW5lZEpXUyIsInByb3RlY3RlZCIsImJhc2U2NHVybCIsImVuY29kZSIsIkpTT04iLCJzdHJpbmdpZnkiLCJhbGciLCJiNjQiLCJjcml0IiwicGF5bG9hZCIsImtleSIsImZsYXR0ZW5lZFZlcmlmeSIsImFsZ29yaXRobXMiLCJlIiwiY29va2llIiwiRmxhdHRlbmVkU2lnbiIsIlRleHRFbmNvZGVyIiwic2V0UHJvdGVjdGVkSGVhZGVyIiwic2lnbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/utils/signed-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/config.js":
/*!*********************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/config.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.configSingletonGetter = exports.getConfig = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst get_config_1 = __webpack_require__(/*! ./auth0-session/get-config */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/get-config.js\");\n/**\n * @ignore\n */ const FALSEY = [\n    \"n\",\n    \"no\",\n    \"false\",\n    \"0\",\n    \"off\"\n];\n/**\n * @ignore\n */ const bool = (param, defaultValue)=>{\n    if (param === undefined || param === \"\") return defaultValue;\n    if (param && typeof param === \"string\") return !FALSEY.includes(param.toLowerCase().trim());\n    return !!param;\n};\n/**\n * @ignore\n */ const num = (param)=>param === undefined || param === \"\" ? undefined : +param;\n/**\n * @ignore\n */ const array = (param)=>param === undefined || param === \"\" ? undefined : param.replace(/\\s/g, \"\").split(\",\");\n/**\n * @ignore\n */ const getConfig = (params = {})=>{\n    var _a, _b, _c, _d;\n    // Don't use destructuring here so that the `DefinePlugin` can replace any env vars specified in `next.config.js`\n    const AUTH0_SECRET = process.env.AUTH0_SECRET;\n    const AUTH0_ISSUER_BASE_URL = process.env.AUTH0_ISSUER_BASE_URL;\n    const AUTH0_BASE_URL = process.env.AUTH0_BASE_URL || process.env.NEXT_PUBLIC_AUTH0_BASE_URL;\n    const AUTH0_CLIENT_ID = process.env.AUTH0_CLIENT_ID;\n    const AUTH0_CLIENT_SECRET = process.env.AUTH0_CLIENT_SECRET;\n    const AUTH0_CLOCK_TOLERANCE = process.env.AUTH0_CLOCK_TOLERANCE;\n    const AUTH0_HTTP_TIMEOUT = process.env.AUTH0_HTTP_TIMEOUT;\n    const AUTH0_ENABLE_TELEMETRY = process.env.AUTH0_ENABLE_TELEMETRY;\n    const AUTH0_IDP_LOGOUT = process.env.AUTH0_IDP_LOGOUT;\n    const AUTH0_LOGOUT = process.env.AUTH0_LOGOUT;\n    const AUTH0_ID_TOKEN_SIGNING_ALG = process.env.AUTH0_ID_TOKEN_SIGNING_ALG;\n    const AUTH0_LEGACY_SAME_SITE_COOKIE = process.env.AUTH0_LEGACY_SAME_SITE_COOKIE;\n    const AUTH0_IDENTITY_CLAIM_FILTER = process.env.AUTH0_IDENTITY_CLAIM_FILTER;\n    const AUTH0_PUSHED_AUTHORIZATION_REQUESTS = process.env.AUTH0_PUSHED_AUTHORIZATION_REQUESTS;\n    const AUTH0_CALLBACK = process.env.AUTH0_CALLBACK;\n    const AUTH0_POST_LOGOUT_REDIRECT = process.env.AUTH0_POST_LOGOUT_REDIRECT;\n    const AUTH0_AUDIENCE = process.env.AUTH0_AUDIENCE;\n    const AUTH0_SCOPE = process.env.AUTH0_SCOPE;\n    const AUTH0_ORGANIZATION = process.env.AUTH0_ORGANIZATION;\n    const AUTH0_SESSION_NAME = process.env.AUTH0_SESSION_NAME;\n    const AUTH0_SESSION_ROLLING = process.env.AUTH0_SESSION_ROLLING;\n    const AUTH0_SESSION_ROLLING_DURATION = process.env.AUTH0_SESSION_ROLLING_DURATION;\n    const AUTH0_SESSION_ABSOLUTE_DURATION = process.env.AUTH0_SESSION_ABSOLUTE_DURATION;\n    const AUTH0_SESSION_AUTO_SAVE = process.env.AUTH0_SESSION_AUTO_SAVE;\n    const AUTH0_SESSION_STORE_ID_TOKEN = process.env.AUTH0_SESSION_STORE_ID_TOKEN;\n    const AUTH0_COOKIE_DOMAIN = process.env.AUTH0_COOKIE_DOMAIN;\n    const AUTH0_COOKIE_PATH = process.env.AUTH0_COOKIE_PATH;\n    const AUTH0_COOKIE_TRANSIENT = process.env.AUTH0_COOKIE_TRANSIENT;\n    const AUTH0_COOKIE_HTTP_ONLY = process.env.AUTH0_COOKIE_HTTP_ONLY;\n    const AUTH0_COOKIE_SECURE = process.env.AUTH0_COOKIE_SECURE;\n    const AUTH0_COOKIE_SAME_SITE = process.env.AUTH0_COOKIE_SAME_SITE;\n    const AUTH0_CLIENT_ASSERTION_SIGNING_KEY = process.env.AUTH0_CLIENT_ASSERTION_SIGNING_KEY;\n    const AUTH0_CLIENT_ASSERTION_SIGNING_ALG = process.env.AUTH0_CLIENT_ASSERTION_SIGNING_ALG;\n    const AUTH0_TRANSACTION_COOKIE_NAME = process.env.AUTH0_TRANSACTION_COOKIE_NAME;\n    const AUTH0_TRANSACTION_COOKIE_DOMAIN = process.env.AUTH0_TRANSACTION_COOKIE_DOMAIN;\n    const AUTH0_TRANSACTION_COOKIE_PATH = process.env.AUTH0_TRANSACTION_COOKIE_PATH;\n    const AUTH0_TRANSACTION_COOKIE_SAME_SITE = process.env.AUTH0_TRANSACTION_COOKIE_SAME_SITE;\n    const AUTH0_TRANSACTION_COOKIE_SECURE = process.env.AUTH0_TRANSACTION_COOKIE_SECURE;\n    const baseURL = AUTH0_BASE_URL && !/^https?:\\/\\//.test(AUTH0_BASE_URL) ? `https://${AUTH0_BASE_URL}` : AUTH0_BASE_URL;\n    const { organization } = params, baseParams = tslib_1.__rest(params, [\n        \"organization\"\n    ]);\n    const baseConfig = (0, get_config_1.get)(Object.assign(Object.assign({\n        secret: AUTH0_SECRET,\n        issuerBaseURL: AUTH0_ISSUER_BASE_URL,\n        baseURL: baseURL,\n        clientID: AUTH0_CLIENT_ID,\n        clientSecret: AUTH0_CLIENT_SECRET,\n        clockTolerance: num(AUTH0_CLOCK_TOLERANCE),\n        httpTimeout: num(AUTH0_HTTP_TIMEOUT),\n        enableTelemetry: bool(AUTH0_ENABLE_TELEMETRY),\n        idpLogout: bool(AUTH0_IDP_LOGOUT, true),\n        auth0Logout: bool(AUTH0_LOGOUT, true),\n        idTokenSigningAlg: AUTH0_ID_TOKEN_SIGNING_ALG,\n        legacySameSiteCookie: bool(AUTH0_LEGACY_SAME_SITE_COOKIE),\n        identityClaimFilter: array(AUTH0_IDENTITY_CLAIM_FILTER),\n        pushedAuthorizationRequests: bool(AUTH0_PUSHED_AUTHORIZATION_REQUESTS, false)\n    }, baseParams), {\n        authorizationParams: Object.assign({\n            response_type: \"code\",\n            audience: AUTH0_AUDIENCE,\n            scope: AUTH0_SCOPE\n        }, baseParams.authorizationParams),\n        session: Object.assign(Object.assign({\n            name: AUTH0_SESSION_NAME,\n            rolling: bool(AUTH0_SESSION_ROLLING),\n            rollingDuration: AUTH0_SESSION_ROLLING_DURATION && isNaN(Number(AUTH0_SESSION_ROLLING_DURATION)) ? bool(AUTH0_SESSION_ROLLING_DURATION) : num(AUTH0_SESSION_ROLLING_DURATION),\n            absoluteDuration: AUTH0_SESSION_ABSOLUTE_DURATION && isNaN(Number(AUTH0_SESSION_ABSOLUTE_DURATION)) ? bool(AUTH0_SESSION_ABSOLUTE_DURATION) : num(AUTH0_SESSION_ABSOLUTE_DURATION),\n            autoSave: bool(AUTH0_SESSION_AUTO_SAVE, true),\n            storeIDToken: bool(AUTH0_SESSION_STORE_ID_TOKEN)\n        }, baseParams.session), {\n            cookie: Object.assign({\n                domain: AUTH0_COOKIE_DOMAIN,\n                path: AUTH0_COOKIE_PATH || \"/\",\n                transient: bool(AUTH0_COOKIE_TRANSIENT),\n                httpOnly: bool(AUTH0_COOKIE_HTTP_ONLY),\n                secure: bool(AUTH0_COOKIE_SECURE),\n                sameSite: AUTH0_COOKIE_SAME_SITE\n            }, (_a = baseParams.session) === null || _a === void 0 ? void 0 : _a.cookie)\n        }),\n        routes: {\n            callback: ((_b = baseParams.routes) === null || _b === void 0 ? void 0 : _b.callback) || AUTH0_CALLBACK || \"/api/auth/callback\",\n            postLogoutRedirect: ((_c = baseParams.routes) === null || _c === void 0 ? void 0 : _c.postLogoutRedirect) || AUTH0_POST_LOGOUT_REDIRECT\n        },\n        clientAssertionSigningKey: AUTH0_CLIENT_ASSERTION_SIGNING_KEY,\n        clientAssertionSigningAlg: AUTH0_CLIENT_ASSERTION_SIGNING_ALG,\n        transactionCookie: Object.assign({\n            name: AUTH0_TRANSACTION_COOKIE_NAME,\n            domain: AUTH0_TRANSACTION_COOKIE_DOMAIN,\n            path: AUTH0_TRANSACTION_COOKIE_PATH || \"/\",\n            secure: bool(AUTH0_TRANSACTION_COOKIE_SECURE),\n            sameSite: AUTH0_TRANSACTION_COOKIE_SAME_SITE\n        }, baseParams.transactionCookie)\n    }));\n    return Object.assign(Object.assign({}, baseConfig), {\n        organization: organization || AUTH0_ORGANIZATION,\n        routes: Object.assign(Object.assign({}, baseConfig.routes), {\n            login: ((_d = baseParams.routes) === null || _d === void 0 ? void 0 : _d.login) || process.env.NEXT_PUBLIC_AUTH0_LOGIN || \"/api/auth/login\"\n        })\n    });\n};\nexports.getConfig = getConfig;\nconst configSingletonGetter = (params = {}, genId)=>{\n    let config;\n    return (req)=>{\n        if (!config) {\n            // Bails out of static rendering for Server Components\n            // Need to query cookies because Server Components don't have access to URL\n            req.getCookies();\n            if (\"getUrl\" in req) {\n                // Bail out of static rendering for API Routes\n                // Reading cookies is not always enough https://github.com/vercel/next.js/issues/49006\n                req.getUrl();\n            }\n            config = (0, exports.getConfig)(Object.assign(Object.assign({}, params), {\n                session: Object.assign({\n                    genId\n                }, params.session)\n            }));\n        }\n        return config;\n    };\n};\nexports.configSingletonGetter = configSingletonGetter; //# sourceMappingURL=config.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELDZCQUE2QixHQUFHQSxpQkFBaUIsR0FBRyxLQUFLO0FBQ3pELE1BQU1JLFVBQVVDLG1CQUFPQSxDQUFDLDhEQUFPO0FBQy9CLE1BQU1DLGVBQWVELG1CQUFPQSxDQUFDLG9IQUE0QjtBQUN6RDs7Q0FFQyxHQUNELE1BQU1FLFNBQVM7SUFBQztJQUFLO0lBQU07SUFBUztJQUFLO0NBQU07QUFDL0M7O0NBRUMsR0FDRCxNQUFNQyxPQUFPLENBQUNDLE9BQU9DO0lBQ2pCLElBQUlELFVBQVVFLGFBQWFGLFVBQVUsSUFDakMsT0FBT0M7SUFDWCxJQUFJRCxTQUFTLE9BQU9BLFVBQVUsVUFDMUIsT0FBTyxDQUFDRixPQUFPSyxRQUFRLENBQUNILE1BQU1JLFdBQVcsR0FBR0MsSUFBSTtJQUNwRCxPQUFPLENBQUMsQ0FBQ0w7QUFDYjtBQUNBOztDQUVDLEdBQ0QsTUFBTU0sTUFBTSxDQUFDTixRQUFXQSxVQUFVRSxhQUFhRixVQUFVLEtBQUtFLFlBQVksQ0FBQ0Y7QUFDM0U7O0NBRUMsR0FDRCxNQUFNTyxRQUFRLENBQUNQLFFBQVVBLFVBQVVFLGFBQWFGLFVBQVUsS0FBS0UsWUFBWUYsTUFBTVEsT0FBTyxDQUFDLE9BQU8sSUFBSUMsS0FBSyxDQUFDO0FBQzFHOztDQUVDLEdBQ0QsTUFBTWYsWUFBWSxDQUFDZ0IsU0FBUyxDQUFDLENBQUM7SUFDMUIsSUFBSUMsSUFBSUMsSUFBSUMsSUFBSUM7SUFDaEIsaUhBQWlIO0lBQ2pILE1BQU1DLGVBQWVDLFFBQVFDLEdBQUcsQ0FBQ0YsWUFBWTtJQUM3QyxNQUFNRyx3QkFBd0JGLFFBQVFDLEdBQUcsQ0FBQ0MscUJBQXFCO0lBQy9ELE1BQU1DLGlCQUFpQkgsUUFBUUMsR0FBRyxDQUFDRSxjQUFjLElBQUlILFFBQVFDLEdBQUcsQ0FBQ0csMEJBQTBCO0lBQzNGLE1BQU1DLGtCQUFrQkwsUUFBUUMsR0FBRyxDQUFDSSxlQUFlO0lBQ25ELE1BQU1DLHNCQUFzQk4sUUFBUUMsR0FBRyxDQUFDSyxtQkFBbUI7SUFDM0QsTUFBTUMsd0JBQXdCUCxRQUFRQyxHQUFHLENBQUNNLHFCQUFxQjtJQUMvRCxNQUFNQyxxQkFBcUJSLFFBQVFDLEdBQUcsQ0FBQ08sa0JBQWtCO0lBQ3pELE1BQU1DLHlCQUF5QlQsUUFBUUMsR0FBRyxDQUFDUSxzQkFBc0I7SUFDakUsTUFBTUMsbUJBQW1CVixRQUFRQyxHQUFHLENBQUNTLGdCQUFnQjtJQUNyRCxNQUFNQyxlQUFlWCxRQUFRQyxHQUFHLENBQUNVLFlBQVk7SUFDN0MsTUFBTUMsNkJBQTZCWixRQUFRQyxHQUFHLENBQUNXLDBCQUEwQjtJQUN6RSxNQUFNQyxnQ0FBZ0NiLFFBQVFDLEdBQUcsQ0FBQ1ksNkJBQTZCO0lBQy9FLE1BQU1DLDhCQUE4QmQsUUFBUUMsR0FBRyxDQUFDYSwyQkFBMkI7SUFDM0UsTUFBTUMsc0NBQXNDZixRQUFRQyxHQUFHLENBQUNjLG1DQUFtQztJQUMzRixNQUFNQyxpQkFBaUJoQixRQUFRQyxHQUFHLENBQUNlLGNBQWM7SUFDakQsTUFBTUMsNkJBQTZCakIsUUFBUUMsR0FBRyxDQUFDZ0IsMEJBQTBCO0lBQ3pFLE1BQU1DLGlCQUFpQmxCLFFBQVFDLEdBQUcsQ0FBQ2lCLGNBQWM7SUFDakQsTUFBTUMsY0FBY25CLFFBQVFDLEdBQUcsQ0FBQ2tCLFdBQVc7SUFDM0MsTUFBTUMscUJBQXFCcEIsUUFBUUMsR0FBRyxDQUFDbUIsa0JBQWtCO0lBQ3pELE1BQU1DLHFCQUFxQnJCLFFBQVFDLEdBQUcsQ0FBQ29CLGtCQUFrQjtJQUN6RCxNQUFNQyx3QkFBd0J0QixRQUFRQyxHQUFHLENBQUNxQixxQkFBcUI7SUFDL0QsTUFBTUMsaUNBQWlDdkIsUUFBUUMsR0FBRyxDQUFDc0IsOEJBQThCO0lBQ2pGLE1BQU1DLGtDQUFrQ3hCLFFBQVFDLEdBQUcsQ0FBQ3VCLCtCQUErQjtJQUNuRixNQUFNQywwQkFBMEJ6QixRQUFRQyxHQUFHLENBQUN3Qix1QkFBdUI7SUFDbkUsTUFBTUMsK0JBQStCMUIsUUFBUUMsR0FBRyxDQUFDeUIsNEJBQTRCO0lBQzdFLE1BQU1DLHNCQUFzQjNCLFFBQVFDLEdBQUcsQ0FBQzBCLG1CQUFtQjtJQUMzRCxNQUFNQyxvQkFBb0I1QixRQUFRQyxHQUFHLENBQUMyQixpQkFBaUI7SUFDdkQsTUFBTUMseUJBQXlCN0IsUUFBUUMsR0FBRyxDQUFDNEIsc0JBQXNCO0lBQ2pFLE1BQU1DLHlCQUF5QjlCLFFBQVFDLEdBQUcsQ0FBQzZCLHNCQUFzQjtJQUNqRSxNQUFNQyxzQkFBc0IvQixRQUFRQyxHQUFHLENBQUM4QixtQkFBbUI7SUFDM0QsTUFBTUMseUJBQXlCaEMsUUFBUUMsR0FBRyxDQUFDK0Isc0JBQXNCO0lBQ2pFLE1BQU1DLHFDQUFxQ2pDLFFBQVFDLEdBQUcsQ0FBQ2dDLGtDQUFrQztJQUN6RixNQUFNQyxxQ0FBcUNsQyxRQUFRQyxHQUFHLENBQUNpQyxrQ0FBa0M7SUFDekYsTUFBTUMsZ0NBQWdDbkMsUUFBUUMsR0FBRyxDQUFDa0MsNkJBQTZCO0lBQy9FLE1BQU1DLGtDQUFrQ3BDLFFBQVFDLEdBQUcsQ0FBQ21DLCtCQUErQjtJQUNuRixNQUFNQyxnQ0FBZ0NyQyxRQUFRQyxHQUFHLENBQUNvQyw2QkFBNkI7SUFDL0UsTUFBTUMscUNBQXFDdEMsUUFBUUMsR0FBRyxDQUFDcUMsa0NBQWtDO0lBQ3pGLE1BQU1DLGtDQUFrQ3ZDLFFBQVFDLEdBQUcsQ0FBQ3NDLCtCQUErQjtJQUNuRixNQUFNQyxVQUFVckMsa0JBQWtCLENBQUMsZUFBZXNDLElBQUksQ0FBQ3RDLGtCQUFrQixDQUFDLFFBQVEsRUFBRUEsZUFBZSxDQUFDLEdBQUdBO0lBQ3ZHLE1BQU0sRUFBRXVDLFlBQVksRUFBRSxHQUFHaEQsUUFBUWlELGFBQWFoRSxRQUFRaUUsTUFBTSxDQUFDbEQsUUFBUTtRQUFDO0tBQWU7SUFDckYsTUFBTW1ELGFBQWEsQ0FBQyxHQUFHaEUsYUFBYWlFLEdBQUcsRUFBRXpFLE9BQU8wRSxNQUFNLENBQUMxRSxPQUFPMEUsTUFBTSxDQUFDO1FBQUVDLFFBQVFqRDtRQUFja0QsZUFBZS9DO1FBQXVCc0MsU0FBU0E7UUFBU1UsVUFBVTdDO1FBQWlCOEMsY0FBYzdDO1FBQXFCOEMsZ0JBQWdCOUQsSUFBSWlCO1FBQXdCOEMsYUFBYS9ELElBQUlrQjtRQUFxQjhDLGlCQUFpQnZFLEtBQUswQjtRQUF5QjhDLFdBQVd4RSxLQUFLMkIsa0JBQWtCO1FBQU84QyxhQUFhekUsS0FBSzRCLGNBQWM7UUFBTzhDLG1CQUFtQjdDO1FBQTRCOEMsc0JBQXNCM0UsS0FBSzhCO1FBQWdDOEMscUJBQXFCcEUsTUFBTXVCO1FBQThCOEMsNkJBQTZCN0UsS0FBS2dDLHFDQUFxQztJQUFPLEdBQUc0QixhQUFhO1FBQUVrQixxQkFBcUJ4RixPQUFPMEUsTUFBTSxDQUFDO1lBQUVlLGVBQWU7WUFBUUMsVUFBVTdDO1lBQWdCOEMsT0FBTzdDO1FBQVksR0FBR3dCLFdBQVdrQixtQkFBbUI7UUFBR0ksU0FBUzVGLE9BQU8wRSxNQUFNLENBQUMxRSxPQUFPMEUsTUFBTSxDQUFDO1lBQUVtQixNQUFNN0M7WUFBb0I4QyxTQUFTcEYsS0FBS3VDO1lBQXdCOEMsaUJBQWlCN0Msa0NBQWtDOEMsTUFBTUMsT0FBTy9DLG1DQUM3OEJ4QyxLQUFLd0Msa0NBQ0xqQyxJQUFJaUM7WUFBaUNnRCxrQkFBa0IvQyxtQ0FBbUM2QyxNQUFNQyxPQUFPOUMsb0NBQ3ZHekMsS0FBS3lDLG1DQUNMbEMsSUFBSWtDO1lBQWtDZ0QsVUFBVXpGLEtBQUswQyx5QkFBeUI7WUFBT2dELGNBQWMxRixLQUFLMkM7UUFBOEIsR0FBR2lCLFdBQVdzQixPQUFPLEdBQUc7WUFBRVMsUUFBUXJHLE9BQU8wRSxNQUFNLENBQUM7Z0JBQUU0QixRQUFRaEQ7Z0JBQXFCaUQsTUFBTWhELHFCQUFxQjtnQkFBS2lELFdBQVc5RixLQUFLOEM7Z0JBQXlCaUQsVUFBVS9GLEtBQUsrQztnQkFBeUJpRCxRQUFRaEcsS0FBS2dEO2dCQUFzQmlELFVBQVVoRDtZQUF1QixHQUFHLENBQUNyQyxLQUFLZ0QsV0FBV3NCLE9BQU8sTUFBTSxRQUFRdEUsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHK0UsTUFBTTtRQUFFO1FBQUlPLFFBQVE7WUFDemVDLFVBQVUsQ0FBQyxDQUFDdEYsS0FBSytDLFdBQVdzQyxNQUFNLE1BQU0sUUFBUXJGLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR3NGLFFBQVEsS0FBS2xFLGtCQUFrQjtZQUMzR21FLG9CQUFvQixDQUFDLENBQUN0RixLQUFLOEMsV0FBV3NDLE1BQU0sTUFBTSxRQUFRcEYsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHc0Ysa0JBQWtCLEtBQUtsRTtRQUNqSDtRQUFHbUUsMkJBQTJCbkQ7UUFBb0NvRCwyQkFBMkJuRDtRQUFvQ29ELG1CQUFtQmpILE9BQU8wRSxNQUFNLENBQUM7WUFBRW1CLE1BQU0vQjtZQUErQndDLFFBQVF2QztZQUFpQ3dDLE1BQU12QyxpQ0FBaUM7WUFBSzBDLFFBQVFoRyxLQUFLd0Q7WUFBa0N5QyxVQUFVMUM7UUFBbUMsR0FBR0ssV0FBVzJDLGlCQUFpQjtJQUFFO0lBQy9aLE9BQU9qSCxPQUFPMEUsTUFBTSxDQUFDMUUsT0FBTzBFLE1BQU0sQ0FBQyxDQUFDLEdBQUdGLGFBQWE7UUFBRUgsY0FBY0EsZ0JBQWdCdEI7UUFBb0I2RCxRQUFRNUcsT0FBTzBFLE1BQU0sQ0FBQzFFLE9BQU8wRSxNQUFNLENBQUMsQ0FBQyxHQUFHRixXQUFXb0MsTUFBTSxHQUFHO1lBQUVNLE9BQU8sQ0FBQyxDQUFDekYsS0FBSzZDLFdBQVdzQyxNQUFNLE1BQU0sUUFBUW5GLE9BQU8sS0FBSyxJQUFJLEtBQUssSUFBSUEsR0FBR3lGLEtBQUssS0FBS3ZGLFFBQVFDLEdBQUcsQ0FBQ3VGLHVCQUF1QixJQUFJO1FBQWtCO0lBQUc7QUFDelQ7QUFDQWpILGlCQUFpQixHQUFHRztBQUNwQixNQUFNRCx3QkFBd0IsQ0FBQ2lCLFNBQVMsQ0FBQyxDQUFDLEVBQUUrRjtJQUN4QyxJQUFJQztJQUNKLE9BQU8sQ0FBQ0M7UUFDSixJQUFJLENBQUNELFFBQVE7WUFDVCxzREFBc0Q7WUFDdEQsMkVBQTJFO1lBQzNFQyxJQUFJQyxVQUFVO1lBQ2QsSUFBSSxZQUFZRCxLQUFLO2dCQUNqQiw4Q0FBOEM7Z0JBQzlDLHNGQUFzRjtnQkFDdEZBLElBQUlFLE1BQU07WUFDZDtZQUNBSCxTQUFTLENBQUMsR0FBR25ILFFBQVFHLFNBQVMsRUFBRUwsT0FBTzBFLE1BQU0sQ0FBQzFFLE9BQU8wRSxNQUFNLENBQUMsQ0FBQyxHQUFHckQsU0FBUztnQkFBRXVFLFNBQVM1RixPQUFPMEUsTUFBTSxDQUFDO29CQUFFMEM7Z0JBQU0sR0FBRy9GLE9BQU91RSxPQUFPO1lBQUU7UUFDakk7UUFDQSxPQUFPeUI7SUFDWDtBQUNKO0FBQ0FuSCw2QkFBNkIsR0FBR0UsdUJBQ2hDLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2NvbmZpZy5qcz80ZmYyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jb25maWdTaW5nbGV0b25HZXR0ZXIgPSBleHBvcnRzLmdldENvbmZpZyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBnZXRfY29uZmlnXzEgPSByZXF1aXJlKFwiLi9hdXRoMC1zZXNzaW9uL2dldC1jb25maWdcIik7XG4vKipcbiAqIEBpZ25vcmVcbiAqL1xuY29uc3QgRkFMU0VZID0gWyduJywgJ25vJywgJ2ZhbHNlJywgJzAnLCAnb2ZmJ107XG4vKipcbiAqIEBpZ25vcmVcbiAqL1xuY29uc3QgYm9vbCA9IChwYXJhbSwgZGVmYXVsdFZhbHVlKSA9PiB7XG4gICAgaWYgKHBhcmFtID09PSB1bmRlZmluZWQgfHwgcGFyYW0gPT09ICcnKVxuICAgICAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICAgIGlmIChwYXJhbSAmJiB0eXBlb2YgcGFyYW0gPT09ICdzdHJpbmcnKVxuICAgICAgICByZXR1cm4gIUZBTFNFWS5pbmNsdWRlcyhwYXJhbS50b0xvd2VyQ2FzZSgpLnRyaW0oKSk7XG4gICAgcmV0dXJuICEhcGFyYW07XG59O1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmNvbnN0IG51bSA9IChwYXJhbSkgPT4gKHBhcmFtID09PSB1bmRlZmluZWQgfHwgcGFyYW0gPT09ICcnID8gdW5kZWZpbmVkIDogK3BhcmFtKTtcbi8qKlxuICogQGlnbm9yZVxuICovXG5jb25zdCBhcnJheSA9IChwYXJhbSkgPT4gcGFyYW0gPT09IHVuZGVmaW5lZCB8fCBwYXJhbSA9PT0gJycgPyB1bmRlZmluZWQgOiBwYXJhbS5yZXBsYWNlKC9cXHMvZywgJycpLnNwbGl0KCcsJyk7XG4vKipcbiAqIEBpZ25vcmVcbiAqL1xuY29uc3QgZ2V0Q29uZmlnID0gKHBhcmFtcyA9IHt9KSA9PiB7XG4gICAgdmFyIF9hLCBfYiwgX2MsIF9kO1xuICAgIC8vIERvbid0IHVzZSBkZXN0cnVjdHVyaW5nIGhlcmUgc28gdGhhdCB0aGUgYERlZmluZVBsdWdpbmAgY2FuIHJlcGxhY2UgYW55IGVudiB2YXJzIHNwZWNpZmllZCBpbiBgbmV4dC5jb25maWcuanNgXG4gICAgY29uc3QgQVVUSDBfU0VDUkVUID0gcHJvY2Vzcy5lbnYuQVVUSDBfU0VDUkVUO1xuICAgIGNvbnN0IEFVVEgwX0lTU1VFUl9CQVNFX1VSTCA9IHByb2Nlc3MuZW52LkFVVEgwX0lTU1VFUl9CQVNFX1VSTDtcbiAgICBjb25zdCBBVVRIMF9CQVNFX1VSTCA9IHByb2Nlc3MuZW52LkFVVEgwX0JBU0VfVVJMIHx8IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FVVEgwX0JBU0VfVVJMO1xuICAgIGNvbnN0IEFVVEgwX0NMSUVOVF9JRCA9IHByb2Nlc3MuZW52LkFVVEgwX0NMSUVOVF9JRDtcbiAgICBjb25zdCBBVVRIMF9DTElFTlRfU0VDUkVUID0gcHJvY2Vzcy5lbnYuQVVUSDBfQ0xJRU5UX1NFQ1JFVDtcbiAgICBjb25zdCBBVVRIMF9DTE9DS19UT0xFUkFOQ0UgPSBwcm9jZXNzLmVudi5BVVRIMF9DTE9DS19UT0xFUkFOQ0U7XG4gICAgY29uc3QgQVVUSDBfSFRUUF9USU1FT1VUID0gcHJvY2Vzcy5lbnYuQVVUSDBfSFRUUF9USU1FT1VUO1xuICAgIGNvbnN0IEFVVEgwX0VOQUJMRV9URUxFTUVUUlkgPSBwcm9jZXNzLmVudi5BVVRIMF9FTkFCTEVfVEVMRU1FVFJZO1xuICAgIGNvbnN0IEFVVEgwX0lEUF9MT0dPVVQgPSBwcm9jZXNzLmVudi5BVVRIMF9JRFBfTE9HT1VUO1xuICAgIGNvbnN0IEFVVEgwX0xPR09VVCA9IHByb2Nlc3MuZW52LkFVVEgwX0xPR09VVDtcbiAgICBjb25zdCBBVVRIMF9JRF9UT0tFTl9TSUdOSU5HX0FMRyA9IHByb2Nlc3MuZW52LkFVVEgwX0lEX1RPS0VOX1NJR05JTkdfQUxHO1xuICAgIGNvbnN0IEFVVEgwX0xFR0FDWV9TQU1FX1NJVEVfQ09PS0lFID0gcHJvY2Vzcy5lbnYuQVVUSDBfTEVHQUNZX1NBTUVfU0lURV9DT09LSUU7XG4gICAgY29uc3QgQVVUSDBfSURFTlRJVFlfQ0xBSU1fRklMVEVSID0gcHJvY2Vzcy5lbnYuQVVUSDBfSURFTlRJVFlfQ0xBSU1fRklMVEVSO1xuICAgIGNvbnN0IEFVVEgwX1BVU0hFRF9BVVRIT1JJWkFUSU9OX1JFUVVFU1RTID0gcHJvY2Vzcy5lbnYuQVVUSDBfUFVTSEVEX0FVVEhPUklaQVRJT05fUkVRVUVTVFM7XG4gICAgY29uc3QgQVVUSDBfQ0FMTEJBQ0sgPSBwcm9jZXNzLmVudi5BVVRIMF9DQUxMQkFDSztcbiAgICBjb25zdCBBVVRIMF9QT1NUX0xPR09VVF9SRURJUkVDVCA9IHByb2Nlc3MuZW52LkFVVEgwX1BPU1RfTE9HT1VUX1JFRElSRUNUO1xuICAgIGNvbnN0IEFVVEgwX0FVRElFTkNFID0gcHJvY2Vzcy5lbnYuQVVUSDBfQVVESUVOQ0U7XG4gICAgY29uc3QgQVVUSDBfU0NPUEUgPSBwcm9jZXNzLmVudi5BVVRIMF9TQ09QRTtcbiAgICBjb25zdCBBVVRIMF9PUkdBTklaQVRJT04gPSBwcm9jZXNzLmVudi5BVVRIMF9PUkdBTklaQVRJT047XG4gICAgY29uc3QgQVVUSDBfU0VTU0lPTl9OQU1FID0gcHJvY2Vzcy5lbnYuQVVUSDBfU0VTU0lPTl9OQU1FO1xuICAgIGNvbnN0IEFVVEgwX1NFU1NJT05fUk9MTElORyA9IHByb2Nlc3MuZW52LkFVVEgwX1NFU1NJT05fUk9MTElORztcbiAgICBjb25zdCBBVVRIMF9TRVNTSU9OX1JPTExJTkdfRFVSQVRJT04gPSBwcm9jZXNzLmVudi5BVVRIMF9TRVNTSU9OX1JPTExJTkdfRFVSQVRJT047XG4gICAgY29uc3QgQVVUSDBfU0VTU0lPTl9BQlNPTFVURV9EVVJBVElPTiA9IHByb2Nlc3MuZW52LkFVVEgwX1NFU1NJT05fQUJTT0xVVEVfRFVSQVRJT047XG4gICAgY29uc3QgQVVUSDBfU0VTU0lPTl9BVVRPX1NBVkUgPSBwcm9jZXNzLmVudi5BVVRIMF9TRVNTSU9OX0FVVE9fU0FWRTtcbiAgICBjb25zdCBBVVRIMF9TRVNTSU9OX1NUT1JFX0lEX1RPS0VOID0gcHJvY2Vzcy5lbnYuQVVUSDBfU0VTU0lPTl9TVE9SRV9JRF9UT0tFTjtcbiAgICBjb25zdCBBVVRIMF9DT09LSUVfRE9NQUlOID0gcHJvY2Vzcy5lbnYuQVVUSDBfQ09PS0lFX0RPTUFJTjtcbiAgICBjb25zdCBBVVRIMF9DT09LSUVfUEFUSCA9IHByb2Nlc3MuZW52LkFVVEgwX0NPT0tJRV9QQVRIO1xuICAgIGNvbnN0IEFVVEgwX0NPT0tJRV9UUkFOU0lFTlQgPSBwcm9jZXNzLmVudi5BVVRIMF9DT09LSUVfVFJBTlNJRU5UO1xuICAgIGNvbnN0IEFVVEgwX0NPT0tJRV9IVFRQX09OTFkgPSBwcm9jZXNzLmVudi5BVVRIMF9DT09LSUVfSFRUUF9PTkxZO1xuICAgIGNvbnN0IEFVVEgwX0NPT0tJRV9TRUNVUkUgPSBwcm9jZXNzLmVudi5BVVRIMF9DT09LSUVfU0VDVVJFO1xuICAgIGNvbnN0IEFVVEgwX0NPT0tJRV9TQU1FX1NJVEUgPSBwcm9jZXNzLmVudi5BVVRIMF9DT09LSUVfU0FNRV9TSVRFO1xuICAgIGNvbnN0IEFVVEgwX0NMSUVOVF9BU1NFUlRJT05fU0lHTklOR19LRVkgPSBwcm9jZXNzLmVudi5BVVRIMF9DTElFTlRfQVNTRVJUSU9OX1NJR05JTkdfS0VZO1xuICAgIGNvbnN0IEFVVEgwX0NMSUVOVF9BU1NFUlRJT05fU0lHTklOR19BTEcgPSBwcm9jZXNzLmVudi5BVVRIMF9DTElFTlRfQVNTRVJUSU9OX1NJR05JTkdfQUxHO1xuICAgIGNvbnN0IEFVVEgwX1RSQU5TQUNUSU9OX0NPT0tJRV9OQU1FID0gcHJvY2Vzcy5lbnYuQVVUSDBfVFJBTlNBQ1RJT05fQ09PS0lFX05BTUU7XG4gICAgY29uc3QgQVVUSDBfVFJBTlNBQ1RJT05fQ09PS0lFX0RPTUFJTiA9IHByb2Nlc3MuZW52LkFVVEgwX1RSQU5TQUNUSU9OX0NPT0tJRV9ET01BSU47XG4gICAgY29uc3QgQVVUSDBfVFJBTlNBQ1RJT05fQ09PS0lFX1BBVEggPSBwcm9jZXNzLmVudi5BVVRIMF9UUkFOU0FDVElPTl9DT09LSUVfUEFUSDtcbiAgICBjb25zdCBBVVRIMF9UUkFOU0FDVElPTl9DT09LSUVfU0FNRV9TSVRFID0gcHJvY2Vzcy5lbnYuQVVUSDBfVFJBTlNBQ1RJT05fQ09PS0lFX1NBTUVfU0lURTtcbiAgICBjb25zdCBBVVRIMF9UUkFOU0FDVElPTl9DT09LSUVfU0VDVVJFID0gcHJvY2Vzcy5lbnYuQVVUSDBfVFJBTlNBQ1RJT05fQ09PS0lFX1NFQ1VSRTtcbiAgICBjb25zdCBiYXNlVVJMID0gQVVUSDBfQkFTRV9VUkwgJiYgIS9eaHR0cHM/OlxcL1xcLy8udGVzdChBVVRIMF9CQVNFX1VSTCkgPyBgaHR0cHM6Ly8ke0FVVEgwX0JBU0VfVVJMfWAgOiBBVVRIMF9CQVNFX1VSTDtcbiAgICBjb25zdCB7IG9yZ2FuaXphdGlvbiB9ID0gcGFyYW1zLCBiYXNlUGFyYW1zID0gdHNsaWJfMS5fX3Jlc3QocGFyYW1zLCBbXCJvcmdhbml6YXRpb25cIl0pO1xuICAgIGNvbnN0IGJhc2VDb25maWcgPSAoMCwgZ2V0X2NvbmZpZ18xLmdldCkoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHsgc2VjcmV0OiBBVVRIMF9TRUNSRVQsIGlzc3VlckJhc2VVUkw6IEFVVEgwX0lTU1VFUl9CQVNFX1VSTCwgYmFzZVVSTDogYmFzZVVSTCwgY2xpZW50SUQ6IEFVVEgwX0NMSUVOVF9JRCwgY2xpZW50U2VjcmV0OiBBVVRIMF9DTElFTlRfU0VDUkVULCBjbG9ja1RvbGVyYW5jZTogbnVtKEFVVEgwX0NMT0NLX1RPTEVSQU5DRSksIGh0dHBUaW1lb3V0OiBudW0oQVVUSDBfSFRUUF9USU1FT1VUKSwgZW5hYmxlVGVsZW1ldHJ5OiBib29sKEFVVEgwX0VOQUJMRV9URUxFTUVUUlkpLCBpZHBMb2dvdXQ6IGJvb2woQVVUSDBfSURQX0xPR09VVCwgdHJ1ZSksIGF1dGgwTG9nb3V0OiBib29sKEFVVEgwX0xPR09VVCwgdHJ1ZSksIGlkVG9rZW5TaWduaW5nQWxnOiBBVVRIMF9JRF9UT0tFTl9TSUdOSU5HX0FMRywgbGVnYWN5U2FtZVNpdGVDb29raWU6IGJvb2woQVVUSDBfTEVHQUNZX1NBTUVfU0lURV9DT09LSUUpLCBpZGVudGl0eUNsYWltRmlsdGVyOiBhcnJheShBVVRIMF9JREVOVElUWV9DTEFJTV9GSUxURVIpLCBwdXNoZWRBdXRob3JpemF0aW9uUmVxdWVzdHM6IGJvb2woQVVUSDBfUFVTSEVEX0FVVEhPUklaQVRJT05fUkVRVUVTVFMsIGZhbHNlKSB9LCBiYXNlUGFyYW1zKSwgeyBhdXRob3JpemF0aW9uUGFyYW1zOiBPYmplY3QuYXNzaWduKHsgcmVzcG9uc2VfdHlwZTogJ2NvZGUnLCBhdWRpZW5jZTogQVVUSDBfQVVESUVOQ0UsIHNjb3BlOiBBVVRIMF9TQ09QRSB9LCBiYXNlUGFyYW1zLmF1dGhvcml6YXRpb25QYXJhbXMpLCBzZXNzaW9uOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oeyBuYW1lOiBBVVRIMF9TRVNTSU9OX05BTUUsIHJvbGxpbmc6IGJvb2woQVVUSDBfU0VTU0lPTl9ST0xMSU5HKSwgcm9sbGluZ0R1cmF0aW9uOiBBVVRIMF9TRVNTSU9OX1JPTExJTkdfRFVSQVRJT04gJiYgaXNOYU4oTnVtYmVyKEFVVEgwX1NFU1NJT05fUk9MTElOR19EVVJBVElPTikpXG4gICAgICAgICAgICAgICAgPyBib29sKEFVVEgwX1NFU1NJT05fUk9MTElOR19EVVJBVElPTilcbiAgICAgICAgICAgICAgICA6IG51bShBVVRIMF9TRVNTSU9OX1JPTExJTkdfRFVSQVRJT04pLCBhYnNvbHV0ZUR1cmF0aW9uOiBBVVRIMF9TRVNTSU9OX0FCU09MVVRFX0RVUkFUSU9OICYmIGlzTmFOKE51bWJlcihBVVRIMF9TRVNTSU9OX0FCU09MVVRFX0RVUkFUSU9OKSlcbiAgICAgICAgICAgICAgICA/IGJvb2woQVVUSDBfU0VTU0lPTl9BQlNPTFVURV9EVVJBVElPTilcbiAgICAgICAgICAgICAgICA6IG51bShBVVRIMF9TRVNTSU9OX0FCU09MVVRFX0RVUkFUSU9OKSwgYXV0b1NhdmU6IGJvb2woQVVUSDBfU0VTU0lPTl9BVVRPX1NBVkUsIHRydWUpLCBzdG9yZUlEVG9rZW46IGJvb2woQVVUSDBfU0VTU0lPTl9TVE9SRV9JRF9UT0tFTikgfSwgYmFzZVBhcmFtcy5zZXNzaW9uKSwgeyBjb29raWU6IE9iamVjdC5hc3NpZ24oeyBkb21haW46IEFVVEgwX0NPT0tJRV9ET01BSU4sIHBhdGg6IEFVVEgwX0NPT0tJRV9QQVRIIHx8ICcvJywgdHJhbnNpZW50OiBib29sKEFVVEgwX0NPT0tJRV9UUkFOU0lFTlQpLCBodHRwT25seTogYm9vbChBVVRIMF9DT09LSUVfSFRUUF9PTkxZKSwgc2VjdXJlOiBib29sKEFVVEgwX0NPT0tJRV9TRUNVUkUpLCBzYW1lU2l0ZTogQVVUSDBfQ09PS0lFX1NBTUVfU0lURSB9LCAoX2EgPSBiYXNlUGFyYW1zLnNlc3Npb24pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jb29raWUpIH0pLCByb3V0ZXM6IHtcbiAgICAgICAgICAgIGNhbGxiYWNrOiAoKF9iID0gYmFzZVBhcmFtcy5yb3V0ZXMpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsYmFjaykgfHwgQVVUSDBfQ0FMTEJBQ0sgfHwgJy9hcGkvYXV0aC9jYWxsYmFjaycsXG4gICAgICAgICAgICBwb3N0TG9nb3V0UmVkaXJlY3Q6ICgoX2MgPSBiYXNlUGFyYW1zLnJvdXRlcykgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLnBvc3RMb2dvdXRSZWRpcmVjdCkgfHwgQVVUSDBfUE9TVF9MT0dPVVRfUkVESVJFQ1RcbiAgICAgICAgfSwgY2xpZW50QXNzZXJ0aW9uU2lnbmluZ0tleTogQVVUSDBfQ0xJRU5UX0FTU0VSVElPTl9TSUdOSU5HX0tFWSwgY2xpZW50QXNzZXJ0aW9uU2lnbmluZ0FsZzogQVVUSDBfQ0xJRU5UX0FTU0VSVElPTl9TSUdOSU5HX0FMRywgdHJhbnNhY3Rpb25Db29raWU6IE9iamVjdC5hc3NpZ24oeyBuYW1lOiBBVVRIMF9UUkFOU0FDVElPTl9DT09LSUVfTkFNRSwgZG9tYWluOiBBVVRIMF9UUkFOU0FDVElPTl9DT09LSUVfRE9NQUlOLCBwYXRoOiBBVVRIMF9UUkFOU0FDVElPTl9DT09LSUVfUEFUSCB8fCAnLycsIHNlY3VyZTogYm9vbChBVVRIMF9UUkFOU0FDVElPTl9DT09LSUVfU0VDVVJFKSwgc2FtZVNpdGU6IEFVVEgwX1RSQU5TQUNUSU9OX0NPT0tJRV9TQU1FX1NJVEUgfSwgYmFzZVBhcmFtcy50cmFuc2FjdGlvbkNvb2tpZSkgfSkpO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGJhc2VDb25maWcpLCB7IG9yZ2FuaXphdGlvbjogb3JnYW5pemF0aW9uIHx8IEFVVEgwX09SR0FOSVpBVElPTiwgcm91dGVzOiBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIGJhc2VDb25maWcucm91dGVzKSwgeyBsb2dpbjogKChfZCA9IGJhc2VQYXJhbXMucm91dGVzKSA9PT0gbnVsbCB8fCBfZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2QubG9naW4pIHx8IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0FVVEgwX0xPR0lOIHx8ICcvYXBpL2F1dGgvbG9naW4nIH0pIH0pO1xufTtcbmV4cG9ydHMuZ2V0Q29uZmlnID0gZ2V0Q29uZmlnO1xuY29uc3QgY29uZmlnU2luZ2xldG9uR2V0dGVyID0gKHBhcmFtcyA9IHt9LCBnZW5JZCkgPT4ge1xuICAgIGxldCBjb25maWc7XG4gICAgcmV0dXJuIChyZXEpID0+IHtcbiAgICAgICAgaWYgKCFjb25maWcpIHtcbiAgICAgICAgICAgIC8vIEJhaWxzIG91dCBvZiBzdGF0aWMgcmVuZGVyaW5nIGZvciBTZXJ2ZXIgQ29tcG9uZW50c1xuICAgICAgICAgICAgLy8gTmVlZCB0byBxdWVyeSBjb29raWVzIGJlY2F1c2UgU2VydmVyIENvbXBvbmVudHMgZG9uJ3QgaGF2ZSBhY2Nlc3MgdG8gVVJMXG4gICAgICAgICAgICByZXEuZ2V0Q29va2llcygpO1xuICAgICAgICAgICAgaWYgKCdnZXRVcmwnIGluIHJlcSkge1xuICAgICAgICAgICAgICAgIC8vIEJhaWwgb3V0IG9mIHN0YXRpYyByZW5kZXJpbmcgZm9yIEFQSSBSb3V0ZXNcbiAgICAgICAgICAgICAgICAvLyBSZWFkaW5nIGNvb2tpZXMgaXMgbm90IGFsd2F5cyBlbm91Z2ggaHR0cHM6Ly9naXRodWIuY29tL3ZlcmNlbC9uZXh0LmpzL2lzc3Vlcy80OTAwNlxuICAgICAgICAgICAgICAgIHJlcS5nZXRVcmwoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbmZpZyA9ICgwLCBleHBvcnRzLmdldENvbmZpZykoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBwYXJhbXMpLCB7IHNlc3Npb246IE9iamVjdC5hc3NpZ24oeyBnZW5JZCB9LCBwYXJhbXMuc2Vzc2lvbikgfSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb25maWc7XG4gICAgfTtcbn07XG5leHBvcnRzLmNvbmZpZ1NpbmdsZXRvbkdldHRlciA9IGNvbmZpZ1NpbmdsZXRvbkdldHRlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNvbmZpZy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjb25maWdTaW5nbGV0b25HZXR0ZXIiLCJnZXRDb25maWciLCJ0c2xpYl8xIiwicmVxdWlyZSIsImdldF9jb25maWdfMSIsIkZBTFNFWSIsImJvb2wiLCJwYXJhbSIsImRlZmF1bHRWYWx1ZSIsInVuZGVmaW5lZCIsImluY2x1ZGVzIiwidG9Mb3dlckNhc2UiLCJ0cmltIiwibnVtIiwiYXJyYXkiLCJyZXBsYWNlIiwic3BsaXQiLCJwYXJhbXMiLCJfYSIsIl9iIiwiX2MiLCJfZCIsIkFVVEgwX1NFQ1JFVCIsInByb2Nlc3MiLCJlbnYiLCJBVVRIMF9JU1NVRVJfQkFTRV9VUkwiLCJBVVRIMF9CQVNFX1VSTCIsIk5FWFRfUFVCTElDX0FVVEgwX0JBU0VfVVJMIiwiQVVUSDBfQ0xJRU5UX0lEIiwiQVVUSDBfQ0xJRU5UX1NFQ1JFVCIsIkFVVEgwX0NMT0NLX1RPTEVSQU5DRSIsIkFVVEgwX0hUVFBfVElNRU9VVCIsIkFVVEgwX0VOQUJMRV9URUxFTUVUUlkiLCJBVVRIMF9JRFBfTE9HT1VUIiwiQVVUSDBfTE9HT1VUIiwiQVVUSDBfSURfVE9LRU5fU0lHTklOR19BTEciLCJBVVRIMF9MRUdBQ1lfU0FNRV9TSVRFX0NPT0tJRSIsIkFVVEgwX0lERU5USVRZX0NMQUlNX0ZJTFRFUiIsIkFVVEgwX1BVU0hFRF9BVVRIT1JJWkFUSU9OX1JFUVVFU1RTIiwiQVVUSDBfQ0FMTEJBQ0siLCJBVVRIMF9QT1NUX0xPR09VVF9SRURJUkVDVCIsIkFVVEgwX0FVRElFTkNFIiwiQVVUSDBfU0NPUEUiLCJBVVRIMF9PUkdBTklaQVRJT04iLCJBVVRIMF9TRVNTSU9OX05BTUUiLCJBVVRIMF9TRVNTSU9OX1JPTExJTkciLCJBVVRIMF9TRVNTSU9OX1JPTExJTkdfRFVSQVRJT04iLCJBVVRIMF9TRVNTSU9OX0FCU09MVVRFX0RVUkFUSU9OIiwiQVVUSDBfU0VTU0lPTl9BVVRPX1NBVkUiLCJBVVRIMF9TRVNTSU9OX1NUT1JFX0lEX1RPS0VOIiwiQVVUSDBfQ09PS0lFX0RPTUFJTiIsIkFVVEgwX0NPT0tJRV9QQVRIIiwiQVVUSDBfQ09PS0lFX1RSQU5TSUVOVCIsIkFVVEgwX0NPT0tJRV9IVFRQX09OTFkiLCJBVVRIMF9DT09LSUVfU0VDVVJFIiwiQVVUSDBfQ09PS0lFX1NBTUVfU0lURSIsIkFVVEgwX0NMSUVOVF9BU1NFUlRJT05fU0lHTklOR19LRVkiLCJBVVRIMF9DTElFTlRfQVNTRVJUSU9OX1NJR05JTkdfQUxHIiwiQVVUSDBfVFJBTlNBQ1RJT05fQ09PS0lFX05BTUUiLCJBVVRIMF9UUkFOU0FDVElPTl9DT09LSUVfRE9NQUlOIiwiQVVUSDBfVFJBTlNBQ1RJT05fQ09PS0lFX1BBVEgiLCJBVVRIMF9UUkFOU0FDVElPTl9DT09LSUVfU0FNRV9TSVRFIiwiQVVUSDBfVFJBTlNBQ1RJT05fQ09PS0lFX1NFQ1VSRSIsImJhc2VVUkwiLCJ0ZXN0Iiwib3JnYW5pemF0aW9uIiwiYmFzZVBhcmFtcyIsIl9fcmVzdCIsImJhc2VDb25maWciLCJnZXQiLCJhc3NpZ24iLCJzZWNyZXQiLCJpc3N1ZXJCYXNlVVJMIiwiY2xpZW50SUQiLCJjbGllbnRTZWNyZXQiLCJjbG9ja1RvbGVyYW5jZSIsImh0dHBUaW1lb3V0IiwiZW5hYmxlVGVsZW1ldHJ5IiwiaWRwTG9nb3V0IiwiYXV0aDBMb2dvdXQiLCJpZFRva2VuU2lnbmluZ0FsZyIsImxlZ2FjeVNhbWVTaXRlQ29va2llIiwiaWRlbnRpdHlDbGFpbUZpbHRlciIsInB1c2hlZEF1dGhvcml6YXRpb25SZXF1ZXN0cyIsImF1dGhvcml6YXRpb25QYXJhbXMiLCJyZXNwb25zZV90eXBlIiwiYXVkaWVuY2UiLCJzY29wZSIsInNlc3Npb24iLCJuYW1lIiwicm9sbGluZyIsInJvbGxpbmdEdXJhdGlvbiIsImlzTmFOIiwiTnVtYmVyIiwiYWJzb2x1dGVEdXJhdGlvbiIsImF1dG9TYXZlIiwic3RvcmVJRFRva2VuIiwiY29va2llIiwiZG9tYWluIiwicGF0aCIsInRyYW5zaWVudCIsImh0dHBPbmx5Iiwic2VjdXJlIiwic2FtZVNpdGUiLCJyb3V0ZXMiLCJjYWxsYmFjayIsInBvc3RMb2dvdXRSZWRpcmVjdCIsImNsaWVudEFzc2VydGlvblNpZ25pbmdLZXkiLCJjbGllbnRBc3NlcnRpb25TaWduaW5nQWxnIiwidHJhbnNhY3Rpb25Db29raWUiLCJsb2dpbiIsIk5FWFRfUFVCTElDX0FVVEgwX0xPR0lOIiwiZ2VuSWQiLCJjb25maWciLCJyZXEiLCJnZXRDb29raWVzIiwiZ2V0VXJsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/config.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/edge.js":
/*!*******************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/edge.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.withMiddlewareAuthRequired = exports.handleAuth = exports.handleProfile = exports.handleCallback = exports.handleLogout = exports.handleLogin = exports.withPageAuthRequired = exports.withApiAuthRequired = exports.touchSession = exports.getAccessToken = exports.updateSession = exports.getSession = exports.initAuth0 = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst init_1 = __webpack_require__(/*! ./init */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/init.js\");\nconst instance_check_1 = __webpack_require__(/*! ./utils/instance-check */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/instance-check.js\");\nconst edge_client_1 = __webpack_require__(/*! ./auth0-session/client/edge-client */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/client/edge-client.js\");\nconst genId = ()=>{\n    const bytes = new Uint8Array(16);\n    crypto.getRandomValues(bytes);\n    return Array.from(bytes).map((b)=>b.toString(16).padStart(2, \"0\")).join(\"\");\n};\nlet instance;\n// For using managed instance with named exports.\nfunction getInstance() {\n    (0, instance_check_1.setIsUsingNamedExports)();\n    if (instance) {\n        return instance;\n    }\n    instance = (0, init_1._initAuth)({\n        genId,\n        clientGetter: edge_client_1.clientGetter\n    });\n    return instance;\n}\n// For creating own instance.\nconst initAuth0 = (params)=>{\n    (0, instance_check_1.setIsUsingOwnInstance)();\n    return (0, init_1._initAuth)({\n        genId,\n        clientGetter: edge_client_1.clientGetter,\n        params\n    });\n};\nexports.initAuth0 = initAuth0;\nconst getSession = (...args)=>getInstance().getSession(...args);\nexports.getSession = getSession;\nconst updateSession = (...args)=>getInstance().updateSession(...args);\nexports.updateSession = updateSession;\nconst getAccessToken = (...args)=>getInstance().getAccessToken(...args);\nexports.getAccessToken = getAccessToken;\nconst touchSession = (...args)=>getInstance().touchSession(...args);\nexports.touchSession = touchSession;\nconst withApiAuthRequired = (...args)=>getInstance().withApiAuthRequired(...args);\nexports.withApiAuthRequired = withApiAuthRequired;\nexports.withPageAuthRequired = (...args)=>getInstance().withPageAuthRequired(...args);\nexports.handleLogin = (...args)=>getInstance().handleLogin(...args);\nexports.handleLogout = (...args)=>getInstance().handleLogout(...args);\nexports.handleCallback = (...args)=>getInstance().handleCallback(...args);\nexports.handleProfile = (...args)=>getInstance().handleProfile(...args);\nconst handleAuth = (...args)=>getInstance().handleAuth(...args);\nexports.handleAuth = handleAuth;\nconst withMiddlewareAuthRequired = (...args)=>getInstance().withMiddlewareAuthRequired(...args);\nexports.withMiddlewareAuthRequired = withMiddlewareAuthRequired;\ntslib_1.__exportStar(__webpack_require__(/*! ./shared */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/shared.js\"), exports); //# sourceMappingURL=edge.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9lZGdlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQ0FBa0MsR0FBR0Esa0JBQWtCLEdBQUdBLHFCQUFxQixHQUFHQSxzQkFBc0IsR0FBR0Esb0JBQW9CLEdBQUdBLG1CQUFtQixHQUFHQSw0QkFBNEIsR0FBR0EsMkJBQTJCLEdBQUdBLG9CQUFvQixHQUFHQSxzQkFBc0IsR0FBR0EscUJBQXFCLEdBQUdBLGtCQUFrQixHQUFHQSxpQkFBaUIsR0FBRyxLQUFLO0FBQzNVLE1BQU1lLFVBQVVDLG1CQUFPQSxDQUFDLDhEQUFPO0FBQy9CLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDLDRFQUFRO0FBQy9CLE1BQU1FLG1CQUFtQkYsbUJBQU9BLENBQUMsNEdBQXdCO0FBQ3pELE1BQU1HLGdCQUFnQkgsbUJBQU9BLENBQUMsb0lBQW9DO0FBQ2xFLE1BQU1JLFFBQVE7SUFDVixNQUFNQyxRQUFRLElBQUlDLFdBQVc7SUFDN0JDLE9BQU9DLGVBQWUsQ0FBQ0g7SUFDdkIsT0FBT0ksTUFBTUMsSUFBSSxDQUFDTCxPQUNiTSxHQUFHLENBQUMsQ0FBQ0MsSUFBTUEsRUFBRUMsUUFBUSxDQUFDLElBQUlDLFFBQVEsQ0FBQyxHQUFHLE1BQ3RDQyxJQUFJLENBQUM7QUFDZDtBQUNBLElBQUlDO0FBQ0osaURBQWlEO0FBQ2pELFNBQVNDO0lBQ0osSUFBR2YsaUJBQWlCZ0Isc0JBQXNCO0lBQzNDLElBQUlGLFVBQVU7UUFDVixPQUFPQTtJQUNYO0lBQ0FBLFdBQVcsQ0FBQyxHQUFHZixPQUFPa0IsU0FBUyxFQUFFO1FBQUVmO1FBQU9nQixjQUFjakIsY0FBY2lCLFlBQVk7SUFBQztJQUNuRixPQUFPSjtBQUNYO0FBQ0EsNkJBQTZCO0FBQzdCLE1BQU1sQixZQUFZLENBQUN1QjtJQUNkLElBQUduQixpQkFBaUJvQixxQkFBcUI7SUFDMUMsT0FBTyxDQUFDLEdBQUdyQixPQUFPa0IsU0FBUyxFQUFFO1FBQUVmO1FBQU9nQixjQUFjakIsY0FBY2lCLFlBQVk7UUFBRUM7SUFBTztBQUMzRjtBQUNBckMsaUJBQWlCLEdBQUdjO0FBQ3BCLE1BQU1ELGFBQWEsQ0FBQyxHQUFHMEIsT0FBU04sY0FBY3BCLFVBQVUsSUFBSTBCO0FBQzVEdkMsa0JBQWtCLEdBQUdhO0FBQ3JCLE1BQU1ELGdCQUFnQixDQUFDLEdBQUcyQixPQUFTTixjQUFjckIsYUFBYSxJQUFJMkI7QUFDbEV2QyxxQkFBcUIsR0FBR1k7QUFDeEIsTUFBTUQsaUJBQWlCLENBQUMsR0FBRzRCLE9BQVNOLGNBQWN0QixjQUFjLElBQUk0QjtBQUNwRXZDLHNCQUFzQixHQUFHVztBQUN6QixNQUFNRCxlQUFlLENBQUMsR0FBRzZCLE9BQVNOLGNBQWN2QixZQUFZLElBQUk2QjtBQUNoRXZDLG9CQUFvQixHQUFHVTtBQUN2QixNQUFNRCxzQkFBc0IsQ0FBQyxHQUFHOEIsT0FBU04sY0FBY3hCLG1CQUFtQixJQUFJOEI7QUFDOUV2QywyQkFBMkIsR0FBR1M7QUFDOUJULDRCQUE0QixHQUFJLENBQUMsR0FBR3VDLE9BQVNOLGNBQWN6QixvQkFBb0IsSUFBSStCO0FBQ25GdkMsbUJBQW1CLEdBQUksQ0FBQyxHQUFHdUMsT0FBU04sY0FBYzFCLFdBQVcsSUFBSWdDO0FBQ2pFdkMsb0JBQW9CLEdBQUksQ0FBQyxHQUFHdUMsT0FBU04sY0FBYzNCLFlBQVksSUFBSWlDO0FBQ25FdkMsc0JBQXNCLEdBQUksQ0FBQyxHQUFHdUMsT0FBU04sY0FBYzVCLGNBQWMsSUFBSWtDO0FBQ3ZFdkMscUJBQXFCLEdBQUksQ0FBQyxHQUFHdUMsT0FBU04sY0FBYzdCLGFBQWEsSUFBSW1DO0FBQ3JFLE1BQU1wQyxhQUFhLENBQUMsR0FBR29DLE9BQVNOLGNBQWM5QixVQUFVLElBQUlvQztBQUM1RHZDLGtCQUFrQixHQUFHRztBQUNyQixNQUFNRCw2QkFBNkIsQ0FBQyxHQUFHcUMsT0FBU04sY0FBYy9CLDBCQUEwQixJQUFJcUM7QUFDNUZ2QyxrQ0FBa0MsR0FBR0U7QUFDckNhLFFBQVF5QixZQUFZLENBQUN4QixtQkFBT0EsQ0FBQyxnRkFBVSxHQUFHaEIsVUFDMUMsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3QvZWRnZS5qcz9hMGQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy53aXRoTWlkZGxld2FyZUF1dGhSZXF1aXJlZCA9IGV4cG9ydHMuaGFuZGxlQXV0aCA9IGV4cG9ydHMuaGFuZGxlUHJvZmlsZSA9IGV4cG9ydHMuaGFuZGxlQ2FsbGJhY2sgPSBleHBvcnRzLmhhbmRsZUxvZ291dCA9IGV4cG9ydHMuaGFuZGxlTG9naW4gPSBleHBvcnRzLndpdGhQYWdlQXV0aFJlcXVpcmVkID0gZXhwb3J0cy53aXRoQXBpQXV0aFJlcXVpcmVkID0gZXhwb3J0cy50b3VjaFNlc3Npb24gPSBleHBvcnRzLmdldEFjY2Vzc1Rva2VuID0gZXhwb3J0cy51cGRhdGVTZXNzaW9uID0gZXhwb3J0cy5nZXRTZXNzaW9uID0gZXhwb3J0cy5pbml0QXV0aDAgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgaW5pdF8xID0gcmVxdWlyZShcIi4vaW5pdFwiKTtcbmNvbnN0IGluc3RhbmNlX2NoZWNrXzEgPSByZXF1aXJlKFwiLi91dGlscy9pbnN0YW5jZS1jaGVja1wiKTtcbmNvbnN0IGVkZ2VfY2xpZW50XzEgPSByZXF1aXJlKFwiLi9hdXRoMC1zZXNzaW9uL2NsaWVudC9lZGdlLWNsaWVudFwiKTtcbmNvbnN0IGdlbklkID0gKCkgPT4ge1xuICAgIGNvbnN0IGJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoMTYpO1xuICAgIGNyeXB0by5nZXRSYW5kb21WYWx1ZXMoYnl0ZXMpO1xuICAgIHJldHVybiBBcnJheS5mcm9tKGJ5dGVzKVxuICAgICAgICAubWFwKChiKSA9PiBiLnRvU3RyaW5nKDE2KS5wYWRTdGFydCgyLCAnMCcpKVxuICAgICAgICAuam9pbignJyk7XG59O1xubGV0IGluc3RhbmNlO1xuLy8gRm9yIHVzaW5nIG1hbmFnZWQgaW5zdGFuY2Ugd2l0aCBuYW1lZCBleHBvcnRzLlxuZnVuY3Rpb24gZ2V0SW5zdGFuY2UoKSB7XG4gICAgKDAsIGluc3RhbmNlX2NoZWNrXzEuc2V0SXNVc2luZ05hbWVkRXhwb3J0cykoKTtcbiAgICBpZiAoaW5zdGFuY2UpIHtcbiAgICAgICAgcmV0dXJuIGluc3RhbmNlO1xuICAgIH1cbiAgICBpbnN0YW5jZSA9ICgwLCBpbml0XzEuX2luaXRBdXRoKSh7IGdlbklkLCBjbGllbnRHZXR0ZXI6IGVkZ2VfY2xpZW50XzEuY2xpZW50R2V0dGVyIH0pO1xuICAgIHJldHVybiBpbnN0YW5jZTtcbn1cbi8vIEZvciBjcmVhdGluZyBvd24gaW5zdGFuY2UuXG5jb25zdCBpbml0QXV0aDAgPSAocGFyYW1zKSA9PiB7XG4gICAgKDAsIGluc3RhbmNlX2NoZWNrXzEuc2V0SXNVc2luZ093bkluc3RhbmNlKSgpO1xuICAgIHJldHVybiAoMCwgaW5pdF8xLl9pbml0QXV0aCkoeyBnZW5JZCwgY2xpZW50R2V0dGVyOiBlZGdlX2NsaWVudF8xLmNsaWVudEdldHRlciwgcGFyYW1zIH0pO1xufTtcbmV4cG9ydHMuaW5pdEF1dGgwID0gaW5pdEF1dGgwO1xuY29uc3QgZ2V0U2Vzc2lvbiA9ICguLi5hcmdzKSA9PiBnZXRJbnN0YW5jZSgpLmdldFNlc3Npb24oLi4uYXJncyk7XG5leHBvcnRzLmdldFNlc3Npb24gPSBnZXRTZXNzaW9uO1xuY29uc3QgdXBkYXRlU2Vzc2lvbiA9ICguLi5hcmdzKSA9PiBnZXRJbnN0YW5jZSgpLnVwZGF0ZVNlc3Npb24oLi4uYXJncyk7XG5leHBvcnRzLnVwZGF0ZVNlc3Npb24gPSB1cGRhdGVTZXNzaW9uO1xuY29uc3QgZ2V0QWNjZXNzVG9rZW4gPSAoLi4uYXJncykgPT4gZ2V0SW5zdGFuY2UoKS5nZXRBY2Nlc3NUb2tlbiguLi5hcmdzKTtcbmV4cG9ydHMuZ2V0QWNjZXNzVG9rZW4gPSBnZXRBY2Nlc3NUb2tlbjtcbmNvbnN0IHRvdWNoU2Vzc2lvbiA9ICguLi5hcmdzKSA9PiBnZXRJbnN0YW5jZSgpLnRvdWNoU2Vzc2lvbiguLi5hcmdzKTtcbmV4cG9ydHMudG91Y2hTZXNzaW9uID0gdG91Y2hTZXNzaW9uO1xuY29uc3Qgd2l0aEFwaUF1dGhSZXF1aXJlZCA9ICguLi5hcmdzKSA9PiBnZXRJbnN0YW5jZSgpLndpdGhBcGlBdXRoUmVxdWlyZWQoLi4uYXJncyk7XG5leHBvcnRzLndpdGhBcGlBdXRoUmVxdWlyZWQgPSB3aXRoQXBpQXV0aFJlcXVpcmVkO1xuZXhwb3J0cy53aXRoUGFnZUF1dGhSZXF1aXJlZCA9ICgoLi4uYXJncykgPT4gZ2V0SW5zdGFuY2UoKS53aXRoUGFnZUF1dGhSZXF1aXJlZCguLi5hcmdzKSk7XG5leHBvcnRzLmhhbmRsZUxvZ2luID0gKCguLi5hcmdzKSA9PiBnZXRJbnN0YW5jZSgpLmhhbmRsZUxvZ2luKC4uLmFyZ3MpKTtcbmV4cG9ydHMuaGFuZGxlTG9nb3V0ID0gKCguLi5hcmdzKSA9PiBnZXRJbnN0YW5jZSgpLmhhbmRsZUxvZ291dCguLi5hcmdzKSk7XG5leHBvcnRzLmhhbmRsZUNhbGxiYWNrID0gKCguLi5hcmdzKSA9PiBnZXRJbnN0YW5jZSgpLmhhbmRsZUNhbGxiYWNrKC4uLmFyZ3MpKTtcbmV4cG9ydHMuaGFuZGxlUHJvZmlsZSA9ICgoLi4uYXJncykgPT4gZ2V0SW5zdGFuY2UoKS5oYW5kbGVQcm9maWxlKC4uLmFyZ3MpKTtcbmNvbnN0IGhhbmRsZUF1dGggPSAoLi4uYXJncykgPT4gZ2V0SW5zdGFuY2UoKS5oYW5kbGVBdXRoKC4uLmFyZ3MpO1xuZXhwb3J0cy5oYW5kbGVBdXRoID0gaGFuZGxlQXV0aDtcbmNvbnN0IHdpdGhNaWRkbGV3YXJlQXV0aFJlcXVpcmVkID0gKC4uLmFyZ3MpID0+IGdldEluc3RhbmNlKCkud2l0aE1pZGRsZXdhcmVBdXRoUmVxdWlyZWQoLi4uYXJncyk7XG5leHBvcnRzLndpdGhNaWRkbGV3YXJlQXV0aFJlcXVpcmVkID0gd2l0aE1pZGRsZXdhcmVBdXRoUmVxdWlyZWQ7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9zaGFyZWRcIiksIGV4cG9ydHMpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZWRnZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ3aXRoTWlkZGxld2FyZUF1dGhSZXF1aXJlZCIsImhhbmRsZUF1dGgiLCJoYW5kbGVQcm9maWxlIiwiaGFuZGxlQ2FsbGJhY2siLCJoYW5kbGVMb2dvdXQiLCJoYW5kbGVMb2dpbiIsIndpdGhQYWdlQXV0aFJlcXVpcmVkIiwid2l0aEFwaUF1dGhSZXF1aXJlZCIsInRvdWNoU2Vzc2lvbiIsImdldEFjY2Vzc1Rva2VuIiwidXBkYXRlU2Vzc2lvbiIsImdldFNlc3Npb24iLCJpbml0QXV0aDAiLCJ0c2xpYl8xIiwicmVxdWlyZSIsImluaXRfMSIsImluc3RhbmNlX2NoZWNrXzEiLCJlZGdlX2NsaWVudF8xIiwiZ2VuSWQiLCJieXRlcyIsIlVpbnQ4QXJyYXkiLCJjcnlwdG8iLCJnZXRSYW5kb21WYWx1ZXMiLCJBcnJheSIsImZyb20iLCJtYXAiLCJiIiwidG9TdHJpbmciLCJwYWRTdGFydCIsImpvaW4iLCJpbnN0YW5jZSIsImdldEluc3RhbmNlIiwic2V0SXNVc2luZ05hbWVkRXhwb3J0cyIsIl9pbml0QXV0aCIsImNsaWVudEdldHRlciIsInBhcmFtcyIsInNldElzVXNpbmdPd25JbnN0YW5jZSIsImFyZ3MiLCJfX2V4cG9ydFN0YXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/edge.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/auth.js":
/*!****************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/handlers/auth.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst req_helpers_1 = __webpack_require__(/*! ../utils/req-helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/req-helpers.js\");\n/**\n * @ignore\n */ const defaultPageRouterOnError = (_req, res, error)=>{\n    console.error(error);\n    res.status(error.status || 500).end();\n};\n/**\n * @ignore\n */ const defaultAppRouterOnError = (_req, error)=>{\n    console.error(error);\n};\n/**\n * @ignore\n */ function handlerFactory({ handleLogin, handleLogout, handleCallback, handleProfile, handleBackchannelLogout }) {\n    return (_a = {})=>{\n        var { onError } = _a, handlers = tslib_1.__rest(_a, [\n            \"onError\"\n        ]);\n        const customHandlers = Object.assign({\n            login: handleLogin,\n            logout: handleLogout,\n            callback: handleCallback,\n            \"backchannel-logout\": handleBackchannelLogout,\n            me: handlers.profile || handleProfile\n        }, handlers);\n        const appRouteHandler = appRouteHandlerFactory(customHandlers, onError);\n        const pageRouteHandler = pageRouteHandlerFactory(customHandlers, onError);\n        return (req, resOrCtx)=>{\n            if ((0, req_helpers_1.isRequest)(req)) {\n                return appRouteHandler(req, resOrCtx);\n            }\n            return pageRouteHandler(req, resOrCtx);\n        };\n    };\n}\nexports[\"default\"] = handlerFactory;\n/**\n * @ignore\n */ const appRouteHandlerFactory = (customHandlers, onError)=>async (req, ctx)=>{\n        const { params } = ctx;\n        let route = params.auth0;\n        if (Array.isArray(route)) {\n            let otherRoutes;\n            [route, ...otherRoutes] = route;\n            if (otherRoutes.length) {\n                return new Response(null, {\n                    status: 404\n                });\n            }\n        }\n        const handler = route && customHandlers.hasOwnProperty(route) && customHandlers[route];\n        try {\n            if (handler) {\n                return await handler(req, ctx);\n            } else {\n                return new Response(null, {\n                    status: 404\n                });\n            }\n        } catch (error) {\n            const res = await (onError || defaultAppRouterOnError)(req, error);\n            return res || new Response(null, {\n                status: error.status || 500\n            });\n        }\n    };\n/**\n * @ignore\n */ const pageRouteHandlerFactory = (customHandlers, onError)=>async (req, res)=>{\n        let { query: { auth0: route } } = req;\n        if (Array.isArray(route)) {\n            let otherRoutes;\n            [route, ...otherRoutes] = route;\n            if (otherRoutes.length) {\n                res.status(404).end();\n                return;\n            }\n        }\n        try {\n            const handler = route && customHandlers.hasOwnProperty(route) && customHandlers[route];\n            if (handler) {\n                await handler(req, res);\n            } else {\n                res.status(404).end();\n            }\n        } catch (error) {\n            await (onError || defaultPageRouterOnError)(req, res, error);\n            if (!res.writableEnded) {\n                // 200 is the default, so we assume it has not been set in the custom error handler if it equals 200\n                res.status(res.statusCode === 200 ? 500 : res.statusCode).end();\n            }\n        }\n    }; //# sourceMappingURL=auth.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/auth.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/backchannel-logout.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/handlers/backchannel-logout.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst http_1 = __webpack_require__(/*! ../http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js\");\nconst router_helpers_1 = __webpack_require__(/*! ./router-helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/router-helpers.js\");\n/**\n * @ignore\n */ function handleBackchannelLogoutFactory(handler, getConfig) {\n    const appRouteHandler = appRouteHandlerFactory(handler, getConfig);\n    const pageRouteHandler = pageRouteHandlerFactory(handler, getConfig);\n    return (0, router_helpers_1.getHandler)(appRouteHandler, pageRouteHandler);\n}\nexports[\"default\"] = handleBackchannelLogoutFactory;\nconst appRouteHandlerFactory = (handler, getConfig)=>async (req)=>{\n        try {\n            const auth0Req = new http_1.Auth0NextRequest(req);\n            const config = await getConfig(auth0Req);\n            if (!config.backchannelLogout) {\n                return new NextResponse(\"Back-Channel Logout is not enabled.\", {\n                    status: 404\n                });\n            }\n            const auth0Res = new http_1.Auth0NextResponse(new NextResponse());\n            await handler(auth0Req, auth0Res);\n            return auth0Res.res;\n        } catch (e) {\n            return NextResponse.json({\n                error: e.code || \"unknown_error\",\n                error_description: e.description || e.message\n            }, {\n                status: 400,\n                headers: {\n                    \"cache-control\": \"no-store\"\n                }\n            });\n        }\n    };\nconst pageRouteHandlerFactory = (handler, getConfig)=>async (req, res)=>{\n        try {\n            const auth0Req = new http_1.Auth0NextApiRequest(req);\n            const config = await getConfig(auth0Req);\n            if (!config.backchannelLogout) {\n                res.status(404).end(\"Back-Channel Logout is not enabled.\");\n                return;\n            }\n            return await handler(auth0Req, new http_1.Auth0NextApiResponse(res));\n        } catch (e) {\n            res.setHeader(\"cache-control\", \"no-store\");\n            res.status(400).json({\n                error: e.code || \"unknown_error\",\n                error_description: e.description || e.message\n            });\n        }\n    }; //# sourceMappingURL=backchannel-logout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9oYW5kbGVycy9iYWNrY2hhbm5lbC1sb2dvdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBRTdELE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLG1GQUFTO0FBQ2hDLE1BQU1DLG1CQUFtQkQsbUJBQU9BLENBQUMseUdBQWtCO0FBQ25EOztDQUVDLEdBQ0QsU0FBU0UsK0JBQStCQyxPQUFPLEVBQUVDLFNBQVM7SUFDdEQsTUFBTUMsa0JBQWtCQyx1QkFBdUJILFNBQVNDO0lBQ3hELE1BQU1HLG1CQUFtQkMsd0JBQXdCTCxTQUFTQztJQUMxRCxPQUFPLENBQUMsR0FBR0gsaUJBQWlCUSxVQUFVLEVBQUVKLGlCQUFpQkU7QUFDN0Q7QUFDQVYsa0JBQWUsR0FBR0s7QUFDbEIsTUFBTUkseUJBQXlCLENBQUNILFNBQVNDLFlBQWMsT0FBT087UUFDMUQsSUFBSTtZQUNBLE1BQU1DLFdBQVcsSUFBSWIsT0FBT2MsZ0JBQWdCLENBQUNGO1lBQzdDLE1BQU1HLFNBQVMsTUFBTVYsVUFBVVE7WUFDL0IsSUFBSSxDQUFDRSxPQUFPQyxpQkFBaUIsRUFBRTtnQkFDM0IsT0FBTyxpQkFBMEIsdUNBQXVDO29CQUFFQyxRQUFRO2dCQUFJO1lBQzFGO1lBQ0EsTUFBTUMsV0FBVyxJQUFJbEIsT0FBT21CLGlCQUFpQixDQUFDO1lBQzlDLE1BQU1mLFFBQVFTLFVBQVVLO1lBQ3hCLE9BQU9BLFNBQVNFLEdBQUc7UUFDdkIsRUFDQSxPQUFPQyxHQUFHO1lBQ04sT0FBT0MsYUFBc0JDLElBQUksQ0FBQztnQkFDOUJDLE9BQU9ILEVBQUVJLElBQUksSUFBSTtnQkFDakJDLG1CQUFtQkwsRUFBRU0sV0FBVyxJQUFJTixFQUFFTyxPQUFPO1lBQ2pELEdBQUc7Z0JBQUVYLFFBQVE7Z0JBQUtZLFNBQVM7b0JBQUUsaUJBQWlCO2dCQUFXO1lBQUU7UUFDL0Q7SUFDSjtBQUNBLE1BQU1wQiwwQkFBMEIsQ0FBQ0wsU0FBU0MsWUFBYyxPQUFPTyxLQUFLUTtRQUNoRSxJQUFJO1lBQ0EsTUFBTVAsV0FBVyxJQUFJYixPQUFPOEIsbUJBQW1CLENBQUNsQjtZQUNoRCxNQUFNRyxTQUFTLE1BQU1WLFVBQVVRO1lBQy9CLElBQUksQ0FBQ0UsT0FBT0MsaUJBQWlCLEVBQUU7Z0JBQzNCSSxJQUFJSCxNQUFNLENBQUMsS0FBS2MsR0FBRyxDQUFDO2dCQUNwQjtZQUNKO1lBQ0EsT0FBTyxNQUFNM0IsUUFBUVMsVUFBVSxJQUFJYixPQUFPZ0Msb0JBQW9CLENBQUNaO1FBQ25FLEVBQ0EsT0FBT0MsR0FBRztZQUNORCxJQUFJYSxTQUFTLENBQUMsaUJBQWlCO1lBQy9CYixJQUFJSCxNQUFNLENBQUMsS0FBS00sSUFBSSxDQUFDO2dCQUNqQkMsT0FBT0gsRUFBRUksSUFBSSxJQUFJO2dCQUNqQkMsbUJBQW1CTCxFQUFFTSxXQUFXLElBQUlOLEVBQUVPLE9BQU87WUFDakQ7UUFDSjtJQUNKLEdBQ0EsOENBQThDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3QvaGFuZGxlcnMvYmFja2NoYW5uZWwtbG9nb3V0LmpzPzYzODYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBzZXJ2ZXJfMSA9IHJlcXVpcmUoXCJuZXh0L3NlcnZlclwiKTtcbmNvbnN0IGh0dHBfMSA9IHJlcXVpcmUoXCIuLi9odHRwXCIpO1xuY29uc3Qgcm91dGVyX2hlbHBlcnNfMSA9IHJlcXVpcmUoXCIuL3JvdXRlci1oZWxwZXJzXCIpO1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmZ1bmN0aW9uIGhhbmRsZUJhY2tjaGFubmVsTG9nb3V0RmFjdG9yeShoYW5kbGVyLCBnZXRDb25maWcpIHtcbiAgICBjb25zdCBhcHBSb3V0ZUhhbmRsZXIgPSBhcHBSb3V0ZUhhbmRsZXJGYWN0b3J5KGhhbmRsZXIsIGdldENvbmZpZyk7XG4gICAgY29uc3QgcGFnZVJvdXRlSGFuZGxlciA9IHBhZ2VSb3V0ZUhhbmRsZXJGYWN0b3J5KGhhbmRsZXIsIGdldENvbmZpZyk7XG4gICAgcmV0dXJuICgwLCByb3V0ZXJfaGVscGVyc18xLmdldEhhbmRsZXIpKGFwcFJvdXRlSGFuZGxlciwgcGFnZVJvdXRlSGFuZGxlcik7XG59XG5leHBvcnRzLmRlZmF1bHQgPSBoYW5kbGVCYWNrY2hhbm5lbExvZ291dEZhY3Rvcnk7XG5jb25zdCBhcHBSb3V0ZUhhbmRsZXJGYWN0b3J5ID0gKGhhbmRsZXIsIGdldENvbmZpZykgPT4gYXN5bmMgKHJlcSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGF1dGgwUmVxID0gbmV3IGh0dHBfMS5BdXRoME5leHRSZXF1ZXN0KHJlcSk7XG4gICAgICAgIGNvbnN0IGNvbmZpZyA9IGF3YWl0IGdldENvbmZpZyhhdXRoMFJlcSk7XG4gICAgICAgIGlmICghY29uZmlnLmJhY2tjaGFubmVsTG9nb3V0KSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IHNlcnZlcl8xLk5leHRSZXNwb25zZSgnQmFjay1DaGFubmVsIExvZ291dCBpcyBub3QgZW5hYmxlZC4nLCB7IHN0YXR1czogNDA0IH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGF1dGgwUmVzID0gbmV3IGh0dHBfMS5BdXRoME5leHRSZXNwb25zZShuZXcgc2VydmVyXzEuTmV4dFJlc3BvbnNlKCkpO1xuICAgICAgICBhd2FpdCBoYW5kbGVyKGF1dGgwUmVxLCBhdXRoMFJlcyk7XG4gICAgICAgIHJldHVybiBhdXRoMFJlcy5yZXM7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHJldHVybiBzZXJ2ZXJfMS5OZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgICAgICBlcnJvcjogZS5jb2RlIHx8ICd1bmtub3duX2Vycm9yJyxcbiAgICAgICAgICAgIGVycm9yX2Rlc2NyaXB0aW9uOiBlLmRlc2NyaXB0aW9uIHx8IGUubWVzc2FnZVxuICAgICAgICB9LCB7IHN0YXR1czogNDAwLCBoZWFkZXJzOiB7ICdjYWNoZS1jb250cm9sJzogJ25vLXN0b3JlJyB9IH0pO1xuICAgIH1cbn07XG5jb25zdCBwYWdlUm91dGVIYW5kbGVyRmFjdG9yeSA9IChoYW5kbGVyLCBnZXRDb25maWcpID0+IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGF1dGgwUmVxID0gbmV3IGh0dHBfMS5BdXRoME5leHRBcGlSZXF1ZXN0KHJlcSk7XG4gICAgICAgIGNvbnN0IGNvbmZpZyA9IGF3YWl0IGdldENvbmZpZyhhdXRoMFJlcSk7XG4gICAgICAgIGlmICghY29uZmlnLmJhY2tjaGFubmVsTG9nb3V0KSB7XG4gICAgICAgICAgICByZXMuc3RhdHVzKDQwNCkuZW5kKCdCYWNrLUNoYW5uZWwgTG9nb3V0IGlzIG5vdCBlbmFibGVkLicpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhd2FpdCBoYW5kbGVyKGF1dGgwUmVxLCBuZXcgaHR0cF8xLkF1dGgwTmV4dEFwaVJlc3BvbnNlKHJlcykpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICByZXMuc2V0SGVhZGVyKCdjYWNoZS1jb250cm9sJywgJ25vLXN0b3JlJyk7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAwKS5qc29uKHtcbiAgICAgICAgICAgIGVycm9yOiBlLmNvZGUgfHwgJ3Vua25vd25fZXJyb3InLFxuICAgICAgICAgICAgZXJyb3JfZGVzY3JpcHRpb246IGUuZGVzY3JpcHRpb24gfHwgZS5tZXNzYWdlXG4gICAgICAgIH0pO1xuICAgIH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYWNrY2hhbm5lbC1sb2dvdXQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaHR0cF8xIiwicmVxdWlyZSIsInJvdXRlcl9oZWxwZXJzXzEiLCJoYW5kbGVCYWNrY2hhbm5lbExvZ291dEZhY3RvcnkiLCJoYW5kbGVyIiwiZ2V0Q29uZmlnIiwiYXBwUm91dGVIYW5kbGVyIiwiYXBwUm91dGVIYW5kbGVyRmFjdG9yeSIsInBhZ2VSb3V0ZUhhbmRsZXIiLCJwYWdlUm91dGVIYW5kbGVyRmFjdG9yeSIsImdldEhhbmRsZXIiLCJkZWZhdWx0IiwicmVxIiwiYXV0aDBSZXEiLCJBdXRoME5leHRSZXF1ZXN0IiwiY29uZmlnIiwiYmFja2NoYW5uZWxMb2dvdXQiLCJzdGF0dXMiLCJhdXRoMFJlcyIsIkF1dGgwTmV4dFJlc3BvbnNlIiwicmVzIiwiZSIsInNlcnZlcl8xIiwianNvbiIsImVycm9yIiwiY29kZSIsImVycm9yX2Rlc2NyaXB0aW9uIiwiZGVzY3JpcHRpb24iLCJtZXNzYWdlIiwiaGVhZGVycyIsIkF1dGgwTmV4dEFwaVJlcXVlc3QiLCJlbmQiLCJBdXRoME5leHRBcGlSZXNwb25zZSIsInNldEhlYWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/backchannel-logout.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/callback.js":
/*!********************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/handlers/callback.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst assert_1 = __webpack_require__(/*! ../utils/assert */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/assert.js\");\nconst errors_1 = __webpack_require__(/*! ../utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/errors.js\");\nconst http_1 = __webpack_require__(/*! ../http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js\");\nconst router_helpers_1 = __webpack_require__(/*! ./router-helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/router-helpers.js\");\n/**\n * @ignore\n */ function handleCallbackFactory(handler, getConfig) {\n    const appRouteHandler = appRouteHandlerFactory(handler, getConfig);\n    const pageRouteHandler = pageRouteHandlerFactory(handler, getConfig);\n    return (0, router_helpers_1.getHandler)(appRouteHandler, pageRouteHandler);\n}\nexports[\"default\"] = handleCallbackFactory;\nconst applyOptions = (req, res, options, config)=>{\n    const opts = Object.assign({}, options);\n    const idTokenValidator = (afterCallback, organization)=>(session, state)=>{\n            if (organization) {\n                if (organization.startsWith(\"org_\")) {\n                    if (!session.user.org_id) {\n                        throw new Error(\"Organization Id (org_id) claim must be a string present in the ID token\");\n                    }\n                    if (session.user.org_id !== organization) {\n                        throw new Error(`Organization Id (org_id) claim value mismatch in the ID token; ` + `expected \"${organization}\", found \"${session.user.org_id}\"`);\n                    }\n                } else {\n                    if (!session.user.org_name) {\n                        throw new Error(\"Organization Name (org_name) claim must be a string present in the ID token\");\n                    }\n                    if (session.user.org_name !== organization.toLowerCase()) {\n                        throw new Error(`Organization Name (org_name) claim value mismatch in the ID token; ` + `expected \"${organization}\", found \"${session.user.org_name}\"`);\n                    }\n                }\n            }\n            if (afterCallback) {\n                if (res) {\n                    return afterCallback(req, res, session, state);\n                } else {\n                    return afterCallback(req, session, state);\n                }\n            }\n            return session;\n        };\n    return Object.assign(Object.assign({}, opts), {\n        afterCallback: idTokenValidator(opts.afterCallback, opts.organization || config.organization)\n    });\n};\n/**\n * @ignore\n */ const appRouteHandlerFactory = (handler, getConfig)=>async (req, _ctx, options = {})=>{\n        try {\n            const auth0Req = new http_1.Auth0NextRequest(req);\n            const nextConfig = await getConfig(auth0Req);\n            const auth0Res = new http_1.Auth0NextResponse(new NextResponse());\n            await handler(auth0Req, auth0Res, applyOptions(req, undefined, options, nextConfig));\n            return auth0Res.res;\n        } catch (e) {\n            throw new errors_1.CallbackHandlerError(e);\n        }\n    };\n/**\n * @ignore\n */ const pageRouteHandlerFactory = (handler, getConfig)=>async (req, res, options = {})=>{\n        try {\n            const auth0Req = new http_1.Auth0NextApiRequest(req);\n            const nextConfig = await getConfig(auth0Req);\n            (0, assert_1.assertReqRes)(req, res);\n            return await handler(auth0Req, new http_1.Auth0NextApiResponse(res), applyOptions(req, res, options, nextConfig));\n        } catch (e) {\n            throw new errors_1.CallbackHandlerError(e);\n        }\n    }; //# sourceMappingURL=callback.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/callback.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/handlers/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.handlerFactory = exports.profileHandler = exports.backchannelLogoutHandler = exports.logoutHandler = exports.loginHandler = exports.callbackHandler = void 0;\nvar callback_1 = __webpack_require__(/*! ./callback */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/callback.js\");\nObject.defineProperty(exports, \"callbackHandler\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(callback_1).default;\n    }\n}));\nvar login_1 = __webpack_require__(/*! ./login */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/login.js\");\nObject.defineProperty(exports, \"loginHandler\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(login_1).default;\n    }\n}));\nvar logout_1 = __webpack_require__(/*! ./logout */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/logout.js\");\nObject.defineProperty(exports, \"logoutHandler\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(logout_1).default;\n    }\n}));\nvar backchannel_logout_1 = __webpack_require__(/*! ./backchannel-logout */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/backchannel-logout.js\");\nObject.defineProperty(exports, \"backchannelLogoutHandler\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(backchannel_logout_1).default;\n    }\n}));\nvar profile_1 = __webpack_require__(/*! ./profile */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/profile.js\");\nObject.defineProperty(exports, \"profileHandler\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(profile_1).default;\n    }\n}));\nvar auth_1 = __webpack_require__(/*! ./auth */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/auth.js\");\nObject.defineProperty(exports, \"handlerFactory\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth_1).default;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9oYW5kbGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLElBQUlBLGtCQUFrQixDQUFDLE1BQUcsS0FBSyxPQUFHLEVBQUVBLGVBQWUsSUFBSyxTQUFVQyxHQUFHO0lBQ2pFLE9BQU8sT0FBUUEsSUFBSUMsVUFBVSxHQUFJRCxNQUFNO1FBQUUsV0FBV0E7SUFBSTtBQUM1RDtBQUNBRSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsc0JBQXNCLEdBQUdBLHNCQUFzQixHQUFHQSxnQ0FBZ0MsR0FBR0EscUJBQXFCLEdBQUdBLG9CQUFvQixHQUFHQSx1QkFBdUIsR0FBRyxLQUFLO0FBQ25LLElBQUlRLGFBQWFDLG1CQUFPQSxDQUFDLDZGQUFZO0FBQ3JDWCxtREFBa0Q7SUFBRVksWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT2hCLGdCQUFnQmEsWUFBWUksT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ3pJLElBQUlDLFVBQVVKLG1CQUFPQSxDQUFDLHVGQUFTO0FBQy9CWCxnREFBK0M7SUFBRVksWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT2hCLGdCQUFnQmtCLFNBQVNELE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUNuSSxJQUFJRSxXQUFXTCxtQkFBT0EsQ0FBQyx5RkFBVTtBQUNqQ1gsaURBQWdEO0lBQUVZLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9oQixnQkFBZ0JtQixVQUFVRixPQUFPO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDckksSUFBSUcsdUJBQXVCTixtQkFBT0EsQ0FBQyxpSEFBc0I7QUFDekRYLDREQUEyRDtJQUFFWSxZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPaEIsZ0JBQWdCb0Isc0JBQXNCSCxPQUFPO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDNUosSUFBSUksWUFBWVAsbUJBQU9BLENBQUMsMkZBQVc7QUFDbkNYLGtEQUFpRDtJQUFFWSxZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPaEIsZ0JBQWdCcUIsV0FBV0osT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ3ZJLElBQUlLLFNBQVNSLG1CQUFPQSxDQUFDLHFGQUFRO0FBQzdCWCxrREFBaUQ7SUFBRVksWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT2hCLGdCQUFnQnNCLFFBQVFMLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQyxFQUNwSSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9oYW5kbGVycy9pbmRleC5qcz9iOGIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYW5kbGVyRmFjdG9yeSA9IGV4cG9ydHMucHJvZmlsZUhhbmRsZXIgPSBleHBvcnRzLmJhY2tjaGFubmVsTG9nb3V0SGFuZGxlciA9IGV4cG9ydHMubG9nb3V0SGFuZGxlciA9IGV4cG9ydHMubG9naW5IYW5kbGVyID0gZXhwb3J0cy5jYWxsYmFja0hhbmRsZXIgPSB2b2lkIDA7XG52YXIgY2FsbGJhY2tfMSA9IHJlcXVpcmUoXCIuL2NhbGxiYWNrXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY2FsbGJhY2tIYW5kbGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQoY2FsbGJhY2tfMSkuZGVmYXVsdDsgfSB9KTtcbnZhciBsb2dpbl8xID0gcmVxdWlyZShcIi4vbG9naW5cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJsb2dpbkhhbmRsZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9faW1wb3J0RGVmYXVsdChsb2dpbl8xKS5kZWZhdWx0OyB9IH0pO1xudmFyIGxvZ291dF8xID0gcmVxdWlyZShcIi4vbG9nb3V0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibG9nb3V0SGFuZGxlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGxvZ291dF8xKS5kZWZhdWx0OyB9IH0pO1xudmFyIGJhY2tjaGFubmVsX2xvZ291dF8xID0gcmVxdWlyZShcIi4vYmFja2NoYW5uZWwtbG9nb3V0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYmFja2NoYW5uZWxMb2dvdXRIYW5kbGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQoYmFja2NoYW5uZWxfbG9nb3V0XzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgcHJvZmlsZV8xID0gcmVxdWlyZShcIi4vcHJvZmlsZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInByb2ZpbGVIYW5kbGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQocHJvZmlsZV8xKS5kZWZhdWx0OyB9IH0pO1xudmFyIGF1dGhfMSA9IHJlcXVpcmUoXCIuL2F1dGhcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJoYW5kbGVyRmFjdG9yeVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGF1dGhfMSkuZGVmYXVsdDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJoYW5kbGVyRmFjdG9yeSIsInByb2ZpbGVIYW5kbGVyIiwiYmFja2NoYW5uZWxMb2dvdXRIYW5kbGVyIiwibG9nb3V0SGFuZGxlciIsImxvZ2luSGFuZGxlciIsImNhbGxiYWNrSGFuZGxlciIsImNhbGxiYWNrXzEiLCJyZXF1aXJlIiwiZW51bWVyYWJsZSIsImdldCIsImRlZmF1bHQiLCJsb2dpbl8xIiwibG9nb3V0XzEiLCJiYWNrY2hhbm5lbF9sb2dvdXRfMSIsInByb2ZpbGVfMSIsImF1dGhfMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/login.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/handlers/login.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst url_helpers_1 = tslib_1.__importDefault(__webpack_require__(/*! ../utils/url-helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/url-helpers.js\"));\nconst assert_1 = __webpack_require__(/*! ../utils/assert */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/assert.js\");\nconst errors_1 = __webpack_require__(/*! ../utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/errors.js\");\nconst http_1 = __webpack_require__(/*! ../http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js\");\nconst router_helpers_1 = __webpack_require__(/*! ./router-helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/router-helpers.js\");\n/**\n * @ignore\n */ function handleLoginFactory(handler, getConfig) {\n    const appRouteHandler = appRouteHandlerFactory(handler, getConfig);\n    const pageRouteHandler = pageRouteHandlerFactory(handler, getConfig);\n    return (0, router_helpers_1.getHandler)(appRouteHandler, pageRouteHandler);\n}\nexports[\"default\"] = handleLoginFactory;\n/**\n * @ignore\n */ const applyOptions = (req, options, dangerousReturnTo, config)=>{\n    var _a;\n    let opts;\n    let getLoginState;\n    // eslint-disable-next-line prefer-const\n    ({ getLoginState } = options), opts = tslib_1.__rest(options, [\n        \"getLoginState\"\n    ]);\n    if (dangerousReturnTo) {\n        const safeBaseUrl = new URL(((_a = options.authorizationParams) === null || _a === void 0 ? void 0 : _a.redirect_uri) || config.baseURL);\n        const returnTo = (0, url_helpers_1.default)(dangerousReturnTo, safeBaseUrl);\n        opts = Object.assign(Object.assign({}, opts), {\n            returnTo\n        });\n    }\n    if (config.organization) {\n        opts = Object.assign(Object.assign({}, opts), {\n            authorizationParams: Object.assign({\n                organization: config.organization\n            }, opts.authorizationParams)\n        });\n    }\n    if (getLoginState) {\n        opts.getLoginState = (_opts)=>getLoginState(req, _opts);\n    }\n    return opts;\n};\n/**\n * @ignore\n */ const appRouteHandlerFactory = (handler, getConfig)=>async (req, _ctx, options = {})=>{\n        try {\n            const auth0Req = new http_1.Auth0NextRequest(req);\n            const config = await getConfig(auth0Req);\n            const url = new URL(req.url);\n            const dangerousReturnTo = url.searchParams.get(\"returnTo\");\n            const auth0Res = new http_1.Auth0NextResponse(new NextResponse());\n            await handler(auth0Req, auth0Res, applyOptions(req, options, dangerousReturnTo, config));\n            return auth0Res.res;\n        } catch (e) {\n            throw new errors_1.LoginHandlerError(e);\n        }\n    };\n/**\n * @ignore\n */ const pageRouteHandlerFactory = (handler, getConfig)=>async (req, res, options = {})=>{\n        try {\n            const auth0Req = new http_1.Auth0NextApiRequest(req);\n            const config = await getConfig(auth0Req);\n            (0, assert_1.assertReqRes)(req, res);\n            const dangerousReturnTo = req.query.returnTo && Array.isArray(req.query.returnTo) ? req.query.returnTo[0] : req.query.returnTo;\n            return await handler(auth0Req, new http_1.Auth0NextApiResponse(res), applyOptions(req, options, dangerousReturnTo, config));\n        } catch (e) {\n            throw new errors_1.LoginHandlerError(e);\n        }\n    }; //# sourceMappingURL=login.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/login.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/logout.js":
/*!******************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/handlers/logout.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst assert_1 = __webpack_require__(/*! ../utils/assert */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/assert.js\");\nconst errors_1 = __webpack_require__(/*! ../utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/errors.js\");\nconst http_1 = __webpack_require__(/*! ../http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js\");\nconst router_helpers_1 = __webpack_require__(/*! ./router-helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/router-helpers.js\");\n/**\n * @ignore\n */ function handleLogoutFactory(handler) {\n    const appRouteHandler = appRouteHandlerFactory(handler);\n    const pageRouteHandler = pageRouteHandlerFactory(handler);\n    return (0, router_helpers_1.getHandler)(appRouteHandler, pageRouteHandler);\n}\nexports[\"default\"] = handleLogoutFactory;\nconst appRouteHandlerFactory = (handler)=>async (req, _ctx, options = {})=>{\n        try {\n            const auth0Res = new http_1.Auth0NextResponse(new NextResponse());\n            await handler(new http_1.Auth0NextRequest(req), auth0Res, options);\n            return auth0Res.res;\n        } catch (e) {\n            throw new errors_1.LogoutHandlerError(e);\n        }\n    };\nconst pageRouteHandlerFactory = (handler)=>async (req, res, options = {})=>{\n        try {\n            (0, assert_1.assertReqRes)(req, res);\n            return await handler(new http_1.Auth0NextApiRequest(req), new http_1.Auth0NextApiResponse(res), options);\n        } catch (e) {\n            throw new errors_1.LogoutHandlerError(e);\n        }\n    }; //# sourceMappingURL=logout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9oYW5kbGVycy9sb2dvdXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBRTdELE1BQU1DLFdBQVdDLG1CQUFPQSxDQUFDLDZGQUFpQjtBQUMxQyxNQUFNQyxXQUFXRCxtQkFBT0EsQ0FBQyw2RkFBaUI7QUFDMUMsTUFBTUUsU0FBU0YsbUJBQU9BLENBQUMsbUZBQVM7QUFDaEMsTUFBTUcsbUJBQW1CSCxtQkFBT0EsQ0FBQyx5R0FBa0I7QUFDbkQ7O0NBRUMsR0FDRCxTQUFTSSxvQkFBb0JDLE9BQU87SUFDaEMsTUFBTUMsa0JBQWtCQyx1QkFBdUJGO0lBQy9DLE1BQU1HLG1CQUFtQkMsd0JBQXdCSjtJQUNqRCxPQUFPLENBQUMsR0FBR0YsaUJBQWlCTyxVQUFVLEVBQUVKLGlCQUFpQkU7QUFDN0Q7QUFDQVgsa0JBQWUsR0FBR087QUFDbEIsTUFBTUcseUJBQXlCLENBQUNGLFVBQVksT0FBT08sS0FBS0MsTUFBTUMsVUFBVSxDQUFDLENBQUM7UUFDdEUsSUFBSTtZQUNBLE1BQU1DLFdBQVcsSUFBSWIsT0FBT2MsaUJBQWlCLENBQUM7WUFDOUMsTUFBTVgsUUFBUSxJQUFJSCxPQUFPZSxnQkFBZ0IsQ0FBQ0wsTUFBTUcsVUFBVUQ7WUFDMUQsT0FBT0MsU0FBU0csR0FBRztRQUN2QixFQUNBLE9BQU9DLEdBQUc7WUFDTixNQUFNLElBQUlsQixTQUFTbUIsa0JBQWtCLENBQUNEO1FBQzFDO0lBQ0o7QUFDQSxNQUFNViwwQkFBMEIsQ0FBQ0osVUFBWSxPQUFPTyxLQUFLTSxLQUFLSixVQUFVLENBQUMsQ0FBQztRQUN0RSxJQUFJO1lBQ0MsSUFBR2YsU0FBU3NCLFlBQVksRUFBRVQsS0FBS007WUFDaEMsT0FBTyxNQUFNYixRQUFRLElBQUlILE9BQU9vQixtQkFBbUIsQ0FBQ1YsTUFBTSxJQUFJVixPQUFPcUIsb0JBQW9CLENBQUNMLE1BQU1KO1FBQ3BHLEVBQ0EsT0FBT0ssR0FBRztZQUNOLE1BQU0sSUFBSWxCLFNBQVNtQixrQkFBa0IsQ0FBQ0Q7UUFDMUM7SUFDSixHQUNBLGtDQUFrQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2hhbmRsZXJzL2xvZ291dC5qcz8yNGNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgc2VydmVyXzEgPSByZXF1aXJlKFwibmV4dC9zZXJ2ZXJcIik7XG5jb25zdCBhc3NlcnRfMSA9IHJlcXVpcmUoXCIuLi91dGlscy9hc3NlcnRcIik7XG5jb25zdCBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuLi91dGlscy9lcnJvcnNcIik7XG5jb25zdCBodHRwXzEgPSByZXF1aXJlKFwiLi4vaHR0cFwiKTtcbmNvbnN0IHJvdXRlcl9oZWxwZXJzXzEgPSByZXF1aXJlKFwiLi9yb3V0ZXItaGVscGVyc1wiKTtcbi8qKlxuICogQGlnbm9yZVxuICovXG5mdW5jdGlvbiBoYW5kbGVMb2dvdXRGYWN0b3J5KGhhbmRsZXIpIHtcbiAgICBjb25zdCBhcHBSb3V0ZUhhbmRsZXIgPSBhcHBSb3V0ZUhhbmRsZXJGYWN0b3J5KGhhbmRsZXIpO1xuICAgIGNvbnN0IHBhZ2VSb3V0ZUhhbmRsZXIgPSBwYWdlUm91dGVIYW5kbGVyRmFjdG9yeShoYW5kbGVyKTtcbiAgICByZXR1cm4gKDAsIHJvdXRlcl9oZWxwZXJzXzEuZ2V0SGFuZGxlcikoYXBwUm91dGVIYW5kbGVyLCBwYWdlUm91dGVIYW5kbGVyKTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IGhhbmRsZUxvZ291dEZhY3Rvcnk7XG5jb25zdCBhcHBSb3V0ZUhhbmRsZXJGYWN0b3J5ID0gKGhhbmRsZXIpID0+IGFzeW5jIChyZXEsIF9jdHgsIG9wdGlvbnMgPSB7fSkgPT4ge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGF1dGgwUmVzID0gbmV3IGh0dHBfMS5BdXRoME5leHRSZXNwb25zZShuZXcgc2VydmVyXzEuTmV4dFJlc3BvbnNlKCkpO1xuICAgICAgICBhd2FpdCBoYW5kbGVyKG5ldyBodHRwXzEuQXV0aDBOZXh0UmVxdWVzdChyZXEpLCBhdXRoMFJlcywgb3B0aW9ucyk7XG4gICAgICAgIHJldHVybiBhdXRoMFJlcy5yZXM7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIHRocm93IG5ldyBlcnJvcnNfMS5Mb2dvdXRIYW5kbGVyRXJyb3IoZSk7XG4gICAgfVxufTtcbmNvbnN0IHBhZ2VSb3V0ZUhhbmRsZXJGYWN0b3J5ID0gKGhhbmRsZXIpID0+IGFzeW5jIChyZXEsIHJlcywgb3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgdHJ5IHtcbiAgICAgICAgKDAsIGFzc2VydF8xLmFzc2VydFJlcVJlcykocmVxLCByZXMpO1xuICAgICAgICByZXR1cm4gYXdhaXQgaGFuZGxlcihuZXcgaHR0cF8xLkF1dGgwTmV4dEFwaVJlcXVlc3QocmVxKSwgbmV3IGh0dHBfMS5BdXRoME5leHRBcGlSZXNwb25zZShyZXMpLCBvcHRpb25zKTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IGVycm9yc18xLkxvZ291dEhhbmRsZXJFcnJvcihlKTtcbiAgICB9XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9nb3V0LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImFzc2VydF8xIiwicmVxdWlyZSIsImVycm9yc18xIiwiaHR0cF8xIiwicm91dGVyX2hlbHBlcnNfMSIsImhhbmRsZUxvZ291dEZhY3RvcnkiLCJoYW5kbGVyIiwiYXBwUm91dGVIYW5kbGVyIiwiYXBwUm91dGVIYW5kbGVyRmFjdG9yeSIsInBhZ2VSb3V0ZUhhbmRsZXIiLCJwYWdlUm91dGVIYW5kbGVyRmFjdG9yeSIsImdldEhhbmRsZXIiLCJkZWZhdWx0IiwicmVxIiwiX2N0eCIsIm9wdGlvbnMiLCJhdXRoMFJlcyIsIkF1dGgwTmV4dFJlc3BvbnNlIiwiQXV0aDBOZXh0UmVxdWVzdCIsInJlcyIsImUiLCJMb2dvdXRIYW5kbGVyRXJyb3IiLCJhc3NlcnRSZXFSZXMiLCJBdXRoME5leHRBcGlSZXF1ZXN0IiwiQXV0aDBOZXh0QXBpUmVzcG9uc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/logout.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/profile.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/handlers/profile.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst session_1 = __webpack_require__(/*! ../session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js\");\nconst assert_1 = __webpack_require__(/*! ../utils/assert */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/assert.js\");\nconst errors_1 = __webpack_require__(/*! ../utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/errors.js\");\nconst router_helpers_1 = __webpack_require__(/*! ./router-helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/router-helpers.js\");\nconst http_1 = __webpack_require__(/*! ../http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js\");\n/**\n * @ignore\n */ function profileHandler(getConfig, getClient, getAccessToken, sessionCache) {\n    const appRouteHandler = appRouteHandlerFactory(getConfig, getClient, getAccessToken, sessionCache);\n    const pageRouteHandler = pageRouteHandlerFactory(getConfig, getClient, getAccessToken, sessionCache);\n    return (0, router_helpers_1.getHandler)(appRouteHandler, pageRouteHandler);\n}\nexports[\"default\"] = profileHandler;\n/**\n * @ignore\n */ const appRouteHandlerFactory = (getConfig, getClient, getAccessToken, sessionCache)=>async (req, _ctx, options = {})=>{\n        try {\n            const config = await getConfig(new http_1.Auth0NextRequest(req));\n            const client = await getClient(config);\n            const res = new NextResponse();\n            if (!await sessionCache.isAuthenticated(req, res)) {\n                const emptyRes = new NextResponse(null, {\n                    status: 204\n                });\n                res.headers.forEach((val, key)=>emptyRes.headers.set(key, val));\n                return emptyRes;\n            }\n            const session = await sessionCache.get(req, res);\n            res.headers.set(\"Cache-Control\", \"no-store\");\n            if (options.refetch) {\n                const { accessToken } = await getAccessToken(req, res);\n                if (!accessToken) {\n                    throw new Error(\"No access token available to refetch the profile\");\n                }\n                const userInfo = await client.userinfo(accessToken);\n                let newSession = (0, session_1.fromJson)(Object.assign(Object.assign({}, session), {\n                    user: Object.assign(Object.assign({}, session.user), userInfo)\n                }));\n                if (options.afterRefetch) {\n                    newSession = await options.afterRefetch(req, newSession);\n                }\n                await sessionCache.set(req, res, newSession);\n                return NextResponse.json(newSession.user, res);\n            }\n            return NextResponse.json(session.user, res);\n        } catch (e) {\n            throw new errors_1.ProfileHandlerError(e);\n        }\n    };\n/**\n * @ignore\n */ const pageRouteHandlerFactory = (getConfig, getClient, getAccessToken, sessionCache)=>async (req, res, options = {})=>{\n        try {\n            (0, assert_1.assertReqRes)(req, res);\n            const config = await getConfig(new http_1.Auth0NextApiRequest(req));\n            const client = await getClient(config);\n            if (!await sessionCache.isAuthenticated(req, res)) {\n                res.status(204).end();\n                return;\n            }\n            const session = await sessionCache.get(req, res);\n            res.setHeader(\"Cache-Control\", \"no-store\");\n            if (options.refetch) {\n                const { accessToken } = await getAccessToken(req, res);\n                if (!accessToken) {\n                    throw new Error(\"No access token available to refetch the profile\");\n                }\n                const userInfo = await client.userinfo(accessToken);\n                let newSession = (0, session_1.fromJson)(Object.assign(Object.assign({}, session), {\n                    user: Object.assign(Object.assign({}, session.user), userInfo)\n                }));\n                if (options.afterRefetch) {\n                    newSession = await options.afterRefetch(req, res, newSession);\n                }\n                await sessionCache.set(req, res, newSession);\n                res.json(newSession.user);\n                return;\n            }\n            res.json(session.user);\n        } catch (e) {\n            throw new errors_1.ProfileHandlerError(e);\n        }\n    }; //# sourceMappingURL=profile.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/profile.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/router-helpers.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/handlers/router-helpers.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.getHandler = void 0;\nconst req_helpers_1 = __webpack_require__(/*! ../utils/req-helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/req-helpers.js\");\nconst getHandler = (appRouteHandler, pageRouteHandler)=>(reqOrOptions, resOrCtx, options)=>{\n        if ((0, req_helpers_1.isRequest)(reqOrOptions)) {\n            return appRouteHandler(reqOrOptions, resOrCtx, options);\n        }\n        if (\"socket\" in reqOrOptions) {\n            return pageRouteHandler(reqOrOptions, resOrCtx, options);\n        }\n        return (req, resOrCtxInner)=>{\n            const opts = typeof reqOrOptions === \"function\" ? reqOrOptions(req) : reqOrOptions;\n            if ((0, req_helpers_1.isRequest)(req)) {\n                return appRouteHandler(req, resOrCtxInner, opts);\n            }\n            return pageRouteHandler(req, resOrCtxInner, opts);\n        };\n    };\nexports.getHandler = getHandler; //# sourceMappingURL=router-helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9oYW5kbGVycy9yb3V0ZXItaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsa0JBQWtCLEdBQUcsS0FBSztBQUMxQixNQUFNRyxnQkFBZ0JDLG1CQUFPQSxDQUFDLHVHQUFzQjtBQUNwRCxNQUFNRixhQUFhLENBQUNHLGlCQUFpQkMsbUJBQXFCLENBQUNDLGNBQWNDLFVBQVVDO1FBQy9FLElBQUksQ0FBQyxHQUFHTixjQUFjTyxTQUFTLEVBQUVILGVBQWU7WUFDNUMsT0FBT0YsZ0JBQWdCRSxjQUFjQyxVQUFVQztRQUNuRDtRQUNBLElBQUksWUFBWUYsY0FBYztZQUMxQixPQUFPRCxpQkFBaUJDLGNBQWNDLFVBQVVDO1FBQ3BEO1FBQ0EsT0FBTyxDQUFDRSxLQUFLQztZQUNULE1BQU1DLE9BQVEsT0FBT04saUJBQWlCLGFBQWFBLGFBQWFJLE9BQU9KO1lBQ3ZFLElBQUksQ0FBQyxHQUFHSixjQUFjTyxTQUFTLEVBQUVDLE1BQU07Z0JBQ25DLE9BQU9OLGdCQUFnQk0sS0FBS0MsZUFBZUM7WUFDL0M7WUFDQSxPQUFPUCxpQkFBaUJLLEtBQUtDLGVBQWVDO1FBQ2hEO0lBQ0o7QUFDQWIsa0JBQWtCLEdBQUdFLFlBQ3JCLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2hhbmRsZXJzL3JvdXRlci1oZWxwZXJzLmpzP2YxOTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmdldEhhbmRsZXIgPSB2b2lkIDA7XG5jb25zdCByZXFfaGVscGVyc18xID0gcmVxdWlyZShcIi4uL3V0aWxzL3JlcS1oZWxwZXJzXCIpO1xuY29uc3QgZ2V0SGFuZGxlciA9IChhcHBSb3V0ZUhhbmRsZXIsIHBhZ2VSb3V0ZUhhbmRsZXIpID0+IChyZXFPck9wdGlvbnMsIHJlc09yQ3R4LCBvcHRpb25zKSA9PiB7XG4gICAgaWYgKCgwLCByZXFfaGVscGVyc18xLmlzUmVxdWVzdCkocmVxT3JPcHRpb25zKSkge1xuICAgICAgICByZXR1cm4gYXBwUm91dGVIYW5kbGVyKHJlcU9yT3B0aW9ucywgcmVzT3JDdHgsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBpZiAoJ3NvY2tldCcgaW4gcmVxT3JPcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBwYWdlUm91dGVIYW5kbGVyKHJlcU9yT3B0aW9ucywgcmVzT3JDdHgsIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gKHJlcSwgcmVzT3JDdHhJbm5lcikgPT4ge1xuICAgICAgICBjb25zdCBvcHRzID0gKHR5cGVvZiByZXFPck9wdGlvbnMgPT09ICdmdW5jdGlvbicgPyByZXFPck9wdGlvbnMocmVxKSA6IHJlcU9yT3B0aW9ucyk7XG4gICAgICAgIGlmICgoMCwgcmVxX2hlbHBlcnNfMS5pc1JlcXVlc3QpKHJlcSkpIHtcbiAgICAgICAgICAgIHJldHVybiBhcHBSb3V0ZUhhbmRsZXIocmVxLCByZXNPckN0eElubmVyLCBvcHRzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGFnZVJvdXRlSGFuZGxlcihyZXEsIHJlc09yQ3R4SW5uZXIsIG9wdHMpO1xuICAgIH07XG59O1xuZXhwb3J0cy5nZXRIYW5kbGVyID0gZ2V0SGFuZGxlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlci1oZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImdldEhhbmRsZXIiLCJyZXFfaGVscGVyc18xIiwicmVxdWlyZSIsImFwcFJvdXRlSGFuZGxlciIsInBhZ2VSb3V0ZUhhbmRsZXIiLCJyZXFPck9wdGlvbnMiLCJyZXNPckN0eCIsIm9wdGlvbnMiLCJpc1JlcXVlc3QiLCJyZXEiLCJyZXNPckN0eElubmVyIiwib3B0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/router-helpers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/helpers/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.withPageAuthRequiredFactory = exports.withApiAuthRequiredFactory = void 0;\nvar with_api_auth_required_1 = __webpack_require__(/*! ./with-api-auth-required */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/with-api-auth-required.js\");\nObject.defineProperty(exports, \"withApiAuthRequiredFactory\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(with_api_auth_required_1).default;\n    }\n}));\nvar with_page_auth_required_1 = __webpack_require__(/*! ./with-page-auth-required */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/with-page-auth-required.js\");\nObject.defineProperty(exports, \"withPageAuthRequiredFactory\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(with_page_auth_required_1).default;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9oZWxwZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFLLFNBQVVDLEdBQUc7SUFDakUsT0FBTyxPQUFRQSxJQUFJQyxVQUFVLEdBQUlELE1BQU07UUFBRSxXQUFXQTtJQUFJO0FBQzVEO0FBQ0FFLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxtQ0FBbUMsR0FBR0Esa0NBQWtDLEdBQUcsS0FBSztBQUNoRixJQUFJSSwyQkFBMkJDLG1CQUFPQSxDQUFDLHdIQUEwQjtBQUNqRVAsOERBQTZEO0lBQUVRLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9aLGdCQUFnQlMsMEJBQTBCSSxPQUFPO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDbEssSUFBSUMsNEJBQTRCSixtQkFBT0EsQ0FBQywwSEFBMkI7QUFDbkVQLCtEQUE4RDtJQUFFUSxZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPWixnQkFBZ0JjLDJCQUEyQkQsT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDLEVBQ3BLLGlDQUFpQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2hlbHBlcnMvaW5kZXguanM/OTMwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMud2l0aFBhZ2VBdXRoUmVxdWlyZWRGYWN0b3J5ID0gZXhwb3J0cy53aXRoQXBpQXV0aFJlcXVpcmVkRmFjdG9yeSA9IHZvaWQgMDtcbnZhciB3aXRoX2FwaV9hdXRoX3JlcXVpcmVkXzEgPSByZXF1aXJlKFwiLi93aXRoLWFwaS1hdXRoLXJlcXVpcmVkXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwid2l0aEFwaUF1dGhSZXF1aXJlZEZhY3RvcnlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9faW1wb3J0RGVmYXVsdCh3aXRoX2FwaV9hdXRoX3JlcXVpcmVkXzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgd2l0aF9wYWdlX2F1dGhfcmVxdWlyZWRfMSA9IHJlcXVpcmUoXCIuL3dpdGgtcGFnZS1hdXRoLXJlcXVpcmVkXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwid2l0aFBhZ2VBdXRoUmVxdWlyZWRGYWN0b3J5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQod2l0aF9wYWdlX2F1dGhfcmVxdWlyZWRfMSkuZGVmYXVsdDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJfX2ltcG9ydERlZmF1bHQiLCJtb2QiLCJfX2VzTW9kdWxlIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJ3aXRoUGFnZUF1dGhSZXF1aXJlZEZhY3RvcnkiLCJ3aXRoQXBpQXV0aFJlcXVpcmVkRmFjdG9yeSIsIndpdGhfYXBpX2F1dGhfcmVxdWlyZWRfMSIsInJlcXVpcmUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZGVmYXVsdCIsIndpdGhfcGFnZV9hdXRoX3JlcXVpcmVkXzEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/with-api-auth-required.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/helpers/with-api-auth-required.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst session_1 = __webpack_require__(/*! ../session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js\");\nconst assert_1 = __webpack_require__(/*! ../utils/assert */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/assert.js\");\nconst req_helpers_1 = __webpack_require__(/*! ../utils/req-helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/req-helpers.js\");\n/**\n * @ignore\n */ function withApiAuthFactory(sessionCache) {\n    const pageRouteHandler = pageRouteHandlerFactory(sessionCache);\n    const appRouteHandler = appRouteHandlerFactory(sessionCache);\n    return (apiRoute)=>(req, resOrParams)=>{\n            if ((0, req_helpers_1.isRequest)(req)) {\n                return appRouteHandler(apiRoute)(req, resOrParams);\n            }\n            return pageRouteHandler(apiRoute)(req, resOrParams);\n        };\n}\nexports[\"default\"] = withApiAuthFactory;\n/**\n * @ignore\n */ const appRouteHandlerFactory = (sessionCache)=>(apiRoute)=>async (req, params)=>{\n            const res = new NextResponse();\n            const [session] = await (0, session_1.get)({\n                sessionCache,\n                req,\n                res\n            });\n            if (!session || !session.user) {\n                return NextResponse.json({\n                    error: \"not_authenticated\",\n                    description: \"The user does not have an active session or is not authenticated\"\n                }, {\n                    status: 401\n                });\n            }\n            const apiRes = await apiRoute(req, params);\n            const nextApiRes = apiRes instanceof NextResponse ? apiRes : new NextResponse(apiRes.body, apiRes);\n            for (const cookie of res.cookies.getAll()){\n                if (!nextApiRes.cookies.get(cookie.name)) {\n                    nextApiRes.cookies.set(cookie);\n                }\n            }\n            return nextApiRes;\n        };\n/**\n * @ignore\n */ const pageRouteHandlerFactory = (sessionCache)=>(apiRoute)=>async (req, res)=>{\n            (0, assert_1.assertReqRes)(req, res);\n            const session = await sessionCache.get(req, res);\n            if (!session || !session.user) {\n                res.status(401).json({\n                    error: \"not_authenticated\",\n                    description: \"The user does not have an active session or is not authenticated\"\n                });\n                return;\n            }\n            await apiRoute(req, res);\n        }; //# sourceMappingURL=with-api-auth-required.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9oZWxwZXJzL3dpdGgtYXBpLWF1dGgtcmVxdWlyZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBRTdELE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLHlGQUFZO0FBQ3RDLE1BQU1DLFdBQVdELG1CQUFPQSxDQUFDLDZGQUFpQjtBQUMxQyxNQUFNRSxnQkFBZ0JGLG1CQUFPQSxDQUFDLHVHQUFzQjtBQUNwRDs7Q0FFQyxHQUNELFNBQVNHLG1CQUFtQkMsWUFBWTtJQUNwQyxNQUFNQyxtQkFBbUJDLHdCQUF3QkY7SUFDakQsTUFBTUcsa0JBQWtCQyx1QkFBdUJKO0lBQy9DLE9BQU8sQ0FBQ0ssV0FBYSxDQUFDQyxLQUFLQztZQUN2QixJQUFJLENBQUMsR0FBR1QsY0FBY1UsU0FBUyxFQUFFRixNQUFNO2dCQUNuQyxPQUFPSCxnQkFBZ0JFLFVBQVVDLEtBQUtDO1lBQzFDO1lBQ0EsT0FBT04saUJBQWlCSSxVQUFVQyxLQUFLQztRQUMzQztBQUNKO0FBQ0FkLGtCQUFlLEdBQUdNO0FBQ2xCOztDQUVDLEdBQ0QsTUFBTUsseUJBQXlCLENBQUNKLGVBQWlCLENBQUNLLFdBQWEsT0FBT0MsS0FBS0k7WUFDdkUsTUFBTUMsTUFBTTtZQUNaLE1BQU0sQ0FBQ0MsUUFBUSxHQUFHLE1BQU0sQ0FBQyxHQUFHakIsVUFBVWtCLEdBQUcsRUFBRTtnQkFBRWI7Z0JBQWNNO2dCQUFLSztZQUFJO1lBQ3BFLElBQUksQ0FBQ0MsV0FBVyxDQUFDQSxRQUFRRSxJQUFJLEVBQUU7Z0JBQzNCLE9BQU9DLGFBQXNCQyxJQUFJLENBQUM7b0JBQUVDLE9BQU87b0JBQXFCQyxhQUFhO2dCQUFtRSxHQUFHO29CQUFFQyxRQUFRO2dCQUFJO1lBQ3JLO1lBQ0EsTUFBTUMsU0FBUyxNQUFNZixTQUFTQyxLQUFLSTtZQUNuQyxNQUFNVyxhQUFhRCxpQ0FBMENBLFNBQVMsaUJBQTBCQSxPQUFPRSxJQUFJLEVBQUVGO1lBQzdHLEtBQUssTUFBTUcsVUFBVVosSUFBSWEsT0FBTyxDQUFDQyxNQUFNLEdBQUk7Z0JBQ3ZDLElBQUksQ0FBQ0osV0FBV0csT0FBTyxDQUFDWCxHQUFHLENBQUNVLE9BQU9HLElBQUksR0FBRztvQkFDdENMLFdBQVdHLE9BQU8sQ0FBQ0csR0FBRyxDQUFDSjtnQkFDM0I7WUFDSjtZQUNBLE9BQU9GO1FBQ1g7QUFDQTs7Q0FFQyxHQUNELE1BQU1uQiwwQkFBMEIsQ0FBQ0YsZUFBaUIsQ0FBQ0ssV0FBYSxPQUFPQyxLQUFLSztZQUN2RSxJQUFHZCxTQUFTK0IsWUFBWSxFQUFFdEIsS0FBS0s7WUFDaEMsTUFBTUMsVUFBVSxNQUFNWixhQUFhYSxHQUFHLENBQUNQLEtBQUtLO1lBQzVDLElBQUksQ0FBQ0MsV0FBVyxDQUFDQSxRQUFRRSxJQUFJLEVBQUU7Z0JBQzNCSCxJQUFJUSxNQUFNLENBQUMsS0FBS0gsSUFBSSxDQUFDO29CQUNqQkMsT0FBTztvQkFDUEMsYUFBYTtnQkFDakI7Z0JBQ0E7WUFDSjtZQUNBLE1BQU1iLFNBQVNDLEtBQUtLO1FBQ3hCLEdBQ0Esa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3QvaGVscGVycy93aXRoLWFwaS1hdXRoLXJlcXVpcmVkLmpzPzUzYjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBzZXJ2ZXJfMSA9IHJlcXVpcmUoXCJuZXh0L3NlcnZlclwiKTtcbmNvbnN0IHNlc3Npb25fMSA9IHJlcXVpcmUoXCIuLi9zZXNzaW9uXCIpO1xuY29uc3QgYXNzZXJ0XzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvYXNzZXJ0XCIpO1xuY29uc3QgcmVxX2hlbHBlcnNfMSA9IHJlcXVpcmUoXCIuLi91dGlscy9yZXEtaGVscGVyc1wiKTtcbi8qKlxuICogQGlnbm9yZVxuICovXG5mdW5jdGlvbiB3aXRoQXBpQXV0aEZhY3Rvcnkoc2Vzc2lvbkNhY2hlKSB7XG4gICAgY29uc3QgcGFnZVJvdXRlSGFuZGxlciA9IHBhZ2VSb3V0ZUhhbmRsZXJGYWN0b3J5KHNlc3Npb25DYWNoZSk7XG4gICAgY29uc3QgYXBwUm91dGVIYW5kbGVyID0gYXBwUm91dGVIYW5kbGVyRmFjdG9yeShzZXNzaW9uQ2FjaGUpO1xuICAgIHJldHVybiAoYXBpUm91dGUpID0+IChyZXEsIHJlc09yUGFyYW1zKSA9PiB7XG4gICAgICAgIGlmICgoMCwgcmVxX2hlbHBlcnNfMS5pc1JlcXVlc3QpKHJlcSkpIHtcbiAgICAgICAgICAgIHJldHVybiBhcHBSb3V0ZUhhbmRsZXIoYXBpUm91dGUpKHJlcSwgcmVzT3JQYXJhbXMpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYWdlUm91dGVIYW5kbGVyKGFwaVJvdXRlKShyZXEsIHJlc09yUGFyYW1zKTtcbiAgICB9O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gd2l0aEFwaUF1dGhGYWN0b3J5O1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmNvbnN0IGFwcFJvdXRlSGFuZGxlckZhY3RvcnkgPSAoc2Vzc2lvbkNhY2hlKSA9PiAoYXBpUm91dGUpID0+IGFzeW5jIChyZXEsIHBhcmFtcykgPT4ge1xuICAgIGNvbnN0IHJlcyA9IG5ldyBzZXJ2ZXJfMS5OZXh0UmVzcG9uc2UoKTtcbiAgICBjb25zdCBbc2Vzc2lvbl0gPSBhd2FpdCAoMCwgc2Vzc2lvbl8xLmdldCkoeyBzZXNzaW9uQ2FjaGUsIHJlcSwgcmVzIH0pO1xuICAgIGlmICghc2Vzc2lvbiB8fCAhc2Vzc2lvbi51c2VyKSB7XG4gICAgICAgIHJldHVybiBzZXJ2ZXJfMS5OZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnbm90X2F1dGhlbnRpY2F0ZWQnLCBkZXNjcmlwdGlvbjogJ1RoZSB1c2VyIGRvZXMgbm90IGhhdmUgYW4gYWN0aXZlIHNlc3Npb24gb3IgaXMgbm90IGF1dGhlbnRpY2F0ZWQnIH0sIHsgc3RhdHVzOiA0MDEgfSk7XG4gICAgfVxuICAgIGNvbnN0IGFwaVJlcyA9IGF3YWl0IGFwaVJvdXRlKHJlcSwgcGFyYW1zKTtcbiAgICBjb25zdCBuZXh0QXBpUmVzID0gYXBpUmVzIGluc3RhbmNlb2Ygc2VydmVyXzEuTmV4dFJlc3BvbnNlID8gYXBpUmVzIDogbmV3IHNlcnZlcl8xLk5leHRSZXNwb25zZShhcGlSZXMuYm9keSwgYXBpUmVzKTtcbiAgICBmb3IgKGNvbnN0IGNvb2tpZSBvZiByZXMuY29va2llcy5nZXRBbGwoKSkge1xuICAgICAgICBpZiAoIW5leHRBcGlSZXMuY29va2llcy5nZXQoY29va2llLm5hbWUpKSB7XG4gICAgICAgICAgICBuZXh0QXBpUmVzLmNvb2tpZXMuc2V0KGNvb2tpZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5leHRBcGlSZXM7XG59O1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmNvbnN0IHBhZ2VSb3V0ZUhhbmRsZXJGYWN0b3J5ID0gKHNlc3Npb25DYWNoZSkgPT4gKGFwaVJvdXRlKSA9PiBhc3luYyAocmVxLCByZXMpID0+IHtcbiAgICAoMCwgYXNzZXJ0XzEuYXNzZXJ0UmVxUmVzKShyZXEsIHJlcyk7XG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IHNlc3Npb25DYWNoZS5nZXQocmVxLCByZXMpO1xuICAgIGlmICghc2Vzc2lvbiB8fCAhc2Vzc2lvbi51c2VyKSB7XG4gICAgICAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcbiAgICAgICAgICAgIGVycm9yOiAnbm90X2F1dGhlbnRpY2F0ZWQnLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdUaGUgdXNlciBkb2VzIG5vdCBoYXZlIGFuIGFjdGl2ZSBzZXNzaW9uIG9yIGlzIG5vdCBhdXRoZW50aWNhdGVkJ1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBhd2FpdCBhcGlSb3V0ZShyZXEsIHJlcyk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2l0aC1hcGktYXV0aC1yZXF1aXJlZC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzZXNzaW9uXzEiLCJyZXF1aXJlIiwiYXNzZXJ0XzEiLCJyZXFfaGVscGVyc18xIiwid2l0aEFwaUF1dGhGYWN0b3J5Iiwic2Vzc2lvbkNhY2hlIiwicGFnZVJvdXRlSGFuZGxlciIsInBhZ2VSb3V0ZUhhbmRsZXJGYWN0b3J5IiwiYXBwUm91dGVIYW5kbGVyIiwiYXBwUm91dGVIYW5kbGVyRmFjdG9yeSIsImFwaVJvdXRlIiwicmVxIiwicmVzT3JQYXJhbXMiLCJpc1JlcXVlc3QiLCJkZWZhdWx0IiwicGFyYW1zIiwicmVzIiwic2Vzc2lvbiIsImdldCIsInVzZXIiLCJzZXJ2ZXJfMSIsImpzb24iLCJlcnJvciIsImRlc2NyaXB0aW9uIiwic3RhdHVzIiwiYXBpUmVzIiwibmV4dEFwaVJlcyIsImJvZHkiLCJjb29raWUiLCJjb29raWVzIiwiZ2V0QWxsIiwibmFtZSIsInNldCIsImFzc2VydFJlcVJlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/with-api-auth-required.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/with-middleware-auth-required.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/helpers/with-middleware-auth-required.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst http_1 = __webpack_require__(/*! ../http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js\");\n/**\n * @ignore\n */ function withMiddlewareAuthRequiredFactory(getConfig, sessionCache) {\n    return function withMiddlewareAuthRequired(opts) {\n        return async function wrappedMiddleware(...args) {\n            const [req] = args;\n            const { routes: { login, callback } } = await getConfig(new http_1.Auth0NextRequest(req));\n            let middleware;\n            const { pathname, origin, search } = req.nextUrl;\n            let returnTo = `${pathname}${search}`;\n            if (typeof opts === \"function\") {\n                middleware = opts;\n            } else if (opts) {\n                middleware = opts.middleware;\n                returnTo = (typeof opts.returnTo === \"function\" ? await opts.returnTo(req) : opts.returnTo) || returnTo;\n            }\n            const ignorePaths = [\n                login,\n                callback,\n                \"/_next\",\n                \"/favicon.ico\"\n            ];\n            if (ignorePaths.some((p)=>pathname.startsWith(p))) {\n                return;\n            }\n            const authRes = NextResponse.next();\n            const session = await sessionCache.get(req, authRes);\n            if (!(session === null || session === void 0 ? void 0 : session.user)) {\n                if (pathname.startsWith(\"/api\")) {\n                    return NextResponse.json({\n                        error: \"not_authenticated\",\n                        description: \"The user does not have an active session or is not authenticated\"\n                    }, {\n                        status: 401\n                    });\n                }\n                return NextResponse.redirect(new URL(`${login}?returnTo=${encodeURIComponent(returnTo)}`, origin));\n            }\n            const res = await (middleware && middleware(...args));\n            if (res) {\n                const nextRes = new NextResponse(res.body, res);\n                const cookies = authRes.cookies.getAll();\n                if (\"cookies\" in res) {\n                    for (const cookie of res.cookies.getAll()){\n                        nextRes.cookies.set(cookie);\n                    }\n                }\n                for (const cookie of cookies){\n                    if (!nextRes.cookies.get(cookie.name)) {\n                        nextRes.cookies.set(cookie);\n                    }\n                }\n                return nextRes;\n            } else {\n                return authRes;\n            }\n        };\n    };\n}\nexports[\"default\"] = withMiddlewareAuthRequiredFactory; //# sourceMappingURL=with-middleware-auth-required.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9oZWxwZXJzL3dpdGgtbWlkZGxld2FyZS1hdXRoLXJlcXVpcmVkLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUU3RCxNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQyxtRkFBUztBQUNoQzs7Q0FFQyxHQUNELFNBQVNDLGtDQUFrQ0MsU0FBUyxFQUFFQyxZQUFZO0lBQzlELE9BQU8sU0FBU0MsMkJBQTJCQyxJQUFJO1FBQzNDLE9BQU8sZUFBZUMsa0JBQWtCLEdBQUdDLElBQUk7WUFDM0MsTUFBTSxDQUFDQyxJQUFJLEdBQUdEO1lBQ2QsTUFBTSxFQUFFRSxRQUFRLEVBQUVDLEtBQUssRUFBRUMsUUFBUSxFQUFFLEVBQUUsR0FBRyxNQUFNVCxVQUFVLElBQUlILE9BQU9hLGdCQUFnQixDQUFDSjtZQUNwRixJQUFJSztZQUNKLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHUixJQUFJUyxPQUFPO1lBQ2hELElBQUlDLFdBQVcsQ0FBQyxFQUFFSixTQUFTLEVBQUVFLE9BQU8sQ0FBQztZQUNyQyxJQUFJLE9BQU9YLFNBQVMsWUFBWTtnQkFDNUJRLGFBQWFSO1lBQ2pCLE9BQ0ssSUFBSUEsTUFBTTtnQkFDWFEsYUFBYVIsS0FBS1EsVUFBVTtnQkFDNUJLLFdBQVcsQ0FBQyxPQUFPYixLQUFLYSxRQUFRLEtBQUssYUFBYSxNQUFNYixLQUFLYSxRQUFRLENBQUNWLE9BQU9ILEtBQUthLFFBQVEsS0FBS0E7WUFDbkc7WUFDQSxNQUFNQyxjQUFjO2dCQUFDVDtnQkFBT0M7Z0JBQVU7Z0JBQVU7YUFBZTtZQUMvRCxJQUFJUSxZQUFZQyxJQUFJLENBQUMsQ0FBQ0MsSUFBTVAsU0FBU1EsVUFBVSxDQUFDRCxLQUFLO2dCQUNqRDtZQUNKO1lBQ0EsTUFBTUUsVUFBVUMsYUFBc0JDLElBQUk7WUFDMUMsTUFBTUMsVUFBVSxNQUFNdkIsYUFBYXdCLEdBQUcsQ0FBQ25CLEtBQUtlO1lBQzVDLElBQUksQ0FBRUcsQ0FBQUEsWUFBWSxRQUFRQSxZQUFZLEtBQUssSUFBSSxLQUFLLElBQUlBLFFBQVFFLElBQUksR0FBRztnQkFDbkUsSUFBSWQsU0FBU1EsVUFBVSxDQUFDLFNBQVM7b0JBQzdCLE9BQU9FLGFBQXNCSyxJQUFJLENBQUM7d0JBQzlCQyxPQUFPO3dCQUNQQyxhQUFhO29CQUNqQixHQUFHO3dCQUFFQyxRQUFRO29CQUFJO2dCQUNyQjtnQkFDQSxPQUFPUixhQUFzQlMsUUFBUSxDQUFDLElBQUlDLElBQUksQ0FBQyxFQUFFeEIsTUFBTSxVQUFVLEVBQUV5QixtQkFBbUJqQixVQUFVLENBQUMsRUFBRUg7WUFDdkc7WUFDQSxNQUFNcUIsTUFBTSxNQUFPdkIsQ0FBQUEsY0FBY0EsY0FBY04sS0FBSTtZQUNuRCxJQUFJNkIsS0FBSztnQkFDTCxNQUFNQyxVQUFVLGlCQUEwQkQsSUFBSUUsSUFBSSxFQUFFRjtnQkFDcEQsTUFBTUcsVUFBVWhCLFFBQVFnQixPQUFPLENBQUNDLE1BQU07Z0JBQ3RDLElBQUksYUFBYUosS0FBSztvQkFDbEIsS0FBSyxNQUFNSyxVQUFVTCxJQUFJRyxPQUFPLENBQUNDLE1BQU0sR0FBSTt3QkFDdkNILFFBQVFFLE9BQU8sQ0FBQ0csR0FBRyxDQUFDRDtvQkFDeEI7Z0JBQ0o7Z0JBQ0EsS0FBSyxNQUFNQSxVQUFVRixRQUFTO29CQUMxQixJQUFJLENBQUNGLFFBQVFFLE9BQU8sQ0FBQ1osR0FBRyxDQUFDYyxPQUFPRSxJQUFJLEdBQUc7d0JBQ25DTixRQUFRRSxPQUFPLENBQUNHLEdBQUcsQ0FBQ0Q7b0JBQ3hCO2dCQUNKO2dCQUNBLE9BQU9KO1lBQ1gsT0FDSztnQkFDRCxPQUFPZDtZQUNYO1FBQ0o7SUFDSjtBQUNKO0FBQ0ExQixrQkFBZSxHQUFHSSxtQ0FDbEIseURBQXlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3QvaGVscGVycy93aXRoLW1pZGRsZXdhcmUtYXV0aC1yZXF1aXJlZC5qcz9hMWI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgc2VydmVyXzEgPSByZXF1aXJlKFwibmV4dC9zZXJ2ZXJcIik7XG5jb25zdCBodHRwXzEgPSByZXF1aXJlKFwiLi4vaHR0cFwiKTtcbi8qKlxuICogQGlnbm9yZVxuICovXG5mdW5jdGlvbiB3aXRoTWlkZGxld2FyZUF1dGhSZXF1aXJlZEZhY3RvcnkoZ2V0Q29uZmlnLCBzZXNzaW9uQ2FjaGUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gd2l0aE1pZGRsZXdhcmVBdXRoUmVxdWlyZWQob3B0cykge1xuICAgICAgICByZXR1cm4gYXN5bmMgZnVuY3Rpb24gd3JhcHBlZE1pZGRsZXdhcmUoLi4uYXJncykge1xuICAgICAgICAgICAgY29uc3QgW3JlcV0gPSBhcmdzO1xuICAgICAgICAgICAgY29uc3QgeyByb3V0ZXM6IHsgbG9naW4sIGNhbGxiYWNrIH0gfSA9IGF3YWl0IGdldENvbmZpZyhuZXcgaHR0cF8xLkF1dGgwTmV4dFJlcXVlc3QocmVxKSk7XG4gICAgICAgICAgICBsZXQgbWlkZGxld2FyZTtcbiAgICAgICAgICAgIGNvbnN0IHsgcGF0aG5hbWUsIG9yaWdpbiwgc2VhcmNoIH0gPSByZXEubmV4dFVybDtcbiAgICAgICAgICAgIGxldCByZXR1cm5UbyA9IGAke3BhdGhuYW1lfSR7c2VhcmNofWA7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdHMgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICBtaWRkbGV3YXJlID0gb3B0cztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKG9wdHMpIHtcbiAgICAgICAgICAgICAgICBtaWRkbGV3YXJlID0gb3B0cy5taWRkbGV3YXJlO1xuICAgICAgICAgICAgICAgIHJldHVyblRvID0gKHR5cGVvZiBvcHRzLnJldHVyblRvID09PSAnZnVuY3Rpb24nID8gYXdhaXQgb3B0cy5yZXR1cm5UbyhyZXEpIDogb3B0cy5yZXR1cm5UbykgfHwgcmV0dXJuVG87XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBpZ25vcmVQYXRocyA9IFtsb2dpbiwgY2FsbGJhY2ssICcvX25leHQnLCAnL2Zhdmljb24uaWNvJ107XG4gICAgICAgICAgICBpZiAoaWdub3JlUGF0aHMuc29tZSgocCkgPT4gcGF0aG5hbWUuc3RhcnRzV2l0aChwKSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBhdXRoUmVzID0gc2VydmVyXzEuTmV4dFJlc3BvbnNlLm5leHQoKTtcbiAgICAgICAgICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBzZXNzaW9uQ2FjaGUuZ2V0KHJlcSwgYXV0aFJlcyk7XG4gICAgICAgICAgICBpZiAoIShzZXNzaW9uID09PSBudWxsIHx8IHNlc3Npb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNlc3Npb24udXNlcikpIHtcbiAgICAgICAgICAgICAgICBpZiAocGF0aG5hbWUuc3RhcnRzV2l0aCgnL2FwaScpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBzZXJ2ZXJfMS5OZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogJ25vdF9hdXRoZW50aWNhdGVkJyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIHVzZXIgZG9lcyBub3QgaGF2ZSBhbiBhY3RpdmUgc2Vzc2lvbiBvciBpcyBub3QgYXV0aGVudGljYXRlZCdcbiAgICAgICAgICAgICAgICAgICAgfSwgeyBzdGF0dXM6IDQwMSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlcnZlcl8xLk5leHRSZXNwb25zZS5yZWRpcmVjdChuZXcgVVJMKGAke2xvZ2lufT9yZXR1cm5Ubz0ke2VuY29kZVVSSUNvbXBvbmVudChyZXR1cm5Ubyl9YCwgb3JpZ2luKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCByZXMgPSBhd2FpdCAobWlkZGxld2FyZSAmJiBtaWRkbGV3YXJlKC4uLmFyZ3MpKTtcbiAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXh0UmVzID0gbmV3IHNlcnZlcl8xLk5leHRSZXNwb25zZShyZXMuYm9keSwgcmVzKTtcbiAgICAgICAgICAgICAgICBjb25zdCBjb29raWVzID0gYXV0aFJlcy5jb29raWVzLmdldEFsbCgpO1xuICAgICAgICAgICAgICAgIGlmICgnY29va2llcycgaW4gcmVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY29va2llIG9mIHJlcy5jb29raWVzLmdldEFsbCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0UmVzLmNvb2tpZXMuc2V0KGNvb2tpZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBjb29raWUgb2YgY29va2llcykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW5leHRSZXMuY29va2llcy5nZXQoY29va2llLm5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXh0UmVzLmNvb2tpZXMuc2V0KGNvb2tpZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5leHRSZXM7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXV0aFJlcztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gd2l0aE1pZGRsZXdhcmVBdXRoUmVxdWlyZWRGYWN0b3J5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2l0aC1taWRkbGV3YXJlLWF1dGgtcmVxdWlyZWQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaHR0cF8xIiwicmVxdWlyZSIsIndpdGhNaWRkbGV3YXJlQXV0aFJlcXVpcmVkRmFjdG9yeSIsImdldENvbmZpZyIsInNlc3Npb25DYWNoZSIsIndpdGhNaWRkbGV3YXJlQXV0aFJlcXVpcmVkIiwib3B0cyIsIndyYXBwZWRNaWRkbGV3YXJlIiwiYXJncyIsInJlcSIsInJvdXRlcyIsImxvZ2luIiwiY2FsbGJhY2siLCJBdXRoME5leHRSZXF1ZXN0IiwibWlkZGxld2FyZSIsInBhdGhuYW1lIiwib3JpZ2luIiwic2VhcmNoIiwibmV4dFVybCIsInJldHVyblRvIiwiaWdub3JlUGF0aHMiLCJzb21lIiwicCIsInN0YXJ0c1dpdGgiLCJhdXRoUmVzIiwic2VydmVyXzEiLCJuZXh0Iiwic2Vzc2lvbiIsImdldCIsInVzZXIiLCJqc29uIiwiZXJyb3IiLCJkZXNjcmlwdGlvbiIsInN0YXR1cyIsInJlZGlyZWN0IiwiVVJMIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicmVzIiwibmV4dFJlcyIsImJvZHkiLCJjb29raWVzIiwiZ2V0QWxsIiwiY29va2llIiwic2V0IiwibmFtZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/with-middleware-auth-required.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/with-page-auth-required.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/helpers/with-page-auth-required.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst session_1 = __webpack_require__(/*! ../session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js\");\nconst assert_1 = __webpack_require__(/*! ../utils/assert */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/assert.js\");\nconst http_1 = __webpack_require__(/*! ../http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js\");\nconst http_2 = __webpack_require__(/*! ../auth0-session/http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js\");\n/**\n * @ignore\n */ function withPageAuthRequiredFactory(getConfig, sessionCache) {\n    const appRouteHandler = appRouteHandlerFactory(getConfig, sessionCache);\n    const pageRouteHandler = pageRouteHandlerFactory(getConfig, sessionCache);\n    return (fnOrOpts, opts)=>{\n        if (typeof fnOrOpts === \"function\") {\n            return appRouteHandler(fnOrOpts, opts);\n        }\n        return pageRouteHandler(fnOrOpts);\n    };\n}\nexports[\"default\"] = withPageAuthRequiredFactory;\n/**\n * @ignore\n */ const appRouteHandlerFactory = (getConfig, sessionCache)=>(handler, opts = {})=>async (params)=>{\n            const { routes: { login: loginUrl } } = await getConfig(new http_1.Auth0NextRequestCookies());\n            const [session] = await (0, session_1.get)({\n                sessionCache\n            });\n            if (!(session === null || session === void 0 ? void 0 : session.user)) {\n                const returnTo = typeof opts.returnTo === \"function\" ? await opts.returnTo(params) : opts.returnTo;\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\n                const { redirect } = __webpack_require__(/*! next/navigation */ \"(middleware)/./node_modules/next/navigation.js\");\n                redirect(`${loginUrl}${opts.returnTo ? `?returnTo=${returnTo}` : \"\"}`);\n            }\n            return handler(params);\n        };\n/**\n * @ignore\n */ const pageRouteHandlerFactory = (getConfig, sessionCache)=>({ getServerSideProps, returnTo } = {})=>async (ctx)=>{\n            (0, assert_1.assertCtx)(ctx);\n            const { routes: { login: loginUrl } } = await getConfig(new http_2.NodeRequest(ctx.req));\n            const session = await sessionCache.get(ctx.req, ctx.res);\n            if (!(session === null || session === void 0 ? void 0 : session.user)) {\n                return {\n                    redirect: {\n                        destination: `${loginUrl}?returnTo=${encodeURIComponent(returnTo || ctx.resolvedUrl)}`,\n                        permanent: false\n                    }\n                };\n            }\n            let ret = {\n                props: {}\n            };\n            if (getServerSideProps) {\n                ret = await getServerSideProps(ctx);\n            }\n            if (ret.props instanceof Promise) {\n                return Object.assign(Object.assign({}, ret), {\n                    props: ret.props.then((props)=>Object.assign({\n                            user: session.user\n                        }, props))\n                });\n            }\n            return Object.assign(Object.assign({}, ret), {\n                props: Object.assign({\n                    user: session.user\n                }, ret.props)\n            });\n        }; //# sourceMappingURL=with-page-auth-required.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9oZWxwZXJzL3dpdGgtcGFnZS1hdXRoLXJlcXVpcmVkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLHlGQUFZO0FBQ3RDLE1BQU1DLFdBQVdELG1CQUFPQSxDQUFDLDZGQUFpQjtBQUMxQyxNQUFNRSxTQUFTRixtQkFBT0EsQ0FBQyxtRkFBUztBQUNoQyxNQUFNRyxTQUFTSCxtQkFBT0EsQ0FBQywrR0FBdUI7QUFDOUM7O0NBRUMsR0FDRCxTQUFTSSw0QkFBNEJDLFNBQVMsRUFBRUMsWUFBWTtJQUN4RCxNQUFNQyxrQkFBa0JDLHVCQUF1QkgsV0FBV0M7SUFDMUQsTUFBTUcsbUJBQW1CQyx3QkFBd0JMLFdBQVdDO0lBQzVELE9BQVEsQ0FBQ0ssVUFBVUM7UUFDZixJQUFJLE9BQU9ELGFBQWEsWUFBWTtZQUNoQyxPQUFPSixnQkFBZ0JJLFVBQVVDO1FBQ3JDO1FBQ0EsT0FBT0gsaUJBQWlCRTtJQUM1QjtBQUNKO0FBQ0FkLGtCQUFlLEdBQUdPO0FBQ2xCOztDQUVDLEdBQ0QsTUFBTUkseUJBQXlCLENBQUNILFdBQVdDLGVBQWlCLENBQUNRLFNBQVNGLE9BQU8sQ0FBQyxDQUFDLEdBQUssT0FBT0c7WUFDdkYsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLE9BQU9DLFFBQVEsRUFBRSxFQUFFLEdBQUcsTUFBTWIsVUFBVSxJQUFJSCxPQUFPaUIsdUJBQXVCO1lBQzFGLE1BQU0sQ0FBQ0MsUUFBUSxHQUFHLE1BQU0sQ0FBQyxHQUFHckIsVUFBVXNCLEdBQUcsRUFBRTtnQkFBRWY7WUFBYTtZQUMxRCxJQUFJLENBQUVjLENBQUFBLFlBQVksUUFBUUEsWUFBWSxLQUFLLElBQUksS0FBSyxJQUFJQSxRQUFRRSxJQUFJLEdBQUc7Z0JBQ25FLE1BQU1DLFdBQVcsT0FBT1gsS0FBS1csUUFBUSxLQUFLLGFBQWEsTUFBTVgsS0FBS1csUUFBUSxDQUFDUixVQUFVSCxLQUFLVyxRQUFRO2dCQUNsRyw4REFBOEQ7Z0JBQzlELE1BQU0sRUFBRUMsUUFBUSxFQUFFLEdBQUd4QixtQkFBT0EsQ0FBQztnQkFDN0J3QixTQUFTLENBQUMsRUFBRU4sU0FBUyxFQUFFTixLQUFLVyxRQUFRLEdBQUcsQ0FBQyxVQUFVLEVBQUVBLFNBQVMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztZQUN6RTtZQUNBLE9BQU9ULFFBQVFDO1FBQ25CO0FBQ0E7O0NBRUMsR0FDRCxNQUFNTCwwQkFBMEIsQ0FBQ0wsV0FBV0MsZUFBaUIsQ0FBQyxFQUFFbUIsa0JBQWtCLEVBQUVGLFFBQVEsRUFBRSxHQUFHLENBQUMsQ0FBQyxHQUFLLE9BQU9HO1lBQzFHLElBQUd6QixTQUFTMEIsU0FBUyxFQUFFRDtZQUN4QixNQUFNLEVBQUVWLFFBQVEsRUFBRUMsT0FBT0MsUUFBUSxFQUFFLEVBQUUsR0FBRyxNQUFNYixVQUFVLElBQUlGLE9BQU95QixXQUFXLENBQUNGLElBQUlHLEdBQUc7WUFDdEYsTUFBTVQsVUFBVSxNQUFNZCxhQUFhZSxHQUFHLENBQUNLLElBQUlHLEdBQUcsRUFBRUgsSUFBSUksR0FBRztZQUN2RCxJQUFJLENBQUVWLENBQUFBLFlBQVksUUFBUUEsWUFBWSxLQUFLLElBQUksS0FBSyxJQUFJQSxRQUFRRSxJQUFJLEdBQUc7Z0JBQ25FLE9BQU87b0JBQ0hFLFVBQVU7d0JBQ05PLGFBQWEsQ0FBQyxFQUFFYixTQUFTLFVBQVUsRUFBRWMsbUJBQW1CVCxZQUFZRyxJQUFJTyxXQUFXLEVBQUUsQ0FBQzt3QkFDdEZDLFdBQVc7b0JBQ2Y7Z0JBQ0o7WUFDSjtZQUNBLElBQUlDLE1BQU07Z0JBQUVDLE9BQU8sQ0FBQztZQUFFO1lBQ3RCLElBQUlYLG9CQUFvQjtnQkFDcEJVLE1BQU0sTUFBTVYsbUJBQW1CQztZQUNuQztZQUNBLElBQUlTLElBQUlDLEtBQUssWUFBWUMsU0FBUztnQkFDOUIsT0FBTzFDLE9BQU8yQyxNQUFNLENBQUMzQyxPQUFPMkMsTUFBTSxDQUFDLENBQUMsR0FBR0gsTUFBTTtvQkFBRUMsT0FBT0QsSUFBSUMsS0FBSyxDQUFDRyxJQUFJLENBQUMsQ0FBQ0gsUUFBV3pDLE9BQU8yQyxNQUFNLENBQUM7NEJBQUVoQixNQUFNRixRQUFRRSxJQUFJO3dCQUFDLEdBQUdjO2dCQUFTO1lBQ3BJO1lBQ0EsT0FBT3pDLE9BQU8yQyxNQUFNLENBQUMzQyxPQUFPMkMsTUFBTSxDQUFDLENBQUMsR0FBR0gsTUFBTTtnQkFBRUMsT0FBT3pDLE9BQU8yQyxNQUFNLENBQUM7b0JBQUVoQixNQUFNRixRQUFRRSxJQUFJO2dCQUFDLEdBQUdhLElBQUlDLEtBQUs7WUFBRTtRQUMzRyxHQUNBLG1EQUFtRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2hlbHBlcnMvd2l0aC1wYWdlLWF1dGgtcmVxdWlyZWQuanM/ZjBkNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHNlc3Npb25fMSA9IHJlcXVpcmUoXCIuLi9zZXNzaW9uXCIpO1xuY29uc3QgYXNzZXJ0XzEgPSByZXF1aXJlKFwiLi4vdXRpbHMvYXNzZXJ0XCIpO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcIi4uL2h0dHBcIik7XG5jb25zdCBodHRwXzIgPSByZXF1aXJlKFwiLi4vYXV0aDAtc2Vzc2lvbi9odHRwXCIpO1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmZ1bmN0aW9uIHdpdGhQYWdlQXV0aFJlcXVpcmVkRmFjdG9yeShnZXRDb25maWcsIHNlc3Npb25DYWNoZSkge1xuICAgIGNvbnN0IGFwcFJvdXRlSGFuZGxlciA9IGFwcFJvdXRlSGFuZGxlckZhY3RvcnkoZ2V0Q29uZmlnLCBzZXNzaW9uQ2FjaGUpO1xuICAgIGNvbnN0IHBhZ2VSb3V0ZUhhbmRsZXIgPSBwYWdlUm91dGVIYW5kbGVyRmFjdG9yeShnZXRDb25maWcsIHNlc3Npb25DYWNoZSk7XG4gICAgcmV0dXJuICgoZm5Pck9wdHMsIG9wdHMpID0+IHtcbiAgICAgICAgaWYgKHR5cGVvZiBmbk9yT3B0cyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgcmV0dXJuIGFwcFJvdXRlSGFuZGxlcihmbk9yT3B0cywgb3B0cyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhZ2VSb3V0ZUhhbmRsZXIoZm5Pck9wdHMpO1xuICAgIH0pO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gd2l0aFBhZ2VBdXRoUmVxdWlyZWRGYWN0b3J5O1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmNvbnN0IGFwcFJvdXRlSGFuZGxlckZhY3RvcnkgPSAoZ2V0Q29uZmlnLCBzZXNzaW9uQ2FjaGUpID0+IChoYW5kbGVyLCBvcHRzID0ge30pID0+IGFzeW5jIChwYXJhbXMpID0+IHtcbiAgICBjb25zdCB7IHJvdXRlczogeyBsb2dpbjogbG9naW5VcmwgfSB9ID0gYXdhaXQgZ2V0Q29uZmlnKG5ldyBodHRwXzEuQXV0aDBOZXh0UmVxdWVzdENvb2tpZXMoKSk7XG4gICAgY29uc3QgW3Nlc3Npb25dID0gYXdhaXQgKDAsIHNlc3Npb25fMS5nZXQpKHsgc2Vzc2lvbkNhY2hlIH0pO1xuICAgIGlmICghKHNlc3Npb24gPT09IG51bGwgfHwgc2Vzc2lvbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogc2Vzc2lvbi51c2VyKSkge1xuICAgICAgICBjb25zdCByZXR1cm5UbyA9IHR5cGVvZiBvcHRzLnJldHVyblRvID09PSAnZnVuY3Rpb24nID8gYXdhaXQgb3B0cy5yZXR1cm5UbyhwYXJhbXMpIDogb3B0cy5yZXR1cm5UbztcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby12YXItcmVxdWlyZXNcbiAgICAgICAgY29uc3QgeyByZWRpcmVjdCB9ID0gcmVxdWlyZSgnbmV4dC9uYXZpZ2F0aW9uJyk7XG4gICAgICAgIHJlZGlyZWN0KGAke2xvZ2luVXJsfSR7b3B0cy5yZXR1cm5UbyA/IGA/cmV0dXJuVG89JHtyZXR1cm5Ub31gIDogJyd9YCk7XG4gICAgfVxuICAgIHJldHVybiBoYW5kbGVyKHBhcmFtcyk7XG59O1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmNvbnN0IHBhZ2VSb3V0ZUhhbmRsZXJGYWN0b3J5ID0gKGdldENvbmZpZywgc2Vzc2lvbkNhY2hlKSA9PiAoeyBnZXRTZXJ2ZXJTaWRlUHJvcHMsIHJldHVyblRvIH0gPSB7fSkgPT4gYXN5bmMgKGN0eCkgPT4ge1xuICAgICgwLCBhc3NlcnRfMS5hc3NlcnRDdHgpKGN0eCk7XG4gICAgY29uc3QgeyByb3V0ZXM6IHsgbG9naW46IGxvZ2luVXJsIH0gfSA9IGF3YWl0IGdldENvbmZpZyhuZXcgaHR0cF8yLk5vZGVSZXF1ZXN0KGN0eC5yZXEpKTtcbiAgICBjb25zdCBzZXNzaW9uID0gYXdhaXQgc2Vzc2lvbkNhY2hlLmdldChjdHgucmVxLCBjdHgucmVzKTtcbiAgICBpZiAoIShzZXNzaW9uID09PSBudWxsIHx8IHNlc3Npb24gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHNlc3Npb24udXNlcikpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlZGlyZWN0OiB7XG4gICAgICAgICAgICAgICAgZGVzdGluYXRpb246IGAke2xvZ2luVXJsfT9yZXR1cm5Ubz0ke2VuY29kZVVSSUNvbXBvbmVudChyZXR1cm5UbyB8fCBjdHgucmVzb2x2ZWRVcmwpfWAsXG4gICAgICAgICAgICAgICAgcGVybWFuZW50OiBmYWxzZVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBsZXQgcmV0ID0geyBwcm9wczoge30gfTtcbiAgICBpZiAoZ2V0U2VydmVyU2lkZVByb3BzKSB7XG4gICAgICAgIHJldCA9IGF3YWl0IGdldFNlcnZlclNpZGVQcm9wcyhjdHgpO1xuICAgIH1cbiAgICBpZiAocmV0LnByb3BzIGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXQpLCB7IHByb3BzOiByZXQucHJvcHMudGhlbigocHJvcHMpID0+IChPYmplY3QuYXNzaWduKHsgdXNlcjogc2Vzc2lvbi51c2VyIH0sIHByb3BzKSkpIH0pO1xuICAgIH1cbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCByZXQpLCB7IHByb3BzOiBPYmplY3QuYXNzaWduKHsgdXNlcjogc2Vzc2lvbi51c2VyIH0sIHJldC5wcm9wcykgfSk7XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9d2l0aC1wYWdlLWF1dGgtcmVxdWlyZWQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwic2Vzc2lvbl8xIiwicmVxdWlyZSIsImFzc2VydF8xIiwiaHR0cF8xIiwiaHR0cF8yIiwid2l0aFBhZ2VBdXRoUmVxdWlyZWRGYWN0b3J5IiwiZ2V0Q29uZmlnIiwic2Vzc2lvbkNhY2hlIiwiYXBwUm91dGVIYW5kbGVyIiwiYXBwUm91dGVIYW5kbGVyRmFjdG9yeSIsInBhZ2VSb3V0ZUhhbmRsZXIiLCJwYWdlUm91dGVIYW5kbGVyRmFjdG9yeSIsImZuT3JPcHRzIiwib3B0cyIsImRlZmF1bHQiLCJoYW5kbGVyIiwicGFyYW1zIiwicm91dGVzIiwibG9naW4iLCJsb2dpblVybCIsIkF1dGgwTmV4dFJlcXVlc3RDb29raWVzIiwic2Vzc2lvbiIsImdldCIsInVzZXIiLCJyZXR1cm5UbyIsInJlZGlyZWN0IiwiZ2V0U2VydmVyU2lkZVByb3BzIiwiY3R4IiwiYXNzZXJ0Q3R4IiwiTm9kZVJlcXVlc3QiLCJyZXEiLCJyZXMiLCJkZXN0aW5hdGlvbiIsImVuY29kZVVSSUNvbXBvbmVudCIsInJlc29sdmVkVXJsIiwicGVybWFuZW50IiwicmV0IiwicHJvcHMiLCJQcm9taXNlIiwiYXNzaWduIiwidGhlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/with-page-auth-required.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-api-request.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-api-request.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst http_1 = __webpack_require__(/*! ../auth0-session/http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js\");\nclass Auth0NextApiRequest extends http_1.Auth0Request {\n    constructor(req){\n        /* c8 ignore next */ super(req);\n    }\n    getUrl() {\n        return this.req.url;\n    }\n    getMethod() {\n        return this.req.method;\n    }\n    getBody() {\n        return this.req.body;\n    }\n    getCookies() {\n        return this.req.cookies;\n    }\n}\nexports[\"default\"] = Auth0NextApiRequest; //# sourceMappingURL=auth0-next-api-request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9odHRwL2F1dGgwLW5leHQtYXBpLXJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsU0FBU0MsbUJBQU9BLENBQUMsK0dBQXVCO0FBQzlDLE1BQU1DLDRCQUE0QkYsT0FBT0csWUFBWTtJQUNqREMsWUFBWUMsR0FBRyxDQUFFO1FBQ2Isa0JBQWtCLEdBQ2xCLEtBQUssQ0FBQ0E7SUFDVjtJQUNBQyxTQUFTO1FBQ0wsT0FBTyxJQUFJLENBQUNELEdBQUcsQ0FBQ0UsR0FBRztJQUN2QjtJQUNBQyxZQUFZO1FBQ1IsT0FBTyxJQUFJLENBQUNILEdBQUcsQ0FBQ0ksTUFBTTtJQUMxQjtJQUNBQyxVQUFVO1FBQ04sT0FBTyxJQUFJLENBQUNMLEdBQUcsQ0FBQ00sSUFBSTtJQUN4QjtJQUNBQyxhQUFhO1FBQ1QsT0FBTyxJQUFJLENBQUNQLEdBQUcsQ0FBQ1EsT0FBTztJQUMzQjtBQUNKO0FBQ0FmLGtCQUFlLEdBQUdJLHFCQUNsQixrREFBa0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9odHRwL2F1dGgwLW5leHQtYXBpLXJlcXVlc3QuanM/MTBlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IGh0dHBfMSA9IHJlcXVpcmUoXCIuLi9hdXRoMC1zZXNzaW9uL2h0dHBcIik7XG5jbGFzcyBBdXRoME5leHRBcGlSZXF1ZXN0IGV4dGVuZHMgaHR0cF8xLkF1dGgwUmVxdWVzdCB7XG4gICAgY29uc3RydWN0b3IocmVxKSB7XG4gICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgIHN1cGVyKHJlcSk7XG4gICAgfVxuICAgIGdldFVybCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVxLnVybDtcbiAgICB9XG4gICAgZ2V0TWV0aG9kKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXEubWV0aG9kO1xuICAgIH1cbiAgICBnZXRCb2R5KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yZXEuYm9keTtcbiAgICB9XG4gICAgZ2V0Q29va2llcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVxLmNvb2tpZXM7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gQXV0aDBOZXh0QXBpUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGgwLW5leHQtYXBpLXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaHR0cF8xIiwicmVxdWlyZSIsIkF1dGgwTmV4dEFwaVJlcXVlc3QiLCJBdXRoMFJlcXVlc3QiLCJjb25zdHJ1Y3RvciIsInJlcSIsImdldFVybCIsInVybCIsImdldE1ldGhvZCIsIm1ldGhvZCIsImdldEJvZHkiLCJib2R5IiwiZ2V0Q29va2llcyIsImNvb2tpZXMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-api-request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-api-response.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-api-response.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst http_1 = __webpack_require__(/*! ../auth0-session/http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js\");\nclass Auth0NextApiResponse extends http_1.NodeResponse {\n    redirect(location, status = 302) {\n        if (this.res.writableEnded) {\n            return;\n        }\n        this.res.redirect(status, this.res.getHeader(\"Location\") || location);\n    }\n}\nexports[\"default\"] = Auth0NextApiResponse; //# sourceMappingURL=auth0-next-api-response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9odHRwL2F1dGgwLW5leHQtYXBpLXJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLCtHQUF1QjtBQUM5QyxNQUFNQyw2QkFBNkJGLE9BQU9HLFlBQVk7SUFDbERDLFNBQVNDLFFBQVEsRUFBRUMsU0FBUyxHQUFHLEVBQUU7UUFDN0IsSUFBSSxJQUFJLENBQUNDLEdBQUcsQ0FBQ0MsYUFBYSxFQUFFO1lBQ3hCO1FBQ0o7UUFDQSxJQUFJLENBQUNELEdBQUcsQ0FBQ0gsUUFBUSxDQUFDRSxRQUFRLElBQUksQ0FBQ0MsR0FBRyxDQUFDRSxTQUFTLENBQUMsZUFBZUo7SUFDaEU7QUFDSjtBQUNBUCxrQkFBZSxHQUFHSSxzQkFDbEIsbURBQW1EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3QvaHR0cC9hdXRoMC1uZXh0LWFwaS1yZXNwb25zZS5qcz85NmUwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcIi4uL2F1dGgwLXNlc3Npb24vaHR0cFwiKTtcbmNsYXNzIEF1dGgwTmV4dEFwaVJlc3BvbnNlIGV4dGVuZHMgaHR0cF8xLk5vZGVSZXNwb25zZSB7XG4gICAgcmVkaXJlY3QobG9jYXRpb24sIHN0YXR1cyA9IDMwMikge1xuICAgICAgICBpZiAodGhpcy5yZXMud3JpdGFibGVFbmRlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucmVzLnJlZGlyZWN0KHN0YXR1cywgdGhpcy5yZXMuZ2V0SGVhZGVyKCdMb2NhdGlvbicpIHx8IGxvY2F0aW9uKTtcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBBdXRoME5leHRBcGlSZXNwb25zZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGgwLW5leHQtYXBpLXJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImh0dHBfMSIsInJlcXVpcmUiLCJBdXRoME5leHRBcGlSZXNwb25zZSIsIk5vZGVSZXNwb25zZSIsInJlZGlyZWN0IiwibG9jYXRpb24iLCJzdGF0dXMiLCJyZXMiLCJ3cml0YWJsZUVuZGVkIiwiZ2V0SGVhZGVyIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-api-response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-request-cookies.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-request-cookies.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst http_1 = __webpack_require__(/*! ../auth0-session/http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js\");\nclass Auth0NextRequestCookies extends http_1.Auth0RequestCookies {\n    constructor(){\n        super();\n    }\n    getCookies() {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const { cookies } = __webpack_require__(/*! next/headers */ \"(middleware)/./node_modules/next/headers.js\");\n        const cookieStore = cookies();\n        return cookieStore.getAll().reduce((memo, { name, value })=>Object.assign(Object.assign({}, memo), {\n                [name]: value\n            }), {});\n    }\n}\nexports[\"default\"] = Auth0NextRequestCookies; //# sourceMappingURL=auth0-next-request-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9odHRwL2F1dGgwLW5leHQtcmVxdWVzdC1jb29raWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLCtHQUF1QjtBQUM5QyxNQUFNQyxnQ0FBZ0NGLE9BQU9HLG1CQUFtQjtJQUM1REMsYUFBYztRQUNWLEtBQUs7SUFDVDtJQUNBQyxhQUFhO1FBQ1QsOERBQThEO1FBQzlELE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUdMLG1CQUFPQSxDQUFDO1FBQzVCLE1BQU1NLGNBQWNEO1FBQ3BCLE9BQU9DLFlBQVlDLE1BQU0sR0FBR0MsTUFBTSxDQUFDLENBQUNDLE1BQU0sRUFBRUMsSUFBSSxFQUFFWixLQUFLLEVBQUUsR0FBTUgsT0FBT2dCLE1BQU0sQ0FBQ2hCLE9BQU9nQixNQUFNLENBQUMsQ0FBQyxHQUFHRixPQUFPO2dCQUFFLENBQUNDLEtBQUssRUFBRVo7WUFBTSxJQUFLLENBQUM7SUFDaEk7QUFDSjtBQUNBRCxrQkFBZSxHQUFHSSx5QkFDbEIsc0RBQXNEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3QvaHR0cC9hdXRoMC1uZXh0LXJlcXVlc3QtY29va2llcy5qcz8zNWE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcIi4uL2F1dGgwLXNlc3Npb24vaHR0cFwiKTtcbmNsYXNzIEF1dGgwTmV4dFJlcXVlc3RDb29raWVzIGV4dGVuZHMgaHR0cF8xLkF1dGgwUmVxdWVzdENvb2tpZXMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcigpO1xuICAgIH1cbiAgICBnZXRDb29raWVzKCkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXZhci1yZXF1aXJlc1xuICAgICAgICBjb25zdCB7IGNvb2tpZXMgfSA9IHJlcXVpcmUoJ25leHQvaGVhZGVycycpO1xuICAgICAgICBjb25zdCBjb29raWVTdG9yZSA9IGNvb2tpZXMoKTtcbiAgICAgICAgcmV0dXJuIGNvb2tpZVN0b3JlLmdldEFsbCgpLnJlZHVjZSgobWVtbywgeyBuYW1lLCB2YWx1ZSB9KSA9PiAoT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBtZW1vKSwgeyBbbmFtZV06IHZhbHVlIH0pKSwge30pO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IEF1dGgwTmV4dFJlcXVlc3RDb29raWVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXV0aDAtbmV4dC1yZXF1ZXN0LWNvb2tpZXMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaHR0cF8xIiwicmVxdWlyZSIsIkF1dGgwTmV4dFJlcXVlc3RDb29raWVzIiwiQXV0aDBSZXF1ZXN0Q29va2llcyIsImNvbnN0cnVjdG9yIiwiZ2V0Q29va2llcyIsImNvb2tpZXMiLCJjb29raWVTdG9yZSIsImdldEFsbCIsInJlZHVjZSIsIm1lbW8iLCJuYW1lIiwiYXNzaWduIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-request-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-request.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-request.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst http_1 = __webpack_require__(/*! ../auth0-session/http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js\");\nclass Auth0NextRequest extends http_1.Auth0Request {\n    constructor(req){\n        /* c8 ignore next */ super(req);\n    }\n    getUrl() {\n        return this.req.url;\n    }\n    getMethod() {\n        return this.req.method;\n    }\n    async getBody() {\n        return this.req.text();\n    }\n    getCookies() {\n        const { cookies } = this.req;\n        if (typeof cookies.getAll === \"function\") {\n            return this.req.cookies.getAll().reduce((memo, { name, value })=>Object.assign(Object.assign({}, memo), {\n                    [name]: value\n                }), {});\n        }\n        // Edge cookies before Next 13.0.1 have no `getAll` and extend `Map`.\n        const legacyCookies = cookies;\n        return Array.from(legacyCookies.keys()).reduce((memo, key)=>{\n            memo[key] = legacyCookies.get(key);\n            return memo;\n        }, {});\n    }\n}\nexports[\"default\"] = Auth0NextRequest; //# sourceMappingURL=auth0-next-request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9odHRwL2F1dGgwLW5leHQtcmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQywrR0FBdUI7QUFDOUMsTUFBTUMseUJBQXlCRixPQUFPRyxZQUFZO0lBQzlDQyxZQUFZQyxHQUFHLENBQUU7UUFDYixrQkFBa0IsR0FDbEIsS0FBSyxDQUFDQTtJQUNWO0lBQ0FDLFNBQVM7UUFDTCxPQUFPLElBQUksQ0FBQ0QsR0FBRyxDQUFDRSxHQUFHO0lBQ3ZCO0lBQ0FDLFlBQVk7UUFDUixPQUFPLElBQUksQ0FBQ0gsR0FBRyxDQUFDSSxNQUFNO0lBQzFCO0lBQ0EsTUFBTUMsVUFBVTtRQUNaLE9BQU8sSUFBSSxDQUFDTCxHQUFHLENBQUNNLElBQUk7SUFDeEI7SUFDQUMsYUFBYTtRQUNULE1BQU0sRUFBRUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDUixHQUFHO1FBQzVCLElBQUksT0FBT1EsUUFBUUMsTUFBTSxLQUFLLFlBQVk7WUFDdEMsT0FBTyxJQUFJLENBQUNULEdBQUcsQ0FBQ1EsT0FBTyxDQUFDQyxNQUFNLEdBQUdDLE1BQU0sQ0FBQyxDQUFDQyxNQUFNLEVBQUVDLElBQUksRUFBRWxCLEtBQUssRUFBRSxHQUFNSCxPQUFPc0IsTUFBTSxDQUFDdEIsT0FBT3NCLE1BQU0sQ0FBQyxDQUFDLEdBQUdGLE9BQU87b0JBQUUsQ0FBQ0MsS0FBSyxFQUFFbEI7Z0JBQU0sSUFBSyxDQUFDO1FBQ3JJO1FBQ0EscUVBQXFFO1FBQ3JFLE1BQU1vQixnQkFBZ0JOO1FBQ3RCLE9BQU9PLE1BQU1DLElBQUksQ0FBQ0YsY0FBY0csSUFBSSxJQUFJUCxNQUFNLENBQUMsQ0FBQ0MsTUFBTU87WUFDbERQLElBQUksQ0FBQ08sSUFBSSxHQUFHSixjQUFjSyxHQUFHLENBQUNEO1lBQzlCLE9BQU9QO1FBQ1gsR0FBRyxDQUFDO0lBQ1I7QUFDSjtBQUNBbEIsa0JBQWUsR0FBR0ksa0JBQ2xCLDhDQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2h0dHAvYXV0aDAtbmV4dC1yZXF1ZXN0LmpzPzYyN2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBodHRwXzEgPSByZXF1aXJlKFwiLi4vYXV0aDAtc2Vzc2lvbi9odHRwXCIpO1xuY2xhc3MgQXV0aDBOZXh0UmVxdWVzdCBleHRlbmRzIGh0dHBfMS5BdXRoMFJlcXVlc3Qge1xuICAgIGNvbnN0cnVjdG9yKHJlcSkge1xuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICBzdXBlcihyZXEpO1xuICAgIH1cbiAgICBnZXRVcmwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnJlcS51cmw7XG4gICAgfVxuICAgIGdldE1ldGhvZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVxLm1ldGhvZDtcbiAgICB9XG4gICAgYXN5bmMgZ2V0Qm9keSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucmVxLnRleHQoKTtcbiAgICB9XG4gICAgZ2V0Q29va2llcygpIHtcbiAgICAgICAgY29uc3QgeyBjb29raWVzIH0gPSB0aGlzLnJlcTtcbiAgICAgICAgaWYgKHR5cGVvZiBjb29raWVzLmdldEFsbCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVxLmNvb2tpZXMuZ2V0QWxsKCkucmVkdWNlKChtZW1vLCB7IG5hbWUsIHZhbHVlIH0pID0+IChPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG1lbW8pLCB7IFtuYW1lXTogdmFsdWUgfSkpLCB7fSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gRWRnZSBjb29raWVzIGJlZm9yZSBOZXh0IDEzLjAuMSBoYXZlIG5vIGBnZXRBbGxgIGFuZCBleHRlbmQgYE1hcGAuXG4gICAgICAgIGNvbnN0IGxlZ2FjeUNvb2tpZXMgPSBjb29raWVzO1xuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbShsZWdhY3lDb29raWVzLmtleXMoKSkucmVkdWNlKChtZW1vLCBrZXkpID0+IHtcbiAgICAgICAgICAgIG1lbW9ba2V5XSA9IGxlZ2FjeUNvb2tpZXMuZ2V0KGtleSk7XG4gICAgICAgICAgICByZXR1cm4gbWVtbztcbiAgICAgICAgfSwge30pO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IEF1dGgwTmV4dFJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoMC1uZXh0LXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiaHR0cF8xIiwicmVxdWlyZSIsIkF1dGgwTmV4dFJlcXVlc3QiLCJBdXRoMFJlcXVlc3QiLCJjb25zdHJ1Y3RvciIsInJlcSIsImdldFVybCIsInVybCIsImdldE1ldGhvZCIsIm1ldGhvZCIsImdldEJvZHkiLCJ0ZXh0IiwiZ2V0Q29va2llcyIsImNvb2tpZXMiLCJnZXRBbGwiLCJyZWR1Y2UiLCJtZW1vIiwibmFtZSIsImFzc2lnbiIsImxlZ2FjeUNvb2tpZXMiLCJBcnJheSIsImZyb20iLCJrZXlzIiwia2V5IiwiZ2V0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-response-cookies.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-response-cookies.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst http_1 = __webpack_require__(/*! ../auth0-session/http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js\");\nlet warned = false;\nconst warn = ()=>{\n    /* c8 ignore next 8 */ if ( true && !warned) {\n        console.warn(\"nextjs-auth0 is attempting to set cookies from a server component,\" + \"see https://github.com/auth0/nextjs-auth0#using-this-sdk-with-react-server-components\");\n        warned = true;\n    }\n};\nclass Auth0NextResponseCookies extends http_1.Auth0ResponseCookies {\n    constructor(){\n        super();\n    }\n    setCookie(name, value, options) {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const { cookies } = __webpack_require__(/*! next/headers */ \"(middleware)/./node_modules/next/headers.js\");\n        const cookieSetter = cookies();\n        try {\n            cookieSetter.set(Object.assign(Object.assign({}, options), {\n                name,\n                value\n            }));\n        } catch (_) {\n            warn();\n        }\n    }\n    clearCookie(name, options) {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        const { cookies } = __webpack_require__(/*! next/headers */ \"(middleware)/./node_modules/next/headers.js\");\n        const cookieSetter = cookies();\n        try {\n            cookieSetter.set(Object.assign(Object.assign({}, options), {\n                name,\n                value: \"\",\n                expires: new Date(0)\n            }));\n        } catch (_) {\n            warn();\n        }\n    }\n}\nexports[\"default\"] = Auth0NextResponseCookies; //# sourceMappingURL=auth0-next-response-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9odHRwL2F1dGgwLW5leHQtcmVzcG9uc2UtY29va2llcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RCxNQUFNQyxTQUFTQyxtQkFBT0EsQ0FBQywrR0FBdUI7QUFDOUMsSUFBSUMsU0FBUztBQUNiLE1BQU1DLE9BQU87SUFDVCxvQkFBb0IsR0FDcEIsSUFBSUMsS0FBeUIsSUFBaUIsQ0FBQ0YsUUFBUTtRQUNuREcsUUFBUUYsSUFBSSxDQUFDLHVFQUNUO1FBQ0pELFNBQVM7SUFDYjtBQUNKO0FBQ0EsTUFBTUksaUNBQWlDTixPQUFPTyxvQkFBb0I7SUFDOURDLGFBQWM7UUFDVixLQUFLO0lBQ1Q7SUFDQUMsVUFBVUMsSUFBSSxFQUFFWCxLQUFLLEVBQUVZLE9BQU8sRUFBRTtRQUM1Qiw4REFBOEQ7UUFDOUQsTUFBTSxFQUFFQyxPQUFPLEVBQUUsR0FBR1gsbUJBQU9BLENBQUM7UUFDNUIsTUFBTVksZUFBZUQ7UUFDckIsSUFBSTtZQUNBQyxhQUFhQyxHQUFHLENBQUNsQixPQUFPbUIsTUFBTSxDQUFDbkIsT0FBT21CLE1BQU0sQ0FBQyxDQUFDLEdBQUdKLFVBQVU7Z0JBQUVEO2dCQUFNWDtZQUFNO1FBQzdFLEVBQ0EsT0FBT2lCLEdBQUc7WUFDTmI7UUFDSjtJQUNKO0lBQ0FjLFlBQVlQLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ3ZCLDhEQUE4RDtRQUM5RCxNQUFNLEVBQUVDLE9BQU8sRUFBRSxHQUFHWCxtQkFBT0EsQ0FBQztRQUM1QixNQUFNWSxlQUFlRDtRQUNyQixJQUFJO1lBQ0FDLGFBQWFDLEdBQUcsQ0FBQ2xCLE9BQU9tQixNQUFNLENBQUNuQixPQUFPbUIsTUFBTSxDQUFDLENBQUMsR0FBR0osVUFBVTtnQkFBRUQ7Z0JBQU1YLE9BQU87Z0JBQUltQixTQUFTLElBQUlDLEtBQUs7WUFBRztRQUN2RyxFQUNBLE9BQU9ILEdBQUc7WUFDTmI7UUFDSjtJQUNKO0FBQ0o7QUFDQUwsa0JBQWUsR0FBR1EsMEJBQ2xCLHVEQUF1RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L2h0dHAvYXV0aDAtbmV4dC1yZXNwb25zZS1jb29raWVzLmpzP2QzNGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCBodHRwXzEgPSByZXF1aXJlKFwiLi4vYXV0aDAtc2Vzc2lvbi9odHRwXCIpO1xubGV0IHdhcm5lZCA9IGZhbHNlO1xuY29uc3Qgd2FybiA9ICgpID0+IHtcbiAgICAvKiBjOCBpZ25vcmUgbmV4dCA4ICovXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnICYmICF3YXJuZWQpIHtcbiAgICAgICAgY29uc29sZS53YXJuKCduZXh0anMtYXV0aDAgaXMgYXR0ZW1wdGluZyB0byBzZXQgY29va2llcyBmcm9tIGEgc2VydmVyIGNvbXBvbmVudCwnICtcbiAgICAgICAgICAgICdzZWUgaHR0cHM6Ly9naXRodWIuY29tL2F1dGgwL25leHRqcy1hdXRoMCN1c2luZy10aGlzLXNkay13aXRoLXJlYWN0LXNlcnZlci1jb21wb25lbnRzJyk7XG4gICAgICAgIHdhcm5lZCA9IHRydWU7XG4gICAgfVxufTtcbmNsYXNzIEF1dGgwTmV4dFJlc3BvbnNlQ29va2llcyBleHRlbmRzIGh0dHBfMS5BdXRoMFJlc3BvbnNlQ29va2llcyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuICAgIHNldENvb2tpZShuYW1lLCB2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXZhci1yZXF1aXJlc1xuICAgICAgICBjb25zdCB7IGNvb2tpZXMgfSA9IHJlcXVpcmUoJ25leHQvaGVhZGVycycpO1xuICAgICAgICBjb25zdCBjb29raWVTZXR0ZXIgPSBjb29raWVzKCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb29raWVTZXR0ZXIuc2V0KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgbmFtZSwgdmFsdWUgfSkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfKSB7XG4gICAgICAgICAgICB3YXJuKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2xlYXJDb29raWUobmFtZSwgb3B0aW9ucykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXZhci1yZXF1aXJlc1xuICAgICAgICBjb25zdCB7IGNvb2tpZXMgfSA9IHJlcXVpcmUoJ25leHQvaGVhZGVycycpO1xuICAgICAgICBjb25zdCBjb29raWVTZXR0ZXIgPSBjb29raWVzKCk7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb29raWVTZXR0ZXIuc2V0KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyksIHsgbmFtZSwgdmFsdWU6ICcnLCBleHBpcmVzOiBuZXcgRGF0ZSgwKSB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF8pIHtcbiAgICAgICAgICAgIHdhcm4oKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IEF1dGgwTmV4dFJlc3BvbnNlQ29va2llcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWF1dGgwLW5leHQtcmVzcG9uc2UtY29va2llcy5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJodHRwXzEiLCJyZXF1aXJlIiwid2FybmVkIiwid2FybiIsInByb2Nlc3MiLCJjb25zb2xlIiwiQXV0aDBOZXh0UmVzcG9uc2VDb29raWVzIiwiQXV0aDBSZXNwb25zZUNvb2tpZXMiLCJjb25zdHJ1Y3RvciIsInNldENvb2tpZSIsIm5hbWUiLCJvcHRpb25zIiwiY29va2llcyIsImNvb2tpZVNldHRlciIsInNldCIsImFzc2lnbiIsIl8iLCJjbGVhckNvb2tpZSIsImV4cGlyZXMiLCJEYXRlIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-response-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-response.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-response.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nconst NextResponse = (__webpack_require__(/*! next/dist/server/web/spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\").NextResponse);\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst http_1 = __webpack_require__(/*! ../auth0-session/http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js\");\nclass Auth0NextResponse extends http_1.Auth0Response {\n    constructor(res){\n        /* c8 ignore next */ super(res);\n    }\n    setCookie(name, value, options) {\n        this.res.cookies.set(name, value, options);\n    }\n    clearCookie(name, options) {\n        this.setCookie(name, \"\", Object.assign(Object.assign({}, options), {\n            expires: new Date(0)\n        }));\n    }\n    redirect(location, status = 302) {\n        const oldRes = this.res;\n        this.res = new NextResponse(null, {\n            status\n        });\n        oldRes.headers.forEach((value, key)=>{\n            this.res.headers.set(key, value);\n        });\n        this.res.headers.set(\"location\", location);\n        for (const cookie of oldRes.cookies.getAll()){\n            this.res.cookies.set(cookie);\n        }\n    }\n    setHeader(name, value) {\n        this.res.headers.set(name, value);\n    }\n    send204() {\n        const oldRes = this.res;\n        this.res = new NextResponse(null, {\n            status: 204\n        });\n        oldRes.headers.forEach((value, key)=>{\n            this.res.headers.set(key, value);\n        });\n    }\n}\nexports[\"default\"] = Auth0NextResponse; //# sourceMappingURL=auth0-next-response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9odHRwL2F1dGgwLW5leHQtcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBRTdELE1BQU1DLFNBQVNDLG1CQUFPQSxDQUFDLCtHQUF1QjtBQUM5QyxNQUFNQywwQkFBMEJGLE9BQU9HLGFBQWE7SUFDaERDLFlBQVlDLEdBQUcsQ0FBRTtRQUNiLGtCQUFrQixHQUNsQixLQUFLLENBQUNBO0lBQ1Y7SUFDQUMsVUFBVUMsSUFBSSxFQUFFUixLQUFLLEVBQUVTLE9BQU8sRUFBRTtRQUM1QixJQUFJLENBQUNILEdBQUcsQ0FBQ0ksT0FBTyxDQUFDQyxHQUFHLENBQUNILE1BQU1SLE9BQU9TO0lBQ3RDO0lBQ0FHLFlBQVlKLElBQUksRUFBRUMsT0FBTyxFQUFFO1FBQ3ZCLElBQUksQ0FBQ0YsU0FBUyxDQUFDQyxNQUFNLElBQUlYLE9BQU9nQixNQUFNLENBQUNoQixPQUFPZ0IsTUFBTSxDQUFDLENBQUMsR0FBR0osVUFBVTtZQUFFSyxTQUFTLElBQUlDLEtBQUs7UUFBRztJQUM5RjtJQUNBQyxTQUFTQyxRQUFRLEVBQUVDLFNBQVMsR0FBRyxFQUFFO1FBQzdCLE1BQU1DLFNBQVMsSUFBSSxDQUFDYixHQUFHO1FBQ3ZCLElBQUksQ0FBQ0EsR0FBRyxHQUFHLGlCQUEwQixNQUFNO1lBQUVZO1FBQU87UUFDcERDLE9BQU9DLE9BQU8sQ0FBQ0MsT0FBTyxDQUFDLENBQUNyQixPQUFPc0I7WUFDM0IsSUFBSSxDQUFDaEIsR0FBRyxDQUFDYyxPQUFPLENBQUNULEdBQUcsQ0FBQ1csS0FBS3RCO1FBQzlCO1FBQ0EsSUFBSSxDQUFDTSxHQUFHLENBQUNjLE9BQU8sQ0FBQ1QsR0FBRyxDQUFDLFlBQVlNO1FBQ2pDLEtBQUssTUFBTU0sVUFBVUosT0FBT1QsT0FBTyxDQUFDYyxNQUFNLEdBQUk7WUFDMUMsSUFBSSxDQUFDbEIsR0FBRyxDQUFDSSxPQUFPLENBQUNDLEdBQUcsQ0FBQ1k7UUFDekI7SUFDSjtJQUNBRSxVQUFVakIsSUFBSSxFQUFFUixLQUFLLEVBQUU7UUFDbkIsSUFBSSxDQUFDTSxHQUFHLENBQUNjLE9BQU8sQ0FBQ1QsR0FBRyxDQUFDSCxNQUFNUjtJQUMvQjtJQUNBMEIsVUFBVTtRQUNOLE1BQU1QLFNBQVMsSUFBSSxDQUFDYixHQUFHO1FBQ3ZCLElBQUksQ0FBQ0EsR0FBRyxHQUFHLGlCQUEwQixNQUFNO1lBQUVZLFFBQVE7UUFBSTtRQUN6REMsT0FBT0MsT0FBTyxDQUFDQyxPQUFPLENBQUMsQ0FBQ3JCLE9BQU9zQjtZQUMzQixJQUFJLENBQUNoQixHQUFHLENBQUNjLE9BQU8sQ0FBQ1QsR0FBRyxDQUFDVyxLQUFLdEI7UUFDOUI7SUFDSjtBQUNKO0FBQ0FELGtCQUFlLEdBQUdJLG1CQUNsQiwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9odHRwL2F1dGgwLW5leHQtcmVzcG9uc2UuanM/MWM3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHNlcnZlcl8xID0gcmVxdWlyZShcIm5leHQvc2VydmVyXCIpO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcIi4uL2F1dGgwLXNlc3Npb24vaHR0cFwiKTtcbmNsYXNzIEF1dGgwTmV4dFJlc3BvbnNlIGV4dGVuZHMgaHR0cF8xLkF1dGgwUmVzcG9uc2Uge1xuICAgIGNvbnN0cnVjdG9yKHJlcykge1xuICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICBzdXBlcihyZXMpO1xuICAgIH1cbiAgICBzZXRDb29raWUobmFtZSwgdmFsdWUsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5yZXMuY29va2llcy5zZXQobmFtZSwgdmFsdWUsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBjbGVhckNvb2tpZShuYW1lLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMuc2V0Q29va2llKG5hbWUsICcnLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMpLCB7IGV4cGlyZXM6IG5ldyBEYXRlKDApIH0pKTtcbiAgICB9XG4gICAgcmVkaXJlY3QobG9jYXRpb24sIHN0YXR1cyA9IDMwMikge1xuICAgICAgICBjb25zdCBvbGRSZXMgPSB0aGlzLnJlcztcbiAgICAgICAgdGhpcy5yZXMgPSBuZXcgc2VydmVyXzEuTmV4dFJlc3BvbnNlKG51bGwsIHsgc3RhdHVzIH0pO1xuICAgICAgICBvbGRSZXMuaGVhZGVycy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlcy5oZWFkZXJzLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucmVzLmhlYWRlcnMuc2V0KCdsb2NhdGlvbicsIGxvY2F0aW9uKTtcbiAgICAgICAgZm9yIChjb25zdCBjb29raWUgb2Ygb2xkUmVzLmNvb2tpZXMuZ2V0QWxsKCkpIHtcbiAgICAgICAgICAgIHRoaXMucmVzLmNvb2tpZXMuc2V0KGNvb2tpZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2V0SGVhZGVyKG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMucmVzLmhlYWRlcnMuc2V0KG5hbWUsIHZhbHVlKTtcbiAgICB9XG4gICAgc2VuZDIwNCgpIHtcbiAgICAgICAgY29uc3Qgb2xkUmVzID0gdGhpcy5yZXM7XG4gICAgICAgIHRoaXMucmVzID0gbmV3IHNlcnZlcl8xLk5leHRSZXNwb25zZShudWxsLCB7IHN0YXR1czogMjA0IH0pO1xuICAgICAgICBvbGRSZXMuaGVhZGVycy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICB0aGlzLnJlcy5oZWFkZXJzLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWZhdWx0ID0gQXV0aDBOZXh0UmVzcG9uc2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hdXRoMC1uZXh0LXJlc3BvbnNlLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImh0dHBfMSIsInJlcXVpcmUiLCJBdXRoME5leHRSZXNwb25zZSIsIkF1dGgwUmVzcG9uc2UiLCJjb25zdHJ1Y3RvciIsInJlcyIsInNldENvb2tpZSIsIm5hbWUiLCJvcHRpb25zIiwiY29va2llcyIsInNldCIsImNsZWFyQ29va2llIiwiYXNzaWduIiwiZXhwaXJlcyIsIkRhdGUiLCJyZWRpcmVjdCIsImxvY2F0aW9uIiwic3RhdHVzIiwib2xkUmVzIiwiaGVhZGVycyIsImZvckVhY2giLCJrZXkiLCJjb29raWUiLCJnZXRBbGwiLCJzZXRIZWFkZXIiLCJzZW5kMjA0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/http/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Auth0NextResponseCookies = exports.Auth0NextRequestCookies = exports.Auth0NextResponse = exports.Auth0NextRequest = exports.Auth0NextApiResponse = exports.Auth0NextApiRequest = void 0;\nvar auth0_next_api_request_1 = __webpack_require__(/*! ./auth0-next-api-request */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-api-request.js\");\nObject.defineProperty(exports, \"Auth0NextApiRequest\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth0_next_api_request_1).default;\n    }\n}));\nvar auth0_next_api_response_1 = __webpack_require__(/*! ./auth0-next-api-response */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-api-response.js\");\nObject.defineProperty(exports, \"Auth0NextApiResponse\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth0_next_api_response_1).default;\n    }\n}));\nvar auth0_next_request_1 = __webpack_require__(/*! ./auth0-next-request */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-request.js\");\nObject.defineProperty(exports, \"Auth0NextRequest\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth0_next_request_1).default;\n    }\n}));\nvar auth0_next_response_1 = __webpack_require__(/*! ./auth0-next-response */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-response.js\");\nObject.defineProperty(exports, \"Auth0NextResponse\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth0_next_response_1).default;\n    }\n}));\nvar auth0_next_request_cookies_1 = __webpack_require__(/*! ./auth0-next-request-cookies */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-request-cookies.js\");\nObject.defineProperty(exports, \"Auth0NextRequestCookies\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth0_next_request_cookies_1).default;\n    }\n}));\nvar auth0_next_response_cookies_1 = __webpack_require__(/*! ./auth0-next-response-cookies */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/auth0-next-response-cookies.js\");\nObject.defineProperty(exports, \"Auth0NextResponseCookies\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(auth0_next_response_cookies_1).default;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9odHRwL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFLLFNBQVVDLEdBQUc7SUFDakUsT0FBTyxPQUFRQSxJQUFJQyxVQUFVLEdBQUlELE1BQU07UUFBRSxXQUFXQTtJQUFJO0FBQzVEO0FBQ0FFLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQ0FBZ0MsR0FBR0EsK0JBQStCLEdBQUdBLHlCQUF5QixHQUFHQSx3QkFBd0IsR0FBR0EsNEJBQTRCLEdBQUdBLDJCQUEyQixHQUFHLEtBQUs7QUFDOUwsSUFBSVEsMkJBQTJCQyxtQkFBT0EsQ0FBQyxxSEFBMEI7QUFDakVYLHVEQUFzRDtJQUFFWSxZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPaEIsZ0JBQWdCYSwwQkFBMEJJLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUMzSixJQUFJQyw0QkFBNEJKLG1CQUFPQSxDQUFDLHVIQUEyQjtBQUNuRVgsd0RBQXVEO0lBQUVZLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9oQixnQkFBZ0JrQiwyQkFBMkJELE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUM3SixJQUFJRSx1QkFBdUJMLG1CQUFPQSxDQUFDLDZHQUFzQjtBQUN6RFgsb0RBQW1EO0lBQUVZLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9oQixnQkFBZ0JtQixzQkFBc0JGLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUNwSixJQUFJRyx3QkFBd0JOLG1CQUFPQSxDQUFDLCtHQUF1QjtBQUMzRFgscURBQW9EO0lBQUVZLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9oQixnQkFBZ0JvQix1QkFBdUJILE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUN0SixJQUFJSSwrQkFBK0JQLG1CQUFPQSxDQUFDLDZIQUE4QjtBQUN6RVgsMkRBQTBEO0lBQUVZLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9oQixnQkFBZ0JxQiw4QkFBOEJKLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUNuSyxJQUFJSyxnQ0FBZ0NSLG1CQUFPQSxDQUFDLCtIQUErQjtBQUMzRVgsNERBQTJEO0lBQUVZLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9oQixnQkFBZ0JzQiwrQkFBK0JMLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQyxFQUNySyxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9odHRwL2luZGV4LmpzPzU0NWEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkF1dGgwTmV4dFJlc3BvbnNlQ29va2llcyA9IGV4cG9ydHMuQXV0aDBOZXh0UmVxdWVzdENvb2tpZXMgPSBleHBvcnRzLkF1dGgwTmV4dFJlc3BvbnNlID0gZXhwb3J0cy5BdXRoME5leHRSZXF1ZXN0ID0gZXhwb3J0cy5BdXRoME5leHRBcGlSZXNwb25zZSA9IGV4cG9ydHMuQXV0aDBOZXh0QXBpUmVxdWVzdCA9IHZvaWQgMDtcbnZhciBhdXRoMF9uZXh0X2FwaV9yZXF1ZXN0XzEgPSByZXF1aXJlKFwiLi9hdXRoMC1uZXh0LWFwaS1yZXF1ZXN0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQXV0aDBOZXh0QXBpUmVxdWVzdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGF1dGgwX25leHRfYXBpX3JlcXVlc3RfMSkuZGVmYXVsdDsgfSB9KTtcbnZhciBhdXRoMF9uZXh0X2FwaV9yZXNwb25zZV8xID0gcmVxdWlyZShcIi4vYXV0aDAtbmV4dC1hcGktcmVzcG9uc2VcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBdXRoME5leHRBcGlSZXNwb25zZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGF1dGgwX25leHRfYXBpX3Jlc3BvbnNlXzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgYXV0aDBfbmV4dF9yZXF1ZXN0XzEgPSByZXF1aXJlKFwiLi9hdXRoMC1uZXh0LXJlcXVlc3RcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJBdXRoME5leHRSZXF1ZXN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQoYXV0aDBfbmV4dF9yZXF1ZXN0XzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgYXV0aDBfbmV4dF9yZXNwb25zZV8xID0gcmVxdWlyZShcIi4vYXV0aDAtbmV4dC1yZXNwb25zZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1dGgwTmV4dFJlc3BvbnNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQoYXV0aDBfbmV4dF9yZXNwb25zZV8xKS5kZWZhdWx0OyB9IH0pO1xudmFyIGF1dGgwX25leHRfcmVxdWVzdF9jb29raWVzXzEgPSByZXF1aXJlKFwiLi9hdXRoMC1uZXh0LXJlcXVlc3QtY29va2llc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1dGgwTmV4dFJlcXVlc3RDb29raWVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBfX2ltcG9ydERlZmF1bHQoYXV0aDBfbmV4dF9yZXF1ZXN0X2Nvb2tpZXNfMSkuZGVmYXVsdDsgfSB9KTtcbnZhciBhdXRoMF9uZXh0X3Jlc3BvbnNlX2Nvb2tpZXNfMSA9IHJlcXVpcmUoXCIuL2F1dGgwLW5leHQtcmVzcG9uc2UtY29va2llc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1dGgwTmV4dFJlc3BvbnNlQ29va2llc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGF1dGgwX25leHRfcmVzcG9uc2VfY29va2llc18xKS5kZWZhdWx0OyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIl9faW1wb3J0RGVmYXVsdCIsIm1vZCIsIl9fZXNNb2R1bGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIkF1dGgwTmV4dFJlc3BvbnNlQ29va2llcyIsIkF1dGgwTmV4dFJlcXVlc3RDb29raWVzIiwiQXV0aDBOZXh0UmVzcG9uc2UiLCJBdXRoME5leHRSZXF1ZXN0IiwiQXV0aDBOZXh0QXBpUmVzcG9uc2UiLCJBdXRoME5leHRBcGlSZXF1ZXN0IiwiYXV0aDBfbmV4dF9hcGlfcmVxdWVzdF8xIiwicmVxdWlyZSIsImVudW1lcmFibGUiLCJnZXQiLCJkZWZhdWx0IiwiYXV0aDBfbmV4dF9hcGlfcmVzcG9uc2VfMSIsImF1dGgwX25leHRfcmVxdWVzdF8xIiwiYXV0aDBfbmV4dF9yZXNwb25zZV8xIiwiYXV0aDBfbmV4dF9yZXF1ZXN0X2Nvb2tpZXNfMSIsImF1dGgwX25leHRfcmVzcG9uc2VfY29va2llc18xIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/init.js":
/*!*******************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/init.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports._initAuth = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst auth0_session_1 = __webpack_require__(/*! ./auth0-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/index.js\");\nconst handlers_1 = __webpack_require__(/*! ./handlers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/handlers/index.js\");\nconst session_1 = __webpack_require__(/*! ./session/ */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js\");\nconst helpers_1 = __webpack_require__(/*! ./helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/index.js\");\nconst config_1 = __webpack_require__(/*! ./config */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/config.js\");\nconst shared_1 = __webpack_require__(/*! ./shared */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/shared.js\");\nconst with_middleware_auth_required_1 = tslib_1.__importDefault(__webpack_require__(/*! ./helpers/with-middleware-auth-required */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/helpers/with-middleware-auth-required.js\"));\nconst _initAuth = ({ params, genId, clientGetter })=>{\n    const getConfig = (0, config_1.configSingletonGetter)(params, genId);\n    const getClient = clientGetter(shared_1.telemetry);\n    // Init base layer (with base config)\n    const transientStore = new auth0_session_1.TransientStore(getConfig);\n    const sessionCache = new session_1.SessionCache(getConfig);\n    const baseHandleLogin = (0, auth0_session_1.loginHandler)(getConfig, getClient, transientStore);\n    const baseHandleLogout = (0, auth0_session_1.logoutHandler)(getConfig, getClient, sessionCache);\n    const baseHandleCallback = (0, auth0_session_1.callbackHandler)(getConfig, getClient, sessionCache, transientStore);\n    const baseHandleBackchannelLogout = (0, auth0_session_1.backchannelLogoutHandler)(getConfig, getClient);\n    // Init Next layer (with next config)\n    const getSession = (0, session_1.sessionFactory)(sessionCache);\n    const touchSession = (0, session_1.touchSessionFactory)(sessionCache);\n    const updateSession = (0, session_1.updateSessionFactory)(sessionCache);\n    const getAccessToken = (0, session_1.accessTokenFactory)(getConfig, getClient, sessionCache);\n    const withApiAuthRequired = (0, helpers_1.withApiAuthRequiredFactory)(sessionCache);\n    const withPageAuthRequired = (0, helpers_1.withPageAuthRequiredFactory)(getConfig, sessionCache);\n    const handleLogin = (0, handlers_1.loginHandler)(baseHandleLogin, getConfig);\n    const handleLogout = (0, handlers_1.logoutHandler)(baseHandleLogout);\n    const handleCallback = (0, handlers_1.callbackHandler)(baseHandleCallback, getConfig);\n    const handleBackchannelLogout = (0, handlers_1.backchannelLogoutHandler)(baseHandleBackchannelLogout, getConfig);\n    const handleProfile = (0, handlers_1.profileHandler)(getConfig, getClient, getAccessToken, sessionCache);\n    const handleAuth = (0, handlers_1.handlerFactory)({\n        handleLogin,\n        handleLogout,\n        handleCallback,\n        handleProfile,\n        handleBackchannelLogout\n    });\n    const withMiddlewareAuthRequired = (0, with_middleware_auth_required_1.default)(getConfig, sessionCache);\n    return {\n        getSession,\n        touchSession,\n        updateSession,\n        getAccessToken,\n        withApiAuthRequired,\n        withPageAuthRequired,\n        handleLogin,\n        handleLogout,\n        handleCallback,\n        handleBackchannelLogout,\n        handleProfile,\n        handleAuth,\n        withMiddlewareAuthRequired\n    };\n};\nexports._initAuth = _initAuth; //# sourceMappingURL=init.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/init.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/cache.js":
/*!****************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/session/cache.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.set = exports.get = exports.getAuth0ReqRes = void 0;\nconst auth0_session_1 = __webpack_require__(/*! ../auth0-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/index.js\");\nconst session_1 = __webpack_require__(/*! ./session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/session.js\");\nconst http_1 = __webpack_require__(/*! ../auth0-session/http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/http/index.js\");\nconst http_2 = __webpack_require__(/*! ../http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js\");\nconst req_helpers_1 = __webpack_require__(/*! ../utils/req-helpers */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/req-helpers.js\");\nconst getAuth0ReqRes = (req, res)=>{\n    if ((0, req_helpers_1.isRequest)(req)) {\n        return [\n            new http_2.Auth0NextRequest(req),\n            new http_2.Auth0NextResponse(res)\n        ];\n    }\n    if ((0, req_helpers_1.isNextApiRequest)(req)) {\n        return [\n            new http_2.Auth0NextApiRequest(req),\n            new http_2.Auth0NextApiResponse(res)\n        ];\n    }\n    return [\n        new http_1.NodeRequest(req),\n        new http_1.NodeResponse(res)\n    ];\n};\nexports.getAuth0ReqRes = getAuth0ReqRes;\nclass SessionCache {\n    constructor(getConfig){\n        this.getConfig = getConfig;\n        this.cache = new WeakMap();\n        this.iatCache = new WeakMap();\n    }\n    getSessionStore(config) {\n        if (!this.sessionStore) {\n            this.sessionStore = config.session.store ? new auth0_session_1.StatefulSession(config) : new auth0_session_1.StatelessSession(config);\n        }\n        return this.sessionStore;\n    }\n    async init(req, res, autoSave = true) {\n        if (!this.cache.has(req)) {\n            const [auth0Req] = (0, exports.getAuth0ReqRes)(req, res);\n            const config = await this.getConfig(auth0Req);\n            const sessionStore = this.getSessionStore(config);\n            const [json, iat] = await sessionStore.read(auth0Req);\n            const session = (0, session_1.fromJson)(json);\n            if (session && config.backchannelLogout && await (0, auth0_session_1.isLoggedOut)(session.user, config)) {\n                this.cache.set(req, null);\n                await this.save(req, res);\n            } else {\n                this.iatCache.set(req, iat);\n                this.cache.set(req, session);\n                if (config.session.rolling && config.session.autoSave && autoSave) {\n                    await this.save(req, res);\n                }\n            }\n        }\n    }\n    async save(req, res) {\n        const [auth0Req, auth0Res] = (0, exports.getAuth0ReqRes)(req, res);\n        const config = await this.getConfig(auth0Req);\n        const sessionStore = this.getSessionStore(config);\n        await sessionStore.save(auth0Req, auth0Res, this.cache.get(req), this.iatCache.get(req));\n    }\n    async create(req, res, session) {\n        const [auth0Req] = (0, exports.getAuth0ReqRes)(req, res);\n        const config = await this.getConfig(auth0Req);\n        if (config.backchannelLogout) {\n            await (0, auth0_session_1.deleteSub)(session.user.sub, config);\n        }\n        this.cache.set(req, session);\n        await this.save(req, res);\n    }\n    async delete(req, res) {\n        await this.init(req, res, false);\n        this.cache.set(req, null);\n        await this.save(req, res);\n    }\n    async isAuthenticated(req, res) {\n        await this.init(req, res);\n        const session = this.cache.get(req);\n        return !!(session === null || session === void 0 ? void 0 : session.user);\n    }\n    async getIdToken(req, res) {\n        await this.init(req, res);\n        const session = this.cache.get(req);\n        return session === null || session === void 0 ? void 0 : session.idToken;\n    }\n    async set(req, res, session) {\n        await this.init(req, res, false);\n        this.cache.set(req, session);\n        await this.save(req, res);\n    }\n    async get(req, res) {\n        await this.init(req, res);\n        return this.cache.get(req);\n    }\n    async fromTokenEndpointResponse(req, res, tokenSet) {\n        const [auth0Req] = (0, exports.getAuth0ReqRes)(req, res);\n        const config = await this.getConfig(auth0Req);\n        return (0, session_1.fromTokenEndpointResponse)(tokenSet, config);\n    }\n}\nexports[\"default\"] = SessionCache;\nconst get = async ({ sessionCache, req, res })=>{\n    if (req && res) {\n        return [\n            await sessionCache.get(req, res)\n        ];\n    }\n    const auth0Req = new http_2.Auth0NextRequestCookies();\n    const config = await sessionCache.getConfig(auth0Req);\n    const sessionStore = sessionCache.getSessionStore(config);\n    const { session: { rolling, autoSave } } = config;\n    const [json, iat] = await sessionStore.read(auth0Req);\n    const session = (0, session_1.fromJson)(json);\n    if (session && config.backchannelLogout && await (0, auth0_session_1.isLoggedOut)(session.user, config)) {\n        await (0, exports.set)({\n            session: null,\n            sessionCache\n        });\n        return [];\n    } else {\n        if (rolling && autoSave) {\n            await (0, exports.set)({\n                session,\n                sessionCache,\n                iat\n            });\n        }\n        return [\n            session,\n            iat\n        ];\n    }\n};\nexports.get = get;\nconst set = async ({ session, sessionCache, iat, req, res })=>{\n    if (req && res) {\n        return sessionCache.set(req, res, session);\n    }\n    const auth0Req = new http_2.Auth0NextRequestCookies();\n    const config = await sessionCache.getConfig(auth0Req);\n    const sessionStore = sessionCache.getSessionStore(config);\n    await sessionStore.save(auth0Req, new http_2.Auth0NextResponseCookies(), session, iat);\n};\nexports.set = set; //# sourceMappingURL=cache.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/cache.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/get-access-token.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/session/get-access-token.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst errors_1 = __webpack_require__(/*! ../utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/errors.js\");\nconst array_1 = __webpack_require__(/*! ../utils/array */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/array.js\");\nconst session_1 = __webpack_require__(/*! ../session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js\");\nconst cache_1 = __webpack_require__(/*! ./cache */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/cache.js\");\nconst http_1 = __webpack_require__(/*! ../http */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/http/index.js\");\n/**\n * @ignore\n */ function accessTokenFactory(getConfig, getClient, sessionCache) {\n    return async (reqOrOpts, res, accessTokenRequest)=>{\n        const options = res ? accessTokenRequest : reqOrOpts;\n        const req = res ? reqOrOpts : undefined;\n        const config = await getConfig(req ? (0, cache_1.getAuth0ReqRes)(req, res)[0] : new http_1.Auth0NextRequestCookies());\n        const client = await getClient(config);\n        const parts = await (0, session_1.get)({\n            sessionCache,\n            req,\n            res\n        });\n        let [session] = parts;\n        const [, iat] = parts;\n        if (!session) {\n            throw new errors_1.AccessTokenError(errors_1.AccessTokenErrorCode.MISSING_SESSION, \"The user does not have a valid session.\");\n        }\n        if (!session.accessToken && !session.refreshToken) {\n            throw new errors_1.AccessTokenError(errors_1.AccessTokenErrorCode.MISSING_ACCESS_TOKEN, \"The user does not have a valid access token.\");\n        }\n        if (!session.accessTokenExpiresAt) {\n            throw new errors_1.AccessTokenError(errors_1.AccessTokenErrorCode.EXPIRED_ACCESS_TOKEN, \"Expiration information for the access token is not available. The user will need to sign in again.\");\n        }\n        if (options && options.scopes) {\n            const persistedScopes = session.accessTokenScope;\n            if (!persistedScopes || persistedScopes.length === 0) {\n                throw new errors_1.AccessTokenError(errors_1.AccessTokenErrorCode.INSUFFICIENT_SCOPE, \"An access token with the requested scopes could not be provided. The user will need to sign in again.\");\n            }\n            const matchingScopes = (0, array_1.intersect)(options.scopes, persistedScopes.split(\" \"));\n            if (!(0, array_1.match)(options.scopes, [\n                ...matchingScopes\n            ])) {\n                throw new errors_1.AccessTokenError(errors_1.AccessTokenErrorCode.INSUFFICIENT_SCOPE, `Could not retrieve an access token with scopes \"${options.scopes.join(\" \")}\". The user will need to sign in again.`);\n            }\n        }\n        // Check if the token has expired.\n        // There is an edge case where we might have some clock skew where our code assumes the token is still valid.\n        // Adding a skew of 1 minute to compensate.\n        if (!session.refreshToken && session.accessTokenExpiresAt * 1000 - 60000 < Date.now()) {\n            throw new errors_1.AccessTokenError(errors_1.AccessTokenErrorCode.EXPIRED_ACCESS_TOKEN, \"The access token expired and a refresh token is not available. The user will need to sign in again.\");\n        }\n        if ((options === null || options === void 0 ? void 0 : options.refresh) && !session.refreshToken) {\n            throw new errors_1.AccessTokenError(errors_1.AccessTokenErrorCode.MISSING_REFRESH_TOKEN, \"A refresh token is required to refresh the access token, but none is present.\");\n        }\n        // Check if the token has expired.\n        // There is an edge case where we might have some clock skew where our code assumes the token is still valid.\n        // Adding a skew of 1 minute to compensate.\n        if (session.refreshToken && session.accessTokenExpiresAt * 1000 - 60000 < Date.now() || session.refreshToken && options && options.refresh) {\n            const tokenSet = await client.refresh(session.refreshToken, {\n                exchangeBody: options === null || options === void 0 ? void 0 : options.authorizationParams\n            });\n            // Update the session.\n            const newSession = (0, session_1.fromTokenEndpointResponse)(tokenSet, config);\n            Object.assign(session, Object.assign(Object.assign({}, newSession), {\n                refreshToken: newSession.refreshToken || session.refreshToken,\n                user: Object.assign(Object.assign({}, session.user), newSession.user)\n            }));\n            if (options === null || options === void 0 ? void 0 : options.afterRefresh) {\n                if (req) {\n                    session = await options.afterRefresh(req, res, session);\n                } else {\n                    session = await options.afterRefresh(session);\n                }\n            }\n            await (0, session_1.set)({\n                sessionCache,\n                req,\n                res,\n                session,\n                iat\n            });\n            // Return the new access token.\n            return {\n                accessToken: tokenSet.access_token\n            };\n        }\n        // We don't have an access token.\n        if (!session.accessToken) {\n            throw new errors_1.AccessTokenError(errors_1.AccessTokenErrorCode.MISSING_ACCESS_TOKEN, \"The user does not have a valid access token.\");\n        }\n        // The access token is not expired and has sufficient scopes.\n        return {\n            accessToken: session.accessToken\n        };\n    };\n}\nexports[\"default\"] = accessTokenFactory; //# sourceMappingURL=get-access-token.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/get-access-token.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/get-session.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/session/get-session.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst session_1 = __webpack_require__(/*! ../session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js\");\n/**\n * @ignore\n */ function sessionFactory(sessionCache) {\n    return async (req, res)=>{\n        const [session] = await (0, session_1.get)({\n            req,\n            res,\n            sessionCache\n        });\n        return session;\n    };\n}\nexports[\"default\"] = sessionFactory; //# sourceMappingURL=get-session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9zZXNzaW9uL2dldC1zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLHlGQUFZO0FBQ3RDOztDQUVDLEdBQ0QsU0FBU0MsZUFBZUMsWUFBWTtJQUNoQyxPQUFPLE9BQU9DLEtBQUtDO1FBQ2YsTUFBTSxDQUFDQyxRQUFRLEdBQUcsTUFBTSxDQUFDLEdBQUdOLFVBQVVPLEdBQUcsRUFBRTtZQUFFSDtZQUFLQztZQUFLRjtRQUFhO1FBQ3BFLE9BQU9HO0lBQ1g7QUFDSjtBQUNBUixrQkFBZSxHQUFHSSxnQkFDbEIsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3Qvc2Vzc2lvbi9nZXQtc2Vzc2lvbi5qcz9iZjFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgc2Vzc2lvbl8xID0gcmVxdWlyZShcIi4uL3Nlc3Npb25cIik7XG4vKipcbiAqIEBpZ25vcmVcbiAqL1xuZnVuY3Rpb24gc2Vzc2lvbkZhY3Rvcnkoc2Vzc2lvbkNhY2hlKSB7XG4gICAgcmV0dXJuIGFzeW5jIChyZXEsIHJlcykgPT4ge1xuICAgICAgICBjb25zdCBbc2Vzc2lvbl0gPSBhd2FpdCAoMCwgc2Vzc2lvbl8xLmdldCkoeyByZXEsIHJlcywgc2Vzc2lvbkNhY2hlIH0pO1xuICAgICAgICByZXR1cm4gc2Vzc2lvbjtcbiAgICB9O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gc2Vzc2lvbkZhY3Rvcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtc2Vzc2lvbi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzZXNzaW9uXzEiLCJyZXF1aXJlIiwic2Vzc2lvbkZhY3RvcnkiLCJzZXNzaW9uQ2FjaGUiLCJyZXEiLCJyZXMiLCJzZXNzaW9uIiwiZ2V0IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/get-session.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/session/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar __importDefault = (void 0) && (void 0).__importDefault || function(mod) {\n    return mod && mod.__esModule ? mod : {\n        \"default\": mod\n    };\n};\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.updateSessionFactory = exports.touchSessionFactory = exports.set = exports.get = exports.SessionCache = exports.accessTokenFactory = exports.sessionFactory = exports.fromTokenEndpointResponse = exports.fromJson = exports.Session = void 0;\nvar session_1 = __webpack_require__(/*! ./session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/session.js\");\nObject.defineProperty(exports, \"Session\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(session_1).default;\n    }\n}));\nObject.defineProperty(exports, \"fromJson\", ({\n    enumerable: true,\n    get: function() {\n        return session_1.fromJson;\n    }\n}));\nObject.defineProperty(exports, \"fromTokenEndpointResponse\", ({\n    enumerable: true,\n    get: function() {\n        return session_1.fromTokenEndpointResponse;\n    }\n}));\nvar get_session_1 = __webpack_require__(/*! ./get-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/get-session.js\");\nObject.defineProperty(exports, \"sessionFactory\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(get_session_1).default;\n    }\n}));\nvar get_access_token_1 = __webpack_require__(/*! ./get-access-token */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/get-access-token.js\");\nObject.defineProperty(exports, \"accessTokenFactory\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(get_access_token_1).default;\n    }\n}));\nvar cache_1 = __webpack_require__(/*! ./cache */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/cache.js\");\nObject.defineProperty(exports, \"SessionCache\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(cache_1).default;\n    }\n}));\nObject.defineProperty(exports, \"get\", ({\n    enumerable: true,\n    get: function() {\n        return cache_1.get;\n    }\n}));\nObject.defineProperty(exports, \"set\", ({\n    enumerable: true,\n    get: function() {\n        return cache_1.set;\n    }\n}));\nvar touch_session_1 = __webpack_require__(/*! ./touch-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/touch-session.js\");\nObject.defineProperty(exports, \"touchSessionFactory\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(touch_session_1).default;\n    }\n}));\nvar update_session_1 = __webpack_require__(/*! ./update-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/update-session.js\");\nObject.defineProperty(exports, \"updateSessionFactory\", ({\n    enumerable: true,\n    get: function() {\n        return __importDefault(update_session_1).default;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9zZXNzaW9uL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsSUFBSUEsa0JBQWtCLENBQUMsTUFBRyxLQUFLLE9BQUcsRUFBRUEsZUFBZSxJQUFLLFNBQVVDLEdBQUc7SUFDakUsT0FBTyxPQUFRQSxJQUFJQyxVQUFVLEdBQUlELE1BQU07UUFBRSxXQUFXQTtJQUFJO0FBQzVEO0FBQ0FFLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCw0QkFBNEIsR0FBR0EsMkJBQTJCLEdBQUdBLFdBQVcsR0FBR0EsV0FBVyxHQUFHQSxvQkFBb0IsR0FBR0EsMEJBQTBCLEdBQUdBLHNCQUFzQixHQUFHQSxpQ0FBaUMsR0FBR0EsZ0JBQWdCLEdBQUdBLGVBQWUsR0FBRyxLQUFLO0FBQ3BQLElBQUlZLFlBQVlDLG1CQUFPQSxDQUFDLDBGQUFXO0FBQ25DZiwyQ0FBMEM7SUFBRWdCLFlBQVk7SUFBTVQsS0FBSztRQUFjLE9BQU9WLGdCQUFnQmlCLFdBQVdHLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUNoSWpCLDRDQUEyQztJQUFFZ0IsWUFBWTtJQUFNVCxLQUFLO1FBQWMsT0FBT08sVUFBVUYsUUFBUTtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ2pIWiw2REFBNEQ7SUFBRWdCLFlBQVk7SUFBTVQsS0FBSztRQUFjLE9BQU9PLFVBQVVILHlCQUF5QjtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ25KLElBQUlPLGdCQUFnQkgsbUJBQU9BLENBQUMsa0dBQWU7QUFDM0NmLGtEQUFpRDtJQUFFZ0IsWUFBWTtJQUFNVCxLQUFLO1FBQWMsT0FBT1YsZ0JBQWdCcUIsZUFBZUQsT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQzNJLElBQUlFLHFCQUFxQkosbUJBQU9BLENBQUMsNEdBQW9CO0FBQ3JEZixzREFBcUQ7SUFBRWdCLFlBQVk7SUFBTVQsS0FBSztRQUFjLE9BQU9WLGdCQUFnQnNCLG9CQUFvQkYsT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ3BKLElBQUlHLFVBQVVMLG1CQUFPQSxDQUFDLHNGQUFTO0FBQy9CZixnREFBK0M7SUFBRWdCLFlBQVk7SUFBTVQsS0FBSztRQUFjLE9BQU9WLGdCQUFnQnVCLFNBQVNILE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUNuSWpCLHVDQUFzQztJQUFFZ0IsWUFBWTtJQUFNVCxLQUFLO1FBQWMsT0FBT2EsUUFBUWIsR0FBRztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ3JHUCx1Q0FBc0M7SUFBRWdCLFlBQVk7SUFBTVQsS0FBSztRQUFjLE9BQU9hLFFBQVFkLEdBQUc7SUFBRTtBQUFFLENBQUMsRUFBQztBQUNyRyxJQUFJZSxrQkFBa0JOLG1CQUFPQSxDQUFDLHNHQUFpQjtBQUMvQ2YsdURBQXNEO0lBQUVnQixZQUFZO0lBQU1ULEtBQUs7UUFBYyxPQUFPVixnQkFBZ0J3QixpQkFBaUJKLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQztBQUNsSixJQUFJSyxtQkFBbUJQLG1CQUFPQSxDQUFDLHdHQUFrQjtBQUNqRGYsd0RBQXVEO0lBQUVnQixZQUFZO0lBQU1ULEtBQUs7UUFBYyxPQUFPVixnQkFBZ0J5QixrQkFBa0JMLE9BQU87SUFBRTtBQUFFLENBQUMsRUFBQyxFQUNwSixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9zZXNzaW9uL2luZGV4LmpzPzkxZjIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVwZGF0ZVNlc3Npb25GYWN0b3J5ID0gZXhwb3J0cy50b3VjaFNlc3Npb25GYWN0b3J5ID0gZXhwb3J0cy5zZXQgPSBleHBvcnRzLmdldCA9IGV4cG9ydHMuU2Vzc2lvbkNhY2hlID0gZXhwb3J0cy5hY2Nlc3NUb2tlbkZhY3RvcnkgPSBleHBvcnRzLnNlc3Npb25GYWN0b3J5ID0gZXhwb3J0cy5mcm9tVG9rZW5FbmRwb2ludFJlc3BvbnNlID0gZXhwb3J0cy5mcm9tSnNvbiA9IGV4cG9ydHMuU2Vzc2lvbiA9IHZvaWQgMDtcbnZhciBzZXNzaW9uXzEgPSByZXF1aXJlKFwiLi9zZXNzaW9uXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2Vzc2lvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KHNlc3Npb25fMSkuZGVmYXVsdDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZyb21Kc29uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZXNzaW9uXzEuZnJvbUpzb247IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tVG9rZW5FbmRwb2ludFJlc3BvbnNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZXNzaW9uXzEuZnJvbVRva2VuRW5kcG9pbnRSZXNwb25zZTsgfSB9KTtcbnZhciBnZXRfc2Vzc2lvbl8xID0gcmVxdWlyZShcIi4vZ2V0LXNlc3Npb25cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzZXNzaW9uRmFjdG9yeVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGdldF9zZXNzaW9uXzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgZ2V0X2FjY2Vzc190b2tlbl8xID0gcmVxdWlyZShcIi4vZ2V0LWFjY2Vzcy10b2tlblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFjY2Vzc1Rva2VuRmFjdG9yeVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gX19pbXBvcnREZWZhdWx0KGdldF9hY2Nlc3NfdG9rZW5fMSkuZGVmYXVsdDsgfSB9KTtcbnZhciBjYWNoZV8xID0gcmVxdWlyZShcIi4vY2FjaGVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTZXNzaW9uQ2FjaGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9faW1wb3J0RGVmYXVsdChjYWNoZV8xKS5kZWZhdWx0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZ2V0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjYWNoZV8xLmdldDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInNldFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gY2FjaGVfMS5zZXQ7IH0gfSk7XG52YXIgdG91Y2hfc2Vzc2lvbl8xID0gcmVxdWlyZShcIi4vdG91Y2gtc2Vzc2lvblwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInRvdWNoU2Vzc2lvbkZhY3RvcnlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9faW1wb3J0RGVmYXVsdCh0b3VjaF9zZXNzaW9uXzEpLmRlZmF1bHQ7IH0gfSk7XG52YXIgdXBkYXRlX3Nlc3Npb25fMSA9IHJlcXVpcmUoXCIuL3VwZGF0ZS1zZXNzaW9uXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidXBkYXRlU2Vzc2lvbkZhY3RvcnlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIF9faW1wb3J0RGVmYXVsdCh1cGRhdGVfc2Vzc2lvbl8xKS5kZWZhdWx0OyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbIl9faW1wb3J0RGVmYXVsdCIsIm1vZCIsIl9fZXNNb2R1bGUiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsInVwZGF0ZVNlc3Npb25GYWN0b3J5IiwidG91Y2hTZXNzaW9uRmFjdG9yeSIsInNldCIsImdldCIsIlNlc3Npb25DYWNoZSIsImFjY2Vzc1Rva2VuRmFjdG9yeSIsInNlc3Npb25GYWN0b3J5IiwiZnJvbVRva2VuRW5kcG9pbnRSZXNwb25zZSIsImZyb21Kc29uIiwiU2Vzc2lvbiIsInNlc3Npb25fMSIsInJlcXVpcmUiLCJlbnVtZXJhYmxlIiwiZGVmYXVsdCIsImdldF9zZXNzaW9uXzEiLCJnZXRfYWNjZXNzX3Rva2VuXzEiLCJjYWNoZV8xIiwidG91Y2hfc2Vzc2lvbl8xIiwidXBkYXRlX3Nlc3Npb25fMSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/session.js":
/*!******************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/session/session.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.fromJson = exports.fromTokenEndpointResponse = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst jose = tslib_1.__importStar(__webpack_require__(/*! jose */ \"(middleware)/./node_modules/jose/dist/browser/index.js\"));\n/**\n * The user's session.\n *\n * @category Server\n */ class Session {\n    constructor(user){\n        this.user = user;\n    }\n}\nexports[\"default\"] = Session;\n/**\n * @ignore\n */ function fromTokenEndpointResponse(tokenEndpointResponse, config) {\n    // Get the claims without any OIDC-specific claim.\n    const claims = jose.decodeJwt(tokenEndpointResponse.id_token);\n    config.identityClaimFilter.forEach((claim)=>{\n        delete claims[claim];\n    });\n    const { id_token, access_token, scope, expires_in, expires_at, refresh_token } = tokenEndpointResponse, remainder = tslib_1.__rest(tokenEndpointResponse, [\n        \"id_token\",\n        \"access_token\",\n        \"scope\",\n        \"expires_in\",\n        \"expires_at\",\n        \"refresh_token\"\n    ]);\n    const storeIDToken = config.session.storeIDToken;\n    return Object.assign(new Session(Object.assign({}, claims)), Object.assign({\n        accessToken: access_token,\n        accessTokenScope: scope,\n        accessTokenExpiresAt: Math.floor(Date.now() / 1000) + Number(expires_in),\n        refreshToken: refresh_token\n    }, storeIDToken && {\n        idToken: id_token\n    }), remainder);\n}\nexports.fromTokenEndpointResponse = fromTokenEndpointResponse;\n/**\n * @ignore\n */ function fromJson(json) {\n    if (!json) {\n        return null;\n    }\n    return Object.assign(new Session(Object.assign({}, json.user)), json);\n}\nexports.fromJson = fromJson; //# sourceMappingURL=session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9zZXNzaW9uL3Nlc3Npb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGdCQUFnQixHQUFHQSxpQ0FBaUMsR0FBRyxLQUFLO0FBQzVELE1BQU1JLFVBQVVDLG1CQUFPQSxDQUFDLDhEQUFPO0FBQy9CLE1BQU1DLE9BQU9GLFFBQVFHLFlBQVksQ0FBQ0YsbUJBQU9BLENBQUMsb0VBQU07QUFDaEQ7Ozs7Q0FJQyxHQUNELE1BQU1HO0lBQ0ZDLFlBQVlDLElBQUksQ0FBRTtRQUNkLElBQUksQ0FBQ0EsSUFBSSxHQUFHQTtJQUNoQjtBQUNKO0FBQ0FWLGtCQUFlLEdBQUdRO0FBQ2xCOztDQUVDLEdBQ0QsU0FBU0wsMEJBQTBCUyxxQkFBcUIsRUFBRUMsTUFBTTtJQUM1RCxrREFBa0Q7SUFDbEQsTUFBTUMsU0FBU1IsS0FBS1MsU0FBUyxDQUFDSCxzQkFBc0JJLFFBQVE7SUFDNURILE9BQU9JLG1CQUFtQixDQUFDQyxPQUFPLENBQUMsQ0FBQ0M7UUFDaEMsT0FBT0wsTUFBTSxDQUFDSyxNQUFNO0lBQ3hCO0lBQ0EsTUFBTSxFQUFFSCxRQUFRLEVBQUVJLFlBQVksRUFBRUMsS0FBSyxFQUFFQyxVQUFVLEVBQUVDLFVBQVUsRUFBRUMsYUFBYSxFQUFFLEdBQUdaLHVCQUF1QmEsWUFBWXJCLFFBQVFzQixNQUFNLENBQUNkLHVCQUF1QjtRQUFDO1FBQVk7UUFBZ0I7UUFBUztRQUFjO1FBQWM7S0FBZ0I7SUFDNU8sTUFBTWUsZUFBZWQsT0FBT2UsT0FBTyxDQUFDRCxZQUFZO0lBQ2hELE9BQU83QixPQUFPK0IsTUFBTSxDQUFDLElBQUlyQixRQUFRVixPQUFPK0IsTUFBTSxDQUFDLENBQUMsR0FBR2YsVUFBVWhCLE9BQU8rQixNQUFNLENBQUM7UUFBRUMsYUFBYVY7UUFBY1csa0JBQWtCVjtRQUFPVyxzQkFBc0JDLEtBQUtDLEtBQUssQ0FBQ0MsS0FBS0MsR0FBRyxLQUFLLFFBQVFDLE9BQU9mO1FBQWFnQixjQUFjZDtJQUFjLEdBQUlHLGdCQUFnQjtRQUFFWSxTQUFTdkI7SUFBUyxJQUFLUztBQUN4UjtBQUNBekIsaUNBQWlDLEdBQUdHO0FBQ3BDOztDQUVDLEdBQ0QsU0FBU0QsU0FBU3NDLElBQUk7SUFDbEIsSUFBSSxDQUFDQSxNQUFNO1FBQ1AsT0FBTztJQUNYO0lBQ0EsT0FBTzFDLE9BQU8rQixNQUFNLENBQUMsSUFBSXJCLFFBQVFWLE9BQU8rQixNQUFNLENBQUMsQ0FBQyxHQUFHVyxLQUFLOUIsSUFBSSxJQUFJOEI7QUFDcEU7QUFDQXhDLGdCQUFnQixHQUFHRSxVQUNuQixtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9zZXNzaW9uL3Nlc3Npb24uanM/NTM1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZnJvbUpzb24gPSBleHBvcnRzLmZyb21Ub2tlbkVuZHBvaW50UmVzcG9uc2UgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3Qgam9zZSA9IHRzbGliXzEuX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJqb3NlXCIpKTtcbi8qKlxuICogVGhlIHVzZXIncyBzZXNzaW9uLlxuICpcbiAqIEBjYXRlZ29yeSBTZXJ2ZXJcbiAqL1xuY2xhc3MgU2Vzc2lvbiB7XG4gICAgY29uc3RydWN0b3IodXNlcikge1xuICAgICAgICB0aGlzLnVzZXIgPSB1c2VyO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVmYXVsdCA9IFNlc3Npb247XG4vKipcbiAqIEBpZ25vcmVcbiAqL1xuZnVuY3Rpb24gZnJvbVRva2VuRW5kcG9pbnRSZXNwb25zZSh0b2tlbkVuZHBvaW50UmVzcG9uc2UsIGNvbmZpZykge1xuICAgIC8vIEdldCB0aGUgY2xhaW1zIHdpdGhvdXQgYW55IE9JREMtc3BlY2lmaWMgY2xhaW0uXG4gICAgY29uc3QgY2xhaW1zID0gam9zZS5kZWNvZGVKd3QodG9rZW5FbmRwb2ludFJlc3BvbnNlLmlkX3Rva2VuKTtcbiAgICBjb25maWcuaWRlbnRpdHlDbGFpbUZpbHRlci5mb3JFYWNoKChjbGFpbSkgPT4ge1xuICAgICAgICBkZWxldGUgY2xhaW1zW2NsYWltXTtcbiAgICB9KTtcbiAgICBjb25zdCB7IGlkX3Rva2VuLCBhY2Nlc3NfdG9rZW4sIHNjb3BlLCBleHBpcmVzX2luLCBleHBpcmVzX2F0LCByZWZyZXNoX3Rva2VuIH0gPSB0b2tlbkVuZHBvaW50UmVzcG9uc2UsIHJlbWFpbmRlciA9IHRzbGliXzEuX19yZXN0KHRva2VuRW5kcG9pbnRSZXNwb25zZSwgW1wiaWRfdG9rZW5cIiwgXCJhY2Nlc3NfdG9rZW5cIiwgXCJzY29wZVwiLCBcImV4cGlyZXNfaW5cIiwgXCJleHBpcmVzX2F0XCIsIFwicmVmcmVzaF90b2tlblwiXSk7XG4gICAgY29uc3Qgc3RvcmVJRFRva2VuID0gY29uZmlnLnNlc3Npb24uc3RvcmVJRFRva2VuO1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyBTZXNzaW9uKE9iamVjdC5hc3NpZ24oe30sIGNsYWltcykpLCBPYmplY3QuYXNzaWduKHsgYWNjZXNzVG9rZW46IGFjY2Vzc190b2tlbiwgYWNjZXNzVG9rZW5TY29wZTogc2NvcGUsIGFjY2Vzc1Rva2VuRXhwaXJlc0F0OiBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwKSArIE51bWJlcihleHBpcmVzX2luKSwgcmVmcmVzaFRva2VuOiByZWZyZXNoX3Rva2VuIH0sIChzdG9yZUlEVG9rZW4gJiYgeyBpZFRva2VuOiBpZF90b2tlbiB9KSksIHJlbWFpbmRlcik7XG59XG5leHBvcnRzLmZyb21Ub2tlbkVuZHBvaW50UmVzcG9uc2UgPSBmcm9tVG9rZW5FbmRwb2ludFJlc3BvbnNlO1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmZ1bmN0aW9uIGZyb21Kc29uKGpzb24pIHtcbiAgICBpZiAoIWpzb24pIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyBTZXNzaW9uKE9iamVjdC5hc3NpZ24oe30sIGpzb24udXNlcikpLCBqc29uKTtcbn1cbmV4cG9ydHMuZnJvbUpzb24gPSBmcm9tSnNvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlc3Npb24uanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZnJvbUpzb24iLCJmcm9tVG9rZW5FbmRwb2ludFJlc3BvbnNlIiwidHNsaWJfMSIsInJlcXVpcmUiLCJqb3NlIiwiX19pbXBvcnRTdGFyIiwiU2Vzc2lvbiIsImNvbnN0cnVjdG9yIiwidXNlciIsImRlZmF1bHQiLCJ0b2tlbkVuZHBvaW50UmVzcG9uc2UiLCJjb25maWciLCJjbGFpbXMiLCJkZWNvZGVKd3QiLCJpZF90b2tlbiIsImlkZW50aXR5Q2xhaW1GaWx0ZXIiLCJmb3JFYWNoIiwiY2xhaW0iLCJhY2Nlc3NfdG9rZW4iLCJzY29wZSIsImV4cGlyZXNfaW4iLCJleHBpcmVzX2F0IiwicmVmcmVzaF90b2tlbiIsInJlbWFpbmRlciIsIl9fcmVzdCIsInN0b3JlSURUb2tlbiIsInNlc3Npb24iLCJhc3NpZ24iLCJhY2Nlc3NUb2tlbiIsImFjY2Vzc1Rva2VuU2NvcGUiLCJhY2Nlc3NUb2tlbkV4cGlyZXNBdCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJOdW1iZXIiLCJyZWZyZXNoVG9rZW4iLCJpZFRva2VuIiwianNvbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/session.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/touch-session.js":
/*!************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/session/touch-session.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst session_1 = __webpack_require__(/*! ../session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js\");\n/**\n * @ignore\n */ function touchSessionFactory(sessionCache) {\n    return async (req, res)=>{\n        const [session, iat] = await (0, session_1.get)({\n            sessionCache,\n            req,\n            res\n        });\n        if (!session) {\n            return;\n        }\n        await (0, session_1.set)({\n            req,\n            res,\n            session,\n            sessionCache,\n            iat\n        });\n    };\n}\nexports[\"default\"] = touchSessionFactory; //# sourceMappingURL=touch-session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9zZXNzaW9uL3RvdWNoLXNlc3Npb24uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0QsTUFBTUMsWUFBWUMsbUJBQU9BLENBQUMseUZBQVk7QUFDdEM7O0NBRUMsR0FDRCxTQUFTQyxvQkFBb0JDLFlBQVk7SUFDckMsT0FBTyxPQUFPQyxLQUFLQztRQUNmLE1BQU0sQ0FBQ0MsU0FBU0MsSUFBSSxHQUFHLE1BQU0sQ0FBQyxHQUFHUCxVQUFVUSxHQUFHLEVBQUU7WUFBRUw7WUFBY0M7WUFBS0M7UUFBSTtRQUN6RSxJQUFJLENBQUNDLFNBQVM7WUFDVjtRQUNKO1FBQ0EsTUFBTSxDQUFDLEdBQUdOLFVBQVVTLEdBQUcsRUFBRTtZQUFFTDtZQUFLQztZQUFLQztZQUFTSDtZQUFjSTtRQUFJO0lBQ3BFO0FBQ0o7QUFDQVQsa0JBQWUsR0FBR0kscUJBQ2xCLHlDQUF5QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L3Nlc3Npb24vdG91Y2gtc2Vzc2lvbi5qcz83MWY5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3Qgc2Vzc2lvbl8xID0gcmVxdWlyZShcIi4uL3Nlc3Npb25cIik7XG4vKipcbiAqIEBpZ25vcmVcbiAqL1xuZnVuY3Rpb24gdG91Y2hTZXNzaW9uRmFjdG9yeShzZXNzaW9uQ2FjaGUpIHtcbiAgICByZXR1cm4gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgICAgIGNvbnN0IFtzZXNzaW9uLCBpYXRdID0gYXdhaXQgKDAsIHNlc3Npb25fMS5nZXQpKHsgc2Vzc2lvbkNhY2hlLCByZXEsIHJlcyB9KTtcbiAgICAgICAgaWYgKCFzZXNzaW9uKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgKDAsIHNlc3Npb25fMS5zZXQpKHsgcmVxLCByZXMsIHNlc3Npb24sIHNlc3Npb25DYWNoZSwgaWF0IH0pO1xuICAgIH07XG59XG5leHBvcnRzLmRlZmF1bHQgPSB0b3VjaFNlc3Npb25GYWN0b3J5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dG91Y2gtc2Vzc2lvbi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzZXNzaW9uXzEiLCJyZXF1aXJlIiwidG91Y2hTZXNzaW9uRmFjdG9yeSIsInNlc3Npb25DYWNoZSIsInJlcSIsInJlcyIsInNlc3Npb24iLCJpYXQiLCJnZXQiLCJzZXQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/touch-session.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/update-session.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/session/update-session.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nconst session_1 = __webpack_require__(/*! ../session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js\");\n/**\n * @ignore\n */ function updateSessionFactory(sessionCache) {\n    return async (reqOrSession, res, newSession)=>{\n        const session = res ? newSession : reqOrSession;\n        const req = res ? reqOrSession : undefined;\n        const [prevSession, iat] = await (0, session_1.get)({\n            sessionCache,\n            req,\n            res\n        });\n        if (!prevSession || !session || !session.user) {\n            return;\n        }\n        await (0, session_1.set)({\n            req,\n            res,\n            session,\n            sessionCache,\n            iat\n        });\n    };\n}\nexports[\"default\"] = updateSessionFactory; //# sourceMappingURL=update-session.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9zZXNzaW9uL3VwZGF0ZS1zZXNzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdELE1BQU1DLFlBQVlDLG1CQUFPQSxDQUFDLHlGQUFZO0FBQ3RDOztDQUVDLEdBQ0QsU0FBU0MscUJBQXFCQyxZQUFZO0lBQ3RDLE9BQU8sT0FBT0MsY0FBY0MsS0FBS0M7UUFDN0IsTUFBTUMsVUFBV0YsTUFBTUMsYUFBYUY7UUFDcEMsTUFBTUksTUFBT0gsTUFBTUQsZUFBZUs7UUFDbEMsTUFBTSxDQUFDQyxhQUFhQyxJQUFJLEdBQUcsTUFBTSxDQUFDLEdBQUdYLFVBQVVZLEdBQUcsRUFBRTtZQUFFVDtZQUFjSztZQUFLSDtRQUFJO1FBQzdFLElBQUksQ0FBQ0ssZUFBZSxDQUFDSCxXQUFXLENBQUNBLFFBQVFNLElBQUksRUFBRTtZQUMzQztRQUNKO1FBQ0EsTUFBTSxDQUFDLEdBQUdiLFVBQVVjLEdBQUcsRUFBRTtZQUFFTjtZQUFLSDtZQUFLRTtZQUFTSjtZQUFjUTtRQUFJO0lBQ3BFO0FBQ0o7QUFDQWIsa0JBQWUsR0FBR0ksc0JBQ2xCLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L3Nlc3Npb24vdXBkYXRlLXNlc3Npb24uanM/MGMyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmNvbnN0IHNlc3Npb25fMSA9IHJlcXVpcmUoXCIuLi9zZXNzaW9uXCIpO1xuLyoqXG4gKiBAaWdub3JlXG4gKi9cbmZ1bmN0aW9uIHVwZGF0ZVNlc3Npb25GYWN0b3J5KHNlc3Npb25DYWNoZSkge1xuICAgIHJldHVybiBhc3luYyAocmVxT3JTZXNzaW9uLCByZXMsIG5ld1Nlc3Npb24pID0+IHtcbiAgICAgICAgY29uc3Qgc2Vzc2lvbiA9IChyZXMgPyBuZXdTZXNzaW9uIDogcmVxT3JTZXNzaW9uKTtcbiAgICAgICAgY29uc3QgcmVxID0gKHJlcyA/IHJlcU9yU2Vzc2lvbiA6IHVuZGVmaW5lZCk7XG4gICAgICAgIGNvbnN0IFtwcmV2U2Vzc2lvbiwgaWF0XSA9IGF3YWl0ICgwLCBzZXNzaW9uXzEuZ2V0KSh7IHNlc3Npb25DYWNoZSwgcmVxLCByZXMgfSk7XG4gICAgICAgIGlmICghcHJldlNlc3Npb24gfHwgIXNlc3Npb24gfHwgIXNlc3Npb24udXNlcikge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGF3YWl0ICgwLCBzZXNzaW9uXzEuc2V0KSh7IHJlcSwgcmVzLCBzZXNzaW9uLCBzZXNzaW9uQ2FjaGUsIGlhdCB9KTtcbiAgICB9O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gdXBkYXRlU2Vzc2lvbkZhY3Rvcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11cGRhdGUtc2Vzc2lvbi5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzZXNzaW9uXzEiLCJyZXF1aXJlIiwidXBkYXRlU2Vzc2lvbkZhY3RvcnkiLCJzZXNzaW9uQ2FjaGUiLCJyZXFPclNlc3Npb24iLCJyZXMiLCJuZXdTZXNzaW9uIiwic2Vzc2lvbiIsInJlcSIsInVuZGVmaW5lZCIsInByZXZTZXNzaW9uIiwiaWF0IiwiZ2V0IiwidXNlciIsInNldCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/update-session.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/shared.js":
/*!*********************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/shared.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Session = exports.SessionCache = exports.ApplicationError = exports.IdentityProviderError = exports.MissingStateParamError = exports.MalformedStateCookieError = exports.MissingStateCookieError = exports.ProfileHandlerError = exports.LogoutHandlerError = exports.LoginHandlerError = exports.CallbackHandlerError = exports.HandlerError = exports.AccessTokenError = exports.AccessTokenErrorCode = exports.AuthError = exports.telemetry = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(middleware)/./node_modules/tslib/tslib.es6.mjs\");\nconst session_1 = __webpack_require__(/*! ./session/ */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/session/index.js\");\nObject.defineProperty(exports, \"SessionCache\", ({\n    enumerable: true,\n    get: function() {\n        return session_1.SessionCache;\n    }\n}));\nObject.defineProperty(exports, \"Session\", ({\n    enumerable: true,\n    get: function() {\n        return session_1.Session;\n    }\n}));\nconst version_1 = tslib_1.__importDefault(__webpack_require__(/*! ./version */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/version.js\"));\nexports.telemetry = {\n    name: \"nextjs-auth0\",\n    version: version_1.default\n};\nvar errors_1 = __webpack_require__(/*! ./utils/errors */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/errors.js\");\nObject.defineProperty(exports, \"AuthError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.AuthError;\n    }\n}));\nObject.defineProperty(exports, \"AccessTokenErrorCode\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.AccessTokenErrorCode;\n    }\n}));\nObject.defineProperty(exports, \"AccessTokenError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.AccessTokenError;\n    }\n}));\nObject.defineProperty(exports, \"HandlerError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.HandlerError;\n    }\n}));\nObject.defineProperty(exports, \"CallbackHandlerError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.CallbackHandlerError;\n    }\n}));\nObject.defineProperty(exports, \"LoginHandlerError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.LoginHandlerError;\n    }\n}));\nObject.defineProperty(exports, \"LogoutHandlerError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.LogoutHandlerError;\n    }\n}));\nObject.defineProperty(exports, \"ProfileHandlerError\", ({\n    enumerable: true,\n    get: function() {\n        return errors_1.ProfileHandlerError;\n    }\n}));\nvar auth0_session_1 = __webpack_require__(/*! ./auth0-session */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/auth0-session/index.js\");\nObject.defineProperty(exports, \"MissingStateCookieError\", ({\n    enumerable: true,\n    get: function() {\n        return auth0_session_1.MissingStateCookieError;\n    }\n}));\nObject.defineProperty(exports, \"MalformedStateCookieError\", ({\n    enumerable: true,\n    get: function() {\n        return auth0_session_1.MalformedStateCookieError;\n    }\n}));\nObject.defineProperty(exports, \"MissingStateParamError\", ({\n    enumerable: true,\n    get: function() {\n        return auth0_session_1.MissingStateParamError;\n    }\n}));\nObject.defineProperty(exports, \"IdentityProviderError\", ({\n    enumerable: true,\n    get: function() {\n        return auth0_session_1.IdentityProviderError;\n    }\n}));\nObject.defineProperty(exports, \"ApplicationError\", ({\n    enumerable: true,\n    get: function() {\n        return auth0_session_1.ApplicationError;\n    }\n})); //# sourceMappingURL=shared.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC9zaGFyZWQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGVBQWUsR0FBR0Esb0JBQW9CLEdBQUdBLHdCQUF3QixHQUFHQSw2QkFBNkIsR0FBR0EsOEJBQThCLEdBQUdBLGlDQUFpQyxHQUFHQSwrQkFBK0IsR0FBR0EsMkJBQTJCLEdBQUdBLDBCQUEwQixHQUFHQSx5QkFBeUIsR0FBR0EsNEJBQTRCLEdBQUdBLG9CQUFvQixHQUFHQSx3QkFBd0IsR0FBR0EsNEJBQTRCLEdBQUdBLGlCQUFpQixHQUFHQSxpQkFBaUIsR0FBRyxLQUFLO0FBQy9iLE1BQU1rQixVQUFVQyxtQkFBT0EsQ0FBQyw4REFBTztBQUMvQixNQUFNQyxZQUFZRCxtQkFBT0EsQ0FBQyx5RkFBWTtBQUN0Q3JCLGdEQUErQztJQUFFdUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0YsVUFBVWpCLFlBQVk7SUFBRTtBQUFFLENBQUMsRUFBQztBQUN6SEwsMkNBQTBDO0lBQUV1QixZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPRixVQUFVbEIsT0FBTztJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQy9HLE1BQU1xQixZQUFZTCxRQUFRTSxlQUFlLENBQUNMLG1CQUFPQSxDQUFDLGtGQUFXO0FBQzdEbkIsaUJBQWlCLEdBQUc7SUFBRXlCLE1BQU07SUFBZ0JDLFNBQVNILFVBQVVJLE9BQU87QUFBQztBQUN2RSxJQUFJQyxXQUFXVCxtQkFBT0EsQ0FBQyw0RkFBZ0I7QUFDdkNyQiw2Q0FBNEM7SUFBRXVCLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9NLFNBQVNaLFNBQVM7SUFBRTtBQUFFLENBQUMsRUFBQztBQUNsSGxCLHdEQUF1RDtJQUFFdUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT00sU0FBU2Isb0JBQW9CO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDeElqQixvREFBbUQ7SUFBRXVCLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9NLFNBQVNkLGdCQUFnQjtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ2hJaEIsZ0RBQStDO0lBQUV1QixZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPTSxTQUFTZixZQUFZO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDeEhmLHdEQUF1RDtJQUFFdUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT00sU0FBU2hCLG9CQUFvQjtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ3hJZCxxREFBb0Q7SUFBRXVCLFlBQVk7SUFBTUMsS0FBSztRQUFjLE9BQU9NLFNBQVNqQixpQkFBaUI7SUFBRTtBQUFFLENBQUMsRUFBQztBQUNsSWIsc0RBQXFEO0lBQUV1QixZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPTSxTQUFTbEIsa0JBQWtCO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDcElaLHVEQUFzRDtJQUFFdUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT00sU0FBU25CLG1CQUFtQjtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQ3RJLElBQUlvQixrQkFBa0JWLG1CQUFPQSxDQUFDLG9HQUFpQjtBQUMvQ3JCLDJEQUEwRDtJQUFFdUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT08sZ0JBQWdCckIsdUJBQXVCO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDckpWLDZEQUE0RDtJQUFFdUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT08sZ0JBQWdCdEIseUJBQXlCO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDekpULDBEQUF5RDtJQUFFdUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT08sZ0JBQWdCdkIsc0JBQXNCO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDbkpSLHlEQUF3RDtJQUFFdUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT08sZ0JBQWdCeEIscUJBQXFCO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDakpQLG9EQUFtRDtJQUFFdUIsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT08sZ0JBQWdCekIsZ0JBQWdCO0lBQUU7QUFBRSxDQUFDLEVBQUMsRUFDdkksa0NBQWtDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AYXV0aDAvbmV4dGpzLWF1dGgwL2Rpc3Qvc2hhcmVkLmpzP2U5MWUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNlc3Npb24gPSBleHBvcnRzLlNlc3Npb25DYWNoZSA9IGV4cG9ydHMuQXBwbGljYXRpb25FcnJvciA9IGV4cG9ydHMuSWRlbnRpdHlQcm92aWRlckVycm9yID0gZXhwb3J0cy5NaXNzaW5nU3RhdGVQYXJhbUVycm9yID0gZXhwb3J0cy5NYWxmb3JtZWRTdGF0ZUNvb2tpZUVycm9yID0gZXhwb3J0cy5NaXNzaW5nU3RhdGVDb29raWVFcnJvciA9IGV4cG9ydHMuUHJvZmlsZUhhbmRsZXJFcnJvciA9IGV4cG9ydHMuTG9nb3V0SGFuZGxlckVycm9yID0gZXhwb3J0cy5Mb2dpbkhhbmRsZXJFcnJvciA9IGV4cG9ydHMuQ2FsbGJhY2tIYW5kbGVyRXJyb3IgPSBleHBvcnRzLkhhbmRsZXJFcnJvciA9IGV4cG9ydHMuQWNjZXNzVG9rZW5FcnJvciA9IGV4cG9ydHMuQWNjZXNzVG9rZW5FcnJvckNvZGUgPSBleHBvcnRzLkF1dGhFcnJvciA9IGV4cG9ydHMudGVsZW1ldHJ5ID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IHNlc3Npb25fMSA9IHJlcXVpcmUoXCIuL3Nlc3Npb24vXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2Vzc2lvbkNhY2hlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzZXNzaW9uXzEuU2Vzc2lvbkNhY2hlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2Vzc2lvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2Vzc2lvbl8xLlNlc3Npb247IH0gfSk7XG5jb25zdCB2ZXJzaW9uXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi92ZXJzaW9uXCIpKTtcbmV4cG9ydHMudGVsZW1ldHJ5ID0geyBuYW1lOiAnbmV4dGpzLWF1dGgwJywgdmVyc2lvbjogdmVyc2lvbl8xLmRlZmF1bHQgfTtcbnZhciBlcnJvcnNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzL2Vycm9yc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkF1dGhFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEuQXV0aEVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWNjZXNzVG9rZW5FcnJvckNvZGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yc18xLkFjY2Vzc1Rva2VuRXJyb3JDb2RlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQWNjZXNzVG9rZW5FcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEuQWNjZXNzVG9rZW5FcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkhhbmRsZXJFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXJyb3JzXzEuSGFuZGxlckVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ2FsbGJhY2tIYW5kbGVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yc18xLkNhbGxiYWNrSGFuZGxlckVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTG9naW5IYW5kbGVyRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGVycm9yc18xLkxvZ2luSGFuZGxlckVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTG9nb3V0SGFuZGxlckVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcnNfMS5Mb2dvdXRIYW5kbGVyRXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcm9maWxlSGFuZGxlckVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBlcnJvcnNfMS5Qcm9maWxlSGFuZGxlckVycm9yOyB9IH0pO1xudmFyIGF1dGgwX3Nlc3Npb25fMSA9IHJlcXVpcmUoXCIuL2F1dGgwLXNlc3Npb25cIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNaXNzaW5nU3RhdGVDb29raWVFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXV0aDBfc2Vzc2lvbl8xLk1pc3NpbmdTdGF0ZUNvb2tpZUVycm9yOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTWFsZm9ybWVkU3RhdGVDb29raWVFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXV0aDBfc2Vzc2lvbl8xLk1hbGZvcm1lZFN0YXRlQ29va2llRXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNaXNzaW5nU3RhdGVQYXJhbUVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhdXRoMF9zZXNzaW9uXzEuTWlzc2luZ1N0YXRlUGFyYW1FcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIklkZW50aXR5UHJvdmlkZXJFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXV0aDBfc2Vzc2lvbl8xLklkZW50aXR5UHJvdmlkZXJFcnJvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFwcGxpY2F0aW9uRXJyb3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGF1dGgwX3Nlc3Npb25fMS5BcHBsaWNhdGlvbkVycm9yOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hhcmVkLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlNlc3Npb24iLCJTZXNzaW9uQ2FjaGUiLCJBcHBsaWNhdGlvbkVycm9yIiwiSWRlbnRpdHlQcm92aWRlckVycm9yIiwiTWlzc2luZ1N0YXRlUGFyYW1FcnJvciIsIk1hbGZvcm1lZFN0YXRlQ29va2llRXJyb3IiLCJNaXNzaW5nU3RhdGVDb29raWVFcnJvciIsIlByb2ZpbGVIYW5kbGVyRXJyb3IiLCJMb2dvdXRIYW5kbGVyRXJyb3IiLCJMb2dpbkhhbmRsZXJFcnJvciIsIkNhbGxiYWNrSGFuZGxlckVycm9yIiwiSGFuZGxlckVycm9yIiwiQWNjZXNzVG9rZW5FcnJvciIsIkFjY2Vzc1Rva2VuRXJyb3JDb2RlIiwiQXV0aEVycm9yIiwidGVsZW1ldHJ5IiwidHNsaWJfMSIsInJlcXVpcmUiLCJzZXNzaW9uXzEiLCJlbnVtZXJhYmxlIiwiZ2V0IiwidmVyc2lvbl8xIiwiX19pbXBvcnREZWZhdWx0IiwibmFtZSIsInZlcnNpb24iLCJkZWZhdWx0IiwiZXJyb3JzXzEiLCJhdXRoMF9zZXNzaW9uXzEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/shared.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/array.js":
/*!**************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/utils/array.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.match = exports.intersect = void 0;\nfunction intersect(a, b) {\n    const set1 = new Set(a);\n    const set2 = new Set(b);\n    return new Set([\n        ...set1\n    ].filter((x)=>set2.has(x)));\n}\nexports.intersect = intersect;\nfunction match(arr1, arr2) {\n    const set1 = new Set(arr1);\n    const set2 = new Set(arr2);\n    if (set1.size !== set2.size) {\n        return false;\n    }\n    for(let i = 0; i < arr1.length; i += 1){\n        const item = arr1[i];\n        if (!set2.has(item)) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.match = match; //# sourceMappingURL=array.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC91dGlscy9hcnJheS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsYUFBYSxHQUFHQSxpQkFBaUIsR0FBRyxLQUFLO0FBQ3pDLFNBQVNHLFVBQVVDLENBQUMsRUFBRUMsQ0FBQztJQUNuQixNQUFNQyxPQUFPLElBQUlDLElBQUlIO0lBQ3JCLE1BQU1JLE9BQU8sSUFBSUQsSUFBSUY7SUFDckIsT0FBTyxJQUFJRSxJQUFJO1dBQUlEO0tBQUssQ0FBQ0csTUFBTSxDQUFDLENBQUNDLElBQU1GLEtBQUtHLEdBQUcsQ0FBQ0Q7QUFDcEQ7QUFDQVYsaUJBQWlCLEdBQUdHO0FBQ3BCLFNBQVNELE1BQU1VLElBQUksRUFBRUMsSUFBSTtJQUNyQixNQUFNUCxPQUFPLElBQUlDLElBQUlLO0lBQ3JCLE1BQU1KLE9BQU8sSUFBSUQsSUFBSU07SUFDckIsSUFBSVAsS0FBS1EsSUFBSSxLQUFLTixLQUFLTSxJQUFJLEVBQUU7UUFDekIsT0FBTztJQUNYO0lBQ0EsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlILEtBQUtJLE1BQU0sRUFBRUQsS0FBSyxFQUFHO1FBQ3JDLE1BQU1FLE9BQU9MLElBQUksQ0FBQ0csRUFBRTtRQUNwQixJQUFJLENBQUNQLEtBQUtHLEdBQUcsQ0FBQ00sT0FBTztZQUNqQixPQUFPO1FBQ1g7SUFDSjtJQUNBLE9BQU87QUFDWDtBQUNBakIsYUFBYSxHQUFHRSxPQUNoQixpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC91dGlscy9hcnJheS5qcz84YzZkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYXRjaCA9IGV4cG9ydHMuaW50ZXJzZWN0ID0gdm9pZCAwO1xuZnVuY3Rpb24gaW50ZXJzZWN0KGEsIGIpIHtcbiAgICBjb25zdCBzZXQxID0gbmV3IFNldChhKTtcbiAgICBjb25zdCBzZXQyID0gbmV3IFNldChiKTtcbiAgICByZXR1cm4gbmV3IFNldChbLi4uc2V0MV0uZmlsdGVyKCh4KSA9PiBzZXQyLmhhcyh4KSkpO1xufVxuZXhwb3J0cy5pbnRlcnNlY3QgPSBpbnRlcnNlY3Q7XG5mdW5jdGlvbiBtYXRjaChhcnIxLCBhcnIyKSB7XG4gICAgY29uc3Qgc2V0MSA9IG5ldyBTZXQoYXJyMSk7XG4gICAgY29uc3Qgc2V0MiA9IG5ldyBTZXQoYXJyMik7XG4gICAgaWYgKHNldDEuc2l6ZSAhPT0gc2V0Mi5zaXplKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIxLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSBhcnIxW2ldO1xuICAgICAgICBpZiAoIXNldDIuaGFzKGl0ZW0pKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnRzLm1hdGNoID0gbWF0Y2g7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJheS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtYXRjaCIsImludGVyc2VjdCIsImEiLCJiIiwic2V0MSIsIlNldCIsInNldDIiLCJmaWx0ZXIiLCJ4IiwiaGFzIiwiYXJyMSIsImFycjIiLCJzaXplIiwiaSIsImxlbmd0aCIsIml0ZW0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/array.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/assert.js":
/*!***************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/utils/assert.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.assertCtx = exports.assertReqRes = void 0;\nconst assertReqRes = (req, res)=>{\n    if (!req) {\n        throw new Error(\"Request is not available\");\n    }\n    if (!res) {\n        throw new Error(\"Response is not available\");\n    }\n};\nexports.assertReqRes = assertReqRes;\nconst assertCtx = ({ req, res })=>{\n    (0, exports.assertReqRes)(req, res);\n};\nexports.assertCtx = assertCtx; //# sourceMappingURL=assert.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC91dGlscy9hc3NlcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELGlCQUFpQixHQUFHQSxvQkFBb0IsR0FBRyxLQUFLO0FBQ2hELE1BQU1HLGVBQWUsQ0FBQ0MsS0FBS0M7SUFDdkIsSUFBSSxDQUFDRCxLQUFLO1FBQ04sTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsSUFBSSxDQUFDRCxLQUFLO1FBQ04sTUFBTSxJQUFJQyxNQUFNO0lBQ3BCO0FBQ0o7QUFDQU4sb0JBQW9CLEdBQUdHO0FBQ3ZCLE1BQU1ELFlBQVksQ0FBQyxFQUFFRSxHQUFHLEVBQUVDLEdBQUcsRUFBRTtJQUMxQixJQUFHTCxRQUFRRyxZQUFZLEVBQUVDLEtBQUtDO0FBQ25DO0FBQ0FMLGlCQUFpQixHQUFHRSxXQUNwQixrQ0FBa0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC91dGlscy9hc3NlcnQuanM/NzEzZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXNzZXJ0Q3R4ID0gZXhwb3J0cy5hc3NlcnRSZXFSZXMgPSB2b2lkIDA7XG5jb25zdCBhc3NlcnRSZXFSZXMgPSAocmVxLCByZXMpID0+IHtcbiAgICBpZiAoIXJlcSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlcXVlc3QgaXMgbm90IGF2YWlsYWJsZScpO1xuICAgIH1cbiAgICBpZiAoIXJlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Jlc3BvbnNlIGlzIG5vdCBhdmFpbGFibGUnKTtcbiAgICB9XG59O1xuZXhwb3J0cy5hc3NlcnRSZXFSZXMgPSBhc3NlcnRSZXFSZXM7XG5jb25zdCBhc3NlcnRDdHggPSAoeyByZXEsIHJlcyB9KSA9PiB7XG4gICAgKDAsIGV4cG9ydHMuYXNzZXJ0UmVxUmVzKShyZXEsIHJlcyk7XG59O1xuZXhwb3J0cy5hc3NlcnRDdHggPSBhc3NlcnRDdHg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc3NlcnQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiYXNzZXJ0Q3R4IiwiYXNzZXJ0UmVxUmVzIiwicmVxIiwicmVzIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/assert.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/errors.js":
/*!***************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/utils/errors.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.ProfileHandlerError = exports.LogoutHandlerError = exports.LoginHandlerError = exports.CallbackHandlerError = exports.HandlerError = exports.AccessTokenError = exports.AccessTokenErrorCode = exports.AuthError = exports.appendCause = void 0;\n/**\n * @ignore\n */ function appendCause(errorMessage, cause) {\n    if (!cause) return errorMessage;\n    const separator = errorMessage.endsWith(\".\") ? \"\" : \".\";\n    return `${errorMessage}${separator} CAUSE: ${cause.message}`;\n}\nexports.appendCause = appendCause;\n/**\n * The base class for all SDK errors.\n *\n * Because part of the error message can come from the OpenID Connect `error` query parameter we\n * do some basic escaping which makes sure the default error handler is safe from XSS.\n *\n * **IMPORTANT** If you write your own error handler, you should **not** render the error\n * without using a templating engine that will properly escape it for other HTML contexts first.\n *\n * Note that the error message of the {@link AuthError.cause | underlying error} is **not** escaped\n * in any way, so do **not** render it without escaping it first!\n *\n * @category Server\n */ class AuthError extends Error {\n    constructor(options){\n        /* c8 ignore next */ super(appendCause(options.message, options.cause));\n        this.code = options.code;\n        this.name = options.name;\n        this.cause = options.cause;\n        this.status = options.status;\n    }\n}\nexports.AuthError = AuthError;\n/**\n * Error codes for {@link AccessTokenError}.\n *\n * @category Server\n */ var AccessTokenErrorCode;\n(function(AccessTokenErrorCode) {\n    AccessTokenErrorCode[\"MISSING_SESSION\"] = \"ERR_MISSING_SESSION\";\n    AccessTokenErrorCode[\"MISSING_ACCESS_TOKEN\"] = \"ERR_MISSING_ACCESS_TOKEN\";\n    AccessTokenErrorCode[\"MISSING_REFRESH_TOKEN\"] = \"ERR_MISSING_REFRESH_TOKEN\";\n    AccessTokenErrorCode[\"EXPIRED_ACCESS_TOKEN\"] = \"ERR_EXPIRED_ACCESS_TOKEN\";\n    AccessTokenErrorCode[\"INSUFFICIENT_SCOPE\"] = \"ERR_INSUFFICIENT_SCOPE\";\n    AccessTokenErrorCode[\"FAILED_REFRESH_GRANT\"] = \"ERR_FAILED_REFRESH_GRANT\";\n})(AccessTokenErrorCode = exports.AccessTokenErrorCode || (exports.AccessTokenErrorCode = {}));\n/**\n * The error thrown by {@link GetAccessToken}.\n *\n * @see the {@link AuthError.code | code property} contains a machine-readable error code that\n * remains stable within a major version of the SDK. You should rely on this error code to handle\n * errors. In contrast, the error message is not part of the API and can change anytime. Do **not**\n * parse or otherwise rely on the error message to handle errors.\n *\n * @see {@link AccessTokenErrorCode} for the list of all possible error codes.\n * @category Server\n */ class AccessTokenError extends AuthError {\n    constructor(code, message, cause){\n        /* c8 ignore next */ super({\n            code: code,\n            message: message,\n            name: \"AccessTokenError\",\n            cause\n        });\n        // Capturing stack trace, excluding constructor call from it.\n        Error.captureStackTrace(this, this.constructor);\n        Object.setPrototypeOf(this, AccessTokenError.prototype);\n    }\n}\nexports.AccessTokenError = AccessTokenError;\n/**\n * The base class for errors thrown by API route handlers. It extends {@link AuthError}.\n *\n * Because part of the error message can come from the OpenID Connect `error` query parameter we\n * do some basic escaping which makes sure the default error handler is safe from XSS.\n *\n * **IMPORTANT** If you write your own error handler, you should **not** render the error message\n * without using a templating engine that will properly escape it for other HTML contexts first.\n *\n * @see the {@link AuthError.cause | cause property} contains the underlying error.\n * **IMPORTANT** When this error is from the Identity Provider ({@link IdentityProviderError}) it can contain user\n * input and is only escaped using basic escaping for putting untrusted data directly into the HTML body.\n * You should **not** render this error without using a templating engine that will properly escape it for other\n * HTML contexts first.\n *\n * @see the {@link AuthError.status | status property} contains the HTTP status code of the error,\n * if any.\n *\n * @category Server\n */ class HandlerError extends AuthError {\n    constructor(options){\n        let status;\n        if (\"status\" in options.cause) status = options.cause.status;\n        /* c8 ignore next */ super(Object.assign(Object.assign({}, options), {\n            status\n        }));\n    }\n}\nexports.HandlerError = HandlerError;\n/**\n * The error thrown by the callback API route handler. It extends {@link HandlerError}.\n *\n * Because part of the error message can come from the OpenID Connect `error` query parameter we\n * do some basic escaping which makes sure the default error handler is safe from XSS.\n *\n * **IMPORTANT** If you write your own error handler, you should **not** render the error message\n * without using a templating engine that will properly escape it for other HTML contexts first.\n *\n * @see the {@link AuthError.cause | cause property} contains the underlying error.\n * **IMPORTANT** When this error is from the Identity Provider ({@link IdentityProviderError}) it can contain user\n * input and is only escaped using basic escaping for putting untrusted data directly into the HTML body.\n * You should **not** render this error without using a templating engine that will properly escape it for other\n * HTML contexts first.\n *\n * @see the {@link AuthError.status | status property} contains the HTTP status code of the error,\n * if any.\n *\n * @category Server\n */ class CallbackHandlerError extends HandlerError {\n    constructor(cause){\n        super({\n            code: CallbackHandlerError.code,\n            message: \"Callback handler failed.\",\n            name: \"CallbackHandlerError\",\n            cause\n        }); /* c8 ignore next */ \n        Object.setPrototypeOf(this, CallbackHandlerError.prototype);\n    }\n}\nexports.CallbackHandlerError = CallbackHandlerError;\nCallbackHandlerError.code = \"ERR_CALLBACK_HANDLER_FAILURE\";\n/**\n * The error thrown by the login API route handler. It extends {@link HandlerError}.\n *\n * @see the {@link AuthError.cause | cause property} contains the underlying error.\n * @category Server\n */ class LoginHandlerError extends HandlerError {\n    constructor(cause){\n        super({\n            code: LoginHandlerError.code,\n            message: \"Login handler failed.\",\n            name: \"LoginHandlerError\",\n            cause\n        }); /* c8 ignore next */ \n        Object.setPrototypeOf(this, LoginHandlerError.prototype);\n    }\n}\nexports.LoginHandlerError = LoginHandlerError;\nLoginHandlerError.code = \"ERR_LOGIN_HANDLER_FAILURE\";\n/**\n * The error thrown by the logout API route handler. It extends {@link HandlerError}.\n *\n * @see the {@link AuthError.cause | cause property} contains the underlying error.\n * @category Server\n */ class LogoutHandlerError extends HandlerError {\n    constructor(cause){\n        super({\n            code: LogoutHandlerError.code,\n            message: \"Logout handler failed.\",\n            name: \"LogoutHandlerError\",\n            cause\n        }); /* c8 ignore next */ \n        Object.setPrototypeOf(this, LogoutHandlerError.prototype);\n    }\n}\nexports.LogoutHandlerError = LogoutHandlerError;\nLogoutHandlerError.code = \"ERR_LOGOUT_HANDLER_FAILURE\";\n/**\n * The error thrown by the profile API route handler. It extends {@link HandlerError}.\n *\n * @see the {@link AuthError.cause | cause property} contains the underlying error.\n * @category Server\n */ class ProfileHandlerError extends HandlerError {\n    constructor(cause){\n        super({\n            code: ProfileHandlerError.code,\n            message: \"Profile handler failed.\",\n            name: \"ProfileHandlerError\",\n            cause\n        }); /* c8 ignore next */ \n        Object.setPrototypeOf(this, ProfileHandlerError.prototype);\n    }\n}\nexports.ProfileHandlerError = ProfileHandlerError;\nProfileHandlerError.code = \"ERR_PROFILE_HANDLER_FAILURE\"; //# sourceMappingURL=errors.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/errors.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/instance-check.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/utils/instance-check.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.setIsUsingOwnInstance = exports.setIsUsingNamedExports = void 0;\nlet isUsingNamedExports = false;\nlet isUsingOwnInstance = false;\nconst instanceCheck = ()=>{\n    if (isUsingNamedExports && isUsingOwnInstance) {\n        throw new Error(\"You cannot mix creating your own instance with `initAuth0` and using named \" + \"exports like `import { handleAuth } from '@auth0/nextjs-auth0'`\");\n    }\n};\nconst setIsUsingNamedExports = ()=>{\n    isUsingNamedExports = true;\n    instanceCheck();\n};\nexports.setIsUsingNamedExports = setIsUsingNamedExports;\nconst setIsUsingOwnInstance = ()=>{\n    isUsingOwnInstance = true;\n    instanceCheck();\n};\nexports.setIsUsingOwnInstance = setIsUsingOwnInstance; //# sourceMappingURL=instance-check.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC91dGlscy9pbnN0YW5jZS1jaGVjay5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsNkJBQTZCLEdBQUdBLDhCQUE4QixHQUFHLEtBQUs7QUFDdEUsSUFBSUksc0JBQXNCO0FBQzFCLElBQUlDLHFCQUFxQjtBQUN6QixNQUFNQyxnQkFBZ0I7SUFDbEIsSUFBSUYsdUJBQXVCQyxvQkFBb0I7UUFDM0MsTUFBTSxJQUFJRSxNQUFNLGdGQUNaO0lBQ1I7QUFDSjtBQUNBLE1BQU1KLHlCQUF5QjtJQUMzQkMsc0JBQXNCO0lBQ3RCRTtBQUNKO0FBQ0FOLDhCQUE4QixHQUFHRztBQUNqQyxNQUFNRCx3QkFBd0I7SUFDMUJHLHFCQUFxQjtJQUNyQkM7QUFDSjtBQUNBTiw2QkFBNkIsR0FBR0UsdUJBQ2hDLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L3V0aWxzL2luc3RhbmNlLWNoZWNrLmpzPzMxNTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNldElzVXNpbmdPd25JbnN0YW5jZSA9IGV4cG9ydHMuc2V0SXNVc2luZ05hbWVkRXhwb3J0cyA9IHZvaWQgMDtcbmxldCBpc1VzaW5nTmFtZWRFeHBvcnRzID0gZmFsc2U7XG5sZXQgaXNVc2luZ093bkluc3RhbmNlID0gZmFsc2U7XG5jb25zdCBpbnN0YW5jZUNoZWNrID0gKCkgPT4ge1xuICAgIGlmIChpc1VzaW5nTmFtZWRFeHBvcnRzICYmIGlzVXNpbmdPd25JbnN0YW5jZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBjYW5ub3QgbWl4IGNyZWF0aW5nIHlvdXIgb3duIGluc3RhbmNlIHdpdGggYGluaXRBdXRoMGAgYW5kIHVzaW5nIG5hbWVkICcgK1xuICAgICAgICAgICAgXCJleHBvcnRzIGxpa2UgYGltcG9ydCB7IGhhbmRsZUF1dGggfSBmcm9tICdAYXV0aDAvbmV4dGpzLWF1dGgwJ2BcIik7XG4gICAgfVxufTtcbmNvbnN0IHNldElzVXNpbmdOYW1lZEV4cG9ydHMgPSAoKSA9PiB7XG4gICAgaXNVc2luZ05hbWVkRXhwb3J0cyA9IHRydWU7XG4gICAgaW5zdGFuY2VDaGVjaygpO1xufTtcbmV4cG9ydHMuc2V0SXNVc2luZ05hbWVkRXhwb3J0cyA9IHNldElzVXNpbmdOYW1lZEV4cG9ydHM7XG5jb25zdCBzZXRJc1VzaW5nT3duSW5zdGFuY2UgPSAoKSA9PiB7XG4gICAgaXNVc2luZ093bkluc3RhbmNlID0gdHJ1ZTtcbiAgICBpbnN0YW5jZUNoZWNrKCk7XG59O1xuZXhwb3J0cy5zZXRJc1VzaW5nT3duSW5zdGFuY2UgPSBzZXRJc1VzaW5nT3duSW5zdGFuY2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbnN0YW5jZS1jaGVjay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJzZXRJc1VzaW5nT3duSW5zdGFuY2UiLCJzZXRJc1VzaW5nTmFtZWRFeHBvcnRzIiwiaXNVc2luZ05hbWVkRXhwb3J0cyIsImlzVXNpbmdPd25JbnN0YW5jZSIsImluc3RhbmNlQ2hlY2siLCJFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/instance-check.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/req-helpers.js":
/*!********************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/utils/req-helpers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.isNextApiRequest = exports.isRequest = void 0;\nconst isRequest = (req)=>{\n    return req instanceof Request || req.headers instanceof Headers || typeof req.bodyUsed === \"boolean\";\n};\nexports.isRequest = isRequest;\nconst isNextApiRequest = (req)=>{\n    return !(0, exports.isRequest)(req) && \"query\" in req;\n};\nexports.isNextApiRequest = isNextApiRequest; //# sourceMappingURL=req-helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC91dGlscy9yZXEtaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsd0JBQXdCLEdBQUdBLGlCQUFpQixHQUFHLEtBQUs7QUFDcEQsTUFBTUcsWUFBWSxDQUFDQztJQUNmLE9BQU9BLGVBQWVDLFdBQVdELElBQUlFLE9BQU8sWUFBWUMsV0FBVyxPQUFPSCxJQUFJSSxRQUFRLEtBQUs7QUFDL0Y7QUFDQVIsaUJBQWlCLEdBQUdHO0FBQ3BCLE1BQU1ELG1CQUFtQixDQUFDRTtJQUN0QixPQUFPLENBQUMsQ0FBQyxHQUFHSixRQUFRRyxTQUFTLEVBQUVDLFFBQVEsV0FBV0E7QUFDdEQ7QUFDQUosd0JBQXdCLEdBQUdFLGtCQUMzQix1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC91dGlscy9yZXEtaGVscGVycy5qcz8wNmFjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc05leHRBcGlSZXF1ZXN0ID0gZXhwb3J0cy5pc1JlcXVlc3QgPSB2b2lkIDA7XG5jb25zdCBpc1JlcXVlc3QgPSAocmVxKSA9PiB7XG4gICAgcmV0dXJuIHJlcSBpbnN0YW5jZW9mIFJlcXVlc3QgfHwgcmVxLmhlYWRlcnMgaW5zdGFuY2VvZiBIZWFkZXJzIHx8IHR5cGVvZiByZXEuYm9keVVzZWQgPT09ICdib29sZWFuJztcbn07XG5leHBvcnRzLmlzUmVxdWVzdCA9IGlzUmVxdWVzdDtcbmNvbnN0IGlzTmV4dEFwaVJlcXVlc3QgPSAocmVxKSA9PiB7XG4gICAgcmV0dXJuICEoMCwgZXhwb3J0cy5pc1JlcXVlc3QpKHJlcSkgJiYgJ3F1ZXJ5JyBpbiByZXE7XG59O1xuZXhwb3J0cy5pc05leHRBcGlSZXF1ZXN0ID0gaXNOZXh0QXBpUmVxdWVzdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcS1oZWxwZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImlzTmV4dEFwaVJlcXVlc3QiLCJpc1JlcXVlc3QiLCJyZXEiLCJSZXF1ZXN0IiwiaGVhZGVycyIsIkhlYWRlcnMiLCJib2R5VXNlZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/req-helpers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/url-helpers.js":
/*!********************************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/utils/url-helpers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n/**\n * Helper which tests if a URL can safely be redirected to. Requires the URL to be relative.\n *\n * @param dangerousRedirect\n * @param safeBaseUrl\n */ function toSafeRedirect(dangerousRedirect, safeBaseUrl) {\n    let url;\n    try {\n        url = new URL(dangerousRedirect, safeBaseUrl);\n    } catch (e) {\n        return undefined;\n    }\n    if (url.origin === safeBaseUrl.origin) {\n        return url.toString();\n    }\n    return undefined;\n}\nexports[\"default\"] = toSafeRedirect; //# sourceMappingURL=url-helpers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC91dGlscy91cmwtaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3RDs7Ozs7Q0FLQyxHQUNELFNBQVNDLGVBQWVDLGlCQUFpQixFQUFFQyxXQUFXO0lBQ2xELElBQUlDO0lBQ0osSUFBSTtRQUNBQSxNQUFNLElBQUlDLElBQUlILG1CQUFtQkM7SUFDckMsRUFDQSxPQUFPRyxHQUFHO1FBQ04sT0FBT0M7SUFDWDtJQUNBLElBQUlILElBQUlJLE1BQU0sS0FBS0wsWUFBWUssTUFBTSxFQUFFO1FBQ25DLE9BQU9KLElBQUlLLFFBQVE7SUFDdkI7SUFDQSxPQUFPRjtBQUNYO0FBQ0FSLGtCQUFlLEdBQUdFLGdCQUNsQix1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC91dGlscy91cmwtaGVscGVycy5qcz8wYzdkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuLyoqXG4gKiBIZWxwZXIgd2hpY2ggdGVzdHMgaWYgYSBVUkwgY2FuIHNhZmVseSBiZSByZWRpcmVjdGVkIHRvLiBSZXF1aXJlcyB0aGUgVVJMIHRvIGJlIHJlbGF0aXZlLlxuICpcbiAqIEBwYXJhbSBkYW5nZXJvdXNSZWRpcmVjdFxuICogQHBhcmFtIHNhZmVCYXNlVXJsXG4gKi9cbmZ1bmN0aW9uIHRvU2FmZVJlZGlyZWN0KGRhbmdlcm91c1JlZGlyZWN0LCBzYWZlQmFzZVVybCkge1xuICAgIGxldCB1cmw7XG4gICAgdHJ5IHtcbiAgICAgICAgdXJsID0gbmV3IFVSTChkYW5nZXJvdXNSZWRpcmVjdCwgc2FmZUJhc2VVcmwpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAodXJsLm9yaWdpbiA9PT0gc2FmZUJhc2VVcmwub3JpZ2luKSB7XG4gICAgICAgIHJldHVybiB1cmwudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IHRvU2FmZVJlZGlyZWN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXJsLWhlbHBlcnMuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwidG9TYWZlUmVkaXJlY3QiLCJkYW5nZXJvdXNSZWRpcmVjdCIsInNhZmVCYXNlVXJsIiwidXJsIiwiVVJMIiwiZSIsInVuZGVmaW5lZCIsIm9yaWdpbiIsInRvU3RyaW5nIiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/utils/url-helpers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@auth0/nextjs-auth0/dist/version.js":
/*!**********************************************************!*\
  !*** ./node_modules/@auth0/nextjs-auth0/dist/version.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = \"3.5.0\"; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BhdXRoMC9uZXh0anMtYXV0aDAvZGlzdC92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxrQkFBZSxHQUFHLFNBQ2xCLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQGF1dGgwL25leHRqcy1hdXRoMC9kaXN0L3ZlcnNpb24uanM/N2M1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZGVmYXVsdCA9ICczLjUuMCc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD12ZXJzaW9uLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@auth0/nextjs-auth0/dist/version.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/cookie/index.js":
/*!**************************************!*\
  !*** ./node_modules/cookie/index.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ \n/**\n * Module exports.\n * @public\n */ exports.parse = parse;\nexports.serialize = serialize;\n/**\n * Module variables.\n * @private\n */ var __toString = Object.prototype.toString;\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */ var fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */ function parse(str, options) {\n    if (typeof str !== \"string\") {\n        throw new TypeError(\"argument str must be a string\");\n    }\n    var obj = {};\n    var opt = options || {};\n    var dec = opt.decode || decode;\n    var index = 0;\n    while(index < str.length){\n        var eqIdx = str.indexOf(\"=\", index);\n        // no more cookie pairs\n        if (eqIdx === -1) {\n            break;\n        }\n        var endIdx = str.indexOf(\";\", index);\n        if (endIdx === -1) {\n            endIdx = str.length;\n        } else if (endIdx < eqIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        var key = str.slice(index, eqIdx).trim();\n        // only assign once\n        if (undefined === obj[key]) {\n            var val = str.slice(eqIdx + 1, endIdx).trim();\n            // quoted values\n            if (val.charCodeAt(0) === 0x22) {\n                val = val.slice(1, -1);\n            }\n            obj[key] = tryDecode(val, dec);\n        }\n        index = endIdx + 1;\n    }\n    return obj;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */ function serialize(name, val, options) {\n    var opt = options || {};\n    var enc = opt.encode || encode;\n    if (typeof enc !== \"function\") {\n        throw new TypeError(\"option encode is invalid\");\n    }\n    if (!fieldContentRegExp.test(name)) {\n        throw new TypeError(\"argument name is invalid\");\n    }\n    var value = enc(val);\n    if (value && !fieldContentRegExp.test(value)) {\n        throw new TypeError(\"argument val is invalid\");\n    }\n    var str = name + \"=\" + value;\n    if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge) || !isFinite(maxAge)) {\n            throw new TypeError(\"option maxAge is invalid\");\n        }\n        str += \"; Max-Age=\" + Math.floor(maxAge);\n    }\n    if (opt.domain) {\n        if (!fieldContentRegExp.test(opt.domain)) {\n            throw new TypeError(\"option domain is invalid\");\n        }\n        str += \"; Domain=\" + opt.domain;\n    }\n    if (opt.path) {\n        if (!fieldContentRegExp.test(opt.path)) {\n            throw new TypeError(\"option path is invalid\");\n        }\n        str += \"; Path=\" + opt.path;\n    }\n    if (opt.expires) {\n        var expires = opt.expires;\n        if (!isDate(expires) || isNaN(expires.valueOf())) {\n            throw new TypeError(\"option expires is invalid\");\n        }\n        str += \"; Expires=\" + expires.toUTCString();\n    }\n    if (opt.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (opt.secure) {\n        str += \"; Secure\";\n    }\n    if (opt.partitioned) {\n        str += \"; Partitioned\";\n    }\n    if (opt.priority) {\n        var priority = typeof opt.priority === \"string\" ? opt.priority.toLowerCase() : opt.priority;\n        switch(priority){\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(\"option priority is invalid\");\n        }\n    }\n    if (opt.sameSite) {\n        var sameSite = typeof opt.sameSite === \"string\" ? opt.sameSite.toLowerCase() : opt.sameSite;\n        switch(sameSite){\n            case true:\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(\"option sameSite is invalid\");\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */ function decode(str) {\n    return str.indexOf(\"%\") !== -1 ? decodeURIComponent(str) : str;\n}\n/**\n * URL-encode value.\n *\n * @param {string} val\n * @returns {string}\n */ function encode(val) {\n    return encodeURIComponent(val);\n}\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */ function isDate(val) {\n    return __toString.call(val) === \"[object Date]\" || val instanceof Date;\n}\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */ function tryDecode(str, decode) {\n    try {\n        return decode(str);\n    } catch (e) {\n        return str;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/cookie/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/debug/src/browser.js":
/*!*******************************************!*\
  !*** ./node_modules/debug/src/browser.js ***!
  \*******************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* eslint-env browser */ /**\n * This is the web browser implementation of `debug()`.\n */ \nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (()=>{\n    let warned = false;\n    return ()=>{\n        if (!warned) {\n            warned = true;\n            console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");\n        }\n    };\n})();\n/**\n * Colors.\n */ exports.colors = [\n    \"#0000CC\",\n    \"#0000FF\",\n    \"#0033CC\",\n    \"#0033FF\",\n    \"#0066CC\",\n    \"#0066FF\",\n    \"#0099CC\",\n    \"#0099FF\",\n    \"#00CC00\",\n    \"#00CC33\",\n    \"#00CC66\",\n    \"#00CC99\",\n    \"#00CCCC\",\n    \"#00CCFF\",\n    \"#3300CC\",\n    \"#3300FF\",\n    \"#3333CC\",\n    \"#3333FF\",\n    \"#3366CC\",\n    \"#3366FF\",\n    \"#3399CC\",\n    \"#3399FF\",\n    \"#33CC00\",\n    \"#33CC33\",\n    \"#33CC66\",\n    \"#33CC99\",\n    \"#33CCCC\",\n    \"#33CCFF\",\n    \"#6600CC\",\n    \"#6600FF\",\n    \"#6633CC\",\n    \"#6633FF\",\n    \"#66CC00\",\n    \"#66CC33\",\n    \"#9900CC\",\n    \"#9900FF\",\n    \"#9933CC\",\n    \"#9933FF\",\n    \"#99CC00\",\n    \"#99CC33\",\n    \"#CC0000\",\n    \"#CC0033\",\n    \"#CC0066\",\n    \"#CC0099\",\n    \"#CC00CC\",\n    \"#CC00FF\",\n    \"#CC3300\",\n    \"#CC3333\",\n    \"#CC3366\",\n    \"#CC3399\",\n    \"#CC33CC\",\n    \"#CC33FF\",\n    \"#CC6600\",\n    \"#CC6633\",\n    \"#CC9900\",\n    \"#CC9933\",\n    \"#CCCC00\",\n    \"#CCCC33\",\n    \"#FF0000\",\n    \"#FF0033\",\n    \"#FF0066\",\n    \"#FF0099\",\n    \"#FF00CC\",\n    \"#FF00FF\",\n    \"#FF3300\",\n    \"#FF3333\",\n    \"#FF3366\",\n    \"#FF3399\",\n    \"#FF33CC\",\n    \"#FF33FF\",\n    \"#FF6600\",\n    \"#FF6633\",\n    \"#FF9900\",\n    \"#FF9933\",\n    \"#FFCC00\",\n    \"#FFCC33\"\n];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */ // eslint-disable-next-line complexity\nfunction useColors() {\n    // NB: In an Electron preload script, document will be defined but not fully\n    // initialized. Since we know we're in Chrome, we'll just detect this case\n    // explicitly\n    if (false) {}\n    // Internet Explorer and Edge do not support colors.\n    if (typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n        return false;\n    }\n    // Is webkit? http://stackoverflow.com/a/16459606/376773\n    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n    return typeof document !== \"undefined\" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n     false && (0) || // Is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n    typeof navigator !== \"undefined\" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */ function formatArgs(args) {\n    args[0] = (this.useColors ? \"%c\" : \"\") + this.namespace + (this.useColors ? \" %c\" : \" \") + args[0] + (this.useColors ? \"%c \" : \" \") + \"+\" + module.exports.humanize(this.diff);\n    if (!this.useColors) {\n        return;\n    }\n    const c = \"color: \" + this.color;\n    args.splice(1, 0, c, \"color: inherit\");\n    // The final \"%c\" is somewhat tricky, because there could be other\n    // arguments passed either before or after the %c, so we need to\n    // figure out the correct index to insert the CSS into\n    let index = 0;\n    let lastC = 0;\n    args[0].replace(/%[a-zA-Z%]/g, (match)=>{\n        if (match === \"%%\") {\n            return;\n        }\n        index++;\n        if (match === \"%c\") {\n            // We only are interested in the *last* %c\n            // (the user may have provided their own)\n            lastC = index;\n        }\n    });\n    args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */ exports.log = console.debug || console.log || (()=>{});\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */ function save(namespaces) {\n    try {\n        if (namespaces) {\n            exports.storage.setItem(\"debug\", namespaces);\n        } else {\n            exports.storage.removeItem(\"debug\");\n        }\n    } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n    }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */ function load() {\n    let r;\n    try {\n        r = exports.storage.getItem(\"debug\");\n    } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n    }\n    // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n    if (!r && typeof process !== \"undefined\" && \"env\" in process) {\n        r = process.env.DEBUG;\n    }\n    return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */ function localstorage() {\n    try {\n        // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n        // The Browser also has localStorage in the global context.\n        return localStorage;\n    } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n    }\n}\nmodule.exports = __webpack_require__(/*! ./common */ \"(middleware)/./node_modules/debug/src/common.js\")(exports);\nconst { formatters } = module.exports;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */ formatters.j = function(v) {\n    try {\n        return JSON.stringify(v);\n    } catch (error) {\n        return \"[UnexpectedJSONParseError]: \" + error.message;\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/debug/src/browser.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/debug/src/common.js":
/*!******************************************!*\
  !*** ./node_modules/debug/src/common.js ***!
  \******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */ \nfunction setup(env) {\n    createDebug.debug = createDebug;\n    createDebug.default = createDebug;\n    createDebug.coerce = coerce;\n    createDebug.disable = disable;\n    createDebug.enable = enable;\n    createDebug.enabled = enabled;\n    createDebug.humanize = __webpack_require__(/*! ms */ \"(middleware)/./node_modules/ms/index.js\");\n    createDebug.destroy = destroy;\n    Object.keys(env).forEach((key)=>{\n        createDebug[key] = env[key];\n    });\n    /**\n\t* The currently active debug mode names, and names to skip.\n\t*/ createDebug.names = [];\n    createDebug.skips = [];\n    /**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/ createDebug.formatters = {};\n    /**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/ function selectColor(namespace) {\n        let hash = 0;\n        for(let i = 0; i < namespace.length; i++){\n            hash = (hash << 5) - hash + namespace.charCodeAt(i);\n            hash |= 0; // Convert to 32bit integer\n        }\n        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n    }\n    createDebug.selectColor = selectColor;\n    /**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/ function createDebug(namespace) {\n        let prevTime;\n        let enableOverride = null;\n        let namespacesCache;\n        let enabledCache;\n        function debug(...args) {\n            // Disabled?\n            if (!debug.enabled) {\n                return;\n            }\n            const self = debug;\n            // Set `diff` timestamp\n            const curr = Number(new Date());\n            const ms = curr - (prevTime || curr);\n            self.diff = ms;\n            self.prev = prevTime;\n            self.curr = curr;\n            prevTime = curr;\n            args[0] = createDebug.coerce(args[0]);\n            if (typeof args[0] !== \"string\") {\n                // Anything else let's inspect with %O\n                args.unshift(\"%O\");\n            }\n            // Apply any `formatters` transformations\n            let index = 0;\n            args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format)=>{\n                // If we encounter an escaped % then don't increase the array index\n                if (match === \"%%\") {\n                    return \"%\";\n                }\n                index++;\n                const formatter = createDebug.formatters[format];\n                if (typeof formatter === \"function\") {\n                    const val = args[index];\n                    match = formatter.call(self, val);\n                    // Now we need to remove `args[index]` since it's inlined in the `format`\n                    args.splice(index, 1);\n                    index--;\n                }\n                return match;\n            });\n            // Apply env-specific formatting (colors, etc.)\n            createDebug.formatArgs.call(self, args);\n            const logFn = self.log || createDebug.log;\n            logFn.apply(self, args);\n        }\n        debug.namespace = namespace;\n        debug.useColors = createDebug.useColors();\n        debug.color = createDebug.selectColor(namespace);\n        debug.extend = extend;\n        debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n        Object.defineProperty(debug, \"enabled\", {\n            enumerable: true,\n            configurable: false,\n            get: ()=>{\n                if (enableOverride !== null) {\n                    return enableOverride;\n                }\n                if (namespacesCache !== createDebug.namespaces) {\n                    namespacesCache = createDebug.namespaces;\n                    enabledCache = createDebug.enabled(namespace);\n                }\n                return enabledCache;\n            },\n            set: (v)=>{\n                enableOverride = v;\n            }\n        });\n        // Env-specific initialization logic for debug instances\n        if (typeof createDebug.init === \"function\") {\n            createDebug.init(debug);\n        }\n        return debug;\n    }\n    function extend(namespace, delimiter) {\n        const newDebug = createDebug(this.namespace + (typeof delimiter === \"undefined\" ? \":\" : delimiter) + namespace);\n        newDebug.log = this.log;\n        return newDebug;\n    }\n    /**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/ function enable(namespaces) {\n        createDebug.save(namespaces);\n        createDebug.namespaces = namespaces;\n        createDebug.names = [];\n        createDebug.skips = [];\n        let i;\n        const split = (typeof namespaces === \"string\" ? namespaces : \"\").split(/[\\s,]+/);\n        const len = split.length;\n        for(i = 0; i < len; i++){\n            if (!split[i]) {\n                continue;\n            }\n            namespaces = split[i].replace(/\\*/g, \".*?\");\n            if (namespaces[0] === \"-\") {\n                createDebug.skips.push(new RegExp(\"^\" + namespaces.slice(1) + \"$\"));\n            } else {\n                createDebug.names.push(new RegExp(\"^\" + namespaces + \"$\"));\n            }\n        }\n    }\n    /**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/ function disable() {\n        const namespaces = [\n            ...createDebug.names.map(toNamespace),\n            ...createDebug.skips.map(toNamespace).map((namespace)=>\"-\" + namespace)\n        ].join(\",\");\n        createDebug.enable(\"\");\n        return namespaces;\n    }\n    /**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/ function enabled(name) {\n        if (name[name.length - 1] === \"*\") {\n            return true;\n        }\n        let i;\n        let len;\n        for(i = 0, len = createDebug.skips.length; i < len; i++){\n            if (createDebug.skips[i].test(name)) {\n                return false;\n            }\n        }\n        for(i = 0, len = createDebug.names.length; i < len; i++){\n            if (createDebug.names[i].test(name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/ function toNamespace(regexp) {\n        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, \"*\");\n    }\n    /**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/ function coerce(val) {\n        if (val instanceof Error) {\n            return val.stack || val.message;\n        }\n        return val;\n    }\n    /**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/ function destroy() {\n        console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\");\n    }\n    createDebug.enable(createDebug.load());\n    return createDebug;\n}\nmodule.exports = setup;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/debug/src/common.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/joi/dist/joi-browser.min.js":
/*!**************************************************!*\
  !*** ./node_modules/joi/dist/joi-browser.min.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\n!function(e, t) {\n     true ? module.exports = t() : 0;\n}(self, ()=>{\n    return e = {\n        7629: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8571), a = r(9474), i = r(1687), o = r(8652), l = r(8160), c = r(3292), u = r(6354), f = r(8901), h = r(9708), m = r(6914), d = r(2294), p = r(6133), g = r(1152), y = r(8863), b = r(2036), v = {\n                Base: class {\n                    constructor(e){\n                        this.type = e, this.$_root = null, this._definition = {}, this._reset();\n                    }\n                    _reset() {\n                        this._ids = new d.Ids, this._preferences = null, this._refs = new p.Manager, this._cache = null, this._valids = null, this._invalids = null, this._flags = {}, this._rules = [], this._singleRules = new Map, this.$_terms = {}, this.$_temp = {\n                            ruleset: null,\n                            whens: {}\n                        };\n                    }\n                    describe() {\n                        return s(\"function\" == typeof h.describe, \"Manifest functionality disabled\"), h.describe(this);\n                    }\n                    allow() {\n                        for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                        return l.verifyFlat(t, \"allow\"), this._values(t, \"_valids\");\n                    }\n                    alter(e) {\n                        s(e && \"object\" == typeof e && !Array.isArray(e), \"Invalid targets argument\"), s(!this._inRuleset(), \"Cannot set alterations inside a ruleset\");\n                        const t = this.clone();\n                        t.$_terms.alterations = t.$_terms.alterations || [];\n                        for(const r in e){\n                            const n = e[r];\n                            s(\"function\" == typeof n, \"Alteration adjuster for\", r, \"must be a function\"), t.$_terms.alterations.push({\n                                target: r,\n                                adjuster: n\n                            });\n                        }\n                        return t.$_temp.ruleset = !1, t;\n                    }\n                    artifact(e) {\n                        return s(void 0 !== e, \"Artifact cannot be undefined\"), s(!this._cache, \"Cannot set an artifact with a rule cache\"), this.$_setFlag(\"artifact\", e);\n                    }\n                    cast(e) {\n                        return s(!1 === e || \"string\" == typeof e, \"Invalid to value\"), s(!1 === e || this._definition.cast[e], \"Type\", this.type, \"does not support casting to\", e), this.$_setFlag(\"cast\", !1 === e ? void 0 : e);\n                    }\n                    default(e, t) {\n                        return this._default(\"default\", e, t);\n                    }\n                    description(e) {\n                        return s(e && \"string\" == typeof e, \"Description must be a non-empty string\"), this.$_setFlag(\"description\", e);\n                    }\n                    empty(e) {\n                        const t = this.clone();\n                        return void 0 !== e && (e = t.$_compile(e, {\n                            override: !1\n                        })), t.$_setFlag(\"empty\", e, {\n                            clone: !1\n                        });\n                    }\n                    error(e) {\n                        return s(e, \"Missing error\"), s(e instanceof Error || \"function\" == typeof e, \"Must provide a valid Error object or a function\"), this.$_setFlag(\"error\", e);\n                    }\n                    example(e) {\n                        let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                        return s(void 0 !== e, \"Missing example\"), l.assertOptions(t, [\n                            \"override\"\n                        ]), this._inner(\"examples\", e, {\n                            single: !0,\n                            override: t.override\n                        });\n                    }\n                    external(e, t) {\n                        return \"object\" == typeof e && (s(!t, \"Cannot combine options with description\"), t = e.description, e = e.method), s(\"function\" == typeof e, \"Method must be a function\"), s(void 0 === t || t && \"string\" == typeof t, \"Description must be a non-empty string\"), this._inner(\"externals\", {\n                            method: e,\n                            description: t\n                        }, {\n                            single: !0\n                        });\n                    }\n                    failover(e, t) {\n                        return this._default(\"failover\", e, t);\n                    }\n                    forbidden() {\n                        return this.presence(\"forbidden\");\n                    }\n                    id(e) {\n                        return e ? (s(\"string\" == typeof e, \"id must be a non-empty string\"), s(/^[^\\.]+$/.test(e), \"id cannot contain period character\"), this.$_setFlag(\"id\", e)) : this.$_setFlag(\"id\", void 0);\n                    }\n                    invalid() {\n                        for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                        return this._values(t, \"_invalids\");\n                    }\n                    label(e) {\n                        return s(e && \"string\" == typeof e, \"Label name must be a non-empty string\"), this.$_setFlag(\"label\", e);\n                    }\n                    meta(e) {\n                        return s(void 0 !== e, \"Meta cannot be undefined\"), this._inner(\"metas\", e, {\n                            single: !0\n                        });\n                    }\n                    note() {\n                        for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                        s(t.length, \"Missing notes\");\n                        for (const e of t)s(e && \"string\" == typeof e, \"Notes must be non-empty strings\");\n                        return this._inner(\"notes\", t);\n                    }\n                    only() {\n                        let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];\n                        return s(\"boolean\" == typeof e, \"Invalid mode:\", e), this.$_setFlag(\"only\", e);\n                    }\n                    optional() {\n                        return this.presence(\"optional\");\n                    }\n                    prefs(e) {\n                        s(e, \"Missing preferences\"), s(void 0 === e.context, \"Cannot override context\"), s(void 0 === e.externals, \"Cannot override externals\"), s(void 0 === e.warnings, \"Cannot override warnings\"), s(void 0 === e.debug, \"Cannot override debug\"), l.checkPreferences(e);\n                        const t = this.clone();\n                        return t._preferences = l.preferences(t._preferences, e), t;\n                    }\n                    presence(e) {\n                        return s([\n                            \"optional\",\n                            \"required\",\n                            \"forbidden\"\n                        ].includes(e), \"Unknown presence mode\", e), this.$_setFlag(\"presence\", e);\n                    }\n                    raw() {\n                        let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];\n                        return this.$_setFlag(\"result\", e ? \"raw\" : void 0);\n                    }\n                    result(e) {\n                        return s([\n                            \"raw\",\n                            \"strip\"\n                        ].includes(e), \"Unknown result mode\", e), this.$_setFlag(\"result\", e);\n                    }\n                    required() {\n                        return this.presence(\"required\");\n                    }\n                    strict(e) {\n                        const t = this.clone(), r = void 0 !== e && !e;\n                        return t._preferences = l.preferences(t._preferences, {\n                            convert: r\n                        }), t;\n                    }\n                    strip() {\n                        let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];\n                        return this.$_setFlag(\"result\", e ? \"strip\" : void 0);\n                    }\n                    tag() {\n                        for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                        s(t.length, \"Missing tags\");\n                        for (const e of t)s(e && \"string\" == typeof e, \"Tags must be non-empty strings\");\n                        return this._inner(\"tags\", t);\n                    }\n                    unit(e) {\n                        return s(e && \"string\" == typeof e, \"Unit name must be a non-empty string\"), this.$_setFlag(\"unit\", e);\n                    }\n                    valid() {\n                        for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                        l.verifyFlat(t, \"valid\");\n                        const s = this.allow(...t);\n                        return s.$_setFlag(\"only\", !!s._valids, {\n                            clone: !1\n                        }), s;\n                    }\n                    when(e, t) {\n                        const r = this.clone();\n                        r.$_terms.whens || (r.$_terms.whens = []);\n                        const n = c.when(r, e, t);\n                        if (![\n                            \"any\",\n                            \"link\"\n                        ].includes(r.type)) {\n                            const e = n.is ? [\n                                n\n                            ] : n.switch;\n                            for (const t of e)s(!t.then || \"any\" === t.then.type || t.then.type === r.type, \"Cannot combine\", r.type, \"with\", t.then && t.then.type), s(!t.otherwise || \"any\" === t.otherwise.type || t.otherwise.type === r.type, \"Cannot combine\", r.type, \"with\", t.otherwise && t.otherwise.type);\n                        }\n                        return r.$_terms.whens.push(n), r.$_mutateRebuild();\n                    }\n                    cache(e) {\n                        s(!this._inRuleset(), \"Cannot set caching inside a ruleset\"), s(!this._cache, \"Cannot override schema cache\"), s(void 0 === this._flags.artifact, \"Cannot cache a rule with an artifact\");\n                        const t = this.clone();\n                        return t._cache = e || o.provider.provision(), t.$_temp.ruleset = !1, t;\n                    }\n                    clone() {\n                        const e = Object.create(Object.getPrototypeOf(this));\n                        return this._assign(e);\n                    }\n                    concat(e) {\n                        s(l.isSchema(e), \"Invalid schema object\"), s(\"any\" === this.type || \"any\" === e.type || e.type === this.type, \"Cannot merge type\", this.type, \"with another type:\", e.type), s(!this._inRuleset(), \"Cannot concatenate onto a schema with open ruleset\"), s(!e._inRuleset(), \"Cannot concatenate a schema with open ruleset\");\n                        let t = this.clone();\n                        if (\"any\" === this.type && \"any\" !== e.type) {\n                            const r = e.clone();\n                            for (const e of Object.keys(t))\"type\" !== e && (r[e] = t[e]);\n                            t = r;\n                        }\n                        t._ids.concat(e._ids), t._refs.register(e, p.toSibling), t._preferences = t._preferences ? l.preferences(t._preferences, e._preferences) : e._preferences, t._valids = b.merge(t._valids, e._valids, e._invalids), t._invalids = b.merge(t._invalids, e._invalids, e._valids);\n                        for (const r of e._singleRules.keys())t._singleRules.has(r) && (t._rules = t._rules.filter((e)=>e.keep || e.name !== r), t._singleRules.delete(r));\n                        for (const r of e._rules)e._definition.rules[r.method].multi || t._singleRules.set(r.name, r), t._rules.push(r);\n                        if (t._flags.empty && e._flags.empty) {\n                            t._flags.empty = t._flags.empty.concat(e._flags.empty);\n                            const r = Object.assign({}, e._flags);\n                            delete r.empty, i(t._flags, r);\n                        } else if (e._flags.empty) {\n                            t._flags.empty = e._flags.empty;\n                            const r = Object.assign({}, e._flags);\n                            delete r.empty, i(t._flags, r);\n                        } else i(t._flags, e._flags);\n                        for(const r in e.$_terms){\n                            const s = e.$_terms[r];\n                            s ? t.$_terms[r] ? t.$_terms[r] = t.$_terms[r].concat(s) : t.$_terms[r] = s.slice() : t.$_terms[r] || (t.$_terms[r] = s);\n                        }\n                        return this.$_root._tracer && this.$_root._tracer._combine(t, [\n                            this,\n                            e\n                        ]), t.$_mutateRebuild();\n                    }\n                    extend(e) {\n                        return s(!e.base, \"Cannot extend type with another base\"), f.type(this, e);\n                    }\n                    extract(e) {\n                        return e = Array.isArray(e) ? e : e.split(\".\"), this._ids.reach(e);\n                    }\n                    fork(e, t) {\n                        s(!this._inRuleset(), \"Cannot fork inside a ruleset\");\n                        let r = this;\n                        for (let s of [].concat(e))s = Array.isArray(s) ? s : s.split(\".\"), r = r._ids.fork(s, t, r);\n                        return r.$_temp.ruleset = !1, r;\n                    }\n                    rule(e) {\n                        const t = this._definition;\n                        l.assertOptions(e, Object.keys(t.modifiers)), s(!1 !== this.$_temp.ruleset, \"Cannot apply rules to empty ruleset or the last rule added does not support rule properties\");\n                        const r = null === this.$_temp.ruleset ? this._rules.length - 1 : this.$_temp.ruleset;\n                        s(r >= 0 && r < this._rules.length, \"Cannot apply rules to empty ruleset\");\n                        const a = this.clone();\n                        for(let i = r; i < a._rules.length; ++i){\n                            const r = a._rules[i], o = n(r);\n                            for(const n in e)t.modifiers[n](o, e[n]), s(o.name === r.name, \"Cannot change rule name\");\n                            a._rules[i] = o, a._singleRules.get(o.name) === r && a._singleRules.set(o.name, o);\n                        }\n                        return a.$_temp.ruleset = !1, a.$_mutateRebuild();\n                    }\n                    get ruleset() {\n                        s(!this._inRuleset(), \"Cannot start a new ruleset without closing the previous one\");\n                        const e = this.clone();\n                        return e.$_temp.ruleset = e._rules.length, e;\n                    }\n                    get $() {\n                        return this.ruleset;\n                    }\n                    tailor(e) {\n                        e = [].concat(e), s(!this._inRuleset(), \"Cannot tailor inside a ruleset\");\n                        let t = this;\n                        if (this.$_terms.alterations) for (const { target: r, adjuster: n } of this.$_terms.alterations)e.includes(r) && (t = n(t), s(l.isSchema(t), \"Alteration adjuster for\", r, \"failed to return a schema object\"));\n                        return t = t.$_modify({\n                            each: (t)=>t.tailor(e),\n                            ref: !1\n                        }), t.$_temp.ruleset = !1, t.$_mutateRebuild();\n                    }\n                    tracer() {\n                        return g.location ? g.location(this) : this;\n                    }\n                    validate(e, t) {\n                        return y.entry(e, this, t);\n                    }\n                    validateAsync(e, t) {\n                        return y.entryAsync(e, this, t);\n                    }\n                    $_addRule(e) {\n                        \"string\" == typeof e && (e = {\n                            name: e\n                        }), s(e && \"object\" == typeof e, \"Invalid options\"), s(e.name && \"string\" == typeof e.name, \"Invalid rule name\");\n                        for(const t in e)s(\"_\" !== t[0], \"Cannot set private rule properties\");\n                        const t = Object.assign({}, e);\n                        t._resolve = [], t.method = t.method || t.name;\n                        const r = this._definition.rules[t.method], n = t.args;\n                        s(r, \"Unknown rule\", t.method);\n                        const a = this.clone();\n                        if (n) {\n                            s(1 === Object.keys(n).length || Object.keys(n).length === this._definition.rules[t.name].args.length, \"Invalid rule definition for\", this.type, t.name);\n                            for(const e in n){\n                                let i = n[e];\n                                if (r.argsByName) {\n                                    const o = r.argsByName.get(e);\n                                    if (o.ref && l.isResolvable(i)) t._resolve.push(e), a.$_mutateRegister(i);\n                                    else if (o.normalize && (i = o.normalize(i), n[e] = i), o.assert) {\n                                        const t = l.validateArg(i, e, o);\n                                        s(!t, t, \"or reference\");\n                                    }\n                                }\n                                void 0 !== i ? n[e] = i : delete n[e];\n                            }\n                        }\n                        return r.multi || (a._ruleRemove(t.name, {\n                            clone: !1\n                        }), a._singleRules.set(t.name, t)), !1 === a.$_temp.ruleset && (a.$_temp.ruleset = null), r.priority ? a._rules.unshift(t) : a._rules.push(t), a;\n                    }\n                    $_compile(e, t) {\n                        return c.schema(this.$_root, e, t);\n                    }\n                    $_createError(e, t, r, s, n) {\n                        let a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {};\n                        const i = !1 !== a.flags ? this._flags : {}, o = a.messages ? m.merge(this._definition.messages, a.messages) : this._definition.messages;\n                        return new u.Report(e, t, r, i, o, s, n);\n                    }\n                    $_getFlag(e) {\n                        return this._flags[e];\n                    }\n                    $_getRule(e) {\n                        return this._singleRules.get(e);\n                    }\n                    $_mapLabels(e) {\n                        return e = Array.isArray(e) ? e : e.split(\".\"), this._ids.labels(e);\n                    }\n                    $_match(e, t, r, s) {\n                        (r = Object.assign({}, r)).abortEarly = !0, r._externals = !1, t.snapshot();\n                        const n = !y.validate(e, this, t, r, s).errors;\n                        return t.restore(), n;\n                    }\n                    $_modify(e) {\n                        return l.assertOptions(e, [\n                            \"each\",\n                            \"once\",\n                            \"ref\",\n                            \"schema\"\n                        ]), d.schema(this, e) || this;\n                    }\n                    $_mutateRebuild() {\n                        return s(!this._inRuleset(), \"Cannot add this rule inside a ruleset\"), this._refs.reset(), this._ids.reset(), this.$_modify({\n                            each: (e, t)=>{\n                                let { source: r, name: s, path: n, key: a } = t;\n                                const i = this._definition[r][s] && this._definition[r][s].register;\n                                !1 !== i && this.$_mutateRegister(e, {\n                                    family: i,\n                                    key: a\n                                });\n                            }\n                        }), this._definition.rebuild && this._definition.rebuild(this), this.$_temp.ruleset = !1, this;\n                    }\n                    $_mutateRegister(e) {\n                        let { family: t, key: r } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                        this._refs.register(e, t), this._ids.register(e, {\n                            key: r\n                        });\n                    }\n                    $_property(e) {\n                        return this._definition.properties[e];\n                    }\n                    $_reach(e) {\n                        return this._ids.reach(e);\n                    }\n                    $_rootReferences() {\n                        return this._refs.roots();\n                    }\n                    $_setFlag(e, t) {\n                        let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                        s(\"_\" === e[0] || !this._inRuleset(), \"Cannot set flag inside a ruleset\");\n                        const n = this._definition.flags[e] || {};\n                        if (a(t, n.default) && (t = void 0), a(t, this._flags[e])) return this;\n                        const i = !1 !== r.clone ? this.clone() : this;\n                        return void 0 !== t ? (i._flags[e] = t, i.$_mutateRegister(t)) : delete i._flags[e], \"_\" !== e[0] && (i.$_temp.ruleset = !1), i;\n                    }\n                    $_parent(e) {\n                        for(var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), s = 1; s < t; s++)r[s - 1] = arguments[s];\n                        return this[e][l.symbols.parent].call(this, ...r);\n                    }\n                    $_validate(e, t, r) {\n                        return y.validate(e, this, t, r);\n                    }\n                    _assign(e) {\n                        e.type = this.type, e.$_root = this.$_root, e.$_temp = Object.assign({}, this.$_temp), e.$_temp.whens = {}, e._ids = this._ids.clone(), e._preferences = this._preferences, e._valids = this._valids && this._valids.clone(), e._invalids = this._invalids && this._invalids.clone(), e._rules = this._rules.slice(), e._singleRules = n(this._singleRules, {\n                            shallow: !0\n                        }), e._refs = this._refs.clone(), e._flags = Object.assign({}, this._flags), e._cache = null, e.$_terms = {};\n                        for(const t in this.$_terms)e.$_terms[t] = this.$_terms[t] ? this.$_terms[t].slice() : null;\n                        e.$_super = {};\n                        for(const t in this.$_super)e.$_super[t] = this._super[t].bind(e);\n                        return e;\n                    }\n                    _bare() {\n                        const e = this.clone();\n                        e._reset();\n                        const t = e._definition.terms;\n                        for(const r in t){\n                            const s = t[r];\n                            e.$_terms[r] = s.init;\n                        }\n                        return e.$_mutateRebuild();\n                    }\n                    _default(e, t) {\n                        let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                        return l.assertOptions(r, \"literal\"), s(void 0 !== t, \"Missing\", e, \"value\"), s(\"function\" == typeof t || !r.literal, \"Only function value supports literal option\"), \"function\" == typeof t && r.literal && (t = {\n                            [l.symbols.literal]: !0,\n                            literal: t\n                        }), this.$_setFlag(e, t);\n                    }\n                    _generate(e, t, r) {\n                        if (!this.$_terms.whens) return {\n                            schema: this\n                        };\n                        const s = [], n = [];\n                        for(let a = 0; a < this.$_terms.whens.length; ++a){\n                            const i = this.$_terms.whens[a];\n                            if (i.concat) {\n                                s.push(i.concat), n.push(`${a}.concat`);\n                                continue;\n                            }\n                            const o = i.ref ? i.ref.resolve(e, t, r) : e, l = i.is ? [\n                                i\n                            ] : i.switch, c = n.length;\n                            for(let c = 0; c < l.length; ++c){\n                                const { is: u, then: f, otherwise: h } = l[c], m = `${a}${i.switch ? \".\" + c : \"\"}`;\n                                if (u.$_match(o, t.nest(u, `${m}.is`), r)) {\n                                    if (f) {\n                                        const a = t.localize([\n                                            ...t.path,\n                                            `${m}.then`\n                                        ], t.ancestors, t.schemas), { schema: i, id: o } = f._generate(e, a, r);\n                                        s.push(i), n.push(`${m}.then${o ? `(${o})` : \"\"}`);\n                                        break;\n                                    }\n                                } else if (h) {\n                                    const a = t.localize([\n                                        ...t.path,\n                                        `${m}.otherwise`\n                                    ], t.ancestors, t.schemas), { schema: i, id: o } = h._generate(e, a, r);\n                                    s.push(i), n.push(`${m}.otherwise${o ? `(${o})` : \"\"}`);\n                                    break;\n                                }\n                            }\n                            if (i.break && n.length > c) break;\n                        }\n                        const a = n.join(\", \");\n                        if (t.mainstay.tracer.debug(t, \"rule\", \"when\", a), !a) return {\n                            schema: this\n                        };\n                        if (!t.mainstay.tracer.active && this.$_temp.whens[a]) return {\n                            schema: this.$_temp.whens[a],\n                            id: a\n                        };\n                        let i = this;\n                        this._definition.generate && (i = this._definition.generate(this, e, t, r));\n                        for (const e of s)i = i.concat(e);\n                        return this.$_root._tracer && this.$_root._tracer._combine(i, [\n                            this,\n                            ...s\n                        ]), this.$_temp.whens[a] = i, {\n                            schema: i,\n                            id: a\n                        };\n                    }\n                    _inner(e, t) {\n                        let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                        s(!this._inRuleset(), `Cannot set ${e} inside a ruleset`);\n                        const n = this.clone();\n                        return n.$_terms[e] && !r.override || (n.$_terms[e] = []), r.single ? n.$_terms[e].push(t) : n.$_terms[e].push(...t), n.$_temp.ruleset = !1, n;\n                    }\n                    _inRuleset() {\n                        return null !== this.$_temp.ruleset && !1 !== this.$_temp.ruleset;\n                    }\n                    _ruleRemove(e) {\n                        let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                        if (!this._singleRules.has(e)) return this;\n                        const r = !1 !== t.clone ? this.clone() : this;\n                        r._singleRules.delete(e);\n                        const s = [];\n                        for(let t = 0; t < r._rules.length; ++t){\n                            const n = r._rules[t];\n                            n.name !== e || n.keep ? s.push(n) : r._inRuleset() && t < r.$_temp.ruleset && --r.$_temp.ruleset;\n                        }\n                        return r._rules = s, r;\n                    }\n                    _values(e, t) {\n                        l.verifyFlat(e, t.slice(1, -1));\n                        const r = this.clone(), n = e[0] === l.symbols.override;\n                        if (n && (e = e.slice(1)), !r[t] && e.length ? r[t] = new b : n && (r[t] = e.length ? new b : null, r.$_mutateRebuild()), !r[t]) return r;\n                        n && r[t].override();\n                        for (const n of e){\n                            s(void 0 !== n, \"Cannot call allow/valid/invalid with undefined\"), s(n !== l.symbols.override, \"Override must be the first value\");\n                            const e = \"_invalids\" === t ? \"_valids\" : \"_invalids\";\n                            r[e] && (r[e].remove(n), r[e].length || (s(\"_valids\" === t || !r._flags.only, \"Setting invalid value\", n, \"leaves schema rejecting all values due to previous valid rule\"), r[e] = null)), r[t].add(n, r._refs);\n                        }\n                        return r;\n                    }\n                }\n            };\n            v.Base.prototype[l.symbols.any] = {\n                version: l.version,\n                compile: c.compile,\n                root: \"$_root\"\n            }, v.Base.prototype.isImmutable = !0, v.Base.prototype.deny = v.Base.prototype.invalid, v.Base.prototype.disallow = v.Base.prototype.invalid, v.Base.prototype.equal = v.Base.prototype.valid, v.Base.prototype.exist = v.Base.prototype.required, v.Base.prototype.not = v.Base.prototype.invalid, v.Base.prototype.options = v.Base.prototype.prefs, v.Base.prototype.preferences = v.Base.prototype.prefs, e.exports = new v.Base;\n        },\n        8652: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8571), a = r(8160), i = {\n                max: 1e3,\n                supported: new Set([\n                    \"undefined\",\n                    \"boolean\",\n                    \"number\",\n                    \"string\"\n                ])\n            };\n            t.provider = {\n                provision: (e)=>new i.Cache(e)\n            }, i.Cache = class {\n                constructor(){\n                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                    a.assertOptions(e, [\n                        \"max\"\n                    ]), s(void 0 === e.max || e.max && e.max > 0 && isFinite(e.max), \"Invalid max cache size\"), this._max = e.max || i.max, this._map = new Map, this._list = new i.List;\n                }\n                get length() {\n                    return this._map.size;\n                }\n                set(e, t) {\n                    if (null !== e && !i.supported.has(typeof e)) return;\n                    let r = this._map.get(e);\n                    if (r) return r.value = t, void this._list.first(r);\n                    r = this._list.unshift({\n                        key: e,\n                        value: t\n                    }), this._map.set(e, r), this._compact();\n                }\n                get(e) {\n                    const t = this._map.get(e);\n                    if (t) return this._list.first(t), n(t.value);\n                }\n                _compact() {\n                    if (this._map.size > this._max) {\n                        const e = this._list.pop();\n                        this._map.delete(e.key);\n                    }\n                }\n            }, i.List = class {\n                constructor(){\n                    this.tail = null, this.head = null;\n                }\n                unshift(e) {\n                    return e.next = null, e.prev = this.head, this.head && (this.head.next = e), this.head = e, this.tail || (this.tail = e), e;\n                }\n                first(e) {\n                    e !== this.head && (this._remove(e), this.unshift(e));\n                }\n                pop() {\n                    return this._remove(this.tail);\n                }\n                _remove(e) {\n                    const { next: t, prev: r } = e;\n                    return t.prev = r, r && (r.next = t), e === this.tail && (this.tail = t), e.prev = null, e.next = null, e;\n                }\n            };\n        },\n        8160: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(7916), a = r(5934);\n            let i, o;\n            const l = {\n                isoDate: /^(?:[-+]\\d{2})?(?:\\d{4}(?!\\d{2}\\b))(?:(-?)(?:(?:0[1-9]|1[0-2])(?:\\1(?:[12]\\d|0[1-9]|3[01]))?|W(?:[0-4]\\d|5[0-2])(?:-?[1-7])?|(?:00[1-9]|0[1-9]\\d|[12]\\d{2}|3(?:[0-5]\\d|6[1-6])))(?![T]$|[T][\\d]+Z$)(?:[T\\s](?:(?:(?:[01]\\d|2[0-3])(?:(:?)[0-5]\\d)?|24\\:?00)(?:[.,]\\d+(?!:))?)(?:\\2[0-5]\\d(?:[.,]\\d+)?)?(?:[Z]|(?:[+-])(?:[01]\\d|2[0-3])(?::?[0-5]\\d)?)?)?)?$/\n            };\n            t.version = a.version, t.defaults = {\n                abortEarly: !0,\n                allowUnknown: !1,\n                artifacts: !1,\n                cache: !0,\n                context: null,\n                convert: !0,\n                dateFormat: \"iso\",\n                errors: {\n                    escapeHtml: !1,\n                    label: \"path\",\n                    language: null,\n                    render: !0,\n                    stack: !1,\n                    wrap: {\n                        label: '\"',\n                        array: \"[]\"\n                    }\n                },\n                externals: !0,\n                messages: {},\n                nonEnumerables: !1,\n                noDefaults: !1,\n                presence: \"optional\",\n                skipFunctions: !1,\n                stripUnknown: !1,\n                warnings: !1\n            }, t.symbols = {\n                any: Symbol.for(\"@hapi/joi/schema\"),\n                arraySingle: Symbol(\"arraySingle\"),\n                deepDefault: Symbol(\"deepDefault\"),\n                errors: Symbol(\"errors\"),\n                literal: Symbol(\"literal\"),\n                override: Symbol(\"override\"),\n                parent: Symbol(\"parent\"),\n                prefs: Symbol(\"prefs\"),\n                ref: Symbol(\"ref\"),\n                template: Symbol(\"template\"),\n                values: Symbol(\"values\")\n            }, t.assertOptions = function(e, t) {\n                let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : \"Options\";\n                s(e && \"object\" == typeof e && !Array.isArray(e), \"Options must be of type object\");\n                const n = Object.keys(e).filter((e)=>!t.includes(e));\n                s(0 === n.length, `${r} contain unknown keys: ${n}`);\n            }, t.checkPreferences = function(e) {\n                o = o || r(3378);\n                const t = o.preferences.validate(e);\n                if (t.error) throw new n([\n                    t.error.details[0].message\n                ]);\n            }, t.compare = function(e, t, r) {\n                switch(r){\n                    case \"=\":\n                        return e === t;\n                    case \">\":\n                        return e > t;\n                    case \"<\":\n                        return e < t;\n                    case \">=\":\n                        return e >= t;\n                    case \"<=\":\n                        return e <= t;\n                }\n            }, t.default = function(e, t) {\n                return void 0 === e ? t : e;\n            }, t.isIsoDate = function(e) {\n                return l.isoDate.test(e);\n            }, t.isNumber = function(e) {\n                return \"number\" == typeof e && !isNaN(e);\n            }, t.isResolvable = function(e) {\n                return !!e && (e[t.symbols.ref] || e[t.symbols.template]);\n            }, t.isSchema = function(e) {\n                let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                const n = e && e[t.symbols.any];\n                return !!n && (s(r.legacy || n.version === t.version, \"Cannot mix different versions of joi schemas\"), !0);\n            }, t.isValues = function(e) {\n                return e[t.symbols.values];\n            }, t.limit = function(e) {\n                return Number.isSafeInteger(e) && e >= 0;\n            }, t.preferences = function(e, s) {\n                i = i || r(6914), e = e || {}, s = s || {};\n                const n = Object.assign({}, e, s);\n                return s.errors && e.errors && (n.errors = Object.assign({}, e.errors, s.errors), n.errors.wrap = Object.assign({}, e.errors.wrap, s.errors.wrap)), s.messages && (n.messages = i.compile(s.messages, e.messages)), delete n[t.symbols.prefs], n;\n            }, t.tryWithPath = function(e, t) {\n                let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                try {\n                    return e();\n                } catch (e) {\n                    throw void 0 !== e.path ? e.path = t + \".\" + e.path : e.path = t, r.append && (e.message = `${e.message} (${e.path})`), e;\n                }\n            }, t.validateArg = function(e, r, s) {\n                let { assert: n, message: a } = s;\n                if (t.isSchema(n)) {\n                    const t = n.validate(e);\n                    if (!t.error) return;\n                    return t.error.message;\n                }\n                if (!n(e)) return r ? `${r} ${a}` : a;\n            }, t.verifyFlat = function(e, t) {\n                for (const r of e)s(!Array.isArray(r), \"Method no longer accepts array arguments:\", t);\n            };\n        },\n        3292: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8160), a = r(6133), i = {};\n            t.schema = function(e, t) {\n                let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                n.assertOptions(r, [\n                    \"appendPath\",\n                    \"override\"\n                ]);\n                try {\n                    return i.schema(e, t, r);\n                } catch (e) {\n                    throw r.appendPath && void 0 !== e.path && (e.message = `${e.message} (${e.path})`), e;\n                }\n            }, i.schema = function(e, t, r) {\n                s(void 0 !== t, \"Invalid undefined schema\"), Array.isArray(t) && (s(t.length, \"Invalid empty array schema\"), 1 === t.length && (t = t[0]));\n                const a = function(t) {\n                    for(var s = arguments.length, n = new Array(s > 1 ? s - 1 : 0), a = 1; a < s; a++)n[a - 1] = arguments[a];\n                    return !1 !== r.override ? t.valid(e.override, ...n) : t.valid(...n);\n                };\n                if (i.simple(t)) return a(e, t);\n                if (\"function\" == typeof t) return e.custom(t);\n                if (s(\"object\" == typeof t, \"Invalid schema content:\", typeof t), n.isResolvable(t)) return a(e, t);\n                if (n.isSchema(t)) return t;\n                if (Array.isArray(t)) {\n                    for (const r of t)if (!i.simple(r)) return e.alternatives().try(...t);\n                    return a(e, ...t);\n                }\n                return t instanceof RegExp ? e.string().regex(t) : t instanceof Date ? a(e.date(), t) : (s(Object.getPrototypeOf(t) === Object.getPrototypeOf({}), \"Schema can only contain plain objects\"), e.object().keys(t));\n            }, t.ref = function(e, t) {\n                return a.isRef(e) ? e : a.create(e, t);\n            }, t.compile = function(e, r) {\n                let a = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                n.assertOptions(a, [\n                    \"legacy\"\n                ]);\n                const o = r && r[n.symbols.any];\n                if (o) return s(a.legacy || o.version === n.version, \"Cannot mix different versions of joi schemas:\", o.version, n.version), r;\n                if (\"object\" != typeof r || !a.legacy) return t.schema(e, r, {\n                    appendPath: !0\n                });\n                const l = i.walk(r);\n                return l ? l.compile(l.root, r) : t.schema(e, r, {\n                    appendPath: !0\n                });\n            }, i.walk = function(e) {\n                if (\"object\" != typeof e) return null;\n                if (Array.isArray(e)) {\n                    for (const t of e){\n                        const e = i.walk(t);\n                        if (e) return e;\n                    }\n                    return null;\n                }\n                const t = e[n.symbols.any];\n                if (t) return {\n                    root: e[t.root],\n                    compile: t.compile\n                };\n                s(Object.getPrototypeOf(e) === Object.getPrototypeOf({}), \"Schema can only contain plain objects\");\n                for(const t in e){\n                    const r = i.walk(e[t]);\n                    if (r) return r;\n                }\n                return null;\n            }, i.simple = function(e) {\n                return null === e || [\n                    \"boolean\",\n                    \"string\",\n                    \"number\"\n                ].includes(typeof e);\n            }, t.when = function(e, r, o) {\n                if (void 0 === o && (s(r && \"object\" == typeof r, \"Missing options\"), o = r, r = a.create(\".\")), Array.isArray(o) && (o = {\n                    switch: o\n                }), n.assertOptions(o, [\n                    \"is\",\n                    \"not\",\n                    \"then\",\n                    \"otherwise\",\n                    \"switch\",\n                    \"break\"\n                ]), n.isSchema(r)) return s(void 0 === o.is, '\"is\" can not be used with a schema condition'), s(void 0 === o.not, '\"not\" can not be used with a schema condition'), s(void 0 === o.switch, '\"switch\" can not be used with a schema condition'), i.condition(e, {\n                    is: r,\n                    then: o.then,\n                    otherwise: o.otherwise,\n                    break: o.break\n                });\n                if (s(a.isRef(r) || \"string\" == typeof r, \"Invalid condition:\", r), s(void 0 === o.not || void 0 === o.is, 'Cannot combine \"is\" with \"not\"'), void 0 === o.switch) {\n                    let l = o;\n                    void 0 !== o.not && (l = {\n                        is: o.not,\n                        then: o.otherwise,\n                        otherwise: o.then,\n                        break: o.break\n                    });\n                    let c = void 0 !== l.is ? e.$_compile(l.is) : e.$_root.invalid(null, !1, 0, \"\").required();\n                    return s(void 0 !== l.then || void 0 !== l.otherwise, 'options must have at least one of \"then\", \"otherwise\", or \"switch\"'), s(void 0 === l.break || void 0 === l.then || void 0 === l.otherwise, \"Cannot specify then, otherwise, and break all together\"), void 0 === o.is || a.isRef(o.is) || n.isSchema(o.is) || (c = c.required()), i.condition(e, {\n                        ref: t.ref(r),\n                        is: c,\n                        then: l.then,\n                        otherwise: l.otherwise,\n                        break: l.break\n                    });\n                }\n                s(Array.isArray(o.switch), '\"switch\" must be an array'), s(void 0 === o.is, 'Cannot combine \"switch\" with \"is\"'), s(void 0 === o.not, 'Cannot combine \"switch\" with \"not\"'), s(void 0 === o.then, 'Cannot combine \"switch\" with \"then\"');\n                const l = {\n                    ref: t.ref(r),\n                    switch: [],\n                    break: o.break\n                };\n                for(let t = 0; t < o.switch.length; ++t){\n                    const r = o.switch[t], i = t === o.switch.length - 1;\n                    n.assertOptions(r, i ? [\n                        \"is\",\n                        \"then\",\n                        \"otherwise\"\n                    ] : [\n                        \"is\",\n                        \"then\"\n                    ]), s(void 0 !== r.is, 'Switch statement missing \"is\"'), s(void 0 !== r.then, 'Switch statement missing \"then\"');\n                    const c = {\n                        is: e.$_compile(r.is),\n                        then: e.$_compile(r.then)\n                    };\n                    if (a.isRef(r.is) || n.isSchema(r.is) || (c.is = c.is.required()), i) {\n                        s(void 0 === o.otherwise || void 0 === r.otherwise, 'Cannot specify \"otherwise\" inside and outside a \"switch\"');\n                        const t = void 0 !== o.otherwise ? o.otherwise : r.otherwise;\n                        void 0 !== t && (s(void 0 === l.break, \"Cannot specify both otherwise and break\"), c.otherwise = e.$_compile(t));\n                    }\n                    l.switch.push(c);\n                }\n                return l;\n            }, i.condition = function(e, t) {\n                for (const r of [\n                    \"then\",\n                    \"otherwise\"\n                ])void 0 === t[r] ? delete t[r] : t[r] = e.$_compile(t[r]);\n                return t;\n            };\n        },\n        6354: (e, t, r)=>{\n            \"use strict\";\n            const s = r(5688), n = r(8160), a = r(3328);\n            t.Report = class {\n                constructor(e, r, s, n, a, i, o){\n                    if (this.code = e, this.flags = n, this.messages = a, this.path = i.path, this.prefs = o, this.state = i, this.value = r, this.message = null, this.template = null, this.local = s || {}, this.local.label = t.label(this.flags, this.state, this.prefs, this.messages), void 0 === this.value || this.local.hasOwnProperty(\"value\") || (this.local.value = this.value), this.path.length) {\n                        const e = this.path[this.path.length - 1];\n                        \"object\" != typeof e && (this.local.key = e);\n                    }\n                }\n                _setTemplate(e) {\n                    if (this.template = e, !this.flags.label && 0 === this.path.length) {\n                        const e = this._template(this.template, \"root\");\n                        e && (this.local.label = e);\n                    }\n                }\n                toString() {\n                    if (this.message) return this.message;\n                    const e = this.code;\n                    if (!this.prefs.errors.render) return this.code;\n                    const t = this._template(this.template) || this._template(this.prefs.messages) || this._template(this.messages);\n                    return void 0 === t ? `Error code \"${e}\" is not defined, your custom type is missing the correct messages definition` : (this.message = t.render(this.value, this.state, this.prefs, this.local, {\n                        errors: this.prefs.errors,\n                        messages: [\n                            this.prefs.messages,\n                            this.messages\n                        ]\n                    }), this.prefs.errors.label || (this.message = this.message.replace(/^\"\" /, \"\").trim()), this.message);\n                }\n                _template(e, r) {\n                    return t.template(this.value, e, r || this.code, this.state, this.prefs);\n                }\n            }, t.path = function(e) {\n                let t = \"\";\n                for (const r of e)\"object\" != typeof r && (\"string\" == typeof r ? (t && (t += \".\"), t += r) : t += `[${r}]`);\n                return t;\n            }, t.template = function(e, t, r, s, i) {\n                if (!t) return;\n                if (a.isTemplate(t)) return \"root\" !== r ? t : null;\n                let o = i.errors.language;\n                if (n.isResolvable(o) && (o = o.resolve(e, s, i)), o && t[o]) {\n                    if (void 0 !== t[o][r]) return t[o][r];\n                    if (void 0 !== t[o][\"*\"]) return t[o][\"*\"];\n                }\n                return t[r] ? t[r] : t[\"*\"];\n            }, t.label = function(e, r, s, n) {\n                if (e.label) return e.label;\n                if (!s.errors.label) return \"\";\n                let a = r.path;\n                \"key\" === s.errors.label && r.path.length > 1 && (a = r.path.slice(-1));\n                return t.path(a) || t.template(null, s.messages, \"root\", r, s) || n && t.template(null, n, \"root\", r, s) || \"value\";\n            }, t.process = function(e, r, s) {\n                if (!e) return null;\n                const { override: n, message: a, details: i } = t.details(e);\n                if (n) return n;\n                if (s.errors.stack) return new t.ValidationError(a, i, r);\n                const o = Error.stackTraceLimit;\n                Error.stackTraceLimit = 0;\n                const l = new t.ValidationError(a, i, r);\n                return Error.stackTraceLimit = o, l;\n            }, t.details = function(e) {\n                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = [];\n                const s = [];\n                for (const n of e){\n                    if (n instanceof Error) {\n                        if (!1 !== t.override) return {\n                            override: n\n                        };\n                        const e = n.toString();\n                        r.push(e), s.push({\n                            message: e,\n                            type: \"override\",\n                            context: {\n                                error: n\n                            }\n                        });\n                        continue;\n                    }\n                    const e = n.toString();\n                    r.push(e), s.push({\n                        message: e,\n                        path: n.path.filter((e)=>\"object\" != typeof e),\n                        type: n.code,\n                        context: n.local\n                    });\n                }\n                return r.length > 1 && (r = [\n                    ...new Set(r)\n                ]), {\n                    message: r.join(\". \"),\n                    details: s\n                };\n            }, t.ValidationError = class extends Error {\n                constructor(e, t, r){\n                    super(e), this._original = r, this.details = t;\n                }\n                static isError(e) {\n                    return e instanceof t.ValidationError;\n                }\n            }, t.ValidationError.prototype.isJoi = !0, t.ValidationError.prototype.name = \"ValidationError\", t.ValidationError.prototype.annotate = s.error;\n        },\n        8901: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8571), a = r(8160), i = r(6914), o = {};\n            t.type = function(e, t) {\n                const r = Object.getPrototypeOf(e), l = n(r), c = e._assign(Object.create(l)), u = Object.assign({}, t);\n                delete u.base, l._definition = u;\n                const f = r._definition || {};\n                u.messages = i.merge(f.messages, u.messages), u.properties = Object.assign({}, f.properties, u.properties), c.type = u.type, u.flags = Object.assign({}, f.flags, u.flags);\n                const h = Object.assign({}, f.terms);\n                if (u.terms) for(const e in u.terms){\n                    const t = u.terms[e];\n                    s(void 0 === c.$_terms[e], \"Invalid term override for\", u.type, e), c.$_terms[e] = t.init, h[e] = t;\n                }\n                u.terms = h, u.args || (u.args = f.args), u.prepare = o.prepare(u.prepare, f.prepare), u.coerce && (\"function\" == typeof u.coerce && (u.coerce = {\n                    method: u.coerce\n                }), u.coerce.from && !Array.isArray(u.coerce.from) && (u.coerce = {\n                    method: u.coerce.method,\n                    from: [].concat(u.coerce.from)\n                })), u.coerce = o.coerce(u.coerce, f.coerce), u.validate = o.validate(u.validate, f.validate);\n                const m = Object.assign({}, f.rules);\n                if (u.rules) for(const e in u.rules){\n                    const t = u.rules[e];\n                    s(\"object\" == typeof t, \"Invalid rule definition for\", u.type, e);\n                    let r = t.method;\n                    if (void 0 === r && (r = function() {\n                        return this.$_addRule(e);\n                    }), r && (s(!l[e], \"Rule conflict in\", u.type, e), l[e] = r), s(!m[e], \"Rule conflict in\", u.type, e), m[e] = t, t.alias) {\n                        const e = [].concat(t.alias);\n                        for (const r of e)l[r] = t.method;\n                    }\n                    t.args && (t.argsByName = new Map, t.args = t.args.map((e)=>(\"string\" == typeof e && (e = {\n                            name: e\n                        }), s(!t.argsByName.has(e.name), \"Duplicated argument name\", e.name), a.isSchema(e.assert) && (e.assert = e.assert.strict().label(e.name)), t.argsByName.set(e.name, e), e)));\n                }\n                u.rules = m;\n                const d = Object.assign({}, f.modifiers);\n                if (u.modifiers) for(const e in u.modifiers){\n                    s(!l[e], \"Rule conflict in\", u.type, e);\n                    const t = u.modifiers[e];\n                    s(\"function\" == typeof t, \"Invalid modifier definition for\", u.type, e);\n                    const r = function(t) {\n                        return this.rule({\n                            [e]: t\n                        });\n                    };\n                    l[e] = r, d[e] = t;\n                }\n                if (u.modifiers = d, u.overrides) {\n                    l._super = r, c.$_super = {};\n                    for(const e in u.overrides)s(r[e], \"Cannot override missing\", e), u.overrides[e][a.symbols.parent] = r[e], c.$_super[e] = r[e].bind(c);\n                    Object.assign(l, u.overrides);\n                }\n                u.cast = Object.assign({}, f.cast, u.cast);\n                const p = Object.assign({}, f.manifest, u.manifest);\n                return p.build = o.build(u.manifest && u.manifest.build, f.manifest && f.manifest.build), u.manifest = p, u.rebuild = o.rebuild(u.rebuild, f.rebuild), c;\n            }, o.build = function(e, t) {\n                return e && t ? function(r, s) {\n                    return t(e(r, s), s);\n                } : e || t;\n            }, o.coerce = function(e, t) {\n                return e && t ? {\n                    from: e.from && t.from ? [\n                        ...new Set([\n                            ...e.from,\n                            ...t.from\n                        ])\n                    ] : null,\n                    method (r, s) {\n                        let n;\n                        if ((!t.from || t.from.includes(typeof r)) && (n = t.method(r, s), n)) {\n                            if (n.errors || void 0 === n.value) return n;\n                            r = n.value;\n                        }\n                        if (!e.from || e.from.includes(typeof r)) {\n                            const t = e.method(r, s);\n                            if (t) return t;\n                        }\n                        return n;\n                    }\n                } : e || t;\n            }, o.prepare = function(e, t) {\n                return e && t ? function(r, s) {\n                    const n = e(r, s);\n                    if (n) {\n                        if (n.errors || void 0 === n.value) return n;\n                        r = n.value;\n                    }\n                    return t(r, s) || n;\n                } : e || t;\n            }, o.rebuild = function(e, t) {\n                return e && t ? function(r) {\n                    t(r), e(r);\n                } : e || t;\n            }, o.validate = function(e, t) {\n                return e && t ? function(r, s) {\n                    const n = t(r, s);\n                    if (n) {\n                        if (n.errors && (!Array.isArray(n.errors) || n.errors.length)) return n;\n                        r = n.value;\n                    }\n                    return e(r, s) || n;\n                } : e || t;\n            };\n        },\n        5107: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8571), a = r(8652), i = r(8160), o = r(3292), l = r(6354), c = r(8901), u = r(9708), f = r(6133), h = r(3328), m = r(1152);\n            let d;\n            const p = {\n                types: {\n                    alternatives: r(4946),\n                    any: r(8068),\n                    array: r(546),\n                    boolean: r(4937),\n                    date: r(7500),\n                    function: r(390),\n                    link: r(8785),\n                    number: r(3832),\n                    object: r(8966),\n                    string: r(7417),\n                    symbol: r(8826)\n                },\n                aliases: {\n                    alt: \"alternatives\",\n                    bool: \"boolean\",\n                    func: \"function\"\n                },\n                root: function() {\n                    const e = {\n                        _types: new Set(Object.keys(p.types))\n                    };\n                    for (const t of e._types)e[t] = function() {\n                        for(var e = arguments.length, r = new Array(e), n = 0; n < e; n++)r[n] = arguments[n];\n                        return s(!r.length || [\n                            \"alternatives\",\n                            \"link\",\n                            \"object\"\n                        ].includes(t), \"The\", t, \"type does not allow arguments\"), p.generate(this, p.types[t], r);\n                    };\n                    for (const t of [\n                        \"allow\",\n                        \"custom\",\n                        \"disallow\",\n                        \"equal\",\n                        \"exist\",\n                        \"forbidden\",\n                        \"invalid\",\n                        \"not\",\n                        \"only\",\n                        \"optional\",\n                        \"options\",\n                        \"prefs\",\n                        \"preferences\",\n                        \"required\",\n                        \"strip\",\n                        \"valid\",\n                        \"when\"\n                    ])e[t] = function() {\n                        return this.any()[t](...arguments);\n                    };\n                    Object.assign(e, p.methods);\n                    for(const t in p.aliases){\n                        const r = p.aliases[t];\n                        e[t] = e[r];\n                    }\n                    return e.x = e.expression, m.setup && m.setup(e), e;\n                }\n            };\n            p.methods = {\n                ValidationError: l.ValidationError,\n                version: i.version,\n                cache: a.provider,\n                assert (e, t) {\n                    for(var r = arguments.length, s = new Array(r > 2 ? r - 2 : 0), n = 2; n < r; n++)s[n - 2] = arguments[n];\n                    p.assert(e, t, !0, s);\n                },\n                attempt (e, t) {\n                    for(var r = arguments.length, s = new Array(r > 2 ? r - 2 : 0), n = 2; n < r; n++)s[n - 2] = arguments[n];\n                    return p.assert(e, t, !1, s);\n                },\n                build (e) {\n                    return s(\"function\" == typeof u.build, \"Manifest functionality disabled\"), u.build(this, e);\n                },\n                checkPreferences (e) {\n                    i.checkPreferences(e);\n                },\n                compile (e, t) {\n                    return o.compile(this, e, t);\n                },\n                defaults (e) {\n                    s(\"function\" == typeof e, \"modifier must be a function\");\n                    const t = Object.assign({}, this);\n                    for (const r of t._types){\n                        const n = e(t[r]());\n                        s(i.isSchema(n), \"modifier must return a valid schema object\"), t[r] = function() {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            return p.generate(this, n, t);\n                        };\n                    }\n                    return t;\n                },\n                expression () {\n                    for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                    return new h(...t);\n                },\n                extend () {\n                    for(var e = arguments.length, t = new Array(e), n = 0; n < e; n++)t[n] = arguments[n];\n                    i.verifyFlat(t, \"extend\"), d = d || r(3378), s(t.length, \"You need to provide at least one extension\"), this.assert(t, d.extensions);\n                    const a = Object.assign({}, this);\n                    a._types = new Set(a._types);\n                    for (let e of t){\n                        \"function\" == typeof e && (e = e(a)), this.assert(e, d.extension);\n                        const t = p.expandExtension(e, a);\n                        for (const e of t){\n                            s(void 0 === a[e.type] || a._types.has(e.type), \"Cannot override name\", e.type);\n                            const t = e.base || this.any(), r = c.type(t, e);\n                            a._types.add(e.type), a[e.type] = function() {\n                                for(var e = arguments.length, t = new Array(e), s = 0; s < e; s++)t[s] = arguments[s];\n                                return p.generate(this, r, t);\n                            };\n                        }\n                    }\n                    return a;\n                },\n                isError: l.ValidationError.isError,\n                isExpression: h.isTemplate,\n                isRef: f.isRef,\n                isSchema: i.isSchema,\n                in () {\n                    return f.in(...arguments);\n                },\n                override: i.symbols.override,\n                ref () {\n                    return f.create(...arguments);\n                },\n                types () {\n                    const e = {};\n                    for (const t of this._types)e[t] = this[t]();\n                    for(const t in p.aliases)e[t] = this[t]();\n                    return e;\n                }\n            }, p.assert = function(e, t, r, s) {\n                const a = s[0] instanceof Error || \"string\" == typeof s[0] ? s[0] : null, o = null !== a ? s[1] : s[0], c = t.validate(e, i.preferences({\n                    errors: {\n                        stack: !0\n                    }\n                }, o || {}));\n                let u = c.error;\n                if (!u) return c.value;\n                if (a instanceof Error) throw a;\n                const f = r && \"function\" == typeof u.annotate ? u.annotate() : u.message;\n                throw u instanceof l.ValidationError == 0 && (u = n(u)), u.message = a ? `${a} ${f}` : f, u;\n            }, p.generate = function(e, t, r) {\n                return s(e, \"Must be invoked on a Joi instance.\"), t.$_root = e, t._definition.args && r.length ? t._definition.args(t, ...r) : t;\n            }, p.expandExtension = function(e, t) {\n                if (\"string\" == typeof e.type) return [\n                    e\n                ];\n                const r = [];\n                for (const s of t._types)if (e.type.test(s)) {\n                    const n = Object.assign({}, e);\n                    n.type = s, n.base = t[s](), r.push(n);\n                }\n                return r;\n            }, e.exports = p.root();\n        },\n        6914: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8571), a = r(3328);\n            t.compile = function(e, t) {\n                if (\"string\" == typeof e) return s(!t, \"Cannot set single message string\"), new a(e);\n                if (a.isTemplate(e)) return s(!t, \"Cannot set single message template\"), e;\n                s(\"object\" == typeof e && !Array.isArray(e), \"Invalid message options\"), t = t ? n(t) : {};\n                for(let r in e){\n                    const n = e[r];\n                    if (\"root\" === r || a.isTemplate(n)) {\n                        t[r] = n;\n                        continue;\n                    }\n                    if (\"string\" == typeof n) {\n                        t[r] = new a(n);\n                        continue;\n                    }\n                    s(\"object\" == typeof n && !Array.isArray(n), \"Invalid message for\", r);\n                    const i = r;\n                    for(r in t[i] = t[i] || {}, n){\n                        const e = n[r];\n                        \"root\" === r || a.isTemplate(e) ? t[i][r] = e : (s(\"string\" == typeof e, \"Invalid message for\", r, \"in\", i), t[i][r] = new a(e));\n                    }\n                }\n                return t;\n            }, t.decompile = function(e) {\n                const t = {};\n                for(let r in e){\n                    const s = e[r];\n                    if (\"root\" === r) {\n                        t.root = s;\n                        continue;\n                    }\n                    if (a.isTemplate(s)) {\n                        t[r] = s.describe({\n                            compact: !0\n                        });\n                        continue;\n                    }\n                    const n = r;\n                    for(r in t[n] = {}, s){\n                        const e = s[r];\n                        \"root\" !== r ? t[n][r] = e.describe({\n                            compact: !0\n                        }) : t[n].root = e;\n                    }\n                }\n                return t;\n            }, t.merge = function(e, r) {\n                if (!e) return t.compile(r);\n                if (!r) return e;\n                if (\"string\" == typeof r) return new a(r);\n                if (a.isTemplate(r)) return r;\n                const i = n(e);\n                for(let e in r){\n                    const t = r[e];\n                    if (\"root\" === e || a.isTemplate(t)) {\n                        i[e] = t;\n                        continue;\n                    }\n                    if (\"string\" == typeof t) {\n                        i[e] = new a(t);\n                        continue;\n                    }\n                    s(\"object\" == typeof t && !Array.isArray(t), \"Invalid message for\", e);\n                    const n = e;\n                    for(e in i[n] = i[n] || {}, t){\n                        const r = t[e];\n                        \"root\" === e || a.isTemplate(r) ? i[n][e] = r : (s(\"string\" == typeof r, \"Invalid message for\", e, \"in\", n), i[n][e] = new a(r));\n                    }\n                }\n                return i;\n            };\n        },\n        2294: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8160), a = r(6133), i = {};\n            t.Ids = i.Ids = class {\n                constructor(){\n                    this._byId = new Map, this._byKey = new Map, this._schemaChain = !1;\n                }\n                clone() {\n                    const e = new i.Ids;\n                    return e._byId = new Map(this._byId), e._byKey = new Map(this._byKey), e._schemaChain = this._schemaChain, e;\n                }\n                concat(e) {\n                    e._schemaChain && (this._schemaChain = !0);\n                    for (const [t, r] of e._byId.entries())s(!this._byKey.has(t), \"Schema id conflicts with existing key:\", t), this._byId.set(t, r);\n                    for (const [t, r] of e._byKey.entries())s(!this._byId.has(t), \"Schema key conflicts with existing id:\", t), this._byKey.set(t, r);\n                }\n                fork(e, t, r) {\n                    const a = this._collect(e);\n                    a.push({\n                        schema: r\n                    });\n                    const o = a.shift();\n                    let l = {\n                        id: o.id,\n                        schema: t(o.schema)\n                    };\n                    s(n.isSchema(l.schema), \"adjuster function failed to return a joi schema type\");\n                    for (const e of a)l = {\n                        id: e.id,\n                        schema: i.fork(e.schema, l.id, l.schema)\n                    };\n                    return l.schema;\n                }\n                labels(e) {\n                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];\n                    const r = e[0], s = this._get(r);\n                    if (!s) return [\n                        ...t,\n                        ...e\n                    ].join(\".\");\n                    const n = e.slice(1);\n                    return t = [\n                        ...t,\n                        s.schema._flags.label || r\n                    ], n.length ? s.schema._ids.labels(n, t) : t.join(\".\");\n                }\n                reach(e) {\n                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [];\n                    const r = e[0], n = this._get(r);\n                    s(n, \"Schema does not contain path\", [\n                        ...t,\n                        ...e\n                    ].join(\".\"));\n                    const a = e.slice(1);\n                    return a.length ? n.schema._ids.reach(a, [\n                        ...t,\n                        r\n                    ]) : n.schema;\n                }\n                register(e) {\n                    let { key: t } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                    if (!e || !n.isSchema(e)) return;\n                    (e.$_property(\"schemaChain\") || e._ids._schemaChain) && (this._schemaChain = !0);\n                    const r = e._flags.id;\n                    if (r) {\n                        const t = this._byId.get(r);\n                        s(!t || t.schema === e, \"Cannot add different schemas with the same id:\", r), s(!this._byKey.has(r), \"Schema id conflicts with existing key:\", r), this._byId.set(r, {\n                            schema: e,\n                            id: r\n                        });\n                    }\n                    t && (s(!this._byKey.has(t), \"Schema already contains key:\", t), s(!this._byId.has(t), \"Schema key conflicts with existing id:\", t), this._byKey.set(t, {\n                        schema: e,\n                        id: t\n                    }));\n                }\n                reset() {\n                    this._byId = new Map, this._byKey = new Map, this._schemaChain = !1;\n                }\n                _collect(e) {\n                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [], r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : [];\n                    const n = e[0], a = this._get(n);\n                    s(a, \"Schema does not contain path\", [\n                        ...t,\n                        ...e\n                    ].join(\".\")), r = [\n                        a,\n                        ...r\n                    ];\n                    const i = e.slice(1);\n                    return i.length ? a.schema._ids._collect(i, [\n                        ...t,\n                        n\n                    ], r) : r;\n                }\n                _get(e) {\n                    return this._byId.get(e) || this._byKey.get(e);\n                }\n            }, i.fork = function(e, r, s) {\n                const n = t.schema(e, {\n                    each: (e, t)=>{\n                        let { key: n } = t;\n                        if (r === (e._flags.id || n)) return s;\n                    },\n                    ref: !1\n                });\n                return n ? n.$_mutateRebuild() : e;\n            }, t.schema = function(e, t) {\n                let r;\n                for(const s in e._flags){\n                    if (\"_\" === s[0]) continue;\n                    const n = i.scan(e._flags[s], {\n                        source: \"flags\",\n                        name: s\n                    }, t);\n                    void 0 !== n && (r = r || e.clone(), r._flags[s] = n);\n                }\n                for(let s = 0; s < e._rules.length; ++s){\n                    const n = e._rules[s], a = i.scan(n.args, {\n                        source: \"rules\",\n                        name: n.name\n                    }, t);\n                    if (void 0 !== a) {\n                        r = r || e.clone();\n                        const t = Object.assign({}, n);\n                        t.args = a, r._rules[s] = t, r._singleRules.get(n.name) === n && r._singleRules.set(n.name, t);\n                    }\n                }\n                for(const s in e.$_terms){\n                    if (\"_\" === s[0]) continue;\n                    const n = i.scan(e.$_terms[s], {\n                        source: \"terms\",\n                        name: s\n                    }, t);\n                    void 0 !== n && (r = r || e.clone(), r.$_terms[s] = n);\n                }\n                return r;\n            }, i.scan = function(e, t, r, s, o) {\n                const l = s || [];\n                if (null === e || \"object\" != typeof e) return;\n                let c;\n                if (Array.isArray(e)) {\n                    for(let s = 0; s < e.length; ++s){\n                        const n = \"terms\" === t.source && \"keys\" === t.name && e[s].key, a = i.scan(e[s], t, r, [\n                            s,\n                            ...l\n                        ], n);\n                        void 0 !== a && (c = c || e.slice(), c[s] = a);\n                    }\n                    return c;\n                }\n                if (!1 !== r.schema && n.isSchema(e) || !1 !== r.ref && a.isRef(e)) {\n                    const s = r.each(e, {\n                        ...t,\n                        path: l,\n                        key: o\n                    });\n                    if (s === e) return;\n                    return s;\n                }\n                for(const s in e){\n                    if (\"_\" === s[0]) continue;\n                    const n = i.scan(e[s], t, r, [\n                        s,\n                        ...l\n                    ], o);\n                    void 0 !== n && (c = c || Object.assign({}, e), c[s] = n);\n                }\n                return c;\n            };\n        },\n        6133: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8571), a = r(9621), i = r(8160);\n            let o;\n            const l = {\n                symbol: Symbol(\"ref\"),\n                defaults: {\n                    adjust: null,\n                    in: !1,\n                    iterables: null,\n                    map: null,\n                    separator: \".\",\n                    type: \"value\"\n                }\n            };\n            t.create = function(e) {\n                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                s(\"string\" == typeof e, \"Invalid reference key:\", e), i.assertOptions(t, [\n                    \"adjust\",\n                    \"ancestor\",\n                    \"in\",\n                    \"iterables\",\n                    \"map\",\n                    \"prefix\",\n                    \"render\",\n                    \"separator\"\n                ]), s(!t.prefix || \"object\" == typeof t.prefix, \"options.prefix must be of type object\");\n                const r = Object.assign({}, l.defaults, t);\n                delete r.prefix;\n                const n = r.separator, a = l.context(e, n, t.prefix);\n                if (r.type = a.type, e = a.key, \"value\" === r.type) if (a.root && (s(!n || e[0] !== n, \"Cannot specify relative path with root prefix\"), r.ancestor = \"root\", e || (e = null)), n && n === e) e = null, r.ancestor = 0;\n                else if (void 0 !== r.ancestor) s(!n || !e || e[0] !== n, \"Cannot combine prefix with ancestor option\");\n                else {\n                    const [t, s] = l.ancestor(e, n);\n                    s && \"\" === (e = e.slice(s)) && (e = null), r.ancestor = t;\n                }\n                return r.path = n ? null === e ? [] : e.split(n) : [\n                    e\n                ], new l.Ref(r);\n            }, t.in = function(e) {\n                let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                return t.create(e, {\n                    ...r,\n                    in: !0\n                });\n            }, t.isRef = function(e) {\n                return !!e && !!e[i.symbols.ref];\n            }, l.Ref = class {\n                constructor(e){\n                    s(\"object\" == typeof e, \"Invalid reference construction\"), i.assertOptions(e, [\n                        \"adjust\",\n                        \"ancestor\",\n                        \"in\",\n                        \"iterables\",\n                        \"map\",\n                        \"path\",\n                        \"render\",\n                        \"separator\",\n                        \"type\",\n                        \"depth\",\n                        \"key\",\n                        \"root\",\n                        \"display\"\n                    ]), s([\n                        !1,\n                        void 0\n                    ].includes(e.separator) || \"string\" == typeof e.separator && 1 === e.separator.length, \"Invalid separator\"), s(!e.adjust || \"function\" == typeof e.adjust, \"options.adjust must be a function\"), s(!e.map || Array.isArray(e.map), \"options.map must be an array\"), s(!e.map || !e.adjust, \"Cannot set both map and adjust options\"), Object.assign(this, l.defaults, e), s(\"value\" === this.type || void 0 === this.ancestor, \"Non-value references cannot reference ancestors\"), Array.isArray(this.map) && (this.map = new Map(this.map)), this.depth = this.path.length, this.key = this.path.length ? this.path.join(this.separator) : null, this.root = this.path[0], this.updateDisplay();\n                }\n                resolve(e, t, r, n) {\n                    let a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {};\n                    return s(!this.in || a.in, \"Invalid in() reference usage\"), \"global\" === this.type ? this._resolve(r.context, t, a) : \"local\" === this.type ? this._resolve(n, t, a) : this.ancestor ? \"root\" === this.ancestor ? this._resolve(t.ancestors[t.ancestors.length - 1], t, a) : (s(this.ancestor <= t.ancestors.length, \"Invalid reference exceeds the schema root:\", this.display), this._resolve(t.ancestors[this.ancestor - 1], t, a)) : this._resolve(e, t, a);\n                }\n                _resolve(e, t, r) {\n                    let s;\n                    if (\"value\" === this.type && t.mainstay.shadow && !1 !== r.shadow && (s = t.mainstay.shadow.get(this.absolute(t))), void 0 === s && (s = a(e, this.path, {\n                        iterables: this.iterables,\n                        functions: !0\n                    })), this.adjust && (s = this.adjust(s)), this.map) {\n                        const e = this.map.get(s);\n                        void 0 !== e && (s = e);\n                    }\n                    return t.mainstay && t.mainstay.tracer.resolve(t, this, s), s;\n                }\n                toString() {\n                    return this.display;\n                }\n                absolute(e) {\n                    return [\n                        ...e.path.slice(0, -this.ancestor),\n                        ...this.path\n                    ];\n                }\n                clone() {\n                    return new l.Ref(this);\n                }\n                describe() {\n                    const e = {\n                        path: this.path\n                    };\n                    \"value\" !== this.type && (e.type = this.type), \".\" !== this.separator && (e.separator = this.separator), \"value\" === this.type && 1 !== this.ancestor && (e.ancestor = this.ancestor), this.map && (e.map = [\n                        ...this.map\n                    ]);\n                    for (const t of [\n                        \"adjust\",\n                        \"iterables\",\n                        \"render\"\n                    ])null !== this[t] && void 0 !== this[t] && (e[t] = this[t]);\n                    return !1 !== this.in && (e.in = !0), {\n                        ref: e\n                    };\n                }\n                updateDisplay() {\n                    const e = null !== this.key ? this.key : \"\";\n                    if (\"value\" !== this.type) return void (this.display = `ref:${this.type}:${e}`);\n                    if (!this.separator) return void (this.display = `ref:${e}`);\n                    if (!this.ancestor) return void (this.display = `ref:${this.separator}${e}`);\n                    if (\"root\" === this.ancestor) return void (this.display = `ref:root:${e}`);\n                    if (1 === this.ancestor) return void (this.display = `ref:${e || \"..\"}`);\n                    const t = new Array(this.ancestor + 1).fill(this.separator).join(\"\");\n                    this.display = `ref:${t}${e || \"\"}`;\n                }\n            }, l.Ref.prototype[i.symbols.ref] = !0, t.build = function(e) {\n                return \"value\" === (e = Object.assign({}, l.defaults, e)).type && void 0 === e.ancestor && (e.ancestor = 1), new l.Ref(e);\n            }, l.context = function(e, t) {\n                let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                if (e = e.trim(), r) {\n                    const s = void 0 === r.global ? \"$\" : r.global;\n                    if (s !== t && e.startsWith(s)) return {\n                        key: e.slice(s.length),\n                        type: \"global\"\n                    };\n                    const n = void 0 === r.local ? \"#\" : r.local;\n                    if (n !== t && e.startsWith(n)) return {\n                        key: e.slice(n.length),\n                        type: \"local\"\n                    };\n                    const a = void 0 === r.root ? \"/\" : r.root;\n                    if (a !== t && e.startsWith(a)) return {\n                        key: e.slice(a.length),\n                        type: \"value\",\n                        root: !0\n                    };\n                }\n                return {\n                    key: e,\n                    type: \"value\"\n                };\n            }, l.ancestor = function(e, t) {\n                if (!t) return [\n                    1,\n                    0\n                ];\n                if (e[0] !== t) return [\n                    1,\n                    0\n                ];\n                if (e[1] !== t) return [\n                    0,\n                    1\n                ];\n                let r = 2;\n                for(; e[r] === t;)++r;\n                return [\n                    r - 1,\n                    r\n                ];\n            }, t.toSibling = 0, t.toParent = 1, t.Manager = class {\n                constructor(){\n                    this.refs = [];\n                }\n                register(e, s) {\n                    if (e) if (s = void 0 === s ? t.toParent : s, Array.isArray(e)) for (const t of e)this.register(t, s);\n                    else if (i.isSchema(e)) for (const t of e._refs.refs)t.ancestor - s >= 0 && this.refs.push({\n                        ancestor: t.ancestor - s,\n                        root: t.root\n                    });\n                    else t.isRef(e) && \"value\" === e.type && e.ancestor - s >= 0 && this.refs.push({\n                        ancestor: e.ancestor - s,\n                        root: e.root\n                    }), o = o || r(3328), o.isTemplate(e) && this.register(e.refs(), s);\n                }\n                get length() {\n                    return this.refs.length;\n                }\n                clone() {\n                    const e = new t.Manager;\n                    return e.refs = n(this.refs), e;\n                }\n                reset() {\n                    this.refs = [];\n                }\n                roots() {\n                    return this.refs.filter((e)=>!e.ancestor).map((e)=>e.root);\n                }\n            };\n        },\n        3378: (e, t, r)=>{\n            \"use strict\";\n            const s = r(5107), n = {};\n            n.wrap = s.string().min(1).max(2).allow(!1), t.preferences = s.object({\n                allowUnknown: s.boolean(),\n                abortEarly: s.boolean(),\n                artifacts: s.boolean(),\n                cache: s.boolean(),\n                context: s.object(),\n                convert: s.boolean(),\n                dateFormat: s.valid(\"date\", \"iso\", \"string\", \"time\", \"utc\"),\n                debug: s.boolean(),\n                errors: {\n                    escapeHtml: s.boolean(),\n                    label: s.valid(\"path\", \"key\", !1),\n                    language: [\n                        s.string(),\n                        s.object().ref()\n                    ],\n                    render: s.boolean(),\n                    stack: s.boolean(),\n                    wrap: {\n                        label: n.wrap,\n                        array: n.wrap,\n                        string: n.wrap\n                    }\n                },\n                externals: s.boolean(),\n                messages: s.object(),\n                noDefaults: s.boolean(),\n                nonEnumerables: s.boolean(),\n                presence: s.valid(\"required\", \"optional\", \"forbidden\"),\n                skipFunctions: s.boolean(),\n                stripUnknown: s.object({\n                    arrays: s.boolean(),\n                    objects: s.boolean()\n                }).or(\"arrays\", \"objects\").allow(!0, !1),\n                warnings: s.boolean()\n            }).strict(), n.nameRx = /^[a-zA-Z0-9]\\w*$/, n.rule = s.object({\n                alias: s.array().items(s.string().pattern(n.nameRx)).single(),\n                args: s.array().items(s.string(), s.object({\n                    name: s.string().pattern(n.nameRx).required(),\n                    ref: s.boolean(),\n                    assert: s.alternatives([\n                        s.function(),\n                        s.object().schema()\n                    ]).conditional(\"ref\", {\n                        is: !0,\n                        then: s.required()\n                    }),\n                    normalize: s.function(),\n                    message: s.string().when(\"assert\", {\n                        is: s.function(),\n                        then: s.required()\n                    })\n                })),\n                convert: s.boolean(),\n                manifest: s.boolean(),\n                method: s.function().allow(!1),\n                multi: s.boolean(),\n                validate: s.function()\n            }), t.extension = s.object({\n                type: s.alternatives([\n                    s.string(),\n                    s.object().regex()\n                ]).required(),\n                args: s.function(),\n                cast: s.object().pattern(n.nameRx, s.object({\n                    from: s.function().maxArity(1).required(),\n                    to: s.function().minArity(1).maxArity(2).required()\n                })),\n                base: s.object().schema().when(\"type\", {\n                    is: s.object().regex(),\n                    then: s.forbidden()\n                }),\n                coerce: [\n                    s.function().maxArity(3),\n                    s.object({\n                        method: s.function().maxArity(3).required(),\n                        from: s.array().items(s.string()).single()\n                    })\n                ],\n                flags: s.object().pattern(n.nameRx, s.object({\n                    setter: s.string(),\n                    default: s.any()\n                })),\n                manifest: {\n                    build: s.function().arity(2)\n                },\n                messages: [\n                    s.object(),\n                    s.string()\n                ],\n                modifiers: s.object().pattern(n.nameRx, s.function().minArity(1).maxArity(2)),\n                overrides: s.object().pattern(n.nameRx, s.function()),\n                prepare: s.function().maxArity(3),\n                rebuild: s.function().arity(1),\n                rules: s.object().pattern(n.nameRx, n.rule),\n                terms: s.object().pattern(n.nameRx, s.object({\n                    init: s.array().allow(null).required(),\n                    manifest: s.object().pattern(/.+/, [\n                        s.valid(\"schema\", \"single\"),\n                        s.object({\n                            mapped: s.object({\n                                from: s.string().required(),\n                                to: s.string().required()\n                            }).required()\n                        })\n                    ])\n                })),\n                validate: s.function().maxArity(3)\n            }).strict(), t.extensions = s.array().items(s.object(), s.function().arity(1)).strict(), n.desc = {\n                buffer: s.object({\n                    buffer: s.string()\n                }),\n                func: s.object({\n                    function: s.function().required(),\n                    options: {\n                        literal: !0\n                    }\n                }),\n                override: s.object({\n                    override: !0\n                }),\n                ref: s.object({\n                    ref: s.object({\n                        type: s.valid(\"value\", \"global\", \"local\"),\n                        path: s.array().required(),\n                        separator: s.string().length(1).allow(!1),\n                        ancestor: s.number().min(0).integer().allow(\"root\"),\n                        map: s.array().items(s.array().length(2)).min(1),\n                        adjust: s.function(),\n                        iterables: s.boolean(),\n                        in: s.boolean(),\n                        render: s.boolean()\n                    }).required()\n                }),\n                regex: s.object({\n                    regex: s.string().min(3)\n                }),\n                special: s.object({\n                    special: s.valid(\"deep\").required()\n                }),\n                template: s.object({\n                    template: s.string().required(),\n                    options: s.object()\n                }),\n                value: s.object({\n                    value: s.alternatives([\n                        s.object(),\n                        s.array()\n                    ]).required()\n                })\n            }, n.desc.entity = s.alternatives([\n                s.array().items(s.link(\"...\")),\n                s.boolean(),\n                s.function(),\n                s.number(),\n                s.string(),\n                n.desc.buffer,\n                n.desc.func,\n                n.desc.ref,\n                n.desc.regex,\n                n.desc.special,\n                n.desc.template,\n                n.desc.value,\n                s.link(\"/\")\n            ]), n.desc.values = s.array().items(null, s.boolean(), s.function(), s.number().allow(1 / 0, -1 / 0), s.string().allow(\"\"), s.symbol(), n.desc.buffer, n.desc.func, n.desc.override, n.desc.ref, n.desc.regex, n.desc.template, n.desc.value), n.desc.messages = s.object().pattern(/.+/, [\n                s.string(),\n                n.desc.template,\n                s.object().pattern(/.+/, [\n                    s.string(),\n                    n.desc.template\n                ])\n            ]), t.description = s.object({\n                type: s.string().required(),\n                flags: s.object({\n                    cast: s.string(),\n                    default: s.any(),\n                    description: s.string(),\n                    empty: s.link(\"/\"),\n                    failover: n.desc.entity,\n                    id: s.string(),\n                    label: s.string(),\n                    only: !0,\n                    presence: [\n                        \"optional\",\n                        \"required\",\n                        \"forbidden\"\n                    ],\n                    result: [\n                        \"raw\",\n                        \"strip\"\n                    ],\n                    strip: s.boolean(),\n                    unit: s.string()\n                }).unknown(),\n                preferences: {\n                    allowUnknown: s.boolean(),\n                    abortEarly: s.boolean(),\n                    artifacts: s.boolean(),\n                    cache: s.boolean(),\n                    convert: s.boolean(),\n                    dateFormat: [\n                        \"date\",\n                        \"iso\",\n                        \"string\",\n                        \"time\",\n                        \"utc\"\n                    ],\n                    errors: {\n                        escapeHtml: s.boolean(),\n                        label: [\n                            \"path\",\n                            \"key\"\n                        ],\n                        language: [\n                            s.string(),\n                            n.desc.ref\n                        ],\n                        wrap: {\n                            label: n.wrap,\n                            array: n.wrap\n                        }\n                    },\n                    externals: s.boolean(),\n                    messages: n.desc.messages,\n                    noDefaults: s.boolean(),\n                    nonEnumerables: s.boolean(),\n                    presence: [\n                        \"required\",\n                        \"optional\",\n                        \"forbidden\"\n                    ],\n                    skipFunctions: s.boolean(),\n                    stripUnknown: s.object({\n                        arrays: s.boolean(),\n                        objects: s.boolean()\n                    }).or(\"arrays\", \"objects\").allow(!0, !1),\n                    warnings: s.boolean()\n                },\n                allow: n.desc.values,\n                invalid: n.desc.values,\n                rules: s.array().min(1).items({\n                    name: s.string().required(),\n                    args: s.object().min(1),\n                    keep: s.boolean(),\n                    message: [\n                        s.string(),\n                        n.desc.messages\n                    ],\n                    warn: s.boolean()\n                }),\n                keys: s.object().pattern(/.*/, s.link(\"/\")),\n                link: n.desc.ref\n            }).pattern(/^[a-z]\\w*$/, s.any());\n        },\n        493: (e, t, r)=>{\n            \"use strict\";\n            const s = r(8571), n = r(9621), a = r(8160), i = {\n                value: Symbol(\"value\")\n            };\n            e.exports = i.State = class {\n                constructor(e, t, r){\n                    this.path = e, this.ancestors = t, this.mainstay = r.mainstay, this.schemas = r.schemas, this.debug = null;\n                }\n                localize(e) {\n                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;\n                    const s = new i.State(e, t, this);\n                    return r && s.schemas && (s.schemas = [\n                        i.schemas(r),\n                        ...s.schemas\n                    ]), s;\n                }\n                nest(e, t) {\n                    const r = new i.State(this.path, this.ancestors, this);\n                    return r.schemas = r.schemas && [\n                        i.schemas(e),\n                        ...r.schemas\n                    ], r.debug = t, r;\n                }\n                shadow(e, t) {\n                    this.mainstay.shadow = this.mainstay.shadow || new i.Shadow, this.mainstay.shadow.set(this.path, e, t);\n                }\n                snapshot() {\n                    this.mainstay.shadow && (this._snapshot = s(this.mainstay.shadow.node(this.path))), this.mainstay.snapshot();\n                }\n                restore() {\n                    this.mainstay.shadow && (this.mainstay.shadow.override(this.path, this._snapshot), this._snapshot = void 0), this.mainstay.restore();\n                }\n                commit() {\n                    this.mainstay.shadow && (this.mainstay.shadow.override(this.path, this._snapshot), this._snapshot = void 0), this.mainstay.commit();\n                }\n            }, i.schemas = function(e) {\n                return a.isSchema(e) ? {\n                    schema: e\n                } : e;\n            }, i.Shadow = class {\n                constructor(){\n                    this._values = null;\n                }\n                set(e, t, r) {\n                    if (!e.length) return;\n                    if (\"strip\" === r && \"number\" == typeof e[e.length - 1]) return;\n                    this._values = this._values || new Map;\n                    let s = this._values;\n                    for(let t = 0; t < e.length; ++t){\n                        const r = e[t];\n                        let n = s.get(r);\n                        n || (n = new Map, s.set(r, n)), s = n;\n                    }\n                    s[i.value] = t;\n                }\n                get(e) {\n                    const t = this.node(e);\n                    if (t) return t[i.value];\n                }\n                node(e) {\n                    if (this._values) return n(this._values, e, {\n                        iterables: !0\n                    });\n                }\n                override(e, t) {\n                    if (!this._values) return;\n                    const r = e.slice(0, -1), s = e[e.length - 1], a = n(this._values, r, {\n                        iterables: !0\n                    });\n                    t ? a.set(s, t) : a && a.delete(s);\n                }\n            };\n        },\n        3328: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8571), a = r(5277), i = r(1447), o = r(8160), l = r(6354), c = r(6133), u = {\n                symbol: Symbol(\"template\"),\n                opens: new Array(1e3).join(\"\\x00\"),\n                closes: new Array(1e3).join(\"\\x01\"),\n                dateFormat: {\n                    date: Date.prototype.toDateString,\n                    iso: Date.prototype.toISOString,\n                    string: Date.prototype.toString,\n                    time: Date.prototype.toTimeString,\n                    utc: Date.prototype.toUTCString\n                }\n            };\n            e.exports = u.Template = class {\n                constructor(e, t){\n                    if (s(\"string\" == typeof e, \"Template source must be a string\"), s(!e.includes(\"\\x00\") && !e.includes(\"\\x01\"), \"Template source cannot contain reserved control characters\"), this.source = e, this.rendered = e, this._template = null, t) {\n                        const { functions: e, ...r } = t;\n                        this._settings = Object.keys(r).length ? n(r) : void 0, this._functions = e, this._functions && (s(Object.keys(this._functions).every((e)=>\"string\" == typeof e), \"Functions keys must be strings\"), s(Object.values(this._functions).every((e)=>\"function\" == typeof e), \"Functions values must be functions\"));\n                    } else this._settings = void 0, this._functions = void 0;\n                    this._parse();\n                }\n                _parse() {\n                    if (!this.source.includes(\"{\")) return;\n                    const e = u.encode(this.source), t = u.split(e);\n                    let r = !1;\n                    const s = [], n = t.shift();\n                    n && s.push(n);\n                    for (const e of t){\n                        const t = \"{\" !== e[0], n = t ? \"}\" : \"}}\", a = e.indexOf(n);\n                        if (-1 === a || \"{\" === e[1]) {\n                            s.push(`{${u.decode(e)}`);\n                            continue;\n                        }\n                        let i = e.slice(t ? 0 : 1, a);\n                        const o = \":\" === i[0];\n                        o && (i = i.slice(1));\n                        const l = this._ref(u.decode(i), {\n                            raw: t,\n                            wrapped: o\n                        });\n                        s.push(l), \"string\" != typeof l && (r = !0);\n                        const c = e.slice(a + n.length);\n                        c && s.push(u.decode(c));\n                    }\n                    r ? this._template = s : this.rendered = s.join(\"\");\n                }\n                static date(e, t) {\n                    return u.dateFormat[t.dateFormat].call(e);\n                }\n                describe() {\n                    let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                    if (!this._settings && e.compact) return this.source;\n                    const t = {\n                        template: this.source\n                    };\n                    return this._settings && (t.options = this._settings), this._functions && (t.functions = this._functions), t;\n                }\n                static build(e) {\n                    return new u.Template(e.template, e.options || e.functions ? {\n                        ...e.options,\n                        functions: e.functions\n                    } : void 0);\n                }\n                isDynamic() {\n                    return !!this._template;\n                }\n                static isTemplate(e) {\n                    return !!e && !!e[o.symbols.template];\n                }\n                refs() {\n                    if (!this._template) return;\n                    const e = [];\n                    for (const t of this._template)\"string\" != typeof t && e.push(...t.refs);\n                    return e;\n                }\n                resolve(e, t, r, s) {\n                    return this._template && 1 === this._template.length ? this._part(this._template[0], e, t, r, s, {}) : this.render(e, t, r, s);\n                }\n                _part(e) {\n                    for(var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), s = 1; s < t; s++)r[s - 1] = arguments[s];\n                    return e.ref ? e.ref.resolve(...r) : e.formula.evaluate(r);\n                }\n                render(e, t, r, s) {\n                    let n = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {};\n                    if (!this.isDynamic()) return this.rendered;\n                    const i = [];\n                    for (const o of this._template)if (\"string\" == typeof o) i.push(o);\n                    else {\n                        const l = this._part(o, e, t, r, s, n), c = u.stringify(l, e, t, r, s, n);\n                        if (void 0 !== c) {\n                            const e = o.raw || !1 === (n.errors && n.errors.escapeHtml) ? c : a(c);\n                            i.push(u.wrap(e, o.wrapped && r.errors.wrap.label));\n                        }\n                    }\n                    return i.join(\"\");\n                }\n                _ref(e, t) {\n                    let { raw: r, wrapped: s } = t;\n                    const n = [], a = (e)=>{\n                        const t = c.create(e, this._settings);\n                        return n.push(t), (e)=>{\n                            const r = t.resolve(...e);\n                            return void 0 !== r ? r : null;\n                        };\n                    };\n                    try {\n                        const t = this._functions ? {\n                            ...u.functions,\n                            ...this._functions\n                        } : u.functions;\n                        var o = new i.Parser(e, {\n                            reference: a,\n                            functions: t,\n                            constants: u.constants\n                        });\n                    } catch (t) {\n                        throw t.message = `Invalid template variable \"${e}\" fails due to: ${t.message}`, t;\n                    }\n                    if (o.single) {\n                        if (\"reference\" === o.single.type) {\n                            const e = n[0];\n                            return {\n                                ref: e,\n                                raw: r,\n                                refs: n,\n                                wrapped: s || \"local\" === e.type && \"label\" === e.key\n                            };\n                        }\n                        return u.stringify(o.single.value);\n                    }\n                    return {\n                        formula: o,\n                        raw: r,\n                        refs: n\n                    };\n                }\n                toString() {\n                    return this.source;\n                }\n            }, u.Template.prototype[o.symbols.template] = !0, u.Template.prototype.isImmutable = !0, u.encode = function(e) {\n                return e.replace(/\\\\(\\{+)/g, (e, t)=>u.opens.slice(0, t.length)).replace(/\\\\(\\}+)/g, (e, t)=>u.closes.slice(0, t.length));\n            }, u.decode = function(e) {\n                return e.replace(/\\u0000/g, \"{\").replace(/\\u0001/g, \"}\");\n            }, u.split = function(e) {\n                const t = [];\n                let r = \"\";\n                for(let s = 0; s < e.length; ++s){\n                    const n = e[s];\n                    if (\"{\" === n) {\n                        let n = \"\";\n                        for(; s + 1 < e.length && \"{\" === e[s + 1];)n += \"{\", ++s;\n                        t.push(r), r = n;\n                    } else r += n;\n                }\n                return t.push(r), t;\n            }, u.wrap = function(e, t) {\n                return t ? 1 === t.length ? `${t}${e}${t}` : `${t[0]}${e}${t[1]}` : e;\n            }, u.stringify = function(e, t, r, s, n) {\n                let a = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : {};\n                const i = typeof e, o = s && s.errors && s.errors.wrap || {};\n                let l = !1;\n                if (c.isRef(e) && e.render && (l = e.in, e = e.resolve(t, r, s, n, {\n                    in: e.in,\n                    ...a\n                })), null === e) return \"null\";\n                if (\"string\" === i) return u.wrap(e, a.arrayItems && o.string);\n                if (\"number\" === i || \"function\" === i || \"symbol\" === i) return e.toString();\n                if (\"object\" !== i) return JSON.stringify(e);\n                if (e instanceof Date) return u.Template.date(e, s);\n                if (e instanceof Map) {\n                    const t = [];\n                    for (const [r, s] of e.entries())t.push(`${r.toString()} -> ${s.toString()}`);\n                    e = t;\n                }\n                if (!Array.isArray(e)) return e.toString();\n                const f = [];\n                for (const i of e)f.push(u.stringify(i, t, r, s, n, {\n                    arrayItems: !0,\n                    ...a\n                }));\n                return u.wrap(f.join(\", \"), !l && o.array);\n            }, u.constants = {\n                true: !0,\n                false: !1,\n                null: null,\n                second: 1e3,\n                minute: 6e4,\n                hour: 36e5,\n                day: 864e5\n            }, u.functions = {\n                if: (e, t, r)=>e ? t : r,\n                length: (e)=>\"string\" == typeof e ? e.length : e && \"object\" == typeof e ? Array.isArray(e) ? e.length : Object.keys(e).length : null,\n                msg (e) {\n                    const [t, r, s, n, a] = this, i = a.messages;\n                    if (!i) return \"\";\n                    const o = l.template(t, i[0], e, r, s) || l.template(t, i[1], e, r, s);\n                    return o ? o.render(t, r, s, n, a) : \"\";\n                },\n                number: (e)=>\"number\" == typeof e ? e : \"string\" == typeof e ? parseFloat(e) : \"boolean\" == typeof e ? e ? 1 : 0 : e instanceof Date ? e.getTime() : null\n            };\n        },\n        4946: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(1687), a = r(8068), i = r(8160), o = r(3292), l = r(6354), c = r(6133), u = {};\n            e.exports = a.extend({\n                type: \"alternatives\",\n                flags: {\n                    match: {\n                        default: \"any\"\n                    }\n                },\n                terms: {\n                    matches: {\n                        init: [],\n                        register: c.toSibling\n                    }\n                },\n                args (e) {\n                    for(var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), s = 1; s < t; s++)r[s - 1] = arguments[s];\n                    return 1 === r.length && Array.isArray(r[0]) ? e.try(...r[0]) : e.try(...r);\n                },\n                validate (e, t) {\n                    const { schema: r, error: s, state: a, prefs: i } = t;\n                    if (r._flags.match) {\n                        const t = [], o = [];\n                        for(let s = 0; s < r.$_terms.matches.length; ++s){\n                            const n = r.$_terms.matches[s], l = a.nest(n.schema, `match.${s}`);\n                            l.snapshot();\n                            const c = n.schema.$_validate(e, l, i);\n                            c.errors ? (o.push(c.errors), l.restore()) : (t.push(c.value), l.commit());\n                        }\n                        if (0 === t.length) return {\n                            errors: s(\"alternatives.any\", {\n                                details: o.map((e)=>l.details(e, {\n                                        override: !1\n                                    }))\n                            })\n                        };\n                        if (\"one\" === r._flags.match) return 1 === t.length ? {\n                            value: t[0]\n                        } : {\n                            errors: s(\"alternatives.one\")\n                        };\n                        if (t.length !== r.$_terms.matches.length) return {\n                            errors: s(\"alternatives.all\", {\n                                details: o.map((e)=>l.details(e, {\n                                        override: !1\n                                    }))\n                            })\n                        };\n                        const c = (e)=>e.$_terms.matches.some((e)=>\"object\" === e.schema.type || \"alternatives\" === e.schema.type && c(e.schema));\n                        return c(r) ? {\n                            value: t.reduce((e, t)=>n(e, t, {\n                                    mergeArrays: !1\n                                }))\n                        } : {\n                            value: t[t.length - 1]\n                        };\n                    }\n                    const o = [];\n                    for(let t = 0; t < r.$_terms.matches.length; ++t){\n                        const s = r.$_terms.matches[t];\n                        if (s.schema) {\n                            const r = a.nest(s.schema, `match.${t}`);\n                            r.snapshot();\n                            const n = s.schema.$_validate(e, r, i);\n                            if (!n.errors) return r.commit(), n;\n                            r.restore(), o.push({\n                                schema: s.schema,\n                                reports: n.errors\n                            });\n                            continue;\n                        }\n                        const n = s.ref ? s.ref.resolve(e, a, i) : e, l = s.is ? [\n                            s\n                        ] : s.switch;\n                        for(let r = 0; r < l.length; ++r){\n                            const o = l[r], { is: c, then: u, otherwise: f } = o, h = `match.${t}${s.switch ? \".\" + r : \"\"}`;\n                            if (c.$_match(n, a.nest(c, `${h}.is`), i)) {\n                                if (u) return u.$_validate(e, a.nest(u, `${h}.then`), i);\n                            } else if (f) return f.$_validate(e, a.nest(f, `${h}.otherwise`), i);\n                        }\n                    }\n                    return u.errors(o, t);\n                },\n                rules: {\n                    conditional: {\n                        method (e, t) {\n                            s(!this._flags._endedSwitch, \"Unreachable condition\"), s(!this._flags.match, \"Cannot combine match mode\", this._flags.match, \"with conditional rule\"), s(void 0 === t.break, \"Cannot use break option with alternatives conditional\");\n                            const r = this.clone(), n = o.when(r, e, t), a = n.is ? [\n                                n\n                            ] : n.switch;\n                            for (const e of a)if (e.then && e.otherwise) {\n                                r.$_setFlag(\"_endedSwitch\", !0, {\n                                    clone: !1\n                                });\n                                break;\n                            }\n                            return r.$_terms.matches.push(n), r.$_mutateRebuild();\n                        }\n                    },\n                    match: {\n                        method (e) {\n                            if (s([\n                                \"any\",\n                                \"one\",\n                                \"all\"\n                            ].includes(e), \"Invalid alternatives match mode\", e), \"any\" !== e) for (const t of this.$_terms.matches)s(t.schema, \"Cannot combine match mode\", e, \"with conditional rules\");\n                            return this.$_setFlag(\"match\", e);\n                        }\n                    },\n                    try: {\n                        method () {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            s(t.length, \"Missing alternative schemas\"), i.verifyFlat(t, \"try\"), s(!this._flags._endedSwitch, \"Unreachable condition\");\n                            const n = this.clone();\n                            for (const e of t)n.$_terms.matches.push({\n                                schema: n.$_compile(e)\n                            });\n                            return n.$_mutateRebuild();\n                        }\n                    }\n                },\n                overrides: {\n                    label (e) {\n                        return this.$_parent(\"label\", e).$_modify({\n                            each: (t, r)=>\"is\" !== r.path[0] ? t.label(e) : void 0,\n                            ref: !1\n                        });\n                    }\n                },\n                rebuild (e) {\n                    e.$_modify({\n                        each: (t)=>{\n                            i.isSchema(t) && \"array\" === t.type && e.$_setFlag(\"_arrayItems\", !0, {\n                                clone: !1\n                            });\n                        }\n                    });\n                },\n                manifest: {\n                    build (e, t) {\n                        if (t.matches) for (const r of t.matches){\n                            const { schema: t, ref: s, is: n, not: a, then: i, otherwise: o } = r;\n                            e = t ? e.try(t) : s ? e.conditional(s, {\n                                is: n,\n                                then: i,\n                                not: a,\n                                otherwise: o,\n                                switch: r.switch\n                            }) : e.conditional(n, {\n                                then: i,\n                                otherwise: o\n                            });\n                        }\n                        return e;\n                    }\n                },\n                messages: {\n                    \"alternatives.all\": \"{{#label}} does not match all of the required types\",\n                    \"alternatives.any\": \"{{#label}} does not match any of the allowed types\",\n                    \"alternatives.match\": \"{{#label}} does not match any of the allowed types\",\n                    \"alternatives.one\": \"{{#label}} matches more than one allowed type\",\n                    \"alternatives.types\": \"{{#label}} must be one of {{#types}}\"\n                }\n            }), u.errors = function(e, t) {\n                let { error: r, state: s } = t;\n                if (!e.length) return {\n                    errors: r(\"alternatives.any\")\n                };\n                if (1 === e.length) return {\n                    errors: e[0].reports\n                };\n                const n = new Set, a = [];\n                for (const { reports: t, schema: i } of e){\n                    if (t.length > 1) return u.unmatched(e, r);\n                    const o = t[0];\n                    if (o instanceof l.Report == 0) return u.unmatched(e, r);\n                    if (o.state.path.length !== s.path.length) {\n                        a.push({\n                            type: i.type,\n                            report: o\n                        });\n                        continue;\n                    }\n                    if (\"any.only\" === o.code) {\n                        for (const e of o.local.valids)n.add(e);\n                        continue;\n                    }\n                    const [c, f] = o.code.split(\".\");\n                    \"base\" === f ? n.add(c) : a.push({\n                        type: i.type,\n                        report: o\n                    });\n                }\n                return a.length ? 1 === a.length ? {\n                    errors: a[0].report\n                } : u.unmatched(e, r) : {\n                    errors: r(\"alternatives.types\", {\n                        types: [\n                            ...n\n                        ]\n                    })\n                };\n            }, u.unmatched = function(e, t) {\n                const r = [];\n                for (const t of e)r.push(...t.reports);\n                return {\n                    errors: t(\"alternatives.match\", l.details(r, {\n                        override: !1\n                    }))\n                };\n            };\n        },\n        8068: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(7629), a = r(8160), i = r(6914);\n            e.exports = n.extend({\n                type: \"any\",\n                flags: {\n                    only: {\n                        default: !1\n                    }\n                },\n                terms: {\n                    alterations: {\n                        init: null\n                    },\n                    examples: {\n                        init: null\n                    },\n                    externals: {\n                        init: null\n                    },\n                    metas: {\n                        init: []\n                    },\n                    notes: {\n                        init: []\n                    },\n                    shared: {\n                        init: null\n                    },\n                    tags: {\n                        init: []\n                    },\n                    whens: {\n                        init: null\n                    }\n                },\n                rules: {\n                    custom: {\n                        method (e, t) {\n                            return s(\"function\" == typeof e, \"Method must be a function\"), s(void 0 === t || t && \"string\" == typeof t, \"Description must be a non-empty string\"), this.$_addRule({\n                                name: \"custom\",\n                                args: {\n                                    method: e,\n                                    description: t\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { method: s } = r;\n                            try {\n                                return s(e, t);\n                            } catch (e) {\n                                return t.error(\"any.custom\", {\n                                    error: e\n                                });\n                            }\n                        },\n                        args: [\n                            \"method\",\n                            \"description\"\n                        ],\n                        multi: !0\n                    },\n                    messages: {\n                        method (e) {\n                            return this.prefs({\n                                messages: e\n                            });\n                        }\n                    },\n                    shared: {\n                        method (e) {\n                            s(a.isSchema(e) && e._flags.id, \"Schema must be a schema with an id\");\n                            const t = this.clone();\n                            return t.$_terms.shared = t.$_terms.shared || [], t.$_terms.shared.push(e), t.$_mutateRegister(e), t;\n                        }\n                    },\n                    warning: {\n                        method (e, t) {\n                            return s(e && \"string\" == typeof e, \"Invalid warning code\"), this.$_addRule({\n                                name: \"warning\",\n                                args: {\n                                    code: e,\n                                    local: t\n                                },\n                                warn: !0\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { code: s, local: n } = r;\n                            return t.error(s, n);\n                        },\n                        args: [\n                            \"code\",\n                            \"local\"\n                        ],\n                        multi: !0\n                    }\n                },\n                modifiers: {\n                    keep (e) {\n                        let t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];\n                        e.keep = t;\n                    },\n                    message (e, t) {\n                        e.message = i.compile(t);\n                    },\n                    warn (e) {\n                        let t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];\n                        e.warn = t;\n                    }\n                },\n                manifest: {\n                    build (e, t) {\n                        for(const r in t){\n                            const s = t[r];\n                            if ([\n                                \"examples\",\n                                \"externals\",\n                                \"metas\",\n                                \"notes\",\n                                \"tags\"\n                            ].includes(r)) for (const t of s)e = e[r.slice(0, -1)](t);\n                            else if (\"alterations\" !== r) if (\"whens\" !== r) {\n                                if (\"shared\" === r) for (const t of s)e = e.shared(t);\n                            } else for (const t of s){\n                                const { ref: r, is: s, not: n, then: a, otherwise: i, concat: o } = t;\n                                e = o ? e.concat(o) : r ? e.when(r, {\n                                    is: s,\n                                    not: n,\n                                    then: a,\n                                    otherwise: i,\n                                    switch: t.switch,\n                                    break: t.break\n                                }) : e.when(s, {\n                                    then: a,\n                                    otherwise: i,\n                                    break: t.break\n                                });\n                            }\n                            else {\n                                const t = {};\n                                for (const { target: e, adjuster: r } of s)t[e] = r;\n                                e = e.alter(t);\n                            }\n                        }\n                        return e;\n                    }\n                },\n                messages: {\n                    \"any.custom\": \"{{#label}} failed custom validation because {{#error.message}}\",\n                    \"any.default\": \"{{#label}} threw an error when running default method\",\n                    \"any.failover\": \"{{#label}} threw an error when running failover method\",\n                    \"any.invalid\": \"{{#label}} contains an invalid value\",\n                    \"any.only\": '{{#label}} must be {if(#valids.length == 1, \"\", \"one of \")}{{#valids}}',\n                    \"any.ref\": \"{{#label}} {{#arg}} references {{:#ref}} which {{#reason}}\",\n                    \"any.required\": \"{{#label}} is required\",\n                    \"any.unknown\": \"{{#label}} is not allowed\"\n                }\n            });\n        },\n        546: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(9474), a = r(9621), i = r(8068), o = r(8160), l = r(3292), c = {};\n            e.exports = i.extend({\n                type: \"array\",\n                flags: {\n                    single: {\n                        default: !1\n                    },\n                    sparse: {\n                        default: !1\n                    }\n                },\n                terms: {\n                    items: {\n                        init: [],\n                        manifest: \"schema\"\n                    },\n                    ordered: {\n                        init: [],\n                        manifest: \"schema\"\n                    },\n                    _exclusions: {\n                        init: []\n                    },\n                    _inclusions: {\n                        init: []\n                    },\n                    _requireds: {\n                        init: []\n                    }\n                },\n                coerce: {\n                    from: \"object\",\n                    method (e, t) {\n                        let { schema: r, state: s, prefs: n } = t;\n                        if (!Array.isArray(e)) return;\n                        const a = r.$_getRule(\"sort\");\n                        return a ? c.sort(r, e, a.args.options, s, n) : void 0;\n                    }\n                },\n                validate (e, t) {\n                    let { schema: r, error: s } = t;\n                    if (!Array.isArray(e)) {\n                        if (r._flags.single) {\n                            const t = [\n                                e\n                            ];\n                            return t[o.symbols.arraySingle] = !0, {\n                                value: t\n                            };\n                        }\n                        return {\n                            errors: s(\"array.base\")\n                        };\n                    }\n                    if (r.$_getRule(\"items\") || r.$_terms.externals) return {\n                        value: e.slice()\n                    };\n                },\n                rules: {\n                    has: {\n                        method (e) {\n                            e = this.$_compile(e, {\n                                appendPath: !0\n                            });\n                            const t = this.$_addRule({\n                                name: \"has\",\n                                args: {\n                                    schema: e\n                                }\n                            });\n                            return t.$_mutateRegister(e), t;\n                        },\n                        validate (e, t, r) {\n                            let { state: s, prefs: n, error: a } = t, { schema: i } = r;\n                            const o = [\n                                e,\n                                ...s.ancestors\n                            ];\n                            for(let t = 0; t < e.length; ++t){\n                                const r = s.localize([\n                                    ...s.path,\n                                    t\n                                ], o, i);\n                                if (i.$_match(e[t], r, n)) return e;\n                            }\n                            const l = i._flags.label;\n                            return l ? a(\"array.hasKnown\", {\n                                patternLabel: l\n                            }) : a(\"array.hasUnknown\", null);\n                        },\n                        multi: !0\n                    },\n                    items: {\n                        method () {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            o.verifyFlat(t, \"items\");\n                            const s = this.$_addRule(\"items\");\n                            for(let e = 0; e < t.length; ++e){\n                                const r = o.tryWithPath(()=>this.$_compile(t[e]), e, {\n                                    append: !0\n                                });\n                                s.$_terms.items.push(r);\n                            }\n                            return s.$_mutateRebuild();\n                        },\n                        validate (e, t) {\n                            let { schema: r, error: s, state: n, prefs: a, errorsArray: i } = t;\n                            const l = r.$_terms._requireds.slice(), u = r.$_terms.ordered.slice(), f = [\n                                ...r.$_terms._inclusions,\n                                ...l\n                            ], h = !e[o.symbols.arraySingle];\n                            delete e[o.symbols.arraySingle];\n                            const m = i();\n                            let d = e.length;\n                            for(let t = 0; t < d; ++t){\n                                const i = e[t];\n                                let o = !1, p = !1;\n                                const g = h ? t : new Number(t), y = [\n                                    ...n.path,\n                                    g\n                                ];\n                                if (!r._flags.sparse && void 0 === i) {\n                                    if (m.push(s(\"array.sparse\", {\n                                        key: g,\n                                        path: y,\n                                        pos: t,\n                                        value: void 0\n                                    }, n.localize(y))), a.abortEarly) return m;\n                                    u.shift();\n                                    continue;\n                                }\n                                const b = [\n                                    e,\n                                    ...n.ancestors\n                                ];\n                                for (const e of r.$_terms._exclusions)if (e.$_match(i, n.localize(y, b, e), a, {\n                                    presence: \"ignore\"\n                                })) {\n                                    if (m.push(s(\"array.excludes\", {\n                                        pos: t,\n                                        value: i\n                                    }, n.localize(y))), a.abortEarly) return m;\n                                    o = !0, u.shift();\n                                    break;\n                                }\n                                if (o) continue;\n                                if (r.$_terms.ordered.length) {\n                                    if (u.length) {\n                                        const o = u.shift(), l = o.$_validate(i, n.localize(y, b, o), a);\n                                        if (l.errors) {\n                                            if (m.push(...l.errors), a.abortEarly) return m;\n                                        } else if (\"strip\" === o._flags.result) c.fastSplice(e, t), --t, --d;\n                                        else {\n                                            if (!r._flags.sparse && void 0 === l.value) {\n                                                if (m.push(s(\"array.sparse\", {\n                                                    key: g,\n                                                    path: y,\n                                                    pos: t,\n                                                    value: void 0\n                                                }, n.localize(y))), a.abortEarly) return m;\n                                                continue;\n                                            }\n                                            e[t] = l.value;\n                                        }\n                                        continue;\n                                    }\n                                    if (!r.$_terms.items.length) {\n                                        if (m.push(s(\"array.orderedLength\", {\n                                            pos: t,\n                                            limit: r.$_terms.ordered.length\n                                        })), a.abortEarly) return m;\n                                        break;\n                                    }\n                                }\n                                const v = [];\n                                let _ = l.length;\n                                for(let o = 0; o < _; ++o){\n                                    const u = n.localize(y, b, l[o]);\n                                    u.snapshot();\n                                    const f = l[o].$_validate(i, u, a);\n                                    if (v[o] = f, !f.errors) {\n                                        if (u.commit(), e[t] = f.value, p = !0, c.fastSplice(l, o), --o, --_, !r._flags.sparse && void 0 === f.value && (m.push(s(\"array.sparse\", {\n                                            key: g,\n                                            path: y,\n                                            pos: t,\n                                            value: void 0\n                                        }, n.localize(y))), a.abortEarly)) return m;\n                                        break;\n                                    }\n                                    u.restore();\n                                }\n                                if (p) continue;\n                                const w = a.stripUnknown && !!a.stripUnknown.arrays || !1;\n                                _ = f.length;\n                                for (const u of f){\n                                    let f;\n                                    const h = l.indexOf(u);\n                                    if (-1 !== h) f = v[h];\n                                    else {\n                                        const l = n.localize(y, b, u);\n                                        if (l.snapshot(), f = u.$_validate(i, l, a), !f.errors) {\n                                            l.commit(), \"strip\" === u._flags.result ? (c.fastSplice(e, t), --t, --d) : r._flags.sparse || void 0 !== f.value ? e[t] = f.value : (m.push(s(\"array.sparse\", {\n                                                key: g,\n                                                path: y,\n                                                pos: t,\n                                                value: void 0\n                                            }, n.localize(y))), o = !0), p = !0;\n                                            break;\n                                        }\n                                        l.restore();\n                                    }\n                                    if (1 === _) {\n                                        if (w) {\n                                            c.fastSplice(e, t), --t, --d, p = !0;\n                                            break;\n                                        }\n                                        if (m.push(...f.errors), a.abortEarly) return m;\n                                        o = !0;\n                                        break;\n                                    }\n                                }\n                                if (!o && (r.$_terms._inclusions.length || r.$_terms._requireds.length) && !p) {\n                                    if (w) {\n                                        c.fastSplice(e, t), --t, --d;\n                                        continue;\n                                    }\n                                    if (m.push(s(\"array.includes\", {\n                                        pos: t,\n                                        value: i\n                                    }, n.localize(y))), a.abortEarly) return m;\n                                }\n                            }\n                            return l.length && c.fillMissedErrors(r, m, l, e, n, a), u.length && (c.fillOrderedErrors(r, m, u, e, n, a), m.length || c.fillDefault(u, e, n, a)), m.length ? m : e;\n                        },\n                        priority: !0,\n                        manifest: !1\n                    },\n                    length: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"length\",\n                                args: {\n                                    limit: e\n                                },\n                                operator: \"=\"\n                            });\n                        },\n                        validate (e, t, r, s) {\n                            let { limit: n } = r, { name: a, operator: i, args: l } = s;\n                            return o.compare(e.length, n, i) ? e : t.error(\"array.\" + a, {\n                                limit: l.limit,\n                                value: e\n                            });\n                        },\n                        args: [\n                            {\n                                name: \"limit\",\n                                ref: !0,\n                                assert: o.limit,\n                                message: \"must be a positive integer\"\n                            }\n                        ]\n                    },\n                    max: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"max\",\n                                method: \"length\",\n                                args: {\n                                    limit: e\n                                },\n                                operator: \"<=\"\n                            });\n                        }\n                    },\n                    min: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"min\",\n                                method: \"length\",\n                                args: {\n                                    limit: e\n                                },\n                                operator: \">=\"\n                            });\n                        }\n                    },\n                    ordered: {\n                        method () {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            o.verifyFlat(t, \"ordered\");\n                            const s = this.$_addRule(\"items\");\n                            for(let e = 0; e < t.length; ++e){\n                                const r = o.tryWithPath(()=>this.$_compile(t[e]), e, {\n                                    append: !0\n                                });\n                                c.validateSingle(r, s), s.$_mutateRegister(r), s.$_terms.ordered.push(r);\n                            }\n                            return s.$_mutateRebuild();\n                        }\n                    },\n                    single: {\n                        method (e) {\n                            const t = void 0 === e || !!e;\n                            return s(!t || !this._flags._arrayItems, \"Cannot specify single rule when array has array items\"), this.$_setFlag(\"single\", t);\n                        }\n                    },\n                    sort: {\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                            o.assertOptions(e, [\n                                \"by\",\n                                \"order\"\n                            ]);\n                            const t = {\n                                order: e.order || \"ascending\"\n                            };\n                            return e.by && (t.by = l.ref(e.by, {\n                                ancestor: 0\n                            }), s(!t.by.ancestor, \"Cannot sort by ancestor\")), this.$_addRule({\n                                name: \"sort\",\n                                args: {\n                                    options: t\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { error: s, state: n, prefs: a, schema: i } = t, { options: o } = r;\n                            const { value: l, errors: u } = c.sort(i, e, o, n, a);\n                            if (u) return u;\n                            for(let t = 0; t < e.length; ++t)if (e[t] !== l[t]) return s(\"array.sort\", {\n                                order: o.order,\n                                by: o.by ? o.by.key : \"value\"\n                            });\n                            return e;\n                        },\n                        convert: !0\n                    },\n                    sparse: {\n                        method (e) {\n                            const t = void 0 === e || !!e;\n                            return this._flags.sparse === t ? this : (t ? this.clone() : this.$_addRule(\"items\")).$_setFlag(\"sparse\", t, {\n                                clone: !1\n                            });\n                        }\n                    },\n                    unique: {\n                        method (e) {\n                            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                            s(!e || \"function\" == typeof e || \"string\" == typeof e, \"comparator must be a function or a string\"), o.assertOptions(t, [\n                                \"ignoreUndefined\",\n                                \"separator\"\n                            ]);\n                            const r = {\n                                name: \"unique\",\n                                args: {\n                                    options: t,\n                                    comparator: e\n                                }\n                            };\n                            if (e) if (\"string\" == typeof e) {\n                                const s = o.default(t.separator, \".\");\n                                r.path = s ? e.split(s) : [\n                                    e\n                                ];\n                            } else r.comparator = e;\n                            return this.$_addRule(r);\n                        },\n                        validate (e, t, r, i) {\n                            let { state: o, error: l, schema: c } = t, { comparator: u, options: f } = r, { comparator: h, path: m } = i;\n                            const d = {\n                                string: Object.create(null),\n                                number: Object.create(null),\n                                undefined: Object.create(null),\n                                boolean: Object.create(null),\n                                object: new Map,\n                                function: new Map,\n                                custom: new Map\n                            }, p = h || n, g = f.ignoreUndefined;\n                            for(let t = 0; t < e.length; ++t){\n                                const r = m ? a(e[t], m) : e[t], n = h ? d.custom : d[typeof r];\n                                if (s(n, \"Failed to find unique map container for type\", typeof r), n instanceof Map) {\n                                    const s = n.entries();\n                                    let a;\n                                    for(; !(a = s.next()).done;)if (p(a.value[0], r)) {\n                                        const r = o.localize([\n                                            ...o.path,\n                                            t\n                                        ], [\n                                            e,\n                                            ...o.ancestors\n                                        ]), s = {\n                                            pos: t,\n                                            value: e[t],\n                                            dupePos: a.value[1],\n                                            dupeValue: e[a.value[1]]\n                                        };\n                                        return m && (s.path = u), l(\"array.unique\", s, r);\n                                    }\n                                    n.set(r, t);\n                                } else {\n                                    if ((!g || void 0 !== r) && void 0 !== n[r]) {\n                                        const s = {\n                                            pos: t,\n                                            value: e[t],\n                                            dupePos: n[r],\n                                            dupeValue: e[n[r]]\n                                        };\n                                        return m && (s.path = u), l(\"array.unique\", s, o.localize([\n                                            ...o.path,\n                                            t\n                                        ], [\n                                            e,\n                                            ...o.ancestors\n                                        ]));\n                                    }\n                                    n[r] = t;\n                                }\n                            }\n                            return e;\n                        },\n                        args: [\n                            \"comparator\",\n                            \"options\"\n                        ],\n                        multi: !0\n                    }\n                },\n                cast: {\n                    set: {\n                        from: Array.isArray,\n                        to: (e, t)=>new Set(e)\n                    }\n                },\n                rebuild (e) {\n                    e.$_terms._inclusions = [], e.$_terms._exclusions = [], e.$_terms._requireds = [];\n                    for (const t of e.$_terms.items)c.validateSingle(t, e), \"required\" === t._flags.presence ? e.$_terms._requireds.push(t) : \"forbidden\" === t._flags.presence ? e.$_terms._exclusions.push(t) : e.$_terms._inclusions.push(t);\n                    for (const t of e.$_terms.ordered)c.validateSingle(t, e);\n                },\n                manifest: {\n                    build: (e, t)=>(t.items && (e = e.items(...t.items)), t.ordered && (e = e.ordered(...t.ordered)), e)\n                },\n                messages: {\n                    \"array.base\": \"{{#label}} must be an array\",\n                    \"array.excludes\": \"{{#label}} contains an excluded value\",\n                    \"array.hasKnown\": \"{{#label}} does not contain at least one required match for type {:#patternLabel}\",\n                    \"array.hasUnknown\": \"{{#label}} does not contain at least one required match\",\n                    \"array.includes\": \"{{#label}} does not match any of the allowed types\",\n                    \"array.includesRequiredBoth\": \"{{#label}} does not contain {{#knownMisses}} and {{#unknownMisses}} other required value(s)\",\n                    \"array.includesRequiredKnowns\": \"{{#label}} does not contain {{#knownMisses}}\",\n                    \"array.includesRequiredUnknowns\": \"{{#label}} does not contain {{#unknownMisses}} required value(s)\",\n                    \"array.length\": \"{{#label}} must contain {{#limit}} items\",\n                    \"array.max\": \"{{#label}} must contain less than or equal to {{#limit}} items\",\n                    \"array.min\": \"{{#label}} must contain at least {{#limit}} items\",\n                    \"array.orderedLength\": \"{{#label}} must contain at most {{#limit}} items\",\n                    \"array.sort\": \"{{#label}} must be sorted in {#order} order by {{#by}}\",\n                    \"array.sort.mismatching\": \"{{#label}} cannot be sorted due to mismatching types\",\n                    \"array.sort.unsupported\": \"{{#label}} cannot be sorted due to unsupported type {#type}\",\n                    \"array.sparse\": \"{{#label}} must not be a sparse array item\",\n                    \"array.unique\": \"{{#label}} contains a duplicate value\"\n                }\n            }), c.fillMissedErrors = function(e, t, r, s, n, a) {\n                const i = [];\n                let o = 0;\n                for (const e of r){\n                    const t = e._flags.label;\n                    t ? i.push(t) : ++o;\n                }\n                i.length ? o ? t.push(e.$_createError(\"array.includesRequiredBoth\", s, {\n                    knownMisses: i,\n                    unknownMisses: o\n                }, n, a)) : t.push(e.$_createError(\"array.includesRequiredKnowns\", s, {\n                    knownMisses: i\n                }, n, a)) : t.push(e.$_createError(\"array.includesRequiredUnknowns\", s, {\n                    unknownMisses: o\n                }, n, a));\n            }, c.fillOrderedErrors = function(e, t, r, s, n, a) {\n                const i = [];\n                for (const e of r)\"required\" === e._flags.presence && i.push(e);\n                i.length && c.fillMissedErrors(e, t, i, s, n, a);\n            }, c.fillDefault = function(e, t, r, s) {\n                const n = [];\n                let a = !0;\n                for(let i = e.length - 1; i >= 0; --i){\n                    const o = e[i], l = [\n                        t,\n                        ...r.ancestors\n                    ], c = o.$_validate(void 0, r.localize(r.path, l, o), s).value;\n                    if (a) {\n                        if (void 0 === c) continue;\n                        a = !1;\n                    }\n                    n.unshift(c);\n                }\n                n.length && t.push(...n);\n            }, c.fastSplice = function(e, t) {\n                let r = t;\n                for(; r < e.length;)e[r++] = e[r];\n                --e.length;\n            }, c.validateSingle = function(e, t) {\n                (\"array\" === e.type || e._flags._arrayItems) && (s(!t._flags.single, \"Cannot specify array item with single rule enabled\"), t.$_setFlag(\"_arrayItems\", !0, {\n                    clone: !1\n                }));\n            }, c.sort = function(e, t, r, s, n) {\n                const a = \"ascending\" === r.order ? 1 : -1, i = -1 * a, o = a, l = (l, u)=>{\n                    let f = c.compare(l, u, i, o);\n                    if (null !== f) return f;\n                    if (r.by && (l = r.by.resolve(l, s, n), u = r.by.resolve(u, s, n)), f = c.compare(l, u, i, o), null !== f) return f;\n                    const h = typeof l;\n                    if (h !== typeof u) throw e.$_createError(\"array.sort.mismatching\", t, null, s, n);\n                    if (\"number\" !== h && \"string\" !== h) throw e.$_createError(\"array.sort.unsupported\", t, {\n                        type: h\n                    }, s, n);\n                    return \"number\" === h ? (l - u) * a : l < u ? i : o;\n                };\n                try {\n                    return {\n                        value: t.slice().sort(l)\n                    };\n                } catch (e) {\n                    return {\n                        errors: e\n                    };\n                }\n            }, c.compare = function(e, t, r, s) {\n                return e === t ? 0 : void 0 === e ? 1 : void 0 === t ? -1 : null === e ? s : null === t ? r : null;\n            };\n        },\n        4937: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8068), a = r(8160), i = r(2036), o = {\n                isBool: function(e) {\n                    return \"boolean\" == typeof e;\n                }\n            };\n            e.exports = n.extend({\n                type: \"boolean\",\n                flags: {\n                    sensitive: {\n                        default: !1\n                    }\n                },\n                terms: {\n                    falsy: {\n                        init: null,\n                        manifest: \"values\"\n                    },\n                    truthy: {\n                        init: null,\n                        manifest: \"values\"\n                    }\n                },\n                coerce (e, t) {\n                    let { schema: r } = t;\n                    if (\"boolean\" != typeof e) {\n                        if (\"string\" == typeof e) {\n                            const t = r._flags.sensitive ? e : e.toLowerCase();\n                            e = \"true\" === t || \"false\" !== t && e;\n                        }\n                        return \"boolean\" != typeof e && (e = r.$_terms.truthy && r.$_terms.truthy.has(e, null, null, !r._flags.sensitive) || (!r.$_terms.falsy || !r.$_terms.falsy.has(e, null, null, !r._flags.sensitive)) && e), {\n                            value: e\n                        };\n                    }\n                },\n                validate (e, t) {\n                    let { error: r } = t;\n                    if (\"boolean\" != typeof e) return {\n                        value: e,\n                        errors: r(\"boolean.base\")\n                    };\n                },\n                rules: {\n                    truthy: {\n                        method () {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            a.verifyFlat(t, \"truthy\");\n                            const n = this.clone();\n                            n.$_terms.truthy = n.$_terms.truthy || new i;\n                            for(let e = 0; e < t.length; ++e){\n                                const r = t[e];\n                                s(void 0 !== r, \"Cannot call truthy with undefined\"), n.$_terms.truthy.add(r);\n                            }\n                            return n;\n                        }\n                    },\n                    falsy: {\n                        method () {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            a.verifyFlat(t, \"falsy\");\n                            const n = this.clone();\n                            n.$_terms.falsy = n.$_terms.falsy || new i;\n                            for(let e = 0; e < t.length; ++e){\n                                const r = t[e];\n                                s(void 0 !== r, \"Cannot call falsy with undefined\"), n.$_terms.falsy.add(r);\n                            }\n                            return n;\n                        }\n                    },\n                    sensitive: {\n                        method () {\n                            let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];\n                            return this.$_setFlag(\"sensitive\", e);\n                        }\n                    }\n                },\n                cast: {\n                    number: {\n                        from: o.isBool,\n                        to: (e, t)=>e ? 1 : 0\n                    },\n                    string: {\n                        from: o.isBool,\n                        to: (e, t)=>e ? \"true\" : \"false\"\n                    }\n                },\n                manifest: {\n                    build: (e, t)=>(t.truthy && (e = e.truthy(...t.truthy)), t.falsy && (e = e.falsy(...t.falsy)), e)\n                },\n                messages: {\n                    \"boolean.base\": \"{{#label}} must be a boolean\"\n                }\n            });\n        },\n        7500: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8068), a = r(8160), i = r(3328), o = {\n                isDate: function(e) {\n                    return e instanceof Date;\n                }\n            };\n            e.exports = n.extend({\n                type: \"date\",\n                coerce: {\n                    from: [\n                        \"number\",\n                        \"string\"\n                    ],\n                    method (e, t) {\n                        let { schema: r } = t;\n                        return {\n                            value: o.parse(e, r._flags.format) || e\n                        };\n                    }\n                },\n                validate (e, t) {\n                    let { schema: r, error: s, prefs: n } = t;\n                    if (e instanceof Date && !isNaN(e.getTime())) return;\n                    const a = r._flags.format;\n                    return n.convert && a && \"string\" == typeof e ? {\n                        value: e,\n                        errors: s(\"date.format\", {\n                            format: a\n                        })\n                    } : {\n                        value: e,\n                        errors: s(\"date.base\")\n                    };\n                },\n                rules: {\n                    compare: {\n                        method: !1,\n                        validate (e, t, r, s) {\n                            let { date: n } = r, { name: i, operator: o, args: l } = s;\n                            const c = \"now\" === n ? Date.now() : n.getTime();\n                            return a.compare(e.getTime(), c, o) ? e : t.error(\"date.\" + i, {\n                                limit: l.date,\n                                value: e\n                            });\n                        },\n                        args: [\n                            {\n                                name: \"date\",\n                                ref: !0,\n                                normalize: (e)=>\"now\" === e ? e : o.parse(e),\n                                assert: (e)=>null !== e,\n                                message: \"must have a valid date format\"\n                            }\n                        ]\n                    },\n                    format: {\n                        method (e) {\n                            return s([\n                                \"iso\",\n                                \"javascript\",\n                                \"unix\"\n                            ].includes(e), \"Unknown date format\", e), this.$_setFlag(\"format\", e);\n                        }\n                    },\n                    greater: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"greater\",\n                                method: \"compare\",\n                                args: {\n                                    date: e\n                                },\n                                operator: \">\"\n                            });\n                        }\n                    },\n                    iso: {\n                        method () {\n                            return this.format(\"iso\");\n                        }\n                    },\n                    less: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"less\",\n                                method: \"compare\",\n                                args: {\n                                    date: e\n                                },\n                                operator: \"<\"\n                            });\n                        }\n                    },\n                    max: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"max\",\n                                method: \"compare\",\n                                args: {\n                                    date: e\n                                },\n                                operator: \"<=\"\n                            });\n                        }\n                    },\n                    min: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"min\",\n                                method: \"compare\",\n                                args: {\n                                    date: e\n                                },\n                                operator: \">=\"\n                            });\n                        }\n                    },\n                    timestamp: {\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"javascript\";\n                            return s([\n                                \"javascript\",\n                                \"unix\"\n                            ].includes(e), '\"type\" must be one of \"javascript, unix\"'), this.format(e);\n                        }\n                    }\n                },\n                cast: {\n                    number: {\n                        from: o.isDate,\n                        to: (e, t)=>e.getTime()\n                    },\n                    string: {\n                        from: o.isDate,\n                        to (e, t) {\n                            let { prefs: r } = t;\n                            return i.date(e, r);\n                        }\n                    }\n                },\n                messages: {\n                    \"date.base\": \"{{#label}} must be a valid date\",\n                    \"date.format\": '{{#label}} must be in {msg(\"date.format.\" + #format) || #format} format',\n                    \"date.greater\": \"{{#label}} must be greater than {{:#limit}}\",\n                    \"date.less\": \"{{#label}} must be less than {{:#limit}}\",\n                    \"date.max\": \"{{#label}} must be less than or equal to {{:#limit}}\",\n                    \"date.min\": \"{{#label}} must be greater than or equal to {{:#limit}}\",\n                    \"date.format.iso\": \"ISO 8601 date\",\n                    \"date.format.javascript\": \"timestamp or number of milliseconds\",\n                    \"date.format.unix\": \"timestamp or number of seconds\"\n                }\n            }), o.parse = function(e, t) {\n                if (e instanceof Date) return e;\n                if (\"string\" != typeof e && (isNaN(e) || !isFinite(e))) return null;\n                if (/^\\s*$/.test(e)) return null;\n                if (\"iso\" === t) return a.isIsoDate(e) ? o.date(e.toString()) : null;\n                const r = e;\n                if (\"string\" == typeof e && /^[+-]?\\d+(\\.\\d+)?$/.test(e) && (e = parseFloat(e)), t) {\n                    if (\"javascript\" === t) return o.date(1 * e);\n                    if (\"unix\" === t) return o.date(1e3 * e);\n                    if (\"string\" == typeof r) return null;\n                }\n                return o.date(e);\n            }, o.date = function(e) {\n                const t = new Date(e);\n                return isNaN(t.getTime()) ? null : t;\n            };\n        },\n        390: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(7824);\n            e.exports = n.extend({\n                type: \"function\",\n                properties: {\n                    typeof: \"function\"\n                },\n                rules: {\n                    arity: {\n                        method (e) {\n                            return s(Number.isSafeInteger(e) && e >= 0, \"n must be a positive integer\"), this.$_addRule({\n                                name: \"arity\",\n                                args: {\n                                    n: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { n: s } = r;\n                            return e.length === s ? e : t.error(\"function.arity\", {\n                                n: s\n                            });\n                        }\n                    },\n                    class: {\n                        method () {\n                            return this.$_addRule(\"class\");\n                        },\n                        validate: (e, t)=>/^\\s*class\\s/.test(e.toString()) ? e : t.error(\"function.class\", {\n                                value: e\n                            })\n                    },\n                    minArity: {\n                        method (e) {\n                            return s(Number.isSafeInteger(e) && e > 0, \"n must be a strict positive integer\"), this.$_addRule({\n                                name: \"minArity\",\n                                args: {\n                                    n: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { n: s } = r;\n                            return e.length >= s ? e : t.error(\"function.minArity\", {\n                                n: s\n                            });\n                        }\n                    },\n                    maxArity: {\n                        method (e) {\n                            return s(Number.isSafeInteger(e) && e >= 0, \"n must be a positive integer\"), this.$_addRule({\n                                name: \"maxArity\",\n                                args: {\n                                    n: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { n: s } = r;\n                            return e.length <= s ? e : t.error(\"function.maxArity\", {\n                                n: s\n                            });\n                        }\n                    }\n                },\n                messages: {\n                    \"function.arity\": \"{{#label}} must have an arity of {{#n}}\",\n                    \"function.class\": \"{{#label}} must be a class\",\n                    \"function.maxArity\": \"{{#label}} must have an arity lesser or equal to {{#n}}\",\n                    \"function.minArity\": \"{{#label}} must have an arity greater or equal to {{#n}}\"\n                }\n            });\n        },\n        7824: (e, t, r)=>{\n            \"use strict\";\n            const s = r(978), n = r(375), a = r(8571), i = r(3652), o = r(8068), l = r(8160), c = r(3292), u = r(6354), f = r(6133), h = r(3328), m = {\n                renameDefaults: {\n                    alias: !1,\n                    multiple: !1,\n                    override: !1\n                }\n            };\n            e.exports = o.extend({\n                type: \"_keys\",\n                properties: {\n                    typeof: \"object\"\n                },\n                flags: {\n                    unknown: {\n                        default: !1\n                    }\n                },\n                terms: {\n                    dependencies: {\n                        init: null\n                    },\n                    keys: {\n                        init: null,\n                        manifest: {\n                            mapped: {\n                                from: \"schema\",\n                                to: \"key\"\n                            }\n                        }\n                    },\n                    patterns: {\n                        init: null\n                    },\n                    renames: {\n                        init: null\n                    }\n                },\n                args: (e, t)=>e.keys(t),\n                validate (e, t) {\n                    let { schema: r, error: s, state: n, prefs: a } = t;\n                    if (!e || typeof e !== r.$_property(\"typeof\") || Array.isArray(e)) return {\n                        value: e,\n                        errors: s(\"object.base\", {\n                            type: r.$_property(\"typeof\")\n                        })\n                    };\n                    if (!(r.$_terms.renames || r.$_terms.dependencies || r.$_terms.keys || r.$_terms.patterns || r.$_terms.externals)) return;\n                    e = m.clone(e, a);\n                    const i = [];\n                    if (r.$_terms.renames && !m.rename(r, e, n, a, i)) return {\n                        value: e,\n                        errors: i\n                    };\n                    if (!r.$_terms.keys && !r.$_terms.patterns && !r.$_terms.dependencies) return {\n                        value: e,\n                        errors: i\n                    };\n                    const o = new Set(Object.keys(e));\n                    if (r.$_terms.keys) {\n                        const t = [\n                            e,\n                            ...n.ancestors\n                        ];\n                        for (const s of r.$_terms.keys){\n                            const r = s.key, l = e[r];\n                            o.delete(r);\n                            const c = n.localize([\n                                ...n.path,\n                                r\n                            ], t, s), u = s.schema.$_validate(l, c, a);\n                            if (u.errors) {\n                                if (a.abortEarly) return {\n                                    value: e,\n                                    errors: u.errors\n                                };\n                                void 0 !== u.value && (e[r] = u.value), i.push(...u.errors);\n                            } else \"strip\" === s.schema._flags.result || void 0 === u.value && void 0 !== l ? delete e[r] : void 0 !== u.value && (e[r] = u.value);\n                        }\n                    }\n                    if (o.size || r._flags._hasPatternMatch) {\n                        const t = m.unknown(r, e, o, i, n, a);\n                        if (t) return t;\n                    }\n                    if (r.$_terms.dependencies) for (const t of r.$_terms.dependencies){\n                        if (null !== t.key && !1 === m.isPresent(t.options)(t.key.resolve(e, n, a, null, {\n                            shadow: !1\n                        }))) continue;\n                        const s = m.dependencies[t.rel](r, t, e, n, a);\n                        if (s) {\n                            const t = r.$_createError(s.code, e, s.context, n, a);\n                            if (a.abortEarly) return {\n                                value: e,\n                                errors: t\n                            };\n                            i.push(t);\n                        }\n                    }\n                    return {\n                        value: e,\n                        errors: i\n                    };\n                },\n                rules: {\n                    and: {\n                        method () {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            return l.verifyFlat(t, \"and\"), m.dependency(this, \"and\", null, t);\n                        }\n                    },\n                    append: {\n                        method (e) {\n                            return null == e || 0 === Object.keys(e).length ? this : this.keys(e);\n                        }\n                    },\n                    assert: {\n                        method (e, t, r) {\n                            h.isTemplate(e) || (e = c.ref(e)), n(void 0 === r || \"string\" == typeof r, \"Message must be a string\"), t = this.$_compile(t, {\n                                appendPath: !0\n                            });\n                            const s = this.$_addRule({\n                                name: \"assert\",\n                                args: {\n                                    subject: e,\n                                    schema: t,\n                                    message: r\n                                }\n                            });\n                            return s.$_mutateRegister(e), s.$_mutateRegister(t), s;\n                        },\n                        validate (e, t, r) {\n                            let { error: s, prefs: n, state: a } = t, { subject: i, schema: o, message: l } = r;\n                            const c = i.resolve(e, a, n), u = f.isRef(i) ? i.absolute(a) : [];\n                            return o.$_match(c, a.localize(u, [\n                                e,\n                                ...a.ancestors\n                            ], o), n) ? e : s(\"object.assert\", {\n                                subject: i,\n                                message: l\n                            });\n                        },\n                        args: [\n                            \"subject\",\n                            \"schema\",\n                            \"message\"\n                        ],\n                        multi: !0\n                    },\n                    instance: {\n                        method (e, t) {\n                            return n(\"function\" == typeof e, \"constructor must be a function\"), t = t || e.name, this.$_addRule({\n                                name: \"instance\",\n                                args: {\n                                    constructor: e,\n                                    name: t\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { constructor: s, name: n } = r;\n                            return e instanceof s ? e : t.error(\"object.instance\", {\n                                type: n,\n                                value: e\n                            });\n                        },\n                        args: [\n                            \"constructor\",\n                            \"name\"\n                        ]\n                    },\n                    keys: {\n                        method (e) {\n                            n(void 0 === e || \"object\" == typeof e, \"Object schema must be a valid object\"), n(!l.isSchema(e), \"Object schema cannot be a joi schema\");\n                            const t = this.clone();\n                            if (e) if (Object.keys(e).length) {\n                                t.$_terms.keys = t.$_terms.keys ? t.$_terms.keys.filter((t)=>!e.hasOwnProperty(t.key)) : new m.Keys;\n                                for(const r in e)l.tryWithPath(()=>t.$_terms.keys.push({\n                                        key: r,\n                                        schema: this.$_compile(e[r])\n                                    }), r);\n                            } else t.$_terms.keys = new m.Keys;\n                            else t.$_terms.keys = null;\n                            return t.$_mutateRebuild();\n                        }\n                    },\n                    length: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"length\",\n                                args: {\n                                    limit: e\n                                },\n                                operator: \"=\"\n                            });\n                        },\n                        validate (e, t, r, s) {\n                            let { limit: n } = r, { name: a, operator: i, args: o } = s;\n                            return l.compare(Object.keys(e).length, n, i) ? e : t.error(\"object.\" + a, {\n                                limit: o.limit,\n                                value: e\n                            });\n                        },\n                        args: [\n                            {\n                                name: \"limit\",\n                                ref: !0,\n                                assert: l.limit,\n                                message: \"must be a positive integer\"\n                            }\n                        ]\n                    },\n                    max: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"max\",\n                                method: \"length\",\n                                args: {\n                                    limit: e\n                                },\n                                operator: \"<=\"\n                            });\n                        }\n                    },\n                    min: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"min\",\n                                method: \"length\",\n                                args: {\n                                    limit: e\n                                },\n                                operator: \">=\"\n                            });\n                        }\n                    },\n                    nand: {\n                        method () {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            return l.verifyFlat(t, \"nand\"), m.dependency(this, \"nand\", null, t);\n                        }\n                    },\n                    or: {\n                        method () {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            return l.verifyFlat(t, \"or\"), m.dependency(this, \"or\", null, t);\n                        }\n                    },\n                    oxor: {\n                        method () {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            return m.dependency(this, \"oxor\", null, t);\n                        }\n                    },\n                    pattern: {\n                        method (e, t) {\n                            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                            const s = e instanceof RegExp;\n                            s || (e = this.$_compile(e, {\n                                appendPath: !0\n                            })), n(void 0 !== t, \"Invalid rule\"), l.assertOptions(r, [\n                                \"fallthrough\",\n                                \"matches\"\n                            ]), s && n(!e.flags.includes(\"g\") && !e.flags.includes(\"y\"), \"pattern should not use global or sticky mode\"), t = this.$_compile(t, {\n                                appendPath: !0\n                            });\n                            const a = this.clone();\n                            a.$_terms.patterns = a.$_terms.patterns || [];\n                            const i = {\n                                [s ? \"regex\" : \"schema\"]: e,\n                                rule: t\n                            };\n                            return r.matches && (i.matches = this.$_compile(r.matches), \"array\" !== i.matches.type && (i.matches = i.matches.$_root.array().items(i.matches)), a.$_mutateRegister(i.matches), a.$_setFlag(\"_hasPatternMatch\", !0, {\n                                clone: !1\n                            })), r.fallthrough && (i.fallthrough = !0), a.$_terms.patterns.push(i), a.$_mutateRegister(t), a;\n                        }\n                    },\n                    ref: {\n                        method () {\n                            return this.$_addRule(\"ref\");\n                        },\n                        validate: (e, t)=>f.isRef(e) ? e : t.error(\"object.refType\", {\n                                value: e\n                            })\n                    },\n                    regex: {\n                        method () {\n                            return this.$_addRule(\"regex\");\n                        },\n                        validate: (e, t)=>e instanceof RegExp ? e : t.error(\"object.regex\", {\n                                value: e\n                            })\n                    },\n                    rename: {\n                        method (e, t) {\n                            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                            n(\"string\" == typeof e || e instanceof RegExp, \"Rename missing the from argument\"), n(\"string\" == typeof t || t instanceof h, \"Invalid rename to argument\"), n(t !== e, \"Cannot rename key to same name:\", e), l.assertOptions(r, [\n                                \"alias\",\n                                \"ignoreUndefined\",\n                                \"override\",\n                                \"multiple\"\n                            ]);\n                            const a = this.clone();\n                            a.$_terms.renames = a.$_terms.renames || [];\n                            for (const t of a.$_terms.renames)n(t.from !== e, \"Cannot rename the same key multiple times\");\n                            return t instanceof h && a.$_mutateRegister(t), a.$_terms.renames.push({\n                                from: e,\n                                to: t,\n                                options: s(m.renameDefaults, r)\n                            }), a;\n                        }\n                    },\n                    schema: {\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"any\";\n                            return this.$_addRule({\n                                name: \"schema\",\n                                args: {\n                                    type: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { type: s } = r;\n                            return !l.isSchema(e) || \"any\" !== s && e.type !== s ? t.error(\"object.schema\", {\n                                type: s\n                            }) : e;\n                        }\n                    },\n                    unknown: {\n                        method (e) {\n                            return this.$_setFlag(\"unknown\", !1 !== e);\n                        }\n                    },\n                    with: {\n                        method (e, t) {\n                            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                            return m.dependency(this, \"with\", e, t, r);\n                        }\n                    },\n                    without: {\n                        method (e, t) {\n                            let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                            return m.dependency(this, \"without\", e, t, r);\n                        }\n                    },\n                    xor: {\n                        method () {\n                            for(var e = arguments.length, t = new Array(e), r = 0; r < e; r++)t[r] = arguments[r];\n                            return l.verifyFlat(t, \"xor\"), m.dependency(this, \"xor\", null, t);\n                        }\n                    }\n                },\n                overrides: {\n                    default (e, t) {\n                        return void 0 === e && (e = l.symbols.deepDefault), this.$_parent(\"default\", e, t);\n                    }\n                },\n                rebuild (e) {\n                    if (e.$_terms.keys) {\n                        const t = new i.Sorter;\n                        for (const r of e.$_terms.keys)l.tryWithPath(()=>t.add(r, {\n                                after: r.schema.$_rootReferences(),\n                                group: r.key\n                            }), r.key);\n                        e.$_terms.keys = new m.Keys(...t.nodes);\n                    }\n                },\n                manifest: {\n                    build (e, t) {\n                        if (t.keys && (e = e.keys(t.keys)), t.dependencies) for (const { rel: r, key: s = null, peers: n, options: a } of t.dependencies)e = m.dependency(e, r, s, n, a);\n                        if (t.patterns) for (const { regex: r, schema: s, rule: n, fallthrough: a, matches: i } of t.patterns)e = e.pattern(r || s, n, {\n                            fallthrough: a,\n                            matches: i\n                        });\n                        if (t.renames) for (const { from: r, to: s, options: n } of t.renames)e = e.rename(r, s, n);\n                        return e;\n                    }\n                },\n                messages: {\n                    \"object.and\": \"{{#label}} contains {{#presentWithLabels}} without its required peers {{#missingWithLabels}}\",\n                    \"object.assert\": '{{#label}} is invalid because {if(#subject.key, `\"` + #subject.key + `\" failed to ` + (#message || \"pass the assertion test\"), #message || \"the assertion failed\")}',\n                    \"object.base\": \"{{#label}} must be of type {{#type}}\",\n                    \"object.instance\": \"{{#label}} must be an instance of {{:#type}}\",\n                    \"object.length\": '{{#label}} must have {{#limit}} key{if(#limit == 1, \"\", \"s\")}',\n                    \"object.max\": '{{#label}} must have less than or equal to {{#limit}} key{if(#limit == 1, \"\", \"s\")}',\n                    \"object.min\": '{{#label}} must have at least {{#limit}} key{if(#limit == 1, \"\", \"s\")}',\n                    \"object.missing\": \"{{#label}} must contain at least one of {{#peersWithLabels}}\",\n                    \"object.nand\": \"{{:#mainWithLabel}} must not exist simultaneously with {{#peersWithLabels}}\",\n                    \"object.oxor\": \"{{#label}} contains a conflict between optional exclusive peers {{#peersWithLabels}}\",\n                    \"object.pattern.match\": \"{{#label}} keys failed to match pattern requirements\",\n                    \"object.refType\": \"{{#label}} must be a Joi reference\",\n                    \"object.regex\": \"{{#label}} must be a RegExp object\",\n                    \"object.rename.multiple\": \"{{#label}} cannot rename {{:#from}} because multiple renames are disabled and another key was already renamed to {{:#to}}\",\n                    \"object.rename.override\": \"{{#label}} cannot rename {{:#from}} because override is disabled and target {{:#to}} exists\",\n                    \"object.schema\": \"{{#label}} must be a Joi schema of {{#type}} type\",\n                    \"object.unknown\": \"{{#label}} is not allowed\",\n                    \"object.with\": \"{{:#mainWithLabel}} missing required peer {{:#peerWithLabel}}\",\n                    \"object.without\": \"{{:#mainWithLabel}} conflict with forbidden peer {{:#peerWithLabel}}\",\n                    \"object.xor\": \"{{#label}} contains a conflict between exclusive peers {{#peersWithLabels}}\"\n                }\n            }), m.clone = function(e, t) {\n                if (\"object\" == typeof e) {\n                    if (t.nonEnumerables) return a(e, {\n                        shallow: !0\n                    });\n                    const r = Object.create(Object.getPrototypeOf(e));\n                    return Object.assign(r, e), r;\n                }\n                const r = function() {\n                    for(var t = arguments.length, r = new Array(t), s = 0; s < t; s++)r[s] = arguments[s];\n                    return e.apply(this, r);\n                };\n                return r.prototype = a(e.prototype), Object.defineProperty(r, \"name\", {\n                    value: e.name,\n                    writable: !1\n                }), Object.defineProperty(r, \"length\", {\n                    value: e.length,\n                    writable: !1\n                }), Object.assign(r, e), r;\n            }, m.dependency = function(e, t, r, s, a) {\n                n(null === r || \"string\" == typeof r, t, \"key must be a strings\"), a || (a = s.length > 1 && \"object\" == typeof s[s.length - 1] ? s.pop() : {}), l.assertOptions(a, [\n                    \"separator\",\n                    \"isPresent\"\n                ]), s = [].concat(s);\n                const i = l.default(a.separator, \".\"), o = [];\n                for (const e of s)n(\"string\" == typeof e, t, \"peers must be strings\"), o.push(c.ref(e, {\n                    separator: i,\n                    ancestor: 0,\n                    prefix: !1\n                }));\n                null !== r && (r = c.ref(r, {\n                    separator: i,\n                    ancestor: 0,\n                    prefix: !1\n                }));\n                const u = e.clone();\n                return u.$_terms.dependencies = u.$_terms.dependencies || [], u.$_terms.dependencies.push(new m.Dependency(t, r, o, s, a)), u;\n            }, m.dependencies = {\n                and (e, t, r, s, n) {\n                    const a = [], i = [], o = t.peers.length, l = m.isPresent(t.options);\n                    for (const e of t.peers)!1 === l(e.resolve(r, s, n, null, {\n                        shadow: !1\n                    })) ? a.push(e.key) : i.push(e.key);\n                    if (a.length !== o && i.length !== o) return {\n                        code: \"object.and\",\n                        context: {\n                            present: i,\n                            presentWithLabels: m.keysToLabels(e, i),\n                            missing: a,\n                            missingWithLabels: m.keysToLabels(e, a)\n                        }\n                    };\n                },\n                nand (e, t, r, s, n) {\n                    const a = [], i = m.isPresent(t.options);\n                    for (const e of t.peers)i(e.resolve(r, s, n, null, {\n                        shadow: !1\n                    })) && a.push(e.key);\n                    if (a.length !== t.peers.length) return;\n                    const o = t.paths[0], l = t.paths.slice(1);\n                    return {\n                        code: \"object.nand\",\n                        context: {\n                            main: o,\n                            mainWithLabel: m.keysToLabels(e, o),\n                            peers: l,\n                            peersWithLabels: m.keysToLabels(e, l)\n                        }\n                    };\n                },\n                or (e, t, r, s, n) {\n                    const a = m.isPresent(t.options);\n                    for (const e of t.peers)if (a(e.resolve(r, s, n, null, {\n                        shadow: !1\n                    }))) return;\n                    return {\n                        code: \"object.missing\",\n                        context: {\n                            peers: t.paths,\n                            peersWithLabels: m.keysToLabels(e, t.paths)\n                        }\n                    };\n                },\n                oxor (e, t, r, s, n) {\n                    const a = [], i = m.isPresent(t.options);\n                    for (const e of t.peers)i(e.resolve(r, s, n, null, {\n                        shadow: !1\n                    })) && a.push(e.key);\n                    if (!a.length || 1 === a.length) return;\n                    const o = {\n                        peers: t.paths,\n                        peersWithLabels: m.keysToLabels(e, t.paths)\n                    };\n                    return o.present = a, o.presentWithLabels = m.keysToLabels(e, a), {\n                        code: \"object.oxor\",\n                        context: o\n                    };\n                },\n                with (e, t, r, s, n) {\n                    const a = m.isPresent(t.options);\n                    for (const i of t.peers)if (!1 === a(i.resolve(r, s, n, null, {\n                        shadow: !1\n                    }))) return {\n                        code: \"object.with\",\n                        context: {\n                            main: t.key.key,\n                            mainWithLabel: m.keysToLabels(e, t.key.key),\n                            peer: i.key,\n                            peerWithLabel: m.keysToLabels(e, i.key)\n                        }\n                    };\n                },\n                without (e, t, r, s, n) {\n                    const a = m.isPresent(t.options);\n                    for (const i of t.peers)if (a(i.resolve(r, s, n, null, {\n                        shadow: !1\n                    }))) return {\n                        code: \"object.without\",\n                        context: {\n                            main: t.key.key,\n                            mainWithLabel: m.keysToLabels(e, t.key.key),\n                            peer: i.key,\n                            peerWithLabel: m.keysToLabels(e, i.key)\n                        }\n                    };\n                },\n                xor (e, t, r, s, n) {\n                    const a = [], i = m.isPresent(t.options);\n                    for (const e of t.peers)i(e.resolve(r, s, n, null, {\n                        shadow: !1\n                    })) && a.push(e.key);\n                    if (1 === a.length) return;\n                    const o = {\n                        peers: t.paths,\n                        peersWithLabels: m.keysToLabels(e, t.paths)\n                    };\n                    return 0 === a.length ? {\n                        code: \"object.missing\",\n                        context: o\n                    } : (o.present = a, o.presentWithLabels = m.keysToLabels(e, a), {\n                        code: \"object.xor\",\n                        context: o\n                    });\n                }\n            }, m.keysToLabels = function(e, t) {\n                return Array.isArray(t) ? t.map((t)=>e.$_mapLabels(t)) : e.$_mapLabels(t);\n            }, m.isPresent = function(e) {\n                return \"function\" == typeof e.isPresent ? e.isPresent : (e)=>void 0 !== e;\n            }, m.rename = function(e, t, r, s, n) {\n                const a = {};\n                for (const i of e.$_terms.renames){\n                    const o = [], l = \"string\" != typeof i.from;\n                    if (l) for(const e in t){\n                        if (void 0 === t[e] && i.options.ignoreUndefined) continue;\n                        if (e === i.to) continue;\n                        const r = i.from.exec(e);\n                        r && o.push({\n                            from: e,\n                            to: i.to,\n                            match: r\n                        });\n                    }\n                    else !Object.prototype.hasOwnProperty.call(t, i.from) || void 0 === t[i.from] && i.options.ignoreUndefined || o.push(i);\n                    for (const c of o){\n                        const o = c.from;\n                        let u = c.to;\n                        if (u instanceof h && (u = u.render(t, r, s, c.match)), o !== u) {\n                            if (!i.options.multiple && a[u] && (n.push(e.$_createError(\"object.rename.multiple\", t, {\n                                from: o,\n                                to: u,\n                                pattern: l\n                            }, r, s)), s.abortEarly)) return !1;\n                            if (Object.prototype.hasOwnProperty.call(t, u) && !i.options.override && !a[u] && (n.push(e.$_createError(\"object.rename.override\", t, {\n                                from: o,\n                                to: u,\n                                pattern: l\n                            }, r, s)), s.abortEarly)) return !1;\n                            void 0 === t[o] ? delete t[u] : t[u] = t[o], a[u] = !0, i.options.alias || delete t[o];\n                        }\n                    }\n                }\n                return !0;\n            }, m.unknown = function(e, t, r, s, n, a) {\n                if (e.$_terms.patterns) {\n                    let i = !1;\n                    const o = e.$_terms.patterns.map((e)=>{\n                        if (e.matches) return i = !0, [];\n                    }), l = [\n                        t,\n                        ...n.ancestors\n                    ];\n                    for (const i of r){\n                        const c = t[i], u = [\n                            ...n.path,\n                            i\n                        ];\n                        for(let f = 0; f < e.$_terms.patterns.length; ++f){\n                            const h = e.$_terms.patterns[f];\n                            if (h.regex) {\n                                const e = h.regex.test(i);\n                                if (n.mainstay.tracer.debug(n, \"rule\", `pattern.${f}`, e ? \"pass\" : \"error\"), !e) continue;\n                            } else if (!h.schema.$_match(i, n.nest(h.schema, `pattern.${f}`), a)) continue;\n                            r.delete(i);\n                            const m = n.localize(u, l, {\n                                schema: h.rule,\n                                key: i\n                            }), d = h.rule.$_validate(c, m, a);\n                            if (d.errors) {\n                                if (a.abortEarly) return {\n                                    value: t,\n                                    errors: d.errors\n                                };\n                                s.push(...d.errors);\n                            }\n                            if (h.matches && o[f].push(i), t[i] = d.value, !h.fallthrough) break;\n                        }\n                    }\n                    if (i) for(let r = 0; r < o.length; ++r){\n                        const i = o[r];\n                        if (!i) continue;\n                        const c = e.$_terms.patterns[r].matches, f = n.localize(n.path, l, c), h = c.$_validate(i, f, a);\n                        if (h.errors) {\n                            const r = u.details(h.errors, {\n                                override: !1\n                            });\n                            r.matches = i;\n                            const o = e.$_createError(\"object.pattern.match\", t, r, n, a);\n                            if (a.abortEarly) return {\n                                value: t,\n                                errors: o\n                            };\n                            s.push(o);\n                        }\n                    }\n                }\n                if (r.size && (e.$_terms.keys || e.$_terms.patterns)) {\n                    if (a.stripUnknown && !e._flags.unknown || a.skipFunctions) {\n                        const e = !(!a.stripUnknown || !0 !== a.stripUnknown && !a.stripUnknown.objects);\n                        for (const s of r)e ? (delete t[s], r.delete(s)) : \"function\" == typeof t[s] && r.delete(s);\n                    }\n                    if (!l.default(e._flags.unknown, a.allowUnknown)) for (const i of r){\n                        const r = n.localize([\n                            ...n.path,\n                            i\n                        ], []), o = e.$_createError(\"object.unknown\", t[i], {\n                            child: i\n                        }, r, a, {\n                            flags: !1\n                        });\n                        if (a.abortEarly) return {\n                            value: t,\n                            errors: o\n                        };\n                        s.push(o);\n                    }\n                }\n            }, m.Dependency = class {\n                constructor(e, t, r, s, n){\n                    this.rel = e, this.key = t, this.peers = r, this.paths = s, this.options = n;\n                }\n                describe() {\n                    const e = {\n                        rel: this.rel,\n                        peers: this.paths\n                    };\n                    return null !== this.key && (e.key = this.key.key), \".\" !== this.peers[0].separator && (e.options = {\n                        ...e.options,\n                        separator: this.peers[0].separator\n                    }), this.options.isPresent && (e.options = {\n                        ...e.options,\n                        isPresent: this.options.isPresent\n                    }), e;\n                }\n            }, m.Keys = class extends Array {\n                concat(e) {\n                    const t = this.slice(), r = new Map;\n                    for(let e = 0; e < t.length; ++e)r.set(t[e].key, e);\n                    for (const s of e){\n                        const e = s.key, n = r.get(e);\n                        void 0 !== n ? t[n] = {\n                            key: e,\n                            schema: t[n].schema.concat(s.schema)\n                        } : t.push(s);\n                    }\n                    return t;\n                }\n            };\n        },\n        8785: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8068), a = r(8160), i = r(3292), o = r(6354), l = {};\n            e.exports = n.extend({\n                type: \"link\",\n                properties: {\n                    schemaChain: !0\n                },\n                terms: {\n                    link: {\n                        init: null,\n                        manifest: \"single\",\n                        register: !1\n                    }\n                },\n                args: (e, t)=>e.ref(t),\n                validate (e, t) {\n                    let { schema: r, state: n, prefs: a } = t;\n                    s(r.$_terms.link, \"Uninitialized link schema\");\n                    const i = l.generate(r, e, n, a), o = r.$_terms.link[0].ref;\n                    return i.$_validate(e, n.nest(i, `link:${o.display}:${i.type}`), a);\n                },\n                generate: (e, t, r, s)=>l.generate(e, t, r, s),\n                rules: {\n                    ref: {\n                        method (e) {\n                            s(!this.$_terms.link, \"Cannot reinitialize schema\"), e = i.ref(e), s(\"value\" === e.type || \"local\" === e.type, \"Invalid reference type:\", e.type), s(\"local\" === e.type || \"root\" === e.ancestor || e.ancestor > 0, \"Link cannot reference itself\");\n                            const t = this.clone();\n                            return t.$_terms.link = [\n                                {\n                                    ref: e\n                                }\n                            ], t;\n                        }\n                    },\n                    relative: {\n                        method () {\n                            let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];\n                            return this.$_setFlag(\"relative\", e);\n                        }\n                    }\n                },\n                overrides: {\n                    concat (e) {\n                        s(this.$_terms.link, \"Uninitialized link schema\"), s(a.isSchema(e), \"Invalid schema object\"), s(\"link\" !== e.type, \"Cannot merge type link with another link\");\n                        const t = this.clone();\n                        return t.$_terms.whens || (t.$_terms.whens = []), t.$_terms.whens.push({\n                            concat: e\n                        }), t.$_mutateRebuild();\n                    }\n                },\n                manifest: {\n                    build: (e, t)=>(s(t.link, \"Invalid link description missing link\"), e.ref(t.link))\n                }\n            }), l.generate = function(e, t, r, s) {\n                let n = r.mainstay.links.get(e);\n                if (n) return n._generate(t, r, s).schema;\n                const a = e.$_terms.link[0].ref, { perspective: i, path: o } = l.perspective(a, r);\n                l.assert(i, \"which is outside of schema boundaries\", a, e, r, s);\n                try {\n                    n = o.length ? i.$_reach(o) : i;\n                } catch (t) {\n                    l.assert(!1, \"to non-existing schema\", a, e, r, s);\n                }\n                return l.assert(\"link\" !== n.type, \"which is another link\", a, e, r, s), e._flags.relative || r.mainstay.links.set(e, n), n._generate(t, r, s).schema;\n            }, l.perspective = function(e, t) {\n                if (\"local\" === e.type) {\n                    for (const { schema: r, key: s } of t.schemas){\n                        if ((r._flags.id || s) === e.path[0]) return {\n                            perspective: r,\n                            path: e.path.slice(1)\n                        };\n                        if (r.$_terms.shared) {\n                            for (const t of r.$_terms.shared)if (t._flags.id === e.path[0]) return {\n                                perspective: t,\n                                path: e.path.slice(1)\n                            };\n                        }\n                    }\n                    return {\n                        perspective: null,\n                        path: null\n                    };\n                }\n                return \"root\" === e.ancestor ? {\n                    perspective: t.schemas[t.schemas.length - 1].schema,\n                    path: e.path\n                } : {\n                    perspective: t.schemas[e.ancestor] && t.schemas[e.ancestor].schema,\n                    path: e.path\n                };\n            }, l.assert = function(e, t, r, n, a, i) {\n                e || s(!1, `\"${o.label(n._flags, a, i)}\" contains link reference \"${r.display}\" ${t}`);\n            };\n        },\n        3832: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8068), a = r(8160), i = {\n                numberRx: /^\\s*[+-]?(?:(?:\\d+(?:\\.\\d*)?)|(?:\\.\\d+))(?:e([+-]?\\d+))?\\s*$/i,\n                precisionRx: /(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/,\n                exponentialPartRegex: /[eE][+-]?\\d+$/,\n                leadingSignAndZerosRegex: /^[+-]?(0*)?/,\n                dotRegex: /\\./,\n                trailingZerosRegex: /0+$/\n            };\n            e.exports = n.extend({\n                type: \"number\",\n                flags: {\n                    unsafe: {\n                        default: !1\n                    }\n                },\n                coerce: {\n                    from: \"string\",\n                    method (e, t) {\n                        let { schema: r, error: s } = t;\n                        if (!e.match(i.numberRx)) return;\n                        e = e.trim();\n                        const n = {\n                            value: parseFloat(e)\n                        };\n                        if (0 === n.value && (n.value = 0), !r._flags.unsafe) if (e.match(/e/i)) {\n                            if (i.extractSignificantDigits(e) !== i.extractSignificantDigits(String(n.value))) return n.errors = s(\"number.unsafe\"), n;\n                        } else {\n                            const t = n.value.toString();\n                            if (t.match(/e/i)) return n;\n                            if (t !== i.normalizeDecimal(e)) return n.errors = s(\"number.unsafe\"), n;\n                        }\n                        return n;\n                    }\n                },\n                validate (e, t) {\n                    let { schema: r, error: s, prefs: n } = t;\n                    if (e === 1 / 0 || e === -1 / 0) return {\n                        value: e,\n                        errors: s(\"number.infinity\")\n                    };\n                    if (!a.isNumber(e)) return {\n                        value: e,\n                        errors: s(\"number.base\")\n                    };\n                    const i = {\n                        value: e\n                    };\n                    if (n.convert) {\n                        const e = r.$_getRule(\"precision\");\n                        if (e) {\n                            const t = Math.pow(10, e.args.limit);\n                            i.value = Math.round(i.value * t) / t;\n                        }\n                    }\n                    return 0 === i.value && (i.value = 0), !r._flags.unsafe && (e > Number.MAX_SAFE_INTEGER || e < Number.MIN_SAFE_INTEGER) && (i.errors = s(\"number.unsafe\")), i;\n                },\n                rules: {\n                    compare: {\n                        method: !1,\n                        validate (e, t, r, s) {\n                            let { limit: n } = r, { name: i, operator: o, args: l } = s;\n                            return a.compare(e, n, o) ? e : t.error(\"number.\" + i, {\n                                limit: l.limit,\n                                value: e\n                            });\n                        },\n                        args: [\n                            {\n                                name: \"limit\",\n                                ref: !0,\n                                assert: a.isNumber,\n                                message: \"must be a number\"\n                            }\n                        ]\n                    },\n                    greater: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"greater\",\n                                method: \"compare\",\n                                args: {\n                                    limit: e\n                                },\n                                operator: \">\"\n                            });\n                        }\n                    },\n                    integer: {\n                        method () {\n                            return this.$_addRule(\"integer\");\n                        },\n                        validate: (e, t)=>Math.trunc(e) - e == 0 ? e : t.error(\"number.integer\")\n                    },\n                    less: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"less\",\n                                method: \"compare\",\n                                args: {\n                                    limit: e\n                                },\n                                operator: \"<\"\n                            });\n                        }\n                    },\n                    max: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"max\",\n                                method: \"compare\",\n                                args: {\n                                    limit: e\n                                },\n                                operator: \"<=\"\n                            });\n                        }\n                    },\n                    min: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"min\",\n                                method: \"compare\",\n                                args: {\n                                    limit: e\n                                },\n                                operator: \">=\"\n                            });\n                        }\n                    },\n                    multiple: {\n                        method (e) {\n                            return this.$_addRule({\n                                name: \"multiple\",\n                                args: {\n                                    base: e\n                                }\n                            });\n                        },\n                        validate (e, t, r, s) {\n                            let { base: n } = r;\n                            return e * (1 / n) % 1 == 0 ? e : t.error(\"number.multiple\", {\n                                multiple: s.args.base,\n                                value: e\n                            });\n                        },\n                        args: [\n                            {\n                                name: \"base\",\n                                ref: !0,\n                                assert: (e)=>\"number\" == typeof e && isFinite(e) && e > 0,\n                                message: \"must be a positive number\"\n                            }\n                        ],\n                        multi: !0\n                    },\n                    negative: {\n                        method () {\n                            return this.sign(\"negative\");\n                        }\n                    },\n                    port: {\n                        method () {\n                            return this.$_addRule(\"port\");\n                        },\n                        validate: (e, t)=>Number.isSafeInteger(e) && e >= 0 && e <= 65535 ? e : t.error(\"number.port\")\n                    },\n                    positive: {\n                        method () {\n                            return this.sign(\"positive\");\n                        }\n                    },\n                    precision: {\n                        method (e) {\n                            return s(Number.isSafeInteger(e), \"limit must be an integer\"), this.$_addRule({\n                                name: \"precision\",\n                                args: {\n                                    limit: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { limit: s } = r;\n                            const n = e.toString().match(i.precisionRx);\n                            return Math.max((n[1] ? n[1].length : 0) - (n[2] ? parseInt(n[2], 10) : 0), 0) <= s ? e : t.error(\"number.precision\", {\n                                limit: s,\n                                value: e\n                            });\n                        },\n                        convert: !0\n                    },\n                    sign: {\n                        method (e) {\n                            return s([\n                                \"negative\",\n                                \"positive\"\n                            ].includes(e), \"Invalid sign\", e), this.$_addRule({\n                                name: \"sign\",\n                                args: {\n                                    sign: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { sign: s } = r;\n                            return \"negative\" === s && e < 0 || \"positive\" === s && e > 0 ? e : t.error(`number.${s}`);\n                        }\n                    },\n                    unsafe: {\n                        method () {\n                            let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];\n                            return s(\"boolean\" == typeof e, \"enabled must be a boolean\"), this.$_setFlag(\"unsafe\", e);\n                        }\n                    }\n                },\n                cast: {\n                    string: {\n                        from: (e)=>\"number\" == typeof e,\n                        to: (e, t)=>e.toString()\n                    }\n                },\n                messages: {\n                    \"number.base\": \"{{#label}} must be a number\",\n                    \"number.greater\": \"{{#label}} must be greater than {{#limit}}\",\n                    \"number.infinity\": \"{{#label}} cannot be infinity\",\n                    \"number.integer\": \"{{#label}} must be an integer\",\n                    \"number.less\": \"{{#label}} must be less than {{#limit}}\",\n                    \"number.max\": \"{{#label}} must be less than or equal to {{#limit}}\",\n                    \"number.min\": \"{{#label}} must be greater than or equal to {{#limit}}\",\n                    \"number.multiple\": \"{{#label}} must be a multiple of {{#multiple}}\",\n                    \"number.negative\": \"{{#label}} must be a negative number\",\n                    \"number.port\": \"{{#label}} must be a valid port\",\n                    \"number.positive\": \"{{#label}} must be a positive number\",\n                    \"number.precision\": \"{{#label}} must have no more than {{#limit}} decimal places\",\n                    \"number.unsafe\": \"{{#label}} must be a safe number\"\n                }\n            }), i.extractSignificantDigits = function(e) {\n                return e.replace(i.exponentialPartRegex, \"\").replace(i.dotRegex, \"\").replace(i.trailingZerosRegex, \"\").replace(i.leadingSignAndZerosRegex, \"\");\n            }, i.normalizeDecimal = function(e) {\n                return (e = e.replace(/^\\+/, \"\").replace(/\\.0*$/, \"\").replace(/^(-?)\\.([^\\.]*)$/, \"$10.$2\").replace(/^(-?)0+([0-9])/, \"$1$2\")).includes(\".\") && e.endsWith(\"0\") && (e = e.replace(/0+$/, \"\")), \"-0\" === e ? \"0\" : e;\n            };\n        },\n        8966: (e, t, r)=>{\n            \"use strict\";\n            const s = r(7824);\n            e.exports = s.extend({\n                type: \"object\",\n                cast: {\n                    map: {\n                        from: (e)=>e && \"object\" == typeof e,\n                        to: (e, t)=>new Map(Object.entries(e))\n                    }\n                }\n            });\n        },\n        7417: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(5380), a = r(1745), i = r(9959), o = r(6064), l = r(9926), c = r(5752), u = r(8068), f = r(8160), h = {\n                tlds: l instanceof Set && {\n                    tlds: {\n                        allow: l,\n                        deny: null\n                    }\n                },\n                base64Regex: {\n                    true: {\n                        true: /^(?:[\\w\\-]{2}[\\w\\-]{2})*(?:[\\w\\-]{2}==|[\\w\\-]{3}=)?$/,\n                        false: /^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/\n                    },\n                    false: {\n                        true: /^(?:[\\w\\-]{2}[\\w\\-]{2})*(?:[\\w\\-]{2}(==)?|[\\w\\-]{3}=?)?$/,\n                        false: /^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}(==)?|[A-Za-z0-9+\\/]{3}=?)?$/\n                    }\n                },\n                dataUriRegex: /^data:[\\w+.-]+\\/[\\w+.-]+;((charset=[\\w-]+|base64),)?(.*)$/,\n                hexRegex: /^[a-f0-9]+$/i,\n                ipRegex: i.regex({\n                    cidr: \"forbidden\"\n                }).regex,\n                isoDurationRegex: /^P(?!$)(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?$/,\n                guidBrackets: {\n                    \"{\": \"}\",\n                    \"[\": \"]\",\n                    \"(\": \")\",\n                    \"\": \"\"\n                },\n                guidVersions: {\n                    uuidv1: \"1\",\n                    uuidv2: \"2\",\n                    uuidv3: \"3\",\n                    uuidv4: \"4\",\n                    uuidv5: \"5\",\n                    uuidv6: \"6\",\n                    uuidv7: \"7\",\n                    uuidv8: \"8\"\n                },\n                guidSeparators: new Set([\n                    void 0,\n                    !0,\n                    !1,\n                    \"-\",\n                    \":\"\n                ]),\n                normalizationForms: [\n                    \"NFC\",\n                    \"NFD\",\n                    \"NFKC\",\n                    \"NFKD\"\n                ]\n            };\n            e.exports = u.extend({\n                type: \"string\",\n                flags: {\n                    insensitive: {\n                        default: !1\n                    },\n                    truncate: {\n                        default: !1\n                    }\n                },\n                terms: {\n                    replacements: {\n                        init: null\n                    }\n                },\n                coerce: {\n                    from: \"string\",\n                    method (e, t) {\n                        let { schema: r, state: s, prefs: n } = t;\n                        const a = r.$_getRule(\"normalize\");\n                        a && (e = e.normalize(a.args.form));\n                        const i = r.$_getRule(\"case\");\n                        i && (e = \"upper\" === i.args.direction ? e.toLocaleUpperCase() : e.toLocaleLowerCase());\n                        const o = r.$_getRule(\"trim\");\n                        if (o && o.args.enabled && (e = e.trim()), r.$_terms.replacements) for (const t of r.$_terms.replacements)e = e.replace(t.pattern, t.replacement);\n                        const l = r.$_getRule(\"hex\");\n                        if (l && l.args.options.byteAligned && e.length % 2 != 0 && (e = `0${e}`), r.$_getRule(\"isoDate\")) {\n                            const t = h.isoDate(e);\n                            t && (e = t);\n                        }\n                        if (r._flags.truncate) {\n                            const t = r.$_getRule(\"max\");\n                            if (t) {\n                                let a = t.args.limit;\n                                if (f.isResolvable(a) && (a = a.resolve(e, s, n), !f.limit(a))) return {\n                                    value: e,\n                                    errors: r.$_createError(\"any.ref\", a, {\n                                        ref: t.args.limit,\n                                        arg: \"limit\",\n                                        reason: \"must be a positive integer\"\n                                    }, s, n)\n                                };\n                                e = e.slice(0, a);\n                            }\n                        }\n                        return {\n                            value: e\n                        };\n                    }\n                },\n                validate (e, t) {\n                    let { schema: r, error: s } = t;\n                    if (\"string\" != typeof e) return {\n                        value: e,\n                        errors: s(\"string.base\")\n                    };\n                    if (\"\" === e) {\n                        const t = r.$_getRule(\"min\");\n                        if (t && 0 === t.args.limit) return;\n                        return {\n                            value: e,\n                            errors: s(\"string.empty\")\n                        };\n                    }\n                },\n                rules: {\n                    alphanum: {\n                        method () {\n                            return this.$_addRule(\"alphanum\");\n                        },\n                        validate: (e, t)=>/^[a-zA-Z0-9]+$/.test(e) ? e : t.error(\"string.alphanum\")\n                    },\n                    base64: {\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                            return f.assertOptions(e, [\n                                \"paddingRequired\",\n                                \"urlSafe\"\n                            ]), e = {\n                                urlSafe: !1,\n                                paddingRequired: !0,\n                                ...e\n                            }, s(\"boolean\" == typeof e.paddingRequired, \"paddingRequired must be boolean\"), s(\"boolean\" == typeof e.urlSafe, \"urlSafe must be boolean\"), this.$_addRule({\n                                name: \"base64\",\n                                args: {\n                                    options: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { options: s } = r;\n                            return h.base64Regex[s.paddingRequired][s.urlSafe].test(e) ? e : t.error(\"string.base64\");\n                        }\n                    },\n                    case: {\n                        method (e) {\n                            return s([\n                                \"lower\",\n                                \"upper\"\n                            ].includes(e), \"Invalid case:\", e), this.$_addRule({\n                                name: \"case\",\n                                args: {\n                                    direction: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { direction: s } = r;\n                            return \"lower\" === s && e === e.toLocaleLowerCase() || \"upper\" === s && e === e.toLocaleUpperCase() ? e : t.error(`string.${s}case`);\n                        },\n                        convert: !0\n                    },\n                    creditCard: {\n                        method () {\n                            return this.$_addRule(\"creditCard\");\n                        },\n                        validate (e, t) {\n                            let r = e.length, s = 0, n = 1;\n                            for(; r--;){\n                                const t = e.charAt(r) * n;\n                                s += t - 9 * (t > 9), n ^= 3;\n                            }\n                            return s > 0 && s % 10 == 0 ? e : t.error(\"string.creditCard\");\n                        }\n                    },\n                    dataUri: {\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                            return f.assertOptions(e, [\n                                \"paddingRequired\"\n                            ]), e = {\n                                paddingRequired: !0,\n                                ...e\n                            }, s(\"boolean\" == typeof e.paddingRequired, \"paddingRequired must be boolean\"), this.$_addRule({\n                                name: \"dataUri\",\n                                args: {\n                                    options: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { options: s } = r;\n                            const n = e.match(h.dataUriRegex);\n                            if (n) {\n                                if (!n[2]) return e;\n                                if (\"base64\" !== n[2]) return e;\n                                if (h.base64Regex[s.paddingRequired].false.test(n[3])) return e;\n                            }\n                            return t.error(\"string.dataUri\");\n                        }\n                    },\n                    domain: {\n                        method (e) {\n                            e && f.assertOptions(e, [\n                                \"allowFullyQualified\",\n                                \"allowUnicode\",\n                                \"maxDomainSegments\",\n                                \"minDomainSegments\",\n                                \"tlds\"\n                            ]);\n                            const t = h.addressOptions(e);\n                            return this.$_addRule({\n                                name: \"domain\",\n                                args: {\n                                    options: e\n                                },\n                                address: t\n                            });\n                        },\n                        validate (e, t, r, s) {\n                            let { address: a } = s;\n                            return n.isValid(e, a) ? e : t.error(\"string.domain\");\n                        }\n                    },\n                    email: {\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                            f.assertOptions(e, [\n                                \"allowFullyQualified\",\n                                \"allowUnicode\",\n                                \"ignoreLength\",\n                                \"maxDomainSegments\",\n                                \"minDomainSegments\",\n                                \"multiple\",\n                                \"separator\",\n                                \"tlds\"\n                            ]), s(void 0 === e.multiple || \"boolean\" == typeof e.multiple, \"multiple option must be an boolean\");\n                            const t = h.addressOptions(e), r = new RegExp(`\\\\s*[${e.separator ? o(e.separator) : \",\"}]\\\\s*`);\n                            return this.$_addRule({\n                                name: \"email\",\n                                args: {\n                                    options: e\n                                },\n                                regex: r,\n                                address: t\n                            });\n                        },\n                        validate (e, t, r, s) {\n                            let { options: n } = r, { regex: i, address: o } = s;\n                            const l = n.multiple ? e.split(i) : [\n                                e\n                            ], c = [];\n                            for (const e of l)a.isValid(e, o) || c.push(e);\n                            return c.length ? t.error(\"string.email\", {\n                                value: e,\n                                invalids: c\n                            }) : e;\n                        }\n                    },\n                    guid: {\n                        alias: \"uuid\",\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                            f.assertOptions(e, [\n                                \"version\",\n                                \"separator\"\n                            ]);\n                            let t = \"\";\n                            if (e.version) {\n                                const r = [].concat(e.version);\n                                s(r.length >= 1, \"version must have at least 1 valid version specified\");\n                                const n = new Set;\n                                for(let e = 0; e < r.length; ++e){\n                                    const a = r[e];\n                                    s(\"string\" == typeof a, \"version at position \" + e + \" must be a string\");\n                                    const i = h.guidVersions[a.toLowerCase()];\n                                    s(i, \"version at position \" + e + \" must be one of \" + Object.keys(h.guidVersions).join(\", \")), s(!n.has(i), \"version at position \" + e + \" must not be a duplicate\"), t += i, n.add(i);\n                                }\n                            }\n                            s(h.guidSeparators.has(e.separator), 'separator must be one of true, false, \"-\", or \":\"');\n                            const r = void 0 === e.separator ? \"[:-]?\" : !0 === e.separator ? \"[:-]\" : !1 === e.separator ? \"[]?\" : `\\\\${e.separator}`, n = new RegExp(`^([\\\\[{\\\\(]?)[0-9A-F]{8}(${r})[0-9A-F]{4}\\\\2?[${t || \"0-9A-F\"}][0-9A-F]{3}\\\\2?[${t ? \"89AB\" : \"0-9A-F\"}][0-9A-F]{3}\\\\2?[0-9A-F]{12}([\\\\]}\\\\)]?)$`, \"i\");\n                            return this.$_addRule({\n                                name: \"guid\",\n                                args: {\n                                    options: e\n                                },\n                                regex: n\n                            });\n                        },\n                        validate (e, t, r, s) {\n                            let { regex: n } = s;\n                            const a = n.exec(e);\n                            return a ? h.guidBrackets[a[1]] !== a[a.length - 1] ? t.error(\"string.guid\") : e : t.error(\"string.guid\");\n                        }\n                    },\n                    hex: {\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                            return f.assertOptions(e, [\n                                \"byteAligned\"\n                            ]), e = {\n                                byteAligned: !1,\n                                ...e\n                            }, s(\"boolean\" == typeof e.byteAligned, \"byteAligned must be boolean\"), this.$_addRule({\n                                name: \"hex\",\n                                args: {\n                                    options: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { options: s } = r;\n                            return h.hexRegex.test(e) ? s.byteAligned && e.length % 2 != 0 ? t.error(\"string.hexAlign\") : e : t.error(\"string.hex\");\n                        }\n                    },\n                    hostname: {\n                        method () {\n                            return this.$_addRule(\"hostname\");\n                        },\n                        validate: (e, t)=>n.isValid(e, {\n                                minDomainSegments: 1\n                            }) || h.ipRegex.test(e) ? e : t.error(\"string.hostname\")\n                    },\n                    insensitive: {\n                        method () {\n                            return this.$_setFlag(\"insensitive\", !0);\n                        }\n                    },\n                    ip: {\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                            f.assertOptions(e, [\n                                \"cidr\",\n                                \"version\"\n                            ]);\n                            const { cidr: t, versions: r, regex: s } = i.regex(e), n = e.version ? r : void 0;\n                            return this.$_addRule({\n                                name: \"ip\",\n                                args: {\n                                    options: {\n                                        cidr: t,\n                                        version: n\n                                    }\n                                },\n                                regex: s\n                            });\n                        },\n                        validate (e, t, r, s) {\n                            let { options: n } = r, { regex: a } = s;\n                            return a.test(e) ? e : n.version ? t.error(\"string.ipVersion\", {\n                                value: e,\n                                cidr: n.cidr,\n                                version: n.version\n                            }) : t.error(\"string.ip\", {\n                                value: e,\n                                cidr: n.cidr\n                            });\n                        }\n                    },\n                    isoDate: {\n                        method () {\n                            return this.$_addRule(\"isoDate\");\n                        },\n                        validate (e, t) {\n                            let { error: r } = t;\n                            return h.isoDate(e) ? e : r(\"string.isoDate\");\n                        }\n                    },\n                    isoDuration: {\n                        method () {\n                            return this.$_addRule(\"isoDuration\");\n                        },\n                        validate: (e, t)=>h.isoDurationRegex.test(e) ? e : t.error(\"string.isoDuration\")\n                    },\n                    length: {\n                        method (e, t) {\n                            return h.length(this, \"length\", e, \"=\", t);\n                        },\n                        validate (e, t, r, s) {\n                            let { limit: n, encoding: a } = r, { name: i, operator: o, args: l } = s;\n                            const c = !a && e.length;\n                            return f.compare(c, n, o) ? e : t.error(\"string.\" + i, {\n                                limit: l.limit,\n                                value: e,\n                                encoding: a\n                            });\n                        },\n                        args: [\n                            {\n                                name: \"limit\",\n                                ref: !0,\n                                assert: f.limit,\n                                message: \"must be a positive integer\"\n                            },\n                            \"encoding\"\n                        ]\n                    },\n                    lowercase: {\n                        method () {\n                            return this.case(\"lower\");\n                        }\n                    },\n                    max: {\n                        method (e, t) {\n                            return h.length(this, \"max\", e, \"<=\", t);\n                        },\n                        args: [\n                            \"limit\",\n                            \"encoding\"\n                        ]\n                    },\n                    min: {\n                        method (e, t) {\n                            return h.length(this, \"min\", e, \">=\", t);\n                        },\n                        args: [\n                            \"limit\",\n                            \"encoding\"\n                        ]\n                    },\n                    normalize: {\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : \"NFC\";\n                            return s(h.normalizationForms.includes(e), \"normalization form must be one of \" + h.normalizationForms.join(\", \")), this.$_addRule({\n                                name: \"normalize\",\n                                args: {\n                                    form: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { error: s } = t, { form: n } = r;\n                            return e === e.normalize(n) ? e : s(\"string.normalize\", {\n                                value: e,\n                                form: n\n                            });\n                        },\n                        convert: !0\n                    },\n                    pattern: {\n                        alias: \"regex\",\n                        method (e) {\n                            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                            s(e instanceof RegExp, \"regex must be a RegExp\"), s(!e.flags.includes(\"g\") && !e.flags.includes(\"y\"), \"regex should not use global or sticky mode\"), \"string\" == typeof t && (t = {\n                                name: t\n                            }), f.assertOptions(t, [\n                                \"invert\",\n                                \"name\"\n                            ]);\n                            const r = [\n                                \"string.pattern\",\n                                t.invert ? \".invert\" : \"\",\n                                t.name ? \".name\" : \".base\"\n                            ].join(\"\");\n                            return this.$_addRule({\n                                name: \"pattern\",\n                                args: {\n                                    regex: e,\n                                    options: t\n                                },\n                                errorCode: r\n                            });\n                        },\n                        validate (e, t, r, s) {\n                            let { regex: n, options: a } = r, { errorCode: i } = s;\n                            return n.test(e) ^ a.invert ? e : t.error(i, {\n                                name: a.name,\n                                regex: n,\n                                value: e\n                            });\n                        },\n                        args: [\n                            \"regex\",\n                            \"options\"\n                        ],\n                        multi: !0\n                    },\n                    replace: {\n                        method (e, t) {\n                            \"string\" == typeof e && (e = new RegExp(o(e), \"g\")), s(e instanceof RegExp, \"pattern must be a RegExp\"), s(\"string\" == typeof t, \"replacement must be a String\");\n                            const r = this.clone();\n                            return r.$_terms.replacements || (r.$_terms.replacements = []), r.$_terms.replacements.push({\n                                pattern: e,\n                                replacement: t\n                            }), r;\n                        }\n                    },\n                    token: {\n                        method () {\n                            return this.$_addRule(\"token\");\n                        },\n                        validate: (e, t)=>/^\\w+$/.test(e) ? e : t.error(\"string.token\")\n                    },\n                    trim: {\n                        method () {\n                            let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];\n                            return s(\"boolean\" == typeof e, \"enabled must be a boolean\"), this.$_addRule({\n                                name: \"trim\",\n                                args: {\n                                    enabled: e\n                                }\n                            });\n                        },\n                        validate (e, t, r) {\n                            let { enabled: s } = r;\n                            return s && e !== e.trim() ? t.error(\"string.trim\") : e;\n                        },\n                        convert: !0\n                    },\n                    truncate: {\n                        method () {\n                            let e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];\n                            return s(\"boolean\" == typeof e, \"enabled must be a boolean\"), this.$_setFlag(\"truncate\", e);\n                        }\n                    },\n                    uppercase: {\n                        method () {\n                            return this.case(\"upper\");\n                        }\n                    },\n                    uri: {\n                        method () {\n                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                            f.assertOptions(e, [\n                                \"allowRelative\",\n                                \"allowQuerySquareBrackets\",\n                                \"domain\",\n                                \"relativeOnly\",\n                                \"scheme\"\n                            ]), e.domain && f.assertOptions(e.domain, [\n                                \"allowFullyQualified\",\n                                \"allowUnicode\",\n                                \"maxDomainSegments\",\n                                \"minDomainSegments\",\n                                \"tlds\"\n                            ]);\n                            const { regex: t, scheme: r } = c.regex(e), s = e.domain ? h.addressOptions(e.domain) : null;\n                            return this.$_addRule({\n                                name: \"uri\",\n                                args: {\n                                    options: e\n                                },\n                                regex: t,\n                                domain: s,\n                                scheme: r\n                            });\n                        },\n                        validate (e, t, r, s) {\n                            let { options: a } = r, { regex: i, domain: o, scheme: l } = s;\n                            if ([\n                                \"http:/\",\n                                \"https:/\"\n                            ].includes(e)) return t.error(\"string.uri\");\n                            const c = i.exec(e);\n                            if (c) {\n                                const r = c[1] || c[2];\n                                return !o || a.allowRelative && !r || n.isValid(r, o) ? e : t.error(\"string.domain\", {\n                                    value: r\n                                });\n                            }\n                            return a.relativeOnly ? t.error(\"string.uriRelativeOnly\") : a.scheme ? t.error(\"string.uriCustomScheme\", {\n                                scheme: l,\n                                value: e\n                            }) : t.error(\"string.uri\");\n                        }\n                    }\n                },\n                manifest: {\n                    build (e, t) {\n                        if (t.replacements) for (const { pattern: r, replacement: s } of t.replacements)e = e.replace(r, s);\n                        return e;\n                    }\n                },\n                messages: {\n                    \"string.alphanum\": \"{{#label}} must only contain alpha-numeric characters\",\n                    \"string.base\": \"{{#label}} must be a string\",\n                    \"string.base64\": \"{{#label}} must be a valid base64 string\",\n                    \"string.creditCard\": \"{{#label}} must be a credit card\",\n                    \"string.dataUri\": \"{{#label}} must be a valid dataUri string\",\n                    \"string.domain\": \"{{#label}} must contain a valid domain name\",\n                    \"string.email\": \"{{#label}} must be a valid email\",\n                    \"string.empty\": \"{{#label}} is not allowed to be empty\",\n                    \"string.guid\": \"{{#label}} must be a valid GUID\",\n                    \"string.hex\": \"{{#label}} must only contain hexadecimal characters\",\n                    \"string.hexAlign\": \"{{#label}} hex decoded representation must be byte aligned\",\n                    \"string.hostname\": \"{{#label}} must be a valid hostname\",\n                    \"string.ip\": \"{{#label}} must be a valid ip address with a {{#cidr}} CIDR\",\n                    \"string.ipVersion\": \"{{#label}} must be a valid ip address of one of the following versions {{#version}} with a {{#cidr}} CIDR\",\n                    \"string.isoDate\": \"{{#label}} must be in iso format\",\n                    \"string.isoDuration\": \"{{#label}} must be a valid ISO 8601 duration\",\n                    \"string.length\": \"{{#label}} length must be {{#limit}} characters long\",\n                    \"string.lowercase\": \"{{#label}} must only contain lowercase characters\",\n                    \"string.max\": \"{{#label}} length must be less than or equal to {{#limit}} characters long\",\n                    \"string.min\": \"{{#label}} length must be at least {{#limit}} characters long\",\n                    \"string.normalize\": \"{{#label}} must be unicode normalized in the {{#form}} form\",\n                    \"string.token\": \"{{#label}} must only contain alpha-numeric and underscore characters\",\n                    \"string.pattern.base\": \"{{#label}} with value {:[.]} fails to match the required pattern: {{#regex}}\",\n                    \"string.pattern.name\": \"{{#label}} with value {:[.]} fails to match the {{#name}} pattern\",\n                    \"string.pattern.invert.base\": \"{{#label}} with value {:[.]} matches the inverted pattern: {{#regex}}\",\n                    \"string.pattern.invert.name\": \"{{#label}} with value {:[.]} matches the inverted {{#name}} pattern\",\n                    \"string.trim\": \"{{#label}} must not have leading or trailing whitespace\",\n                    \"string.uri\": \"{{#label}} must be a valid uri\",\n                    \"string.uriCustomScheme\": \"{{#label}} must be a valid uri with a scheme matching the {{#scheme}} pattern\",\n                    \"string.uriRelativeOnly\": \"{{#label}} must be a valid relative uri\",\n                    \"string.uppercase\": \"{{#label}} must only contain uppercase characters\"\n                }\n            }), h.addressOptions = function(e) {\n                if (!e) return e;\n                if (s(void 0 === e.minDomainSegments || Number.isSafeInteger(e.minDomainSegments) && e.minDomainSegments > 0, \"minDomainSegments must be a positive integer\"), s(void 0 === e.maxDomainSegments || Number.isSafeInteger(e.maxDomainSegments) && e.maxDomainSegments > 0, \"maxDomainSegments must be a positive integer\"), !1 === e.tlds) return e;\n                if (!0 === e.tlds || void 0 === e.tlds) return s(h.tlds, \"Built-in TLD list disabled\"), Object.assign({}, e, h.tlds);\n                s(\"object\" == typeof e.tlds, \"tlds must be true, false, or an object\");\n                const t = e.tlds.deny;\n                if (t) return Array.isArray(t) && (e = Object.assign({}, e, {\n                    tlds: {\n                        deny: new Set(t)\n                    }\n                })), s(e.tlds.deny instanceof Set, \"tlds.deny must be an array, Set, or boolean\"), s(!e.tlds.allow, \"Cannot specify both tlds.allow and tlds.deny lists\"), h.validateTlds(e.tlds.deny, \"tlds.deny\"), e;\n                const r = e.tlds.allow;\n                return r ? !0 === r ? (s(h.tlds, \"Built-in TLD list disabled\"), Object.assign({}, e, h.tlds)) : (Array.isArray(r) && (e = Object.assign({}, e, {\n                    tlds: {\n                        allow: new Set(r)\n                    }\n                })), s(e.tlds.allow instanceof Set, \"tlds.allow must be an array, Set, or boolean\"), h.validateTlds(e.tlds.allow, \"tlds.allow\"), e) : e;\n            }, h.validateTlds = function(e, t) {\n                for (const r of e)s(n.isValid(r, {\n                    minDomainSegments: 1,\n                    maxDomainSegments: 1\n                }), `${t} must contain valid top level domain names`);\n            }, h.isoDate = function(e) {\n                if (!f.isIsoDate(e)) return null;\n                /.*T.*[+-]\\d\\d$/.test(e) && (e += \"00\");\n                const t = new Date(e);\n                return isNaN(t.getTime()) ? null : t.toISOString();\n            }, h.length = function(e, t, r, n, a) {\n                return s(!a || !1, \"Invalid encoding:\", a), e.$_addRule({\n                    name: t,\n                    method: \"length\",\n                    args: {\n                        limit: r,\n                        encoding: a\n                    },\n                    operator: n\n                });\n            };\n        },\n        8826: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8068), a = {};\n            a.Map = class extends Map {\n                slice() {\n                    return new a.Map(this);\n                }\n            }, e.exports = n.extend({\n                type: \"symbol\",\n                terms: {\n                    map: {\n                        init: new a.Map\n                    }\n                },\n                coerce: {\n                    method (e, t) {\n                        let { schema: r, error: s } = t;\n                        const n = r.$_terms.map.get(e);\n                        return n && (e = n), r._flags.only && \"symbol\" != typeof e ? {\n                            value: e,\n                            errors: s(\"symbol.map\", {\n                                map: r.$_terms.map\n                            })\n                        } : {\n                            value: e\n                        };\n                    }\n                },\n                validate (e, t) {\n                    let { error: r } = t;\n                    if (\"symbol\" != typeof e) return {\n                        value: e,\n                        errors: r(\"symbol.base\")\n                    };\n                },\n                rules: {\n                    map: {\n                        method (e) {\n                            e && !e[Symbol.iterator] && \"object\" == typeof e && (e = Object.entries(e)), s(e && e[Symbol.iterator], \"Iterable must be an iterable or object\");\n                            const t = this.clone(), r = [];\n                            for (const n of e){\n                                s(n && n[Symbol.iterator], \"Entry must be an iterable\");\n                                const [e, a] = n;\n                                s(\"object\" != typeof e && \"function\" != typeof e && \"symbol\" != typeof e, \"Key must not be of type object, function, or Symbol\"), s(\"symbol\" == typeof a, \"Value must be a Symbol\"), t.$_terms.map.set(e, a), r.push(a);\n                            }\n                            return t.valid(...r);\n                        }\n                    }\n                },\n                manifest: {\n                    build: (e, t)=>(t.map && (e = e.map(t.map)), e)\n                },\n                messages: {\n                    \"symbol.base\": \"{{#label}} must be a symbol\",\n                    \"symbol.map\": \"{{#label}} must be one of {{#map}}\"\n                }\n            });\n        },\n        8863: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8571), a = r(738), i = r(9621), o = r(8160), l = r(6354), c = r(493), u = {\n                result: Symbol(\"result\")\n            };\n            t.entry = function(e, t, r) {\n                let n = o.defaults;\n                r && (s(void 0 === r.warnings, \"Cannot override warnings preference in synchronous validation\"), s(void 0 === r.artifacts, \"Cannot override artifacts preference in synchronous validation\"), n = o.preferences(o.defaults, r));\n                const a = u.entry(e, t, n);\n                s(!a.mainstay.externals.length, \"Schema with external rules must use validateAsync()\");\n                const i = {\n                    value: a.value\n                };\n                return a.error && (i.error = a.error), a.mainstay.warnings.length && (i.warning = l.details(a.mainstay.warnings)), a.mainstay.debug && (i.debug = a.mainstay.debug), a.mainstay.artifacts && (i.artifacts = a.mainstay.artifacts), i;\n            }, t.entryAsync = async function(e, t, r) {\n                let s = o.defaults;\n                r && (s = o.preferences(o.defaults, r));\n                const n = u.entry(e, t, s), a = n.mainstay;\n                if (n.error) throw a.debug && (n.error.debug = a.debug), n.error;\n                if (a.externals.length) {\n                    let t = n.value;\n                    const c = [];\n                    for (const n of a.externals){\n                        const f = n.state.path, h = \"link\" === n.schema.type ? a.links.get(n.schema) : null;\n                        let m, d, p = t;\n                        const g = f.length ? [\n                            t\n                        ] : [], y = f.length ? i(e, f) : e;\n                        if (f.length) {\n                            m = f[f.length - 1];\n                            let e = t;\n                            for (const t of f.slice(0, -1))e = e[t], g.unshift(e);\n                            d = g[0], p = d[m];\n                        }\n                        try {\n                            const e = (e, t)=>(h || n.schema).$_createError(e, p, t, n.state, s), i = await n.method(p, {\n                                schema: n.schema,\n                                linked: h,\n                                state: n.state,\n                                prefs: r,\n                                original: y,\n                                error: e,\n                                errorsArray: u.errorsArray,\n                                warn: (e, t)=>a.warnings.push((h || n.schema).$_createError(e, p, t, n.state, s)),\n                                message: (e, t)=>(h || n.schema).$_createError(\"external\", p, t, n.state, s, {\n                                        messages: e\n                                    })\n                            });\n                            if (void 0 === i || i === p) continue;\n                            if (i instanceof l.Report) {\n                                if (a.tracer.log(n.schema, n.state, \"rule\", \"external\", \"error\"), c.push(i), s.abortEarly) break;\n                                continue;\n                            }\n                            if (Array.isArray(i) && i[o.symbols.errors]) {\n                                if (a.tracer.log(n.schema, n.state, \"rule\", \"external\", \"error\"), c.push(...i), s.abortEarly) break;\n                                continue;\n                            }\n                            d ? (a.tracer.value(n.state, \"rule\", p, i, \"external\"), d[m] = i) : (a.tracer.value(n.state, \"rule\", t, i, \"external\"), t = i);\n                        } catch (e) {\n                            throw s.errors.label && (e.message += ` (${n.label})`), e;\n                        }\n                    }\n                    if (n.value = t, c.length) throw n.error = l.process(c, e, s), a.debug && (n.error.debug = a.debug), n.error;\n                }\n                if (!s.warnings && !s.debug && !s.artifacts) return n.value;\n                const c = {\n                    value: n.value\n                };\n                return a.warnings.length && (c.warning = l.details(a.warnings)), a.debug && (c.debug = a.debug), a.artifacts && (c.artifacts = a.artifacts), c;\n            }, u.Mainstay = class {\n                constructor(e, t, r){\n                    this.externals = [], this.warnings = [], this.tracer = e, this.debug = t, this.links = r, this.shadow = null, this.artifacts = null, this._snapshots = [];\n                }\n                snapshot() {\n                    this._snapshots.push({\n                        externals: this.externals.slice(),\n                        warnings: this.warnings.slice()\n                    });\n                }\n                restore() {\n                    const e = this._snapshots.pop();\n                    this.externals = e.externals, this.warnings = e.warnings;\n                }\n                commit() {\n                    this._snapshots.pop();\n                }\n            }, u.entry = function(e, r, s) {\n                const { tracer: n, cleanup: a } = u.tracer(r, s), i = s.debug ? [] : null, o = r._ids._schemaChain ? new Map : null, f = new u.Mainstay(n, i, o), h = r._ids._schemaChain ? [\n                    {\n                        schema: r\n                    }\n                ] : null, m = new c([], [], {\n                    mainstay: f,\n                    schemas: h\n                }), d = t.validate(e, r, m, s);\n                a && r.$_root.untrace();\n                const p = l.process(d.errors, e, s);\n                return {\n                    value: d.value,\n                    error: p,\n                    mainstay: f\n                };\n            }, u.tracer = function(e, t) {\n                return e.$_root._tracer ? {\n                    tracer: e.$_root._tracer._register(e)\n                } : t.debug ? (s(e.$_root.trace, \"Debug mode not supported\"), {\n                    tracer: e.$_root.trace()._register(e),\n                    cleanup: !0\n                }) : {\n                    tracer: u.ignore\n                };\n            }, t.validate = function(e, t, r, s) {\n                let n = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : {};\n                if (t.$_terms.whens && (t = t._generate(e, r, s).schema), t._preferences && (s = u.prefs(t, s)), t._cache && s.cache) {\n                    const s = t._cache.get(e);\n                    if (r.mainstay.tracer.debug(r, \"validate\", \"cached\", !!s), s) return s;\n                }\n                const a = (n, a, i)=>t.$_createError(n, e, a, i || r, s), i = {\n                    original: e,\n                    prefs: s,\n                    schema: t,\n                    state: r,\n                    error: a,\n                    errorsArray: u.errorsArray,\n                    warn: (e, t, s)=>r.mainstay.warnings.push(a(e, t, s)),\n                    message: (n, a)=>t.$_createError(\"custom\", e, a, r, s, {\n                            messages: n\n                        })\n                };\n                r.mainstay.tracer.entry(t, r);\n                const l = t._definition;\n                if (l.prepare && void 0 !== e && s.convert) {\n                    const t = l.prepare(e, i);\n                    if (t) {\n                        if (r.mainstay.tracer.value(r, \"prepare\", e, t.value), t.errors) return u.finalize(t.value, [].concat(t.errors), i);\n                        e = t.value;\n                    }\n                }\n                if (l.coerce && void 0 !== e && s.convert && (!l.coerce.from || l.coerce.from.includes(typeof e))) {\n                    const t = l.coerce.method(e, i);\n                    if (t) {\n                        if (r.mainstay.tracer.value(r, \"coerced\", e, t.value), t.errors) return u.finalize(t.value, [].concat(t.errors), i);\n                        e = t.value;\n                    }\n                }\n                const c = t._flags.empty;\n                c && c.$_match(u.trim(e, t), r.nest(c), o.defaults) && (r.mainstay.tracer.value(r, \"empty\", e, void 0), e = void 0);\n                const f = n.presence || t._flags.presence || (t._flags._endedSwitch ? null : s.presence);\n                if (void 0 === e) {\n                    if (\"forbidden\" === f) return u.finalize(e, null, i);\n                    if (\"required\" === f) return u.finalize(e, [\n                        t.$_createError(\"any.required\", e, null, r, s)\n                    ], i);\n                    if (\"optional\" === f) {\n                        if (t._flags.default !== o.symbols.deepDefault) return u.finalize(e, null, i);\n                        r.mainstay.tracer.value(r, \"default\", e, {}), e = {};\n                    }\n                } else if (\"forbidden\" === f) return u.finalize(e, [\n                    t.$_createError(\"any.unknown\", e, null, r, s)\n                ], i);\n                const h = [];\n                if (t._valids) {\n                    const n = t._valids.get(e, r, s, t._flags.insensitive);\n                    if (n) return s.convert && (r.mainstay.tracer.value(r, \"valids\", e, n.value), e = n.value), r.mainstay.tracer.filter(t, r, \"valid\", n), u.finalize(e, null, i);\n                    if (t._flags.only) {\n                        const n = t.$_createError(\"any.only\", e, {\n                            valids: t._valids.values({\n                                display: !0\n                            })\n                        }, r, s);\n                        if (s.abortEarly) return u.finalize(e, [\n                            n\n                        ], i);\n                        h.push(n);\n                    }\n                }\n                if (t._invalids) {\n                    const n = t._invalids.get(e, r, s, t._flags.insensitive);\n                    if (n) {\n                        r.mainstay.tracer.filter(t, r, \"invalid\", n);\n                        const a = t.$_createError(\"any.invalid\", e, {\n                            invalids: t._invalids.values({\n                                display: !0\n                            })\n                        }, r, s);\n                        if (s.abortEarly) return u.finalize(e, [\n                            a\n                        ], i);\n                        h.push(a);\n                    }\n                }\n                if (l.validate) {\n                    const t = l.validate(e, i);\n                    if (t && (r.mainstay.tracer.value(r, \"base\", e, t.value), e = t.value, t.errors)) {\n                        if (!Array.isArray(t.errors)) return h.push(t.errors), u.finalize(e, h, i);\n                        if (t.errors.length) return h.push(...t.errors), u.finalize(e, h, i);\n                    }\n                }\n                return t._rules.length ? u.rules(e, h, i) : u.finalize(e, h, i);\n            }, u.rules = function(e, t, r) {\n                const { schema: s, state: n, prefs: a } = r;\n                for (const i of s._rules){\n                    const l = s._definition.rules[i.method];\n                    if (l.convert && a.convert) {\n                        n.mainstay.tracer.log(s, n, \"rule\", i.name, \"full\");\n                        continue;\n                    }\n                    let c, f = i.args;\n                    if (i._resolve.length) {\n                        f = Object.assign({}, f);\n                        for (const t of i._resolve){\n                            const r = l.argsByName.get(t), i = f[t].resolve(e, n, a), u = r.normalize ? r.normalize(i) : i, h = o.validateArg(u, null, r);\n                            if (h) {\n                                c = s.$_createError(\"any.ref\", i, {\n                                    arg: t,\n                                    ref: f[t],\n                                    reason: h\n                                }, n, a);\n                                break;\n                            }\n                            f[t] = u;\n                        }\n                    }\n                    c = c || l.validate(e, r, f, i);\n                    const h = u.rule(c, i);\n                    if (h.errors) {\n                        if (n.mainstay.tracer.log(s, n, \"rule\", i.name, \"error\"), i.warn) {\n                            n.mainstay.warnings.push(...h.errors);\n                            continue;\n                        }\n                        if (a.abortEarly) return u.finalize(e, h.errors, r);\n                        t.push(...h.errors);\n                    } else n.mainstay.tracer.log(s, n, \"rule\", i.name, \"pass\"), n.mainstay.tracer.value(n, \"rule\", e, h.value, i.name), e = h.value;\n                }\n                return u.finalize(e, t, r);\n            }, u.rule = function(e, t) {\n                return e instanceof l.Report ? (u.error(e, t), {\n                    errors: [\n                        e\n                    ],\n                    value: null\n                }) : Array.isArray(e) && e[o.symbols.errors] ? (e.forEach((e)=>u.error(e, t)), {\n                    errors: e,\n                    value: null\n                }) : {\n                    errors: null,\n                    value: e\n                };\n            }, u.error = function(e, t) {\n                return t.message && e._setTemplate(t.message), e;\n            }, u.finalize = function(e, t, r) {\n                t = t || [];\n                const { schema: n, state: a, prefs: i } = r;\n                if (t.length) {\n                    const s = u.default(\"failover\", void 0, t, r);\n                    void 0 !== s && (a.mainstay.tracer.value(a, \"failover\", e, s), e = s, t = []);\n                }\n                if (t.length && n._flags.error) if (\"function\" == typeof n._flags.error) {\n                    t = n._flags.error(t), Array.isArray(t) || (t = [\n                        t\n                    ]);\n                    for (const e of t)s(e instanceof Error || e instanceof l.Report, \"error() must return an Error object\");\n                } else t = [\n                    n._flags.error\n                ];\n                if (void 0 === e) {\n                    const s = u.default(\"default\", e, t, r);\n                    a.mainstay.tracer.value(a, \"default\", e, s), e = s;\n                }\n                if (n._flags.cast && void 0 !== e) {\n                    const t = n._definition.cast[n._flags.cast];\n                    if (t.from(e)) {\n                        const s = t.to(e, r);\n                        a.mainstay.tracer.value(a, \"cast\", e, s, n._flags.cast), e = s;\n                    }\n                }\n                if (n.$_terms.externals && i.externals && !1 !== i._externals) for (const { method: e } of n.$_terms.externals)a.mainstay.externals.push({\n                    method: e,\n                    schema: n,\n                    state: a,\n                    label: l.label(n._flags, a, i)\n                });\n                const o = {\n                    value: e,\n                    errors: t.length ? t : null\n                };\n                return n._flags.result && (o.value = \"strip\" === n._flags.result ? void 0 : r.original, a.mainstay.tracer.value(a, n._flags.result, e, o.value), a.shadow(e, n._flags.result)), n._cache && !1 !== i.cache && !n._refs.length && n._cache.set(r.original, o), void 0 === e || o.errors || void 0 === n._flags.artifact || (a.mainstay.artifacts = a.mainstay.artifacts || new Map, a.mainstay.artifacts.has(n._flags.artifact) || a.mainstay.artifacts.set(n._flags.artifact, []), a.mainstay.artifacts.get(n._flags.artifact).push(a.path)), o;\n            }, u.prefs = function(e, t) {\n                const r = t === o.defaults;\n                return r && e._preferences[o.symbols.prefs] ? e._preferences[o.symbols.prefs] : (t = o.preferences(t, e._preferences), r && (e._preferences[o.symbols.prefs] = t), t);\n            }, u.default = function(e, t, r, s) {\n                const { schema: a, state: i, prefs: l } = s, c = a._flags[e];\n                if (l.noDefaults || void 0 === c) return t;\n                if (i.mainstay.tracer.log(a, i, \"rule\", e, \"full\"), !c) return c;\n                if (\"function\" == typeof c) {\n                    const t = c.length ? [\n                        n(i.ancestors[0]),\n                        s\n                    ] : [];\n                    try {\n                        return c(...t);\n                    } catch (t) {\n                        return void r.push(a.$_createError(`any.${e}`, null, {\n                            error: t\n                        }, i, l));\n                    }\n                }\n                return \"object\" != typeof c ? c : c[o.symbols.literal] ? c.literal : o.isResolvable(c) ? c.resolve(t, i, l) : n(c);\n            }, u.trim = function(e, t) {\n                if (\"string\" != typeof e) return e;\n                const r = t.$_getRule(\"trim\");\n                return r && r.args.enabled ? e.trim() : e;\n            }, u.ignore = {\n                active: !1,\n                debug: a,\n                entry: a,\n                filter: a,\n                log: a,\n                resolve: a,\n                value: a\n            }, u.errorsArray = function() {\n                const e = [];\n                return e[o.symbols.errors] = !0, e;\n            };\n        },\n        2036: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(9474), a = r(8160), i = {};\n            e.exports = i.Values = class {\n                constructor(e, t){\n                    this._values = new Set(e), this._refs = new Set(t), this._lowercase = i.lowercases(e), this._override = !1;\n                }\n                get length() {\n                    return this._values.size + this._refs.size;\n                }\n                add(e, t) {\n                    a.isResolvable(e) ? this._refs.has(e) || (this._refs.add(e), t && t.register(e)) : this.has(e, null, null, !1) || (this._values.add(e), \"string\" == typeof e && this._lowercase.set(e.toLowerCase(), e));\n                }\n                static merge(e, t, r) {\n                    if (e = e || new i.Values, t) {\n                        if (t._override) return t.clone();\n                        for (const r of [\n                            ...t._values,\n                            ...t._refs\n                        ])e.add(r);\n                    }\n                    if (r) for (const t of [\n                        ...r._values,\n                        ...r._refs\n                    ])e.remove(t);\n                    return e.length ? e : null;\n                }\n                remove(e) {\n                    a.isResolvable(e) ? this._refs.delete(e) : (this._values.delete(e), \"string\" == typeof e && this._lowercase.delete(e.toLowerCase()));\n                }\n                has(e, t, r, s) {\n                    return !!this.get(e, t, r, s);\n                }\n                get(e, t, r, s) {\n                    if (!this.length) return !1;\n                    if (this._values.has(e)) return {\n                        value: e\n                    };\n                    if (\"string\" == typeof e && e && s) {\n                        const t = this._lowercase.get(e.toLowerCase());\n                        if (t) return {\n                            value: t\n                        };\n                    }\n                    if (!this._refs.size && \"object\" != typeof e) return !1;\n                    if (\"object\" == typeof e) {\n                        for (const t of this._values)if (n(t, e)) return {\n                            value: t\n                        };\n                    }\n                    if (t) for (const a of this._refs){\n                        const i = a.resolve(e, t, r, null, {\n                            in: !0\n                        });\n                        if (void 0 === i) continue;\n                        const o = a.in && \"object\" == typeof i ? Array.isArray(i) ? i : Object.keys(i) : [\n                            i\n                        ];\n                        for (const t of o)if (typeof t == typeof e) {\n                            if (s && e && \"string\" == typeof e) {\n                                if (t.toLowerCase() === e.toLowerCase()) return {\n                                    value: t,\n                                    ref: a\n                                };\n                            } else if (n(t, e)) return {\n                                value: t,\n                                ref: a\n                            };\n                        }\n                    }\n                    return !1;\n                }\n                override() {\n                    this._override = !0;\n                }\n                values(e) {\n                    if (e && e.display) {\n                        const e = [];\n                        for (const t of [\n                            ...this._values,\n                            ...this._refs\n                        ])void 0 !== t && e.push(t);\n                        return e;\n                    }\n                    return Array.from([\n                        ...this._values,\n                        ...this._refs\n                    ]);\n                }\n                clone() {\n                    const e = new i.Values(this._values, this._refs);\n                    return e._override = this._override, e;\n                }\n                concat(e) {\n                    s(!e._override, \"Cannot concat override set of values\");\n                    const t = new i.Values([\n                        ...this._values,\n                        ...e._values\n                    ], [\n                        ...this._refs,\n                        ...e._refs\n                    ]);\n                    return t._override = this._override, t;\n                }\n                describe() {\n                    const e = [];\n                    this._override && e.push({\n                        override: !0\n                    });\n                    for (const t of this._values.values())e.push(t && \"object\" == typeof t ? {\n                        value: t\n                    } : t);\n                    for (const t of this._refs.values())e.push(t.describe());\n                    return e;\n                }\n            }, i.Values.prototype[a.symbols.values] = !0, i.Values.prototype.slice = i.Values.prototype.clone, i.lowercases = function(e) {\n                const t = new Map;\n                if (e) for (const r of e)\"string\" == typeof r && t.set(r.toLowerCase(), r);\n                return t;\n            };\n        },\n        978: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8571), a = r(1687), i = r(9621), o = {};\n            e.exports = function(e, t) {\n                let r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n                if (s(e && \"object\" == typeof e, \"Invalid defaults value: must be an object\"), s(!t || !0 === t || \"object\" == typeof t, \"Invalid source value: must be true, falsy or an object\"), s(\"object\" == typeof r, \"Invalid options: must be an object\"), !t) return null;\n                if (r.shallow) return o.applyToDefaultsWithShallow(e, t, r);\n                const i = n(e);\n                if (!0 === t) return i;\n                const l = void 0 !== r.nullOverride && r.nullOverride;\n                return a(i, t, {\n                    nullOverride: l,\n                    mergeArrays: !1\n                });\n            }, o.applyToDefaultsWithShallow = function(e, t, r) {\n                const l = r.shallow;\n                s(Array.isArray(l), \"Invalid keys\");\n                const c = new Map, u = !0 === t ? null : new Set;\n                for (let r of l){\n                    r = Array.isArray(r) ? r : r.split(\".\");\n                    const s = i(e, r);\n                    s && \"object\" == typeof s ? c.set(s, u && i(t, r) || s) : u && u.add(r);\n                }\n                const f = n(e, {}, c);\n                if (!u) return f;\n                for (const e of u)o.reachCopy(f, t, e);\n                const h = void 0 !== r.nullOverride && r.nullOverride;\n                return a(f, t, {\n                    nullOverride: h,\n                    mergeArrays: !1\n                });\n            }, o.reachCopy = function(e, t, r) {\n                for (const e of r){\n                    if (!(e in t)) return;\n                    const r = t[e];\n                    if (\"object\" != typeof r || null === r) return;\n                    t = r;\n                }\n                const s = t;\n                let n = e;\n                for(let e = 0; e < r.length - 1; ++e){\n                    const t = r[e];\n                    \"object\" != typeof n[t] && (n[t] = {}), n = n[t];\n                }\n                n[r[r.length - 1]] = s;\n            };\n        },\n        375: (e, t, r)=>{\n            \"use strict\";\n            const s = r(7916);\n            e.exports = function(e) {\n                if (!e) {\n                    for(var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)r[n - 1] = arguments[n];\n                    if (1 === r.length && r[0] instanceof Error) throw r[0];\n                    throw new s(r);\n                }\n            };\n        },\n        8571: (e, t, r)=>{\n            \"use strict\";\n            const s = r(9621), n = r(4277), a = r(7043), i = {\n                needsProtoHack: new Set([\n                    n.set,\n                    n.map,\n                    n.weakSet,\n                    n.weakMap\n                ])\n            };\n            e.exports = i.clone = function(e) {\n                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;\n                if (\"object\" != typeof e || null === e) return e;\n                let s = i.clone, o = r;\n                if (t.shallow) {\n                    if (!0 !== t.shallow) return i.cloneWithShallow(e, t);\n                    s = (e)=>e;\n                } else if (o) {\n                    const t = o.get(e);\n                    if (t) return t;\n                } else o = new Map;\n                const l = n.getInternalProto(e);\n                if (l === n.buffer) return !1;\n                if (l === n.date) return new Date(e.getTime());\n                if (l === n.regex) return new RegExp(e);\n                const c = i.base(e, l, t);\n                if (c === e) return e;\n                if (o && o.set(e, c), l === n.set) for (const r of e)c.add(s(r, t, o));\n                else if (l === n.map) for (const [r, n] of e)c.set(r, s(n, t, o));\n                const u = a.keys(e, t);\n                for (const r of u){\n                    if (\"__proto__\" === r) continue;\n                    if (l === n.array && \"length\" === r) {\n                        c.length = e.length;\n                        continue;\n                    }\n                    const a = Object.getOwnPropertyDescriptor(e, r);\n                    a ? a.get || a.set ? Object.defineProperty(c, r, a) : a.enumerable ? c[r] = s(e[r], t, o) : Object.defineProperty(c, r, {\n                        enumerable: !1,\n                        writable: !0,\n                        configurable: !0,\n                        value: s(e[r], t, o)\n                    }) : Object.defineProperty(c, r, {\n                        enumerable: !0,\n                        writable: !0,\n                        configurable: !0,\n                        value: s(e[r], t, o)\n                    });\n                }\n                return c;\n            }, i.cloneWithShallow = function(e, t) {\n                const r = t.shallow;\n                (t = Object.assign({}, t)).shallow = !1;\n                const n = new Map;\n                for (const t of r){\n                    const r = s(e, t);\n                    \"object\" != typeof r && \"function\" != typeof r || n.set(r, r);\n                }\n                return i.clone(e, t, n);\n            }, i.base = function(e, t, r) {\n                if (!1 === r.prototype) return i.needsProtoHack.has(t) ? new t.constructor : t === n.array ? [] : {};\n                const s = Object.getPrototypeOf(e);\n                if (s && s.isImmutable) return e;\n                if (t === n.array) {\n                    const e = [];\n                    return s !== t && Object.setPrototypeOf(e, s), e;\n                }\n                if (i.needsProtoHack.has(t)) {\n                    const e = new s.constructor;\n                    return s !== t && Object.setPrototypeOf(e, s), e;\n                }\n                return Object.create(s);\n            };\n        },\n        9474: (e, t, r)=>{\n            \"use strict\";\n            const s = r(4277), n = {\n                mismatched: null\n            };\n            e.exports = function(e, t, r) {\n                return r = Object.assign({\n                    prototype: !0\n                }, r), !!n.isDeepEqual(e, t, r, []);\n            }, n.isDeepEqual = function(e, t, r, a) {\n                if (e === t) return 0 !== e || 1 / e == 1 / t;\n                const i = typeof e;\n                if (i !== typeof t) return !1;\n                if (null === e || null === t) return !1;\n                if (\"function\" === i) {\n                    if (!r.deepFunction || e.toString() !== t.toString()) return !1;\n                } else if (\"object\" !== i) return e != e && t != t;\n                const o = n.getSharedType(e, t, !!r.prototype);\n                switch(o){\n                    case s.buffer:\n                        return !1;\n                    case s.promise:\n                        return e === t;\n                    case s.regex:\n                        return e.toString() === t.toString();\n                    case n.mismatched:\n                        return !1;\n                }\n                for(let r = a.length - 1; r >= 0; --r)if (a[r].isSame(e, t)) return !0;\n                a.push(new n.SeenEntry(e, t));\n                try {\n                    return !!n.isDeepEqualObj(o, e, t, r, a);\n                } finally{\n                    a.pop();\n                }\n            }, n.getSharedType = function(e, t, r) {\n                if (r) return Object.getPrototypeOf(e) !== Object.getPrototypeOf(t) ? n.mismatched : s.getInternalProto(e);\n                const a = s.getInternalProto(e);\n                return a !== s.getInternalProto(t) ? n.mismatched : a;\n            }, n.valueOf = function(e) {\n                const t = e.valueOf;\n                if (void 0 === t) return e;\n                try {\n                    return t.call(e);\n                } catch (e) {\n                    return e;\n                }\n            }, n.hasOwnEnumerableProperty = function(e, t) {\n                return Object.prototype.propertyIsEnumerable.call(e, t);\n            }, n.isSetSimpleEqual = function(e, t) {\n                for (const r of Set.prototype.values.call(e))if (!Set.prototype.has.call(t, r)) return !1;\n                return !0;\n            }, n.isDeepEqualObj = function(e, t, r, a, i) {\n                const { isDeepEqual: o, valueOf: l, hasOwnEnumerableProperty: c } = n, { keys: u, getOwnPropertySymbols: f } = Object;\n                if (e === s.array) {\n                    if (!a.part) {\n                        if (t.length !== r.length) return !1;\n                        for(let e = 0; e < t.length; ++e)if (!o(t[e], r[e], a, i)) return !1;\n                        return !0;\n                    }\n                    for (const e of t)for (const t of r)if (o(e, t, a, i)) return !0;\n                } else if (e === s.set) {\n                    if (t.size !== r.size) return !1;\n                    if (!n.isSetSimpleEqual(t, r)) {\n                        const e = new Set(Set.prototype.values.call(r));\n                        for (const r of Set.prototype.values.call(t)){\n                            if (e.delete(r)) continue;\n                            let t = !1;\n                            for (const s of e)if (o(r, s, a, i)) {\n                                e.delete(s), t = !0;\n                                break;\n                            }\n                            if (!t) return !1;\n                        }\n                    }\n                } else if (e === s.map) {\n                    if (t.size !== r.size) return !1;\n                    for (const [e, s] of Map.prototype.entries.call(t)){\n                        if (void 0 === s && !Map.prototype.has.call(r, e)) return !1;\n                        if (!o(s, Map.prototype.get.call(r, e), a, i)) return !1;\n                    }\n                } else if (e === s.error && (t.name !== r.name || t.message !== r.message)) return !1;\n                const h = l(t), m = l(r);\n                if ((t !== h || r !== m) && !o(h, m, a, i)) return !1;\n                const d = u(t);\n                if (!a.part && d.length !== u(r).length && !a.skip) return !1;\n                let p = 0;\n                for (const e of d)if (a.skip && a.skip.includes(e)) void 0 === r[e] && ++p;\n                else {\n                    if (!c(r, e)) return !1;\n                    if (!o(t[e], r[e], a, i)) return !1;\n                }\n                if (!a.part && d.length - p !== u(r).length) return !1;\n                if (!1 !== a.symbols) {\n                    const e = f(t), s = new Set(f(r));\n                    for (const n of e){\n                        if (!a.skip || !a.skip.includes(n)) {\n                            if (c(t, n)) {\n                                if (!c(r, n)) return !1;\n                                if (!o(t[n], r[n], a, i)) return !1;\n                            } else if (c(r, n)) return !1;\n                        }\n                        s.delete(n);\n                    }\n                    for (const e of s)if (c(r, e)) return !1;\n                }\n                return !0;\n            }, n.SeenEntry = class {\n                constructor(e, t){\n                    this.obj = e, this.ref = t;\n                }\n                isSame(e, t) {\n                    return this.obj === e && this.ref === t;\n                }\n            };\n        },\n        7916: (e, t, r)=>{\n            \"use strict\";\n            const s = r(8761);\n            e.exports = class extends Error {\n                constructor(e){\n                    super(e.filter((e)=>\"\" !== e).map((e)=>\"string\" == typeof e ? e : e instanceof Error ? e.message : s(e)).join(\" \") || \"Unknown error\"), \"function\" == typeof Error.captureStackTrace && Error.captureStackTrace(this, t.assert);\n                }\n            };\n        },\n        5277: (e)=>{\n            \"use strict\";\n            const t = {};\n            e.exports = function(e) {\n                if (!e) return \"\";\n                let r = \"\";\n                for(let s = 0; s < e.length; ++s){\n                    const n = e.charCodeAt(s);\n                    t.isSafe(n) ? r += e[s] : r += t.escapeHtmlChar(n);\n                }\n                return r;\n            }, t.escapeHtmlChar = function(e) {\n                return t.namedHtml.get(e) || (e >= 256 ? \"&#\" + e + \";\" : `&#x${e.toString(16).padStart(2, \"0\")};`);\n            }, t.isSafe = function(e) {\n                return t.safeCharCodes.has(e);\n            }, t.namedHtml = new Map([\n                [\n                    38,\n                    \"&amp;\"\n                ],\n                [\n                    60,\n                    \"&lt;\"\n                ],\n                [\n                    62,\n                    \"&gt;\"\n                ],\n                [\n                    34,\n                    \"&quot;\"\n                ],\n                [\n                    160,\n                    \"&nbsp;\"\n                ],\n                [\n                    162,\n                    \"&cent;\"\n                ],\n                [\n                    163,\n                    \"&pound;\"\n                ],\n                [\n                    164,\n                    \"&curren;\"\n                ],\n                [\n                    169,\n                    \"&copy;\"\n                ],\n                [\n                    174,\n                    \"&reg;\"\n                ]\n            ]), t.safeCharCodes = function() {\n                const e = new Set;\n                for(let t = 32; t < 123; ++t)(t >= 97 || t >= 65 && t <= 90 || t >= 48 && t <= 57 || 32 === t || 46 === t || 44 === t || 45 === t || 58 === t || 95 === t) && e.add(t);\n                return e;\n            }();\n        },\n        6064: (e)=>{\n            \"use strict\";\n            e.exports = function(e) {\n                return e.replace(/[\\^\\$\\.\\*\\+\\-\\?\\=\\!\\:\\|\\\\\\/\\(\\)\\[\\]\\{\\}\\,]/g, \"\\\\$&\");\n            };\n        },\n        738: (e)=>{\n            \"use strict\";\n            e.exports = function() {};\n        },\n        1687: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(8571), a = r(7043), i = {};\n            e.exports = i.merge = function(e, t, r) {\n                if (s(e && \"object\" == typeof e, \"Invalid target value: must be an object\"), s(null == t || \"object\" == typeof t, \"Invalid source value: must be null, undefined, or an object\"), !t) return e;\n                if (r = Object.assign({\n                    nullOverride: !0,\n                    mergeArrays: !0\n                }, r), Array.isArray(t)) {\n                    s(Array.isArray(e), \"Cannot merge array onto an object\"), r.mergeArrays || (e.length = 0);\n                    for(let s = 0; s < t.length; ++s)e.push(n(t[s], {\n                        symbols: r.symbols\n                    }));\n                    return e;\n                }\n                const o = a.keys(t, r);\n                for(let s = 0; s < o.length; ++s){\n                    const a = o[s];\n                    if (\"__proto__\" === a || !Object.prototype.propertyIsEnumerable.call(t, a)) continue;\n                    const l = t[a];\n                    if (l && \"object\" == typeof l) {\n                        if (e[a] === l) continue;\n                        !e[a] || \"object\" != typeof e[a] || Array.isArray(e[a]) !== Array.isArray(l) || l instanceof Date || l instanceof RegExp ? e[a] = n(l, {\n                            symbols: r.symbols\n                        }) : i.merge(e[a], l, r);\n                    } else (null != l || r.nullOverride) && (e[a] = l);\n                }\n                return e;\n            };\n        },\n        9621: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = {};\n            e.exports = function(e, t, r) {\n                if (!1 === t || null == t) return e;\n                \"string\" == typeof (r = r || {}) && (r = {\n                    separator: r\n                });\n                const a = Array.isArray(t);\n                s(!a || !r.separator, \"Separator option is not valid for array-based chain\");\n                const i = a ? t : t.split(r.separator || \".\");\n                let o = e;\n                for(let e = 0; e < i.length; ++e){\n                    let a = i[e];\n                    const l = r.iterables && n.iterables(o);\n                    if (Array.isArray(o) || \"set\" === l) {\n                        const e = Number(a);\n                        Number.isInteger(e) && (a = e < 0 ? o.length + e : e);\n                    }\n                    if (!o || \"function\" == typeof o && !1 === r.functions || !l && void 0 === o[a]) {\n                        s(!r.strict || e + 1 === i.length, \"Missing segment\", a, \"in reach path \", t), s(\"object\" == typeof o || !0 === r.functions || \"function\" != typeof o, \"Invalid segment\", a, \"in reach path \", t), o = r.default;\n                        break;\n                    }\n                    o = l ? \"set\" === l ? [\n                        ...o\n                    ][a] : o.get(a) : o[a];\n                }\n                return o;\n            }, n.iterables = function(e) {\n                return e instanceof Set ? \"set\" : e instanceof Map ? \"map\" : void 0;\n            };\n        },\n        8761: (e)=>{\n            \"use strict\";\n            e.exports = function() {\n                try {\n                    return JSON.stringify(...arguments);\n                } catch (e) {\n                    return \"[Cannot display object: \" + e.message + \"]\";\n                }\n            };\n        },\n        4277: (e, t)=>{\n            \"use strict\";\n            const r = {};\n            t = e.exports = {\n                array: Array.prototype,\n                buffer: !1,\n                date: Date.prototype,\n                error: Error.prototype,\n                generic: Object.prototype,\n                map: Map.prototype,\n                promise: Promise.prototype,\n                regex: RegExp.prototype,\n                set: Set.prototype,\n                weakMap: WeakMap.prototype,\n                weakSet: WeakSet.prototype\n            }, r.typeMap = new Map([\n                [\n                    \"[object Error]\",\n                    t.error\n                ],\n                [\n                    \"[object Map]\",\n                    t.map\n                ],\n                [\n                    \"[object Promise]\",\n                    t.promise\n                ],\n                [\n                    \"[object Set]\",\n                    t.set\n                ],\n                [\n                    \"[object WeakMap]\",\n                    t.weakMap\n                ],\n                [\n                    \"[object WeakSet]\",\n                    t.weakSet\n                ]\n            ]), t.getInternalProto = function(e) {\n                if (Array.isArray(e)) return t.array;\n                if (e instanceof Date) return t.date;\n                if (e instanceof RegExp) return t.regex;\n                if (e instanceof Error) return t.error;\n                const s = Object.prototype.toString.call(e);\n                return r.typeMap.get(s) || t.generic;\n            };\n        },\n        7043: (e, t)=>{\n            \"use strict\";\n            t.keys = function(e) {\n                return !1 !== (arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}).symbols ? Reflect.ownKeys(e) : Object.getOwnPropertyNames(e);\n            };\n        },\n        3652: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = {};\n            t.Sorter = class {\n                constructor(){\n                    this._items = [], this.nodes = [];\n                }\n                add(e, t) {\n                    const r = [].concat((t = t || {}).before || []), n = [].concat(t.after || []), a = t.group || \"?\", i = t.sort || 0;\n                    s(!r.includes(a), `Item cannot come before itself: ${a}`), s(!r.includes(\"?\"), \"Item cannot come before unassociated items\"), s(!n.includes(a), `Item cannot come after itself: ${a}`), s(!n.includes(\"?\"), \"Item cannot come after unassociated items\"), Array.isArray(e) || (e = [\n                        e\n                    ]);\n                    for (const t of e){\n                        const e = {\n                            seq: this._items.length,\n                            sort: i,\n                            before: r,\n                            after: n,\n                            group: a,\n                            node: t\n                        };\n                        this._items.push(e);\n                    }\n                    if (!t.manual) {\n                        const e = this._sort();\n                        s(e, \"item\", \"?\" !== a ? `added into group ${a}` : \"\", \"created a dependencies error\");\n                    }\n                    return this.nodes;\n                }\n                merge(e) {\n                    Array.isArray(e) || (e = [\n                        e\n                    ]);\n                    for (const t of e)if (t) for (const e of t._items)this._items.push(Object.assign({}, e));\n                    this._items.sort(n.mergeSort);\n                    for(let e = 0; e < this._items.length; ++e)this._items[e].seq = e;\n                    const t = this._sort();\n                    return s(t, \"merge created a dependencies error\"), this.nodes;\n                }\n                sort() {\n                    const e = this._sort();\n                    return s(e, \"sort created a dependencies error\"), this.nodes;\n                }\n                _sort() {\n                    const e = {}, t = Object.create(null), r = Object.create(null);\n                    for (const s of this._items){\n                        const n = s.seq, a = s.group;\n                        r[a] = r[a] || [], r[a].push(n), e[n] = s.before;\n                        for (const e of s.after)t[e] = t[e] || [], t[e].push(n);\n                    }\n                    for(const t in e){\n                        const s = [];\n                        for(const n in e[t]){\n                            const a = e[t][n];\n                            r[a] = r[a] || [], s.push(...r[a]);\n                        }\n                        e[t] = s;\n                    }\n                    for(const s in t)if (r[s]) for (const n of r[s])e[n].push(...t[s]);\n                    const s = {};\n                    for(const t in e){\n                        const r = e[t];\n                        for (const e of r)s[e] = s[e] || [], s[e].push(t);\n                    }\n                    const n = {}, a = [];\n                    for(let e = 0; e < this._items.length; ++e){\n                        let t = e;\n                        if (s[e]) {\n                            t = null;\n                            for(let e = 0; e < this._items.length; ++e){\n                                if (!0 === n[e]) continue;\n                                s[e] || (s[e] = []);\n                                const r = s[e].length;\n                                let a = 0;\n                                for(let t = 0; t < r; ++t)n[s[e][t]] && ++a;\n                                if (a === r) {\n                                    t = e;\n                                    break;\n                                }\n                            }\n                        }\n                        null !== t && (n[t] = !0, a.push(t));\n                    }\n                    if (a.length !== this._items.length) return !1;\n                    const i = {};\n                    for (const e of this._items)i[e.seq] = e;\n                    this._items = [], this.nodes = [];\n                    for (const e of a){\n                        const t = i[e];\n                        this.nodes.push(t.node), this._items.push(t);\n                    }\n                    return !0;\n                }\n            }, n.mergeSort = (e, t)=>e.sort === t.sort ? 0 : e.sort < t.sort ? -1 : 1;\n        },\n        5380: (e, t, r)=>{\n            \"use strict\";\n            const s = r(443), n = r(2178), a = {\n                minDomainSegments: 2,\n                nonAsciiRx: /[^\\x00-\\x7f]/,\n                domainControlRx: /[\\x00-\\x20@\\:\\/\\\\#!\\$&\\'\\(\\)\\*\\+,;=\\?]/,\n                tldSegmentRx: /^[a-zA-Z](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?$/,\n                domainSegmentRx: /^[a-zA-Z0-9](?:[a-zA-Z0-9\\-]*[a-zA-Z0-9])?$/,\n                URL: s.URL || URL\n            };\n            t.analyze = function(e) {\n                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                if (!e) return n.code(\"DOMAIN_NON_EMPTY_STRING\");\n                if (\"string\" != typeof e) throw new Error(\"Invalid input: domain must be a string\");\n                if (e.length > 256) return n.code(\"DOMAIN_TOO_LONG\");\n                if (a.nonAsciiRx.test(e)) {\n                    if (!1 === t.allowUnicode) return n.code(\"DOMAIN_INVALID_UNICODE_CHARS\");\n                    e = e.normalize(\"NFC\");\n                }\n                if (a.domainControlRx.test(e)) return n.code(\"DOMAIN_INVALID_CHARS\");\n                e = a.punycode(e), t.allowFullyQualified && \".\" === e[e.length - 1] && (e = e.slice(0, -1));\n                const r = t.minDomainSegments || a.minDomainSegments, s = e.split(\".\");\n                if (s.length < r) return n.code(\"DOMAIN_SEGMENTS_COUNT\");\n                if (t.maxDomainSegments && s.length > t.maxDomainSegments) return n.code(\"DOMAIN_SEGMENTS_COUNT_MAX\");\n                const i = t.tlds;\n                if (i) {\n                    const e = s[s.length - 1].toLowerCase();\n                    if (i.deny && i.deny.has(e) || i.allow && !i.allow.has(e)) return n.code(\"DOMAIN_FORBIDDEN_TLDS\");\n                }\n                for(let e = 0; e < s.length; ++e){\n                    const t = s[e];\n                    if (!t.length) return n.code(\"DOMAIN_EMPTY_SEGMENT\");\n                    if (t.length > 63) return n.code(\"DOMAIN_LONG_SEGMENT\");\n                    if (e < s.length - 1) {\n                        if (!a.domainSegmentRx.test(t)) return n.code(\"DOMAIN_INVALID_CHARS\");\n                    } else if (!a.tldSegmentRx.test(t)) return n.code(\"DOMAIN_INVALID_TLDS_CHARS\");\n                }\n                return null;\n            }, t.isValid = function(e, r) {\n                return !t.analyze(e, r);\n            }, a.punycode = function(e) {\n                e.includes(\"%\") && (e = e.replace(/%/g, \"%25\"));\n                try {\n                    return new a.URL(`http://${e}`).host;\n                } catch (t) {\n                    return e;\n                }\n            };\n        },\n        1745: (e, t, r)=>{\n            \"use strict\";\n            const s = r(9848), n = r(5380), a = r(2178), i = {\n                nonAsciiRx: /[^\\x00-\\x7f]/,\n                encoder: new (s.TextEncoder || TextEncoder)\n            };\n            t.analyze = function(e, t) {\n                return i.email(e, t);\n            }, t.isValid = function(e, t) {\n                return !i.email(e, t);\n            }, i.email = function(e) {\n                let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                if (\"string\" != typeof e) throw new Error(\"Invalid input: email must be a string\");\n                if (!e) return a.code(\"EMPTY_STRING\");\n                const r = !i.nonAsciiRx.test(e);\n                if (!r) {\n                    if (!1 === t.allowUnicode) return a.code(\"FORBIDDEN_UNICODE\");\n                    e = e.normalize(\"NFC\");\n                }\n                const s = e.split(\"@\");\n                if (2 !== s.length) return s.length > 2 ? a.code(\"MULTIPLE_AT_CHAR\") : a.code(\"MISSING_AT_CHAR\");\n                const [o, l] = s;\n                if (!o) return a.code(\"EMPTY_LOCAL\");\n                if (!t.ignoreLength) {\n                    if (e.length > 254) return a.code(\"ADDRESS_TOO_LONG\");\n                    if (i.encoder.encode(o).length > 64) return a.code(\"LOCAL_TOO_LONG\");\n                }\n                return i.local(o, r) || n.analyze(l, t);\n            }, i.local = function(e, t) {\n                const r = e.split(\".\");\n                for (const e of r){\n                    if (!e.length) return a.code(\"EMPTY_LOCAL_SEGMENT\");\n                    if (t) {\n                        if (!i.atextRx.test(e)) return a.code(\"INVALID_LOCAL_CHARS\");\n                    } else for (const t of e){\n                        if (i.atextRx.test(t)) continue;\n                        const e = i.binary(t);\n                        if (!i.atomRx.test(e)) return a.code(\"INVALID_LOCAL_CHARS\");\n                    }\n                }\n            }, i.binary = function(e) {\n                return Array.from(i.encoder.encode(e)).map((e)=>String.fromCharCode(e)).join(\"\");\n            }, i.atextRx = /^[\\w!#\\$%&'\\*\\+\\-/=\\?\\^`\\{\\|\\}~]+$/, i.atomRx = new RegExp([\n                \"(?:[\\\\xc2-\\\\xdf][\\\\x80-\\\\xbf])\",\n                \"(?:\\\\xe0[\\\\xa0-\\\\xbf][\\\\x80-\\\\xbf])|(?:[\\\\xe1-\\\\xec][\\\\x80-\\\\xbf]{2})|(?:\\\\xed[\\\\x80-\\\\x9f][\\\\x80-\\\\xbf])|(?:[\\\\xee-\\\\xef][\\\\x80-\\\\xbf]{2})\",\n                \"(?:\\\\xf0[\\\\x90-\\\\xbf][\\\\x80-\\\\xbf]{2})|(?:[\\\\xf1-\\\\xf3][\\\\x80-\\\\xbf]{3})|(?:\\\\xf4[\\\\x80-\\\\x8f][\\\\x80-\\\\xbf]{2})\"\n            ].join(\"|\"));\n        },\n        2178: (e, t)=>{\n            \"use strict\";\n            t.codes = {\n                EMPTY_STRING: \"Address must be a non-empty string\",\n                FORBIDDEN_UNICODE: \"Address contains forbidden Unicode characters\",\n                MULTIPLE_AT_CHAR: \"Address cannot contain more than one @ character\",\n                MISSING_AT_CHAR: \"Address must contain one @ character\",\n                EMPTY_LOCAL: \"Address local part cannot be empty\",\n                ADDRESS_TOO_LONG: \"Address too long\",\n                LOCAL_TOO_LONG: \"Address local part too long\",\n                EMPTY_LOCAL_SEGMENT: \"Address local part contains empty dot-separated segment\",\n                INVALID_LOCAL_CHARS: \"Address local part contains invalid character\",\n                DOMAIN_NON_EMPTY_STRING: \"Domain must be a non-empty string\",\n                DOMAIN_TOO_LONG: \"Domain too long\",\n                DOMAIN_INVALID_UNICODE_CHARS: \"Domain contains forbidden Unicode characters\",\n                DOMAIN_INVALID_CHARS: \"Domain contains invalid character\",\n                DOMAIN_INVALID_TLDS_CHARS: \"Domain contains invalid tld character\",\n                DOMAIN_SEGMENTS_COUNT: \"Domain lacks the minimum required number of segments\",\n                DOMAIN_SEGMENTS_COUNT_MAX: \"Domain contains too many segments\",\n                DOMAIN_FORBIDDEN_TLDS: \"Domain uses forbidden TLD\",\n                DOMAIN_EMPTY_SEGMENT: \"Domain contains empty dot-separated segment\",\n                DOMAIN_LONG_SEGMENT: \"Domain contains dot-separated segment that is too long\"\n            }, t.code = function(e) {\n                return {\n                    code: e,\n                    error: t.codes[e]\n                };\n            };\n        },\n        9959: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(5752);\n            t.regex = function() {\n                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                s(void 0 === e.cidr || \"string\" == typeof e.cidr, \"options.cidr must be a string\");\n                const t = e.cidr ? e.cidr.toLowerCase() : \"optional\";\n                s([\n                    \"required\",\n                    \"optional\",\n                    \"forbidden\"\n                ].includes(t), \"options.cidr must be one of required, optional, forbidden\"), s(void 0 === e.version || \"string\" == typeof e.version || Array.isArray(e.version), \"options.version must be a string or an array of string\");\n                let r = e.version || [\n                    \"ipv4\",\n                    \"ipv6\",\n                    \"ipvfuture\"\n                ];\n                Array.isArray(r) || (r = [\n                    r\n                ]), s(r.length >= 1, \"options.version must have at least 1 version specified\");\n                for(let e = 0; e < r.length; ++e)s(\"string\" == typeof r[e], \"options.version must only contain strings\"), r[e] = r[e].toLowerCase(), s([\n                    \"ipv4\",\n                    \"ipv6\",\n                    \"ipvfuture\"\n                ].includes(r[e]), \"options.version contains unknown version \" + r[e] + \" - must be one of ipv4, ipv6, ipvfuture\");\n                r = Array.from(new Set(r));\n                const a = `(?:${r.map((e)=>{\n                    if (\"forbidden\" === t) return n.ip[e];\n                    const r = `\\\\/${\"ipv4\" === e ? n.ip.v4Cidr : n.ip.v6Cidr}`;\n                    return \"required\" === t ? `${n.ip[e]}${r}` : `${n.ip[e]}(?:${r})?`;\n                }).join(\"|\")})`, i = new RegExp(`^${a}$`);\n                return {\n                    cidr: t,\n                    versions: r,\n                    regex: i,\n                    raw: a\n                };\n            };\n        },\n        5752: (e, t, r)=>{\n            \"use strict\";\n            const s = r(375), n = r(6064), a = {\n                generate: function() {\n                    const e = {}, t = \"\\\\dA-Fa-f\", r = \"[\" + t + \"]\", s = \"\\\\w-\\\\.~\", n = \"!\\\\$&'\\\\(\\\\)\\\\*\\\\+,;=\", a = \"%\" + t, i = s + a + n + \":@\", o = \"[\" + i + \"]\", l = \"(?:0{0,2}\\\\d|0?[1-9]\\\\d|1\\\\d\\\\d|2[0-4]\\\\d|25[0-5])\";\n                    e.ipv4address = \"(?:\" + l + \"\\\\.){3}\" + l;\n                    const c = r + \"{1,4}\", u = \"(?:\" + c + \":\" + c + \"|\" + e.ipv4address + \")\", f = \"(?:\" + c + \":){6}\" + u, h = \"::(?:\" + c + \":){5}\" + u, m = \"(?:\" + c + \")?::(?:\" + c + \":){4}\" + u, d = \"(?:(?:\" + c + \":){0,1}\" + c + \")?::(?:\" + c + \":){3}\" + u, p = \"(?:(?:\" + c + \":){0,2}\" + c + \")?::(?:\" + c + \":){2}\" + u, g = \"(?:(?:\" + c + \":){0,3}\" + c + \")?::\" + c + \":\" + u, y = \"(?:(?:\" + c + \":){0,4}\" + c + \")?::\" + u, b = \"(?:(?:\" + c + \":){0,5}\" + c + \")?::\" + c, v = \"(?:(?:\" + c + \":){0,6}\" + c + \")?::\";\n                    e.ipv4Cidr = \"(?:\\\\d|[1-2]\\\\d|3[0-2])\", e.ipv6Cidr = \"(?:0{0,2}\\\\d|0?[1-9]\\\\d|1[01]\\\\d|12[0-8])\", e.ipv6address = \"(?:\" + f + \"|\" + h + \"|\" + m + \"|\" + d + \"|\" + p + \"|\" + g + \"|\" + y + \"|\" + b + \"|\" + v + \")\", e.ipvFuture = \"v\" + r + \"+\\\\.[\" + s + n + \":]+\", e.scheme = \"[a-zA-Z][a-zA-Z\\\\d+-\\\\.]*\", e.schemeRegex = new RegExp(e.scheme);\n                    const _ = \"[\" + s + a + n + \":]*\", w = \"[\" + s + a + n + \"]{1,255}\", $ = \"(?:\\\\[(?:\" + e.ipv6address + \"|\" + e.ipvFuture + \")\\\\]|\" + e.ipv4address + \"|\" + w + \")\", x = \"(?:\" + _ + \"@)?\" + $ + \"(?::\\\\d*)?\", j = \"(?:\" + _ + \"@)?(\" + $ + \")(?::\\\\d*)?\", k = o + \"*\", R = o + \"+\", A = \"(?:\\\\/\" + k + \")*\", S = \"\\\\/(?:\" + R + A + \")?\", O = R + A, E = \"[\" + s + a + n + \"@]+\" + A, D = \"(?:\\\\/\\\\/\\\\/\" + k + A + \")\";\n                    return e.hierPart = \"(?:(?:\\\\/\\\\/\" + x + A + \")|\" + S + \"|\" + O + \"|\" + D + \")\", e.hierPartCapture = \"(?:(?:\\\\/\\\\/\" + j + A + \")|\" + S + \"|\" + O + \")\", e.relativeRef = \"(?:(?:\\\\/\\\\/\" + x + A + \")|\" + S + \"|\" + E + \"|)\", e.relativeRefCapture = \"(?:(?:\\\\/\\\\/\" + j + A + \")|\" + S + \"|\" + E + \"|)\", e.query = \"[\" + i + \"\\\\/\\\\?]*(?=#|$)\", e.queryWithSquareBrackets = \"[\" + i + \"\\\\[\\\\]\\\\/\\\\?]*(?=#|$)\", e.fragment = \"[\" + i + \"\\\\/\\\\?]*\", e;\n                }\n            };\n            a.rfc3986 = a.generate(), t.ip = {\n                v4Cidr: a.rfc3986.ipv4Cidr,\n                v6Cidr: a.rfc3986.ipv6Cidr,\n                ipv4: a.rfc3986.ipv4address,\n                ipv6: a.rfc3986.ipv6address,\n                ipvfuture: a.rfc3986.ipvFuture\n            }, a.createRegex = function(e) {\n                const t = a.rfc3986, r = \"(?:\\\\?\" + (e.allowQuerySquareBrackets ? t.queryWithSquareBrackets : t.query) + \")?(?:#\" + t.fragment + \")?\", i = e.domain ? t.relativeRefCapture : t.relativeRef;\n                if (e.relativeOnly) return a.wrap(i + r);\n                let o = \"\";\n                if (e.scheme) {\n                    s(e.scheme instanceof RegExp || \"string\" == typeof e.scheme || Array.isArray(e.scheme), \"scheme must be a RegExp, String, or Array\");\n                    const r = [].concat(e.scheme);\n                    s(r.length >= 1, \"scheme must have at least 1 scheme specified\");\n                    const a = [];\n                    for(let e = 0; e < r.length; ++e){\n                        const i = r[e];\n                        s(i instanceof RegExp || \"string\" == typeof i, \"scheme at position \" + e + \" must be a RegExp or String\"), i instanceof RegExp ? a.push(i.source.toString()) : (s(t.schemeRegex.test(i), \"scheme at position \" + e + \" must be a valid scheme\"), a.push(n(i)));\n                    }\n                    o = a.join(\"|\");\n                }\n                const l = \"(?:\" + (o ? \"(?:\" + o + \")\" : t.scheme) + \":\" + (e.domain ? t.hierPartCapture : t.hierPart) + \")\", c = e.allowRelative ? \"(?:\" + l + \"|\" + i + \")\" : l;\n                return a.wrap(c + r, o);\n            }, a.wrap = function(e, t) {\n                return {\n                    raw: e = `(?=.)(?!https?:/(?:$|[^/]))(?!https?:///)(?!https?:[^/])${e}`,\n                    regex: new RegExp(`^${e}$`),\n                    scheme: t\n                };\n            }, a.uriRegex = a.createRegex({}), t.regex = function() {\n                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n                return e.scheme || e.allowRelative || e.relativeOnly || e.allowQuerySquareBrackets || e.domain ? a.createRegex(e) : a.uriRegex;\n            };\n        },\n        1447: (e, t)=>{\n            \"use strict\";\n            const r = {\n                operators: [\n                    \"!\",\n                    \"^\",\n                    \"*\",\n                    \"/\",\n                    \"%\",\n                    \"+\",\n                    \"-\",\n                    \"<\",\n                    \"<=\",\n                    \">\",\n                    \">=\",\n                    \"==\",\n                    \"!=\",\n                    \"&&\",\n                    \"||\",\n                    \"??\"\n                ],\n                operatorCharacters: [\n                    \"!\",\n                    \"^\",\n                    \"*\",\n                    \"/\",\n                    \"%\",\n                    \"+\",\n                    \"-\",\n                    \"<\",\n                    \"=\",\n                    \">\",\n                    \"&\",\n                    \"|\",\n                    \"?\"\n                ],\n                operatorsOrder: [\n                    [\n                        \"^\"\n                    ],\n                    [\n                        \"*\",\n                        \"/\",\n                        \"%\"\n                    ],\n                    [\n                        \"+\",\n                        \"-\"\n                    ],\n                    [\n                        \"<\",\n                        \"<=\",\n                        \">\",\n                        \">=\"\n                    ],\n                    [\n                        \"==\",\n                        \"!=\"\n                    ],\n                    [\n                        \"&&\"\n                    ],\n                    [\n                        \"||\",\n                        \"??\"\n                    ]\n                ],\n                operatorsPrefix: [\n                    \"!\",\n                    \"n\"\n                ],\n                literals: {\n                    '\"': '\"',\n                    \"`\": \"`\",\n                    \"'\": \"'\",\n                    \"[\": \"]\"\n                },\n                numberRx: /^(?:[0-9]*(\\.[0-9]*)?){1}$/,\n                tokenRx: /^[\\w\\$\\#\\.\\@\\:\\{\\}]+$/,\n                symbol: Symbol(\"formula\"),\n                settings: Symbol(\"settings\")\n            };\n            t.Parser = class {\n                constructor(e){\n                    let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};\n                    if (!t[r.settings] && t.constants) for(const e in t.constants){\n                        const r = t.constants[e];\n                        if (null !== r && ![\n                            \"boolean\",\n                            \"number\",\n                            \"string\"\n                        ].includes(typeof r)) throw new Error(`Formula constant ${e} contains invalid ${typeof r} value type`);\n                    }\n                    this.settings = t[r.settings] ? t : Object.assign({\n                        [r.settings]: !0,\n                        constants: {},\n                        functions: {}\n                    }, t), this.single = null, this._parts = null, this._parse(e);\n                }\n                _parse(e) {\n                    let s = [], n = \"\", a = 0, i = !1;\n                    const o = (e)=>{\n                        if (a) throw new Error(\"Formula missing closing parenthesis\");\n                        const o = s.length ? s[s.length - 1] : null;\n                        if (i || n || e) {\n                            if (o && \"reference\" === o.type && \")\" === e) return o.type = \"function\", o.value = this._subFormula(n, o.value), void (n = \"\");\n                            if (\")\" === e) {\n                                const e = new t.Parser(n, this.settings);\n                                s.push({\n                                    type: \"segment\",\n                                    value: e\n                                });\n                            } else if (i) {\n                                if (\"]\" === i) return s.push({\n                                    type: \"reference\",\n                                    value: n\n                                }), void (n = \"\");\n                                s.push({\n                                    type: \"literal\",\n                                    value: n\n                                });\n                            } else if (r.operatorCharacters.includes(n)) o && \"operator\" === o.type && r.operators.includes(o.value + n) ? o.value += n : s.push({\n                                type: \"operator\",\n                                value: n\n                            });\n                            else if (n.match(r.numberRx)) s.push({\n                                type: \"constant\",\n                                value: parseFloat(n)\n                            });\n                            else if (void 0 !== this.settings.constants[n]) s.push({\n                                type: \"constant\",\n                                value: this.settings.constants[n]\n                            });\n                            else {\n                                if (!n.match(r.tokenRx)) throw new Error(`Formula contains invalid token: ${n}`);\n                                s.push({\n                                    type: \"reference\",\n                                    value: n\n                                });\n                            }\n                            n = \"\";\n                        }\n                    };\n                    for (const t of e)i ? t === i ? (o(), i = !1) : n += t : a ? \"(\" === t ? (n += t, ++a) : \")\" === t ? (--a, a ? n += t : o(t)) : n += t : t in r.literals ? i = r.literals[t] : \"(\" === t ? (o(), ++a) : r.operatorCharacters.includes(t) ? (o(), n = t, o()) : \" \" !== t ? n += t : o();\n                    o(), s = s.map((e, t)=>\"operator\" !== e.type || \"-\" !== e.value || t && \"operator\" !== s[t - 1].type ? e : {\n                            type: \"operator\",\n                            value: \"n\"\n                        });\n                    let l = !1;\n                    for (const e of s){\n                        if (\"operator\" === e.type) {\n                            if (r.operatorsPrefix.includes(e.value)) continue;\n                            if (!l) throw new Error(\"Formula contains an operator in invalid position\");\n                            if (!r.operators.includes(e.value)) throw new Error(`Formula contains an unknown operator ${e.value}`);\n                        } else if (l) throw new Error(\"Formula missing expected operator\");\n                        l = !l;\n                    }\n                    if (!l) throw new Error(\"Formula contains invalid trailing operator\");\n                    1 === s.length && [\n                        \"reference\",\n                        \"literal\",\n                        \"constant\"\n                    ].includes(s[0].type) && (this.single = {\n                        type: \"reference\" === s[0].type ? \"reference\" : \"value\",\n                        value: s[0].value\n                    }), this._parts = s.map((e)=>{\n                        if (\"operator\" === e.type) return r.operatorsPrefix.includes(e.value) ? e : e.value;\n                        if (\"reference\" !== e.type) return e.value;\n                        if (this.settings.tokenRx && !this.settings.tokenRx.test(e.value)) throw new Error(`Formula contains invalid reference ${e.value}`);\n                        return this.settings.reference ? this.settings.reference(e.value) : r.reference(e.value);\n                    });\n                }\n                _subFormula(e, s) {\n                    const n = this.settings.functions[s];\n                    if (\"function\" != typeof n) throw new Error(`Formula contains unknown function ${s}`);\n                    let a = [];\n                    if (e) {\n                        let t = \"\", n = 0, i = !1;\n                        const o = ()=>{\n                            if (!t) throw new Error(`Formula contains function ${s} with invalid arguments ${e}`);\n                            a.push(t), t = \"\";\n                        };\n                        for(let s = 0; s < e.length; ++s){\n                            const a = e[s];\n                            i ? (t += a, a === i && (i = !1)) : a in r.literals && !n ? (t += a, i = r.literals[a]) : \",\" !== a || n ? (t += a, \"(\" === a ? ++n : \")\" === a && --n) : o();\n                        }\n                        o();\n                    }\n                    return a = a.map((e)=>new t.Parser(e, this.settings)), function(e) {\n                        const t = [];\n                        for (const r of a)t.push(r.evaluate(e));\n                        return n.call(e, ...t);\n                    };\n                }\n                evaluate(e) {\n                    const t = this._parts.slice();\n                    for(let s = t.length - 2; s >= 0; --s){\n                        const n = t[s];\n                        if (n && \"operator\" === n.type) {\n                            const a = t[s + 1];\n                            t.splice(s + 1, 1);\n                            const i = r.evaluate(a, e);\n                            t[s] = r.single(n.value, i);\n                        }\n                    }\n                    return r.operatorsOrder.forEach((s)=>{\n                        for(let n = 1; n < t.length - 1;)if (s.includes(t[n])) {\n                            const s = t[n], a = r.evaluate(t[n - 1], e), i = r.evaluate(t[n + 1], e);\n                            t.splice(n, 2);\n                            const o = r.calculate(s, a, i);\n                            t[n - 1] = 0 === o ? 0 : o;\n                        } else n += 2;\n                    }), r.evaluate(t[0], e);\n                }\n            }, t.Parser.prototype[r.symbol] = !0, r.reference = function(e) {\n                return function(t) {\n                    return t && void 0 !== t[e] ? t[e] : null;\n                };\n            }, r.evaluate = function(e, t) {\n                return null === e ? null : \"function\" == typeof e ? e(t) : e[r.symbol] ? e.evaluate(t) : e;\n            }, r.single = function(e, t) {\n                if (\"!\" === e) return !t;\n                const r = -t;\n                return 0 === r ? 0 : r;\n            }, r.calculate = function(e, t, s) {\n                if (\"??\" === e) return r.exists(t) ? t : s;\n                if (\"string\" == typeof t || \"string\" == typeof s) {\n                    if (\"+\" === e) return (t = r.exists(t) ? t : \"\") + (r.exists(s) ? s : \"\");\n                } else switch(e){\n                    case \"^\":\n                        return Math.pow(t, s);\n                    case \"*\":\n                        return t * s;\n                    case \"/\":\n                        return t / s;\n                    case \"%\":\n                        return t % s;\n                    case \"+\":\n                        return t + s;\n                    case \"-\":\n                        return t - s;\n                }\n                switch(e){\n                    case \"<\":\n                        return t < s;\n                    case \"<=\":\n                        return t <= s;\n                    case \">\":\n                        return t > s;\n                    case \">=\":\n                        return t >= s;\n                    case \"==\":\n                        return t === s;\n                    case \"!=\":\n                        return t !== s;\n                    case \"&&\":\n                        return t && s;\n                    case \"||\":\n                        return t || s;\n                }\n                return null;\n            }, r.exists = function(e) {\n                return null != e;\n            };\n        },\n        9926: ()=>{},\n        5688: ()=>{},\n        9708: ()=>{},\n        1152: ()=>{},\n        443: ()=>{},\n        9848: ()=>{},\n        5934: (e)=>{\n            \"use strict\";\n            e.exports = JSON.parse('{\"version\":\"17.11.0\"}');\n        }\n    }, t = {}, function r(s) {\n        var n = t[s];\n        if (void 0 !== n) return n.exports;\n        var a = t[s] = {\n            exports: {}\n        };\n        return e[s](a, a.exports, r), a.exports;\n    }(5107);\n    var e, t;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/joi/dist/joi-browser.min.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/***/ ((module) => {

"use strict";
eval("/**\n * Helpers.\n */ \nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */ module.exports = function(val, options) {\n    options = options || {};\n    var type = typeof val;\n    if (type === \"string\" && val.length > 0) {\n        return parse(val);\n    } else if (type === \"number\" && isFinite(val)) {\n        return options.long ? fmtLong(val) : fmtShort(val);\n    }\n    throw new Error(\"val is not a non-empty string or a valid number. val=\" + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */ function parse(str) {\n    str = String(str);\n    if (str.length > 100) {\n        return;\n    }\n    var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n    if (!match) {\n        return;\n    }\n    var n = parseFloat(match[1]);\n    var type = (match[2] || \"ms\").toLowerCase();\n    switch(type){\n        case \"years\":\n        case \"year\":\n        case \"yrs\":\n        case \"yr\":\n        case \"y\":\n            return n * y;\n        case \"weeks\":\n        case \"week\":\n        case \"w\":\n            return n * w;\n        case \"days\":\n        case \"day\":\n        case \"d\":\n            return n * d;\n        case \"hours\":\n        case \"hour\":\n        case \"hrs\":\n        case \"hr\":\n        case \"h\":\n            return n * h;\n        case \"minutes\":\n        case \"minute\":\n        case \"mins\":\n        case \"min\":\n        case \"m\":\n            return n * m;\n        case \"seconds\":\n        case \"second\":\n        case \"secs\":\n        case \"sec\":\n        case \"s\":\n            return n * s;\n        case \"milliseconds\":\n        case \"millisecond\":\n        case \"msecs\":\n        case \"msec\":\n        case \"ms\":\n            return n;\n        default:\n            return undefined;\n    }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */ function fmtShort(ms) {\n    var msAbs = Math.abs(ms);\n    if (msAbs >= d) {\n        return Math.round(ms / d) + \"d\";\n    }\n    if (msAbs >= h) {\n        return Math.round(ms / h) + \"h\";\n    }\n    if (msAbs >= m) {\n        return Math.round(ms / m) + \"m\";\n    }\n    if (msAbs >= s) {\n        return Math.round(ms / s) + \"s\";\n    }\n    return ms + \"ms\";\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */ function fmtLong(ms) {\n    var msAbs = Math.abs(ms);\n    if (msAbs >= d) {\n        return plural(ms, msAbs, d, \"day\");\n    }\n    if (msAbs >= h) {\n        return plural(ms, msAbs, h, \"hour\");\n    }\n    if (msAbs >= m) {\n        return plural(ms, msAbs, m, \"minute\");\n    }\n    if (msAbs >= s) {\n        return plural(ms, msAbs, s, \"second\");\n    }\n    return ms + \" ms\";\n}\n/**\n * Pluralization helper.\n */ function plural(ms, msAbs, n, name) {\n    var isPlural = msAbs >= n * 1.5;\n    return Math.round(ms / n) + \" \" + name + (isPlural ? \"s\" : \"\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL21zL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBOztDQUVDO0FBRUQsSUFBSUEsSUFBSTtBQUNSLElBQUlDLElBQUlELElBQUk7QUFDWixJQUFJRSxJQUFJRCxJQUFJO0FBQ1osSUFBSUUsSUFBSUQsSUFBSTtBQUNaLElBQUlFLElBQUlELElBQUk7QUFDWixJQUFJRSxJQUFJRixJQUFJO0FBRVo7Ozs7Ozs7Ozs7OztDQVlDLEdBRURHLE9BQU9DLE9BQU8sR0FBRyxTQUFTQyxHQUFHLEVBQUVDLE9BQU87SUFDcENBLFVBQVVBLFdBQVcsQ0FBQztJQUN0QixJQUFJQyxPQUFPLE9BQU9GO0lBQ2xCLElBQUlFLFNBQVMsWUFBWUYsSUFBSUcsTUFBTSxHQUFHLEdBQUc7UUFDdkMsT0FBT0MsTUFBTUo7SUFDZixPQUFPLElBQUlFLFNBQVMsWUFBWUcsU0FBU0wsTUFBTTtRQUM3QyxPQUFPQyxRQUFRSyxJQUFJLEdBQUdDLFFBQVFQLE9BQU9RLFNBQVNSO0lBQ2hEO0lBQ0EsTUFBTSxJQUFJUyxNQUNSLDBEQUNFQyxLQUFLQyxTQUFTLENBQUNYO0FBRXJCO0FBRUE7Ozs7OztDQU1DLEdBRUQsU0FBU0ksTUFBTVEsR0FBRztJQUNoQkEsTUFBTUMsT0FBT0Q7SUFDYixJQUFJQSxJQUFJVCxNQUFNLEdBQUcsS0FBSztRQUNwQjtJQUNGO0lBQ0EsSUFBSVcsUUFBUSxtSUFBbUlDLElBQUksQ0FDakpIO0lBRUYsSUFBSSxDQUFDRSxPQUFPO1FBQ1Y7SUFDRjtJQUNBLElBQUlFLElBQUlDLFdBQVdILEtBQUssQ0FBQyxFQUFFO0lBQzNCLElBQUlaLE9BQU8sQ0FBQ1ksS0FBSyxDQUFDLEVBQUUsSUFBSSxJQUFHLEVBQUdJLFdBQVc7SUFDekMsT0FBUWhCO1FBQ04sS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPYyxJQUFJbkI7UUFDYixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDSCxPQUFPbUIsSUFBSXBCO1FBQ2IsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT29CLElBQUlyQjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT3FCLElBQUl0QjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT3NCLElBQUl2QjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT3VCLElBQUl4QjtRQUNiLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0gsT0FBT3dCO1FBQ1Q7WUFDRSxPQUFPRztJQUNYO0FBQ0Y7QUFFQTs7Ozs7O0NBTUMsR0FFRCxTQUFTWCxTQUFTWSxFQUFFO0lBQ2xCLElBQUlDLFFBQVFDLEtBQUtDLEdBQUcsQ0FBQ0g7SUFDckIsSUFBSUMsU0FBUzFCLEdBQUc7UUFDZCxPQUFPMkIsS0FBS0UsS0FBSyxDQUFDSixLQUFLekIsS0FBSztJQUM5QjtJQUNBLElBQUkwQixTQUFTM0IsR0FBRztRQUNkLE9BQU80QixLQUFLRSxLQUFLLENBQUNKLEtBQUsxQixLQUFLO0lBQzlCO0lBQ0EsSUFBSTJCLFNBQVM1QixHQUFHO1FBQ2QsT0FBTzZCLEtBQUtFLEtBQUssQ0FBQ0osS0FBSzNCLEtBQUs7SUFDOUI7SUFDQSxJQUFJNEIsU0FBUzdCLEdBQUc7UUFDZCxPQUFPOEIsS0FBS0UsS0FBSyxDQUFDSixLQUFLNUIsS0FBSztJQUM5QjtJQUNBLE9BQU80QixLQUFLO0FBQ2Q7QUFFQTs7Ozs7O0NBTUMsR0FFRCxTQUFTYixRQUFRYSxFQUFFO0lBQ2pCLElBQUlDLFFBQVFDLEtBQUtDLEdBQUcsQ0FBQ0g7SUFDckIsSUFBSUMsU0FBUzFCLEdBQUc7UUFDZCxPQUFPOEIsT0FBT0wsSUFBSUMsT0FBTzFCLEdBQUc7SUFDOUI7SUFDQSxJQUFJMEIsU0FBUzNCLEdBQUc7UUFDZCxPQUFPK0IsT0FBT0wsSUFBSUMsT0FBTzNCLEdBQUc7SUFDOUI7SUFDQSxJQUFJMkIsU0FBUzVCLEdBQUc7UUFDZCxPQUFPZ0MsT0FBT0wsSUFBSUMsT0FBTzVCLEdBQUc7SUFDOUI7SUFDQSxJQUFJNEIsU0FBUzdCLEdBQUc7UUFDZCxPQUFPaUMsT0FBT0wsSUFBSUMsT0FBTzdCLEdBQUc7SUFDOUI7SUFDQSxPQUFPNEIsS0FBSztBQUNkO0FBRUE7O0NBRUMsR0FFRCxTQUFTSyxPQUFPTCxFQUFFLEVBQUVDLEtBQUssRUFBRUwsQ0FBQyxFQUFFVSxJQUFJO0lBQ2hDLElBQUlDLFdBQVdOLFNBQVNMLElBQUk7SUFDNUIsT0FBT00sS0FBS0UsS0FBSyxDQUFDSixLQUFLSixLQUFLLE1BQU1VLE9BQVFDLENBQUFBLFdBQVcsTUFBTSxFQUFDO0FBQzlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9tcy9pbmRleC5qcz8zYTc5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogSGVscGVycy5cbiAqL1xuXG52YXIgcyA9IDEwMDA7XG52YXIgbSA9IHMgKiA2MDtcbnZhciBoID0gbSAqIDYwO1xudmFyIGQgPSBoICogMjQ7XG52YXIgdyA9IGQgKiA3O1xudmFyIHkgPSBkICogMzY1LjI1O1xuXG4vKipcbiAqIFBhcnNlIG9yIGZvcm1hdCB0aGUgZ2l2ZW4gYHZhbGAuXG4gKlxuICogT3B0aW9uczpcbiAqXG4gKiAgLSBgbG9uZ2AgdmVyYm9zZSBmb3JtYXR0aW5nIFtmYWxzZV1cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ3xOdW1iZXJ9IHZhbFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXVxuICogQHRocm93cyB7RXJyb3J9IHRocm93IGFuIGVycm9yIGlmIHZhbCBpcyBub3QgYSBub24tZW1wdHkgc3RyaW5nIG9yIGEgbnVtYmVyXG4gKiBAcmV0dXJuIHtTdHJpbmd8TnVtYmVyfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHZhbCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgdmFyIHR5cGUgPSB0eXBlb2YgdmFsO1xuICBpZiAodHlwZSA9PT0gJ3N0cmluZycgJiYgdmFsLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gcGFyc2UodmFsKTtcbiAgfSBlbHNlIGlmICh0eXBlID09PSAnbnVtYmVyJyAmJiBpc0Zpbml0ZSh2YWwpKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMubG9uZyA/IGZtdExvbmcodmFsKSA6IGZtdFNob3J0KHZhbCk7XG4gIH1cbiAgdGhyb3cgbmV3IEVycm9yKFxuICAgICd2YWwgaXMgbm90IGEgbm9uLWVtcHR5IHN0cmluZyBvciBhIHZhbGlkIG51bWJlci4gdmFsPScgK1xuICAgICAgSlNPTi5zdHJpbmdpZnkodmFsKVxuICApO1xufTtcblxuLyoqXG4gKiBQYXJzZSB0aGUgZ2l2ZW4gYHN0cmAgYW5kIHJldHVybiBtaWxsaXNlY29uZHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybiB7TnVtYmVyfVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZnVuY3Rpb24gcGFyc2Uoc3RyKSB7XG4gIHN0ciA9IFN0cmluZyhzdHIpO1xuICBpZiAoc3RyLmxlbmd0aCA+IDEwMCkge1xuICAgIHJldHVybjtcbiAgfVxuICB2YXIgbWF0Y2ggPSAvXigtPyg/OlxcZCspP1xcLj9cXGQrKSAqKG1pbGxpc2Vjb25kcz98bXNlY3M/fG1zfHNlY29uZHM/fHNlY3M/fHN8bWludXRlcz98bWlucz98bXxob3Vycz98aHJzP3xofGRheXM/fGR8d2Vla3M/fHd8eWVhcnM/fHlycz98eSk/JC9pLmV4ZWMoXG4gICAgc3RyXG4gICk7XG4gIGlmICghbWF0Y2gpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIG4gPSBwYXJzZUZsb2F0KG1hdGNoWzFdKTtcbiAgdmFyIHR5cGUgPSAobWF0Y2hbMl0gfHwgJ21zJykudG9Mb3dlckNhc2UoKTtcbiAgc3dpdGNoICh0eXBlKSB7XG4gICAgY2FzZSAneWVhcnMnOlxuICAgIGNhc2UgJ3llYXInOlxuICAgIGNhc2UgJ3lycyc6XG4gICAgY2FzZSAneXInOlxuICAgIGNhc2UgJ3knOlxuICAgICAgcmV0dXJuIG4gKiB5O1xuICAgIGNhc2UgJ3dlZWtzJzpcbiAgICBjYXNlICd3ZWVrJzpcbiAgICBjYXNlICd3JzpcbiAgICAgIHJldHVybiBuICogdztcbiAgICBjYXNlICdkYXlzJzpcbiAgICBjYXNlICdkYXknOlxuICAgIGNhc2UgJ2QnOlxuICAgICAgcmV0dXJuIG4gKiBkO1xuICAgIGNhc2UgJ2hvdXJzJzpcbiAgICBjYXNlICdob3VyJzpcbiAgICBjYXNlICdocnMnOlxuICAgIGNhc2UgJ2hyJzpcbiAgICBjYXNlICdoJzpcbiAgICAgIHJldHVybiBuICogaDtcbiAgICBjYXNlICdtaW51dGVzJzpcbiAgICBjYXNlICdtaW51dGUnOlxuICAgIGNhc2UgJ21pbnMnOlxuICAgIGNhc2UgJ21pbic6XG4gICAgY2FzZSAnbSc6XG4gICAgICByZXR1cm4gbiAqIG07XG4gICAgY2FzZSAnc2Vjb25kcyc6XG4gICAgY2FzZSAnc2Vjb25kJzpcbiAgICBjYXNlICdzZWNzJzpcbiAgICBjYXNlICdzZWMnOlxuICAgIGNhc2UgJ3MnOlxuICAgICAgcmV0dXJuIG4gKiBzO1xuICAgIGNhc2UgJ21pbGxpc2Vjb25kcyc6XG4gICAgY2FzZSAnbWlsbGlzZWNvbmQnOlxuICAgIGNhc2UgJ21zZWNzJzpcbiAgICBjYXNlICdtc2VjJzpcbiAgICBjYXNlICdtcyc6XG4gICAgICByZXR1cm4gbjtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG4vKipcbiAqIFNob3J0IGZvcm1hdCBmb3IgYG1zYC5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gbXNcbiAqIEByZXR1cm4ge1N0cmluZ31cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5cbmZ1bmN0aW9uIGZtdFNob3J0KG1zKSB7XG4gIHZhciBtc0FicyA9IE1hdGguYWJzKG1zKTtcbiAgaWYgKG1zQWJzID49IGQpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIGQpICsgJ2QnO1xuICB9XG4gIGlmIChtc0FicyA+PSBoKSB7XG4gICAgcmV0dXJuIE1hdGgucm91bmQobXMgLyBoKSArICdoJztcbiAgfVxuICBpZiAobXNBYnMgPj0gbSkge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gbSkgKyAnbSc7XG4gIH1cbiAgaWYgKG1zQWJzID49IHMpIHtcbiAgICByZXR1cm4gTWF0aC5yb3VuZChtcyAvIHMpICsgJ3MnO1xuICB9XG4gIHJldHVybiBtcyArICdtcyc7XG59XG5cbi8qKlxuICogTG9uZyBmb3JtYXQgZm9yIGBtc2AuXG4gKlxuICogQHBhcmFtIHtOdW1iZXJ9IG1zXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5mdW5jdGlvbiBmbXRMb25nKG1zKSB7XG4gIHZhciBtc0FicyA9IE1hdGguYWJzKG1zKTtcbiAgaWYgKG1zQWJzID49IGQpIHtcbiAgICByZXR1cm4gcGx1cmFsKG1zLCBtc0FicywgZCwgJ2RheScpO1xuICB9XG4gIGlmIChtc0FicyA+PSBoKSB7XG4gICAgcmV0dXJuIHBsdXJhbChtcywgbXNBYnMsIGgsICdob3VyJyk7XG4gIH1cbiAgaWYgKG1zQWJzID49IG0pIHtcbiAgICByZXR1cm4gcGx1cmFsKG1zLCBtc0FicywgbSwgJ21pbnV0ZScpO1xuICB9XG4gIGlmIChtc0FicyA+PSBzKSB7XG4gICAgcmV0dXJuIHBsdXJhbChtcywgbXNBYnMsIHMsICdzZWNvbmQnKTtcbiAgfVxuICByZXR1cm4gbXMgKyAnIG1zJztcbn1cblxuLyoqXG4gKiBQbHVyYWxpemF0aW9uIGhlbHBlci5cbiAqL1xuXG5mdW5jdGlvbiBwbHVyYWwobXMsIG1zQWJzLCBuLCBuYW1lKSB7XG4gIHZhciBpc1BsdXJhbCA9IG1zQWJzID49IG4gKiAxLjU7XG4gIHJldHVybiBNYXRoLnJvdW5kKG1zIC8gbikgKyAnICcgKyBuYW1lICsgKGlzUGx1cmFsID8gJ3MnIDogJycpO1xufVxuIl0sIm5hbWVzIjpbInMiLCJtIiwiaCIsImQiLCJ3IiwieSIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2YWwiLCJvcHRpb25zIiwidHlwZSIsImxlbmd0aCIsInBhcnNlIiwiaXNGaW5pdGUiLCJsb25nIiwiZm10TG9uZyIsImZtdFNob3J0IiwiRXJyb3IiLCJKU09OIiwic3RyaW5naWZ5Iiwic3RyIiwiU3RyaW5nIiwibWF0Y2giLCJleGVjIiwibiIsInBhcnNlRmxvYXQiLCJ0b0xvd2VyQ2FzZSIsInVuZGVmaW5lZCIsIm1zIiwibXNBYnMiLCJNYXRoIiwiYWJzIiwicm91bmQiLCJwbHVyYWwiLCJuYW1lIiwiaXNQbHVyYWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/ms/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all)=>{\n    for(var name in all)__defProp(target, name, {\n        get: all[name],\n        enumerable: true\n    });\n};\nvar __copyProps = (to, from, except, desc)=>{\n    if (from && typeof from === \"object\" || typeof from === \"function\") {\n        for (let key of __getOwnPropNames(from))if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {\n            get: ()=>from[key],\n            enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable\n        });\n    }\n    return to;\n};\nvar __toCommonJS = (mod)=>__copyProps(__defProp({}, \"__esModule\", {\n        value: true\n    }), mod);\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n    RequestCookies: ()=>RequestCookies,\n    ResponseCookies: ()=>ResponseCookies,\n    parseCookie: ()=>parseCookie,\n    parseSetCookie: ()=>parseSetCookie,\n    stringifyCookie: ()=>stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n// src/serialize.ts\nfunction stringifyCookie(c) {\n    var _a;\n    const attrs = [\n        \"path\" in c && c.path && `Path=${c.path}`,\n        \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n        \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n        \"domain\" in c && c.domain && `Domain=${c.domain}`,\n        \"secure\" in c && c.secure && \"Secure\",\n        \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n        \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n        \"priority\" in c && c.priority && `Priority=${c.priority}`\n    ].filter(Boolean);\n    return `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n    const map = /* @__PURE__ */ new Map();\n    for (const pair of cookie.split(/; */)){\n        if (!pair) continue;\n        const splitAt = pair.indexOf(\"=\");\n        if (splitAt === -1) {\n            map.set(pair, \"true\");\n            continue;\n        }\n        const [key, value] = [\n            pair.slice(0, splitAt),\n            pair.slice(splitAt + 1)\n        ];\n        try {\n            map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n        } catch  {}\n    }\n    return map;\n}\nfunction parseSetCookie(setCookie) {\n    if (!setCookie) {\n        return void 0;\n    }\n    const [[name, value], ...attributes] = parseCookie(setCookie);\n    const { domain, expires, httponly, maxage, path, samesite, secure, priority } = Object.fromEntries(attributes.map(([key, value2])=>[\n            key.toLowerCase(),\n            value2\n        ]));\n    const cookie = {\n        name,\n        value: decodeURIComponent(value),\n        domain,\n        ...expires && {\n            expires: new Date(expires)\n        },\n        ...httponly && {\n            httpOnly: true\n        },\n        ...typeof maxage === \"string\" && {\n            maxAge: Number(maxage)\n        },\n        path,\n        ...samesite && {\n            sameSite: parseSameSite(samesite)\n        },\n        ...secure && {\n            secure: true\n        },\n        ...priority && {\n            priority: parsePriority(priority)\n        }\n    };\n    return compact(cookie);\n}\nfunction compact(t) {\n    const newT = {};\n    for(const key in t){\n        if (t[key]) {\n            newT[key] = t[key];\n        }\n    }\n    return newT;\n}\nvar SAME_SITE = [\n    \"strict\",\n    \"lax\",\n    \"none\"\n];\nfunction parseSameSite(string) {\n    string = string.toLowerCase();\n    return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\n    \"low\",\n    \"medium\",\n    \"high\"\n];\nfunction parsePriority(string) {\n    string = string.toLowerCase();\n    return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n    if (!cookiesString) return [];\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    cookiesSeparatorFound = true;\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n// src/request-cookies.ts\nvar RequestCookies = class {\n    constructor(requestHeaders){\n        /** @internal */ this._parsed = /* @__PURE__ */ new Map();\n        this._headers = requestHeaders;\n        const header = requestHeaders.get(\"cookie\");\n        if (header) {\n            const parsed = parseCookie(header);\n            for (const [name, value] of parsed){\n                this._parsed.set(name, {\n                    name,\n                    value\n                });\n            }\n        }\n    }\n    [Symbol.iterator]() {\n        return this._parsed[Symbol.iterator]();\n    }\n    /**\n   * The amount of cookies received from the client\n   */ get size() {\n        return this._parsed.size;\n    }\n    get(...args) {\n        const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(name);\n    }\n    getAll(...args) {\n        var _a;\n        const all = Array.from(this._parsed);\n        if (!args.length) {\n            return all.map(([_, value])=>value);\n        }\n        const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n        return all.filter(([n])=>n === name).map(([_, value])=>value);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    set(...args) {\n        const [name, value] = args.length === 1 ? [\n            args[0].name,\n            args[0].value\n        ] : args;\n        const map = this._parsed;\n        map.set(name, {\n            name,\n            value\n        });\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value2])=>stringifyCookie(value2)).join(\"; \"));\n        return this;\n    }\n    /**\n   * Delete the cookies matching the passed name or names in the request.\n   */ delete(names) {\n        const map = this._parsed;\n        const result = !Array.isArray(names) ? map.delete(names) : names.map((name)=>map.delete(name));\n        this._headers.set(\"cookie\", Array.from(map).map(([_, value])=>stringifyCookie(value)).join(\"; \"));\n        return result;\n    }\n    /**\n   * Delete all the cookies in the cookies in the request.\n   */ clear() {\n        this.delete(Array.from(this._parsed.keys()));\n        return this;\n    }\n    /**\n   * Format the cookies in the request as a string for logging\n   */ [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n    toString() {\n        return [\n            ...this._parsed.values()\n        ].map((v)=>`${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n    }\n};\n// src/response-cookies.ts\nvar ResponseCookies = class {\n    constructor(responseHeaders){\n        /** @internal */ this._parsed = /* @__PURE__ */ new Map();\n        var _a, _b, _c;\n        this._headers = responseHeaders;\n        const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n        const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n        for (const cookieString of cookieStrings){\n            const parsed = parseSetCookie(cookieString);\n            if (parsed) this._parsed.set(parsed.name, parsed);\n        }\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */ get(...args) {\n        const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n        return this._parsed.get(key);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */ getAll(...args) {\n        var _a;\n        const all = Array.from(this._parsed.values());\n        if (!args.length) {\n            return all;\n        }\n        const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n        return all.filter((c)=>c.name === key);\n    }\n    has(name) {\n        return this._parsed.has(name);\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */ set(...args) {\n        const [name, value, cookie] = args.length === 1 ? [\n            args[0].name,\n            args[0].value,\n            args[0]\n        ] : args;\n        const map = this._parsed;\n        map.set(name, normalizeCookie({\n            name,\n            value,\n            ...cookie\n        }));\n        replace(map, this._headers);\n        return this;\n    }\n    /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */ delete(...args) {\n        const [name, path, domain] = typeof args[0] === \"string\" ? [\n            args[0]\n        ] : [\n            args[0].name,\n            args[0].path,\n            args[0].domain\n        ];\n        return this.set({\n            name,\n            path,\n            domain,\n            value: \"\",\n            expires: /* @__PURE__ */ new Date(0)\n        });\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n    }\n    toString() {\n        return [\n            ...this._parsed.values()\n        ].map(stringifyCookie).join(\"; \");\n    }\n};\nfunction replace(bag, headers) {\n    headers.delete(\"set-cookie\");\n    for (const [, value] of bag){\n        const serialized = stringifyCookie(value);\n        headers.append(\"set-cookie\", serialized);\n    }\n}\nfunction normalizeCookie(cookie = {\n    name: \"\",\n    value: \"\"\n}) {\n    if (typeof cookie.expires === \"number\") {\n        cookie.expires = new Date(cookie.expires);\n    }\n    if (cookie.maxAge) {\n        cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n    }\n    if (cookie.path === null || cookie.path === void 0) {\n        cookie.path = \"/\";\n    }\n    return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (0);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/@opentelemetry/api/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("var __dirname = \"/\";\n\n(()=>{\n    \"use strict\";\n    var e = {\n        491: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ContextAPI = void 0;\n            const n = r(223);\n            const a = r(172);\n            const o = r(930);\n            const i = \"context\";\n            const c = new n.NoopContextManager;\n            class ContextAPI {\n                constructor(){}\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new ContextAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalContextManager(e) {\n                    return (0, a.registerGlobal)(i, e, o.DiagAPI.instance());\n                }\n                active() {\n                    return this._getContextManager().active();\n                }\n                with(e, t, r, ...n) {\n                    return this._getContextManager().with(e, t, r, ...n);\n                }\n                bind(e, t) {\n                    return this._getContextManager().bind(e, t);\n                }\n                _getContextManager() {\n                    return (0, a.getGlobal)(i) || c;\n                }\n                disable() {\n                    this._getContextManager().disable();\n                    (0, a.unregisterGlobal)(i, o.DiagAPI.instance());\n                }\n            }\n            t.ContextAPI = ContextAPI;\n        },\n        930: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagAPI = void 0;\n            const n = r(56);\n            const a = r(912);\n            const o = r(957);\n            const i = r(172);\n            const c = \"diag\";\n            class DiagAPI {\n                constructor(){\n                    function _logProxy(e) {\n                        return function(...t) {\n                            const r = (0, i.getGlobal)(\"diag\");\n                            if (!r) return;\n                            return r[e](...t);\n                        };\n                    }\n                    const e = this;\n                    const setLogger = (t, r = {\n                        logLevel: o.DiagLogLevel.INFO\n                    })=>{\n                        var n, c, s;\n                        if (t === e) {\n                            const t = new Error(\"Cannot use diag as the logger for itself. Please use a DiagLogger implementation like ConsoleDiagLogger or a custom implementation\");\n                            e.error((n = t.stack) !== null && n !== void 0 ? n : t.message);\n                            return false;\n                        }\n                        if (typeof r === \"number\") {\n                            r = {\n                                logLevel: r\n                            };\n                        }\n                        const u = (0, i.getGlobal)(\"diag\");\n                        const l = (0, a.createLogLevelDiagLogger)((c = r.logLevel) !== null && c !== void 0 ? c : o.DiagLogLevel.INFO, t);\n                        if (u && !r.suppressOverrideMessage) {\n                            const e = (s = (new Error).stack) !== null && s !== void 0 ? s : \"<failed to generate stacktrace>\";\n                            u.warn(`Current logger will be overwritten from ${e}`);\n                            l.warn(`Current logger will overwrite one already registered from ${e}`);\n                        }\n                        return (0, i.registerGlobal)(\"diag\", l, e, true);\n                    };\n                    e.setLogger = setLogger;\n                    e.disable = ()=>{\n                        (0, i.unregisterGlobal)(c, e);\n                    };\n                    e.createComponentLogger = (e)=>new n.DiagComponentLogger(e);\n                    e.verbose = _logProxy(\"verbose\");\n                    e.debug = _logProxy(\"debug\");\n                    e.info = _logProxy(\"info\");\n                    e.warn = _logProxy(\"warn\");\n                    e.error = _logProxy(\"error\");\n                }\n                static instance() {\n                    if (!this._instance) {\n                        this._instance = new DiagAPI;\n                    }\n                    return this._instance;\n                }\n            }\n            t.DiagAPI = DiagAPI;\n        },\n        653: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.MetricsAPI = void 0;\n            const n = r(660);\n            const a = r(172);\n            const o = r(930);\n            const i = \"metrics\";\n            class MetricsAPI {\n                constructor(){}\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new MetricsAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalMeterProvider(e) {\n                    return (0, a.registerGlobal)(i, e, o.DiagAPI.instance());\n                }\n                getMeterProvider() {\n                    return (0, a.getGlobal)(i) || n.NOOP_METER_PROVIDER;\n                }\n                getMeter(e, t, r) {\n                    return this.getMeterProvider().getMeter(e, t, r);\n                }\n                disable() {\n                    (0, a.unregisterGlobal)(i, o.DiagAPI.instance());\n                }\n            }\n            t.MetricsAPI = MetricsAPI;\n        },\n        181: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.PropagationAPI = void 0;\n            const n = r(172);\n            const a = r(874);\n            const o = r(194);\n            const i = r(277);\n            const c = r(369);\n            const s = r(930);\n            const u = \"propagation\";\n            const l = new a.NoopTextMapPropagator;\n            class PropagationAPI {\n                constructor(){\n                    this.createBaggage = c.createBaggage;\n                    this.getBaggage = i.getBaggage;\n                    this.getActiveBaggage = i.getActiveBaggage;\n                    this.setBaggage = i.setBaggage;\n                    this.deleteBaggage = i.deleteBaggage;\n                }\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new PropagationAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalPropagator(e) {\n                    return (0, n.registerGlobal)(u, e, s.DiagAPI.instance());\n                }\n                inject(e, t, r = o.defaultTextMapSetter) {\n                    return this._getGlobalPropagator().inject(e, t, r);\n                }\n                extract(e, t, r = o.defaultTextMapGetter) {\n                    return this._getGlobalPropagator().extract(e, t, r);\n                }\n                fields() {\n                    return this._getGlobalPropagator().fields();\n                }\n                disable() {\n                    (0, n.unregisterGlobal)(u, s.DiagAPI.instance());\n                }\n                _getGlobalPropagator() {\n                    return (0, n.getGlobal)(u) || l;\n                }\n            }\n            t.PropagationAPI = PropagationAPI;\n        },\n        997: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceAPI = void 0;\n            const n = r(172);\n            const a = r(846);\n            const o = r(139);\n            const i = r(607);\n            const c = r(930);\n            const s = \"trace\";\n            class TraceAPI {\n                constructor(){\n                    this._proxyTracerProvider = new a.ProxyTracerProvider;\n                    this.wrapSpanContext = o.wrapSpanContext;\n                    this.isSpanContextValid = o.isSpanContextValid;\n                    this.deleteSpan = i.deleteSpan;\n                    this.getSpan = i.getSpan;\n                    this.getActiveSpan = i.getActiveSpan;\n                    this.getSpanContext = i.getSpanContext;\n                    this.setSpan = i.setSpan;\n                    this.setSpanContext = i.setSpanContext;\n                }\n                static getInstance() {\n                    if (!this._instance) {\n                        this._instance = new TraceAPI;\n                    }\n                    return this._instance;\n                }\n                setGlobalTracerProvider(e) {\n                    const t = (0, n.registerGlobal)(s, this._proxyTracerProvider, c.DiagAPI.instance());\n                    if (t) {\n                        this._proxyTracerProvider.setDelegate(e);\n                    }\n                    return t;\n                }\n                getTracerProvider() {\n                    return (0, n.getGlobal)(s) || this._proxyTracerProvider;\n                }\n                getTracer(e, t) {\n                    return this.getTracerProvider().getTracer(e, t);\n                }\n                disable() {\n                    (0, n.unregisterGlobal)(s, c.DiagAPI.instance());\n                    this._proxyTracerProvider = new a.ProxyTracerProvider;\n                }\n            }\n            t.TraceAPI = TraceAPI;\n        },\n        277: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.deleteBaggage = t.setBaggage = t.getActiveBaggage = t.getBaggage = void 0;\n            const n = r(491);\n            const a = r(780);\n            const o = (0, a.createContextKey)(\"OpenTelemetry Baggage Key\");\n            function getBaggage(e) {\n                return e.getValue(o) || undefined;\n            }\n            t.getBaggage = getBaggage;\n            function getActiveBaggage() {\n                return getBaggage(n.ContextAPI.getInstance().active());\n            }\n            t.getActiveBaggage = getActiveBaggage;\n            function setBaggage(e, t) {\n                return e.setValue(o, t);\n            }\n            t.setBaggage = setBaggage;\n            function deleteBaggage(e) {\n                return e.deleteValue(o);\n            }\n            t.deleteBaggage = deleteBaggage;\n        },\n        993: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.BaggageImpl = void 0;\n            class BaggageImpl {\n                constructor(e){\n                    this._entries = e ? new Map(e) : new Map;\n                }\n                getEntry(e) {\n                    const t = this._entries.get(e);\n                    if (!t) {\n                        return undefined;\n                    }\n                    return Object.assign({}, t);\n                }\n                getAllEntries() {\n                    return Array.from(this._entries.entries()).map(([e, t])=>[\n                            e,\n                            t\n                        ]);\n                }\n                setEntry(e, t) {\n                    const r = new BaggageImpl(this._entries);\n                    r._entries.set(e, t);\n                    return r;\n                }\n                removeEntry(e) {\n                    const t = new BaggageImpl(this._entries);\n                    t._entries.delete(e);\n                    return t;\n                }\n                removeEntries(...e) {\n                    const t = new BaggageImpl(this._entries);\n                    for (const r of e){\n                        t._entries.delete(r);\n                    }\n                    return t;\n                }\n                clear() {\n                    return new BaggageImpl;\n                }\n            }\n            t.BaggageImpl = BaggageImpl;\n        },\n        830: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.baggageEntryMetadataSymbol = void 0;\n            t.baggageEntryMetadataSymbol = Symbol(\"BaggageEntryMetadata\");\n        },\n        369: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.baggageEntryMetadataFromString = t.createBaggage = void 0;\n            const n = r(930);\n            const a = r(993);\n            const o = r(830);\n            const i = n.DiagAPI.instance();\n            function createBaggage(e = {}) {\n                return new a.BaggageImpl(new Map(Object.entries(e)));\n            }\n            t.createBaggage = createBaggage;\n            function baggageEntryMetadataFromString(e) {\n                if (typeof e !== \"string\") {\n                    i.error(`Cannot create baggage metadata from unknown type: ${typeof e}`);\n                    e = \"\";\n                }\n                return {\n                    __TYPE__: o.baggageEntryMetadataSymbol,\n                    toString () {\n                        return e;\n                    }\n                };\n            }\n            t.baggageEntryMetadataFromString = baggageEntryMetadataFromString;\n        },\n        67: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.context = void 0;\n            const n = r(491);\n            t.context = n.ContextAPI.getInstance();\n        },\n        223: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopContextManager = void 0;\n            const n = r(780);\n            class NoopContextManager {\n                active() {\n                    return n.ROOT_CONTEXT;\n                }\n                with(e, t, r, ...n) {\n                    return t.call(r, ...n);\n                }\n                bind(e, t) {\n                    return t;\n                }\n                enable() {\n                    return this;\n                }\n                disable() {\n                    return this;\n                }\n            }\n            t.NoopContextManager = NoopContextManager;\n        },\n        780: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ROOT_CONTEXT = t.createContextKey = void 0;\n            function createContextKey(e) {\n                return Symbol.for(e);\n            }\n            t.createContextKey = createContextKey;\n            class BaseContext {\n                constructor(e){\n                    const t = this;\n                    t._currentContext = e ? new Map(e) : new Map;\n                    t.getValue = (e)=>t._currentContext.get(e);\n                    t.setValue = (e, r)=>{\n                        const n = new BaseContext(t._currentContext);\n                        n._currentContext.set(e, r);\n                        return n;\n                    };\n                    t.deleteValue = (e)=>{\n                        const r = new BaseContext(t._currentContext);\n                        r._currentContext.delete(e);\n                        return r;\n                    };\n                }\n            }\n            t.ROOT_CONTEXT = new BaseContext;\n        },\n        506: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.diag = void 0;\n            const n = r(930);\n            t.diag = n.DiagAPI.instance();\n        },\n        56: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagComponentLogger = void 0;\n            const n = r(172);\n            class DiagComponentLogger {\n                constructor(e){\n                    this._namespace = e.namespace || \"DiagComponentLogger\";\n                }\n                debug(...e) {\n                    return logProxy(\"debug\", this._namespace, e);\n                }\n                error(...e) {\n                    return logProxy(\"error\", this._namespace, e);\n                }\n                info(...e) {\n                    return logProxy(\"info\", this._namespace, e);\n                }\n                warn(...e) {\n                    return logProxy(\"warn\", this._namespace, e);\n                }\n                verbose(...e) {\n                    return logProxy(\"verbose\", this._namespace, e);\n                }\n            }\n            t.DiagComponentLogger = DiagComponentLogger;\n            function logProxy(e, t, r) {\n                const a = (0, n.getGlobal)(\"diag\");\n                if (!a) {\n                    return;\n                }\n                r.unshift(t);\n                return a[e](...r);\n            }\n        },\n        972: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagConsoleLogger = void 0;\n            const r = [\n                {\n                    n: \"error\",\n                    c: \"error\"\n                },\n                {\n                    n: \"warn\",\n                    c: \"warn\"\n                },\n                {\n                    n: \"info\",\n                    c: \"info\"\n                },\n                {\n                    n: \"debug\",\n                    c: \"debug\"\n                },\n                {\n                    n: \"verbose\",\n                    c: \"trace\"\n                }\n            ];\n            class DiagConsoleLogger {\n                constructor(){\n                    function _consoleFunc(e) {\n                        return function(...t) {\n                            if (console) {\n                                let r = console[e];\n                                if (typeof r !== \"function\") {\n                                    r = console.log;\n                                }\n                                if (typeof r === \"function\") {\n                                    return r.apply(console, t);\n                                }\n                            }\n                        };\n                    }\n                    for(let e = 0; e < r.length; e++){\n                        this[r[e].n] = _consoleFunc(r[e].c);\n                    }\n                }\n            }\n            t.DiagConsoleLogger = DiagConsoleLogger;\n        },\n        912: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createLogLevelDiagLogger = void 0;\n            const n = r(957);\n            function createLogLevelDiagLogger(e, t) {\n                if (e < n.DiagLogLevel.NONE) {\n                    e = n.DiagLogLevel.NONE;\n                } else if (e > n.DiagLogLevel.ALL) {\n                    e = n.DiagLogLevel.ALL;\n                }\n                t = t || {};\n                function _filterFunc(r, n) {\n                    const a = t[r];\n                    if (typeof a === \"function\" && e >= n) {\n                        return a.bind(t);\n                    }\n                    return function() {};\n                }\n                return {\n                    error: _filterFunc(\"error\", n.DiagLogLevel.ERROR),\n                    warn: _filterFunc(\"warn\", n.DiagLogLevel.WARN),\n                    info: _filterFunc(\"info\", n.DiagLogLevel.INFO),\n                    debug: _filterFunc(\"debug\", n.DiagLogLevel.DEBUG),\n                    verbose: _filterFunc(\"verbose\", n.DiagLogLevel.VERBOSE)\n                };\n            }\n            t.createLogLevelDiagLogger = createLogLevelDiagLogger;\n        },\n        957: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.DiagLogLevel = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NONE\"] = 0] = \"NONE\";\n                e[e[\"ERROR\"] = 30] = \"ERROR\";\n                e[e[\"WARN\"] = 50] = \"WARN\";\n                e[e[\"INFO\"] = 60] = \"INFO\";\n                e[e[\"DEBUG\"] = 70] = \"DEBUG\";\n                e[e[\"VERBOSE\"] = 80] = \"VERBOSE\";\n                e[e[\"ALL\"] = 9999] = \"ALL\";\n            })(r = t.DiagLogLevel || (t.DiagLogLevel = {}));\n        },\n        172: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.unregisterGlobal = t.getGlobal = t.registerGlobal = void 0;\n            const n = r(200);\n            const a = r(521);\n            const o = r(130);\n            const i = a.VERSION.split(\".\")[0];\n            const c = Symbol.for(`opentelemetry.js.api.${i}`);\n            const s = n._globalThis;\n            function registerGlobal(e, t, r, n = false) {\n                var o;\n                const i = s[c] = (o = s[c]) !== null && o !== void 0 ? o : {\n                    version: a.VERSION\n                };\n                if (!n && i[e]) {\n                    const t = new Error(`@opentelemetry/api: Attempted duplicate registration of API: ${e}`);\n                    r.error(t.stack || t.message);\n                    return false;\n                }\n                if (i.version !== a.VERSION) {\n                    const t = new Error(`@opentelemetry/api: Registration of version v${i.version} for ${e} does not match previously registered API v${a.VERSION}`);\n                    r.error(t.stack || t.message);\n                    return false;\n                }\n                i[e] = t;\n                r.debug(`@opentelemetry/api: Registered a global for ${e} v${a.VERSION}.`);\n                return true;\n            }\n            t.registerGlobal = registerGlobal;\n            function getGlobal(e) {\n                var t, r;\n                const n = (t = s[c]) === null || t === void 0 ? void 0 : t.version;\n                if (!n || !(0, o.isCompatible)(n)) {\n                    return;\n                }\n                return (r = s[c]) === null || r === void 0 ? void 0 : r[e];\n            }\n            t.getGlobal = getGlobal;\n            function unregisterGlobal(e, t) {\n                t.debug(`@opentelemetry/api: Unregistering a global for ${e} v${a.VERSION}.`);\n                const r = s[c];\n                if (r) {\n                    delete r[e];\n                }\n            }\n            t.unregisterGlobal = unregisterGlobal;\n        },\n        130: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.isCompatible = t._makeCompatibilityCheck = void 0;\n            const n = r(521);\n            const a = /^(\\d+)\\.(\\d+)\\.(\\d+)(-(.+))?$/;\n            function _makeCompatibilityCheck(e) {\n                const t = new Set([\n                    e\n                ]);\n                const r = new Set;\n                const n = e.match(a);\n                if (!n) {\n                    return ()=>false;\n                }\n                const o = {\n                    major: +n[1],\n                    minor: +n[2],\n                    patch: +n[3],\n                    prerelease: n[4]\n                };\n                if (o.prerelease != null) {\n                    return function isExactmatch(t) {\n                        return t === e;\n                    };\n                }\n                function _reject(e) {\n                    r.add(e);\n                    return false;\n                }\n                function _accept(e) {\n                    t.add(e);\n                    return true;\n                }\n                return function isCompatible(e) {\n                    if (t.has(e)) {\n                        return true;\n                    }\n                    if (r.has(e)) {\n                        return false;\n                    }\n                    const n = e.match(a);\n                    if (!n) {\n                        return _reject(e);\n                    }\n                    const i = {\n                        major: +n[1],\n                        minor: +n[2],\n                        patch: +n[3],\n                        prerelease: n[4]\n                    };\n                    if (i.prerelease != null) {\n                        return _reject(e);\n                    }\n                    if (o.major !== i.major) {\n                        return _reject(e);\n                    }\n                    if (o.major === 0) {\n                        if (o.minor === i.minor && o.patch <= i.patch) {\n                            return _accept(e);\n                        }\n                        return _reject(e);\n                    }\n                    if (o.minor <= i.minor) {\n                        return _accept(e);\n                    }\n                    return _reject(e);\n                };\n            }\n            t._makeCompatibilityCheck = _makeCompatibilityCheck;\n            t.isCompatible = _makeCompatibilityCheck(n.VERSION);\n        },\n        886: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.metrics = void 0;\n            const n = r(653);\n            t.metrics = n.MetricsAPI.getInstance();\n        },\n        901: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ValueType = void 0;\n            var r;\n            (function(e) {\n                e[e[\"INT\"] = 0] = \"INT\";\n                e[e[\"DOUBLE\"] = 1] = \"DOUBLE\";\n            })(r = t.ValueType || (t.ValueType = {}));\n        },\n        102: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createNoopMeter = t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = t.NOOP_OBSERVABLE_GAUGE_METRIC = t.NOOP_OBSERVABLE_COUNTER_METRIC = t.NOOP_UP_DOWN_COUNTER_METRIC = t.NOOP_HISTOGRAM_METRIC = t.NOOP_COUNTER_METRIC = t.NOOP_METER = t.NoopObservableUpDownCounterMetric = t.NoopObservableGaugeMetric = t.NoopObservableCounterMetric = t.NoopObservableMetric = t.NoopHistogramMetric = t.NoopUpDownCounterMetric = t.NoopCounterMetric = t.NoopMetric = t.NoopMeter = void 0;\n            class NoopMeter {\n                constructor(){}\n                createHistogram(e, r) {\n                    return t.NOOP_HISTOGRAM_METRIC;\n                }\n                createCounter(e, r) {\n                    return t.NOOP_COUNTER_METRIC;\n                }\n                createUpDownCounter(e, r) {\n                    return t.NOOP_UP_DOWN_COUNTER_METRIC;\n                }\n                createObservableGauge(e, r) {\n                    return t.NOOP_OBSERVABLE_GAUGE_METRIC;\n                }\n                createObservableCounter(e, r) {\n                    return t.NOOP_OBSERVABLE_COUNTER_METRIC;\n                }\n                createObservableUpDownCounter(e, r) {\n                    return t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC;\n                }\n                addBatchObservableCallback(e, t) {}\n                removeBatchObservableCallback(e) {}\n            }\n            t.NoopMeter = NoopMeter;\n            class NoopMetric {\n            }\n            t.NoopMetric = NoopMetric;\n            class NoopCounterMetric extends NoopMetric {\n                add(e, t) {}\n            }\n            t.NoopCounterMetric = NoopCounterMetric;\n            class NoopUpDownCounterMetric extends NoopMetric {\n                add(e, t) {}\n            }\n            t.NoopUpDownCounterMetric = NoopUpDownCounterMetric;\n            class NoopHistogramMetric extends NoopMetric {\n                record(e, t) {}\n            }\n            t.NoopHistogramMetric = NoopHistogramMetric;\n            class NoopObservableMetric {\n                addCallback(e) {}\n                removeCallback(e) {}\n            }\n            t.NoopObservableMetric = NoopObservableMetric;\n            class NoopObservableCounterMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableCounterMetric = NoopObservableCounterMetric;\n            class NoopObservableGaugeMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableGaugeMetric = NoopObservableGaugeMetric;\n            class NoopObservableUpDownCounterMetric extends NoopObservableMetric {\n            }\n            t.NoopObservableUpDownCounterMetric = NoopObservableUpDownCounterMetric;\n            t.NOOP_METER = new NoopMeter;\n            t.NOOP_COUNTER_METRIC = new NoopCounterMetric;\n            t.NOOP_HISTOGRAM_METRIC = new NoopHistogramMetric;\n            t.NOOP_UP_DOWN_COUNTER_METRIC = new NoopUpDownCounterMetric;\n            t.NOOP_OBSERVABLE_COUNTER_METRIC = new NoopObservableCounterMetric;\n            t.NOOP_OBSERVABLE_GAUGE_METRIC = new NoopObservableGaugeMetric;\n            t.NOOP_OBSERVABLE_UP_DOWN_COUNTER_METRIC = new NoopObservableUpDownCounterMetric;\n            function createNoopMeter() {\n                return t.NOOP_METER;\n            }\n            t.createNoopMeter = createNoopMeter;\n        },\n        660: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NOOP_METER_PROVIDER = t.NoopMeterProvider = void 0;\n            const n = r(102);\n            class NoopMeterProvider {\n                getMeter(e, t, r) {\n                    return n.NOOP_METER;\n                }\n            }\n            t.NoopMeterProvider = NoopMeterProvider;\n            t.NOOP_METER_PROVIDER = new NoopMeterProvider;\n        },\n        200: function(e, t, r) {\n            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {\n                if (n === undefined) n = r;\n                Object.defineProperty(e, n, {\n                    enumerable: true,\n                    get: function() {\n                        return t[r];\n                    }\n                });\n            } : function(e, t, r, n) {\n                if (n === undefined) n = r;\n                e[n] = t[r];\n            });\n            var a = this && this.__exportStar || function(e, t) {\n                for(var r in e)if (r !== \"default\" && !Object.prototype.hasOwnProperty.call(t, r)) n(t, e, r);\n            };\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            a(r(46), t);\n        },\n        651: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t._globalThis = void 0;\n            t._globalThis = typeof globalThis === \"object\" ? globalThis : __webpack_require__.g;\n        },\n        46: function(e, t, r) {\n            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {\n                if (n === undefined) n = r;\n                Object.defineProperty(e, n, {\n                    enumerable: true,\n                    get: function() {\n                        return t[r];\n                    }\n                });\n            } : function(e, t, r, n) {\n                if (n === undefined) n = r;\n                e[n] = t[r];\n            });\n            var a = this && this.__exportStar || function(e, t) {\n                for(var r in e)if (r !== \"default\" && !Object.prototype.hasOwnProperty.call(t, r)) n(t, e, r);\n            };\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            a(r(651), t);\n        },\n        939: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.propagation = void 0;\n            const n = r(181);\n            t.propagation = n.PropagationAPI.getInstance();\n        },\n        874: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTextMapPropagator = void 0;\n            class NoopTextMapPropagator {\n                inject(e, t) {}\n                extract(e, t) {\n                    return e;\n                }\n                fields() {\n                    return [];\n                }\n            }\n            t.NoopTextMapPropagator = NoopTextMapPropagator;\n        },\n        194: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.defaultTextMapSetter = t.defaultTextMapGetter = void 0;\n            t.defaultTextMapGetter = {\n                get (e, t) {\n                    if (e == null) {\n                        return undefined;\n                    }\n                    return e[t];\n                },\n                keys (e) {\n                    if (e == null) {\n                        return [];\n                    }\n                    return Object.keys(e);\n                }\n            };\n            t.defaultTextMapSetter = {\n                set (e, t, r) {\n                    if (e == null) {\n                        return;\n                    }\n                    e[t] = r;\n                }\n            };\n        },\n        845: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.trace = void 0;\n            const n = r(997);\n            t.trace = n.TraceAPI.getInstance();\n        },\n        403: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NonRecordingSpan = void 0;\n            const n = r(476);\n            class NonRecordingSpan {\n                constructor(e = n.INVALID_SPAN_CONTEXT){\n                    this._spanContext = e;\n                }\n                spanContext() {\n                    return this._spanContext;\n                }\n                setAttribute(e, t) {\n                    return this;\n                }\n                setAttributes(e) {\n                    return this;\n                }\n                addEvent(e, t) {\n                    return this;\n                }\n                setStatus(e) {\n                    return this;\n                }\n                updateName(e) {\n                    return this;\n                }\n                end(e) {}\n                isRecording() {\n                    return false;\n                }\n                recordException(e, t) {}\n            }\n            t.NonRecordingSpan = NonRecordingSpan;\n        },\n        614: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTracer = void 0;\n            const n = r(491);\n            const a = r(607);\n            const o = r(403);\n            const i = r(139);\n            const c = n.ContextAPI.getInstance();\n            class NoopTracer {\n                startSpan(e, t, r = c.active()) {\n                    const n = Boolean(t === null || t === void 0 ? void 0 : t.root);\n                    if (n) {\n                        return new o.NonRecordingSpan;\n                    }\n                    const s = r && (0, a.getSpanContext)(r);\n                    if (isSpanContext(s) && (0, i.isSpanContextValid)(s)) {\n                        return new o.NonRecordingSpan(s);\n                    } else {\n                        return new o.NonRecordingSpan;\n                    }\n                }\n                startActiveSpan(e, t, r, n) {\n                    let o;\n                    let i;\n                    let s;\n                    if (arguments.length < 2) {\n                        return;\n                    } else if (arguments.length === 2) {\n                        s = t;\n                    } else if (arguments.length === 3) {\n                        o = t;\n                        s = r;\n                    } else {\n                        o = t;\n                        i = r;\n                        s = n;\n                    }\n                    const u = i !== null && i !== void 0 ? i : c.active();\n                    const l = this.startSpan(e, o, u);\n                    const g = (0, a.setSpan)(u, l);\n                    return c.with(g, s, undefined, l);\n                }\n            }\n            t.NoopTracer = NoopTracer;\n            function isSpanContext(e) {\n                return typeof e === \"object\" && typeof e[\"spanId\"] === \"string\" && typeof e[\"traceId\"] === \"string\" && typeof e[\"traceFlags\"] === \"number\";\n            }\n        },\n        124: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.NoopTracerProvider = void 0;\n            const n = r(614);\n            class NoopTracerProvider {\n                getTracer(e, t, r) {\n                    return new n.NoopTracer;\n                }\n            }\n            t.NoopTracerProvider = NoopTracerProvider;\n        },\n        125: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ProxyTracer = void 0;\n            const n = r(614);\n            const a = new n.NoopTracer;\n            class ProxyTracer {\n                constructor(e, t, r, n){\n                    this._provider = e;\n                    this.name = t;\n                    this.version = r;\n                    this.options = n;\n                }\n                startSpan(e, t, r) {\n                    return this._getTracer().startSpan(e, t, r);\n                }\n                startActiveSpan(e, t, r, n) {\n                    const a = this._getTracer();\n                    return Reflect.apply(a.startActiveSpan, a, arguments);\n                }\n                _getTracer() {\n                    if (this._delegate) {\n                        return this._delegate;\n                    }\n                    const e = this._provider.getDelegateTracer(this.name, this.version, this.options);\n                    if (!e) {\n                        return a;\n                    }\n                    this._delegate = e;\n                    return this._delegate;\n                }\n            }\n            t.ProxyTracer = ProxyTracer;\n        },\n        846: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.ProxyTracerProvider = void 0;\n            const n = r(125);\n            const a = r(124);\n            const o = new a.NoopTracerProvider;\n            class ProxyTracerProvider {\n                getTracer(e, t, r) {\n                    var a;\n                    return (a = this.getDelegateTracer(e, t, r)) !== null && a !== void 0 ? a : new n.ProxyTracer(this, e, t, r);\n                }\n                getDelegate() {\n                    var e;\n                    return (e = this._delegate) !== null && e !== void 0 ? e : o;\n                }\n                setDelegate(e) {\n                    this._delegate = e;\n                }\n                getDelegateTracer(e, t, r) {\n                    var n;\n                    return (n = this._delegate) === null || n === void 0 ? void 0 : n.getTracer(e, t, r);\n                }\n            }\n            t.ProxyTracerProvider = ProxyTracerProvider;\n        },\n        996: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SamplingDecision = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NOT_RECORD\"] = 0] = \"NOT_RECORD\";\n                e[e[\"RECORD\"] = 1] = \"RECORD\";\n                e[e[\"RECORD_AND_SAMPLED\"] = 2] = \"RECORD_AND_SAMPLED\";\n            })(r = t.SamplingDecision || (t.SamplingDecision = {}));\n        },\n        607: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.getSpanContext = t.setSpanContext = t.deleteSpan = t.setSpan = t.getActiveSpan = t.getSpan = void 0;\n            const n = r(780);\n            const a = r(403);\n            const o = r(491);\n            const i = (0, n.createContextKey)(\"OpenTelemetry Context Key SPAN\");\n            function getSpan(e) {\n                return e.getValue(i) || undefined;\n            }\n            t.getSpan = getSpan;\n            function getActiveSpan() {\n                return getSpan(o.ContextAPI.getInstance().active());\n            }\n            t.getActiveSpan = getActiveSpan;\n            function setSpan(e, t) {\n                return e.setValue(i, t);\n            }\n            t.setSpan = setSpan;\n            function deleteSpan(e) {\n                return e.deleteValue(i);\n            }\n            t.deleteSpan = deleteSpan;\n            function setSpanContext(e, t) {\n                return setSpan(e, new a.NonRecordingSpan(t));\n            }\n            t.setSpanContext = setSpanContext;\n            function getSpanContext(e) {\n                var t;\n                return (t = getSpan(e)) === null || t === void 0 ? void 0 : t.spanContext();\n            }\n            t.getSpanContext = getSpanContext;\n        },\n        325: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceStateImpl = void 0;\n            const n = r(564);\n            const a = 32;\n            const o = 512;\n            const i = \",\";\n            const c = \"=\";\n            class TraceStateImpl {\n                constructor(e){\n                    this._internalState = new Map;\n                    if (e) this._parse(e);\n                }\n                set(e, t) {\n                    const r = this._clone();\n                    if (r._internalState.has(e)) {\n                        r._internalState.delete(e);\n                    }\n                    r._internalState.set(e, t);\n                    return r;\n                }\n                unset(e) {\n                    const t = this._clone();\n                    t._internalState.delete(e);\n                    return t;\n                }\n                get(e) {\n                    return this._internalState.get(e);\n                }\n                serialize() {\n                    return this._keys().reduce((e, t)=>{\n                        e.push(t + c + this.get(t));\n                        return e;\n                    }, []).join(i);\n                }\n                _parse(e) {\n                    if (e.length > o) return;\n                    this._internalState = e.split(i).reverse().reduce((e, t)=>{\n                        const r = t.trim();\n                        const a = r.indexOf(c);\n                        if (a !== -1) {\n                            const o = r.slice(0, a);\n                            const i = r.slice(a + 1, t.length);\n                            if ((0, n.validateKey)(o) && (0, n.validateValue)(i)) {\n                                e.set(o, i);\n                            } else {}\n                        }\n                        return e;\n                    }, new Map);\n                    if (this._internalState.size > a) {\n                        this._internalState = new Map(Array.from(this._internalState.entries()).reverse().slice(0, a));\n                    }\n                }\n                _keys() {\n                    return Array.from(this._internalState.keys()).reverse();\n                }\n                _clone() {\n                    const e = new TraceStateImpl;\n                    e._internalState = new Map(this._internalState);\n                    return e;\n                }\n            }\n            t.TraceStateImpl = TraceStateImpl;\n        },\n        564: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.validateValue = t.validateKey = void 0;\n            const r = \"[_0-9a-z-*/]\";\n            const n = `[a-z]${r}{0,255}`;\n            const a = `[a-z0-9]${r}{0,240}@[a-z]${r}{0,13}`;\n            const o = new RegExp(`^(?:${n}|${a})$`);\n            const i = /^[ -~]{0,255}[!-~]$/;\n            const c = /,|=/;\n            function validateKey(e) {\n                return o.test(e);\n            }\n            t.validateKey = validateKey;\n            function validateValue(e) {\n                return i.test(e) && !c.test(e);\n            }\n            t.validateValue = validateValue;\n        },\n        98: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.createTraceState = void 0;\n            const n = r(325);\n            function createTraceState(e) {\n                return new n.TraceStateImpl(e);\n            }\n            t.createTraceState = createTraceState;\n        },\n        476: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.INVALID_SPAN_CONTEXT = t.INVALID_TRACEID = t.INVALID_SPANID = void 0;\n            const n = r(475);\n            t.INVALID_SPANID = \"0000000000000000\";\n            t.INVALID_TRACEID = \"00000000000000000000000000000000\";\n            t.INVALID_SPAN_CONTEXT = {\n                traceId: t.INVALID_TRACEID,\n                spanId: t.INVALID_SPANID,\n                traceFlags: n.TraceFlags.NONE\n            };\n        },\n        357: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SpanKind = void 0;\n            var r;\n            (function(e) {\n                e[e[\"INTERNAL\"] = 0] = \"INTERNAL\";\n                e[e[\"SERVER\"] = 1] = \"SERVER\";\n                e[e[\"CLIENT\"] = 2] = \"CLIENT\";\n                e[e[\"PRODUCER\"] = 3] = \"PRODUCER\";\n                e[e[\"CONSUMER\"] = 4] = \"CONSUMER\";\n            })(r = t.SpanKind || (t.SpanKind = {}));\n        },\n        139: (e, t, r)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.wrapSpanContext = t.isSpanContextValid = t.isValidSpanId = t.isValidTraceId = void 0;\n            const n = r(476);\n            const a = r(403);\n            const o = /^([0-9a-f]{32})$/i;\n            const i = /^[0-9a-f]{16}$/i;\n            function isValidTraceId(e) {\n                return o.test(e) && e !== n.INVALID_TRACEID;\n            }\n            t.isValidTraceId = isValidTraceId;\n            function isValidSpanId(e) {\n                return i.test(e) && e !== n.INVALID_SPANID;\n            }\n            t.isValidSpanId = isValidSpanId;\n            function isSpanContextValid(e) {\n                return isValidTraceId(e.traceId) && isValidSpanId(e.spanId);\n            }\n            t.isSpanContextValid = isSpanContextValid;\n            function wrapSpanContext(e) {\n                return new a.NonRecordingSpan(e);\n            }\n            t.wrapSpanContext = wrapSpanContext;\n        },\n        847: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.SpanStatusCode = void 0;\n            var r;\n            (function(e) {\n                e[e[\"UNSET\"] = 0] = \"UNSET\";\n                e[e[\"OK\"] = 1] = \"OK\";\n                e[e[\"ERROR\"] = 2] = \"ERROR\";\n            })(r = t.SpanStatusCode || (t.SpanStatusCode = {}));\n        },\n        475: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.TraceFlags = void 0;\n            var r;\n            (function(e) {\n                e[e[\"NONE\"] = 0] = \"NONE\";\n                e[e[\"SAMPLED\"] = 1] = \"SAMPLED\";\n            })(r = t.TraceFlags || (t.TraceFlags = {}));\n        },\n        521: (e, t)=>{\n            Object.defineProperty(t, \"__esModule\", {\n                value: true\n            });\n            t.VERSION = void 0;\n            t.VERSION = \"1.6.0\";\n        }\n    };\n    var t = {};\n    function __nccwpck_require__(r) {\n        var n = t[r];\n        if (n !== undefined) {\n            return n.exports;\n        }\n        var a = t[r] = {\n            exports: {}\n        };\n        var o = true;\n        try {\n            e[r].call(a.exports, a, a.exports, __nccwpck_require__);\n            o = false;\n        } finally{\n            if (o) delete t[r];\n        }\n        return a.exports;\n    }\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var r = {};\n    (()=>{\n        var e = r;\n        Object.defineProperty(e, \"__esModule\", {\n            value: true\n        });\n        e.trace = e.propagation = e.metrics = e.diag = e.context = e.INVALID_SPAN_CONTEXT = e.INVALID_TRACEID = e.INVALID_SPANID = e.isValidSpanId = e.isValidTraceId = e.isSpanContextValid = e.createTraceState = e.TraceFlags = e.SpanStatusCode = e.SpanKind = e.SamplingDecision = e.ProxyTracerProvider = e.ProxyTracer = e.defaultTextMapSetter = e.defaultTextMapGetter = e.ValueType = e.createNoopMeter = e.DiagLogLevel = e.DiagConsoleLogger = e.ROOT_CONTEXT = e.createContextKey = e.baggageEntryMetadataFromString = void 0;\n        var t = __nccwpck_require__(369);\n        Object.defineProperty(e, \"baggageEntryMetadataFromString\", {\n            enumerable: true,\n            get: function() {\n                return t.baggageEntryMetadataFromString;\n            }\n        });\n        var n = __nccwpck_require__(780);\n        Object.defineProperty(e, \"createContextKey\", {\n            enumerable: true,\n            get: function() {\n                return n.createContextKey;\n            }\n        });\n        Object.defineProperty(e, \"ROOT_CONTEXT\", {\n            enumerable: true,\n            get: function() {\n                return n.ROOT_CONTEXT;\n            }\n        });\n        var a = __nccwpck_require__(972);\n        Object.defineProperty(e, \"DiagConsoleLogger\", {\n            enumerable: true,\n            get: function() {\n                return a.DiagConsoleLogger;\n            }\n        });\n        var o = __nccwpck_require__(957);\n        Object.defineProperty(e, \"DiagLogLevel\", {\n            enumerable: true,\n            get: function() {\n                return o.DiagLogLevel;\n            }\n        });\n        var i = __nccwpck_require__(102);\n        Object.defineProperty(e, \"createNoopMeter\", {\n            enumerable: true,\n            get: function() {\n                return i.createNoopMeter;\n            }\n        });\n        var c = __nccwpck_require__(901);\n        Object.defineProperty(e, \"ValueType\", {\n            enumerable: true,\n            get: function() {\n                return c.ValueType;\n            }\n        });\n        var s = __nccwpck_require__(194);\n        Object.defineProperty(e, \"defaultTextMapGetter\", {\n            enumerable: true,\n            get: function() {\n                return s.defaultTextMapGetter;\n            }\n        });\n        Object.defineProperty(e, \"defaultTextMapSetter\", {\n            enumerable: true,\n            get: function() {\n                return s.defaultTextMapSetter;\n            }\n        });\n        var u = __nccwpck_require__(125);\n        Object.defineProperty(e, \"ProxyTracer\", {\n            enumerable: true,\n            get: function() {\n                return u.ProxyTracer;\n            }\n        });\n        var l = __nccwpck_require__(846);\n        Object.defineProperty(e, \"ProxyTracerProvider\", {\n            enumerable: true,\n            get: function() {\n                return l.ProxyTracerProvider;\n            }\n        });\n        var g = __nccwpck_require__(996);\n        Object.defineProperty(e, \"SamplingDecision\", {\n            enumerable: true,\n            get: function() {\n                return g.SamplingDecision;\n            }\n        });\n        var p = __nccwpck_require__(357);\n        Object.defineProperty(e, \"SpanKind\", {\n            enumerable: true,\n            get: function() {\n                return p.SpanKind;\n            }\n        });\n        var d = __nccwpck_require__(847);\n        Object.defineProperty(e, \"SpanStatusCode\", {\n            enumerable: true,\n            get: function() {\n                return d.SpanStatusCode;\n            }\n        });\n        var _ = __nccwpck_require__(475);\n        Object.defineProperty(e, \"TraceFlags\", {\n            enumerable: true,\n            get: function() {\n                return _.TraceFlags;\n            }\n        });\n        var f = __nccwpck_require__(98);\n        Object.defineProperty(e, \"createTraceState\", {\n            enumerable: true,\n            get: function() {\n                return f.createTraceState;\n            }\n        });\n        var b = __nccwpck_require__(139);\n        Object.defineProperty(e, \"isSpanContextValid\", {\n            enumerable: true,\n            get: function() {\n                return b.isSpanContextValid;\n            }\n        });\n        Object.defineProperty(e, \"isValidTraceId\", {\n            enumerable: true,\n            get: function() {\n                return b.isValidTraceId;\n            }\n        });\n        Object.defineProperty(e, \"isValidSpanId\", {\n            enumerable: true,\n            get: function() {\n                return b.isValidSpanId;\n            }\n        });\n        var v = __nccwpck_require__(476);\n        Object.defineProperty(e, \"INVALID_SPANID\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_SPANID;\n            }\n        });\n        Object.defineProperty(e, \"INVALID_TRACEID\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_TRACEID;\n            }\n        });\n        Object.defineProperty(e, \"INVALID_SPAN_CONTEXT\", {\n            enumerable: true,\n            get: function() {\n                return v.INVALID_SPAN_CONTEXT;\n            }\n        });\n        const O = __nccwpck_require__(67);\n        Object.defineProperty(e, \"context\", {\n            enumerable: true,\n            get: function() {\n                return O.context;\n            }\n        });\n        const P = __nccwpck_require__(506);\n        Object.defineProperty(e, \"diag\", {\n            enumerable: true,\n            get: function() {\n                return P.diag;\n            }\n        });\n        const N = __nccwpck_require__(886);\n        Object.defineProperty(e, \"metrics\", {\n            enumerable: true,\n            get: function() {\n                return N.metrics;\n            }\n        });\n        const S = __nccwpck_require__(939);\n        Object.defineProperty(e, \"propagation\", {\n            enumerable: true,\n            get: function() {\n                return S.propagation;\n            }\n        });\n        const C = __nccwpck_require__(845);\n        Object.defineProperty(e, \"trace\", {\n            enumerable: true,\n            get: function() {\n                return C.trace;\n            }\n        });\n        e[\"default\"] = {\n            context: O.context,\n            diag: P.diag,\n            metrics: N.metrics,\n            propagation: S.propagation,\n            trace: C.trace\n        };\n    })();\n    module.exports = r;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/compiled/cookie/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/cookie/index.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
eval("var __dirname = \"/\";\n\n(()=>{\n    \"use strict\";\n    if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n    var e = {};\n    (()=>{\n        var r = e;\n        /*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */ r.parse = parse;\n        r.serialize = serialize;\n        var i = decodeURIComponent;\n        var t = encodeURIComponent;\n        var a = /; */;\n        var n = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n        function parse(e, r) {\n            if (typeof e !== \"string\") {\n                throw new TypeError(\"argument str must be a string\");\n            }\n            var t = {};\n            var n = r || {};\n            var o = e.split(a);\n            var s = n.decode || i;\n            for(var p = 0; p < o.length; p++){\n                var f = o[p];\n                var u = f.indexOf(\"=\");\n                if (u < 0) {\n                    continue;\n                }\n                var v = f.substr(0, u).trim();\n                var c = f.substr(++u, f.length).trim();\n                if ('\"' == c[0]) {\n                    c = c.slice(1, -1);\n                }\n                if (undefined == t[v]) {\n                    t[v] = tryDecode(c, s);\n                }\n            }\n            return t;\n        }\n        function serialize(e, r, i) {\n            var a = i || {};\n            var o = a.encode || t;\n            if (typeof o !== \"function\") {\n                throw new TypeError(\"option encode is invalid\");\n            }\n            if (!n.test(e)) {\n                throw new TypeError(\"argument name is invalid\");\n            }\n            var s = o(r);\n            if (s && !n.test(s)) {\n                throw new TypeError(\"argument val is invalid\");\n            }\n            var p = e + \"=\" + s;\n            if (null != a.maxAge) {\n                var f = a.maxAge - 0;\n                if (isNaN(f) || !isFinite(f)) {\n                    throw new TypeError(\"option maxAge is invalid\");\n                }\n                p += \"; Max-Age=\" + Math.floor(f);\n            }\n            if (a.domain) {\n                if (!n.test(a.domain)) {\n                    throw new TypeError(\"option domain is invalid\");\n                }\n                p += \"; Domain=\" + a.domain;\n            }\n            if (a.path) {\n                if (!n.test(a.path)) {\n                    throw new TypeError(\"option path is invalid\");\n                }\n                p += \"; Path=\" + a.path;\n            }\n            if (a.expires) {\n                if (typeof a.expires.toUTCString !== \"function\") {\n                    throw new TypeError(\"option expires is invalid\");\n                }\n                p += \"; Expires=\" + a.expires.toUTCString();\n            }\n            if (a.httpOnly) {\n                p += \"; HttpOnly\";\n            }\n            if (a.secure) {\n                p += \"; Secure\";\n            }\n            if (a.sameSite) {\n                var u = typeof a.sameSite === \"string\" ? a.sameSite.toLowerCase() : a.sameSite;\n                switch(u){\n                    case true:\n                        p += \"; SameSite=Strict\";\n                        break;\n                    case \"lax\":\n                        p += \"; SameSite=Lax\";\n                        break;\n                    case \"strict\":\n                        p += \"; SameSite=Strict\";\n                        break;\n                    case \"none\":\n                        p += \"; SameSite=None\";\n                        break;\n                    default:\n                        throw new TypeError(\"option sameSite is invalid\");\n                }\n            }\n            return p;\n        }\n        function tryDecode(e, r) {\n            try {\n                return r(e);\n            } catch (r) {\n                return e;\n            }\n        }\n    })();\n    module.exports = e;\n})();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9jb29raWUvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7QUFBQztJQUFLO0lBQWEsSUFBRyxPQUFPQSx3QkFBc0IsYUFBWUEsb0JBQW9CQyxFQUFFLEdBQUNDLFNBQVNBLEdBQUM7SUFBSSxJQUFJQyxJQUFFLENBQUM7SUFBRztRQUFLLElBQUlDLElBQUVEO1FBQ3pIOzs7OztDQUtDLEdBQUVDLEVBQUVDLEtBQUssR0FBQ0E7UUFBTUQsRUFBRUUsU0FBUyxHQUFDQTtRQUFVLElBQUlDLElBQUVDO1FBQW1CLElBQUlDLElBQUVDO1FBQW1CLElBQUlDLElBQUU7UUFBTSxJQUFJQyxJQUFFO1FBQXdDLFNBQVNQLE1BQU1GLENBQUMsRUFBQ0MsQ0FBQztZQUFFLElBQUcsT0FBT0QsTUFBSSxVQUFTO2dCQUFDLE1BQU0sSUFBSVUsVUFBVTtZQUFnQztZQUFDLElBQUlKLElBQUUsQ0FBQztZQUFFLElBQUlHLElBQUVSLEtBQUcsQ0FBQztZQUFFLElBQUlVLElBQUVYLEVBQUVZLEtBQUssQ0FBQ0o7WUFBRyxJQUFJSyxJQUFFSixFQUFFSyxNQUFNLElBQUVWO1lBQUUsSUFBSSxJQUFJVyxJQUFFLEdBQUVBLElBQUVKLEVBQUVLLE1BQU0sRUFBQ0QsSUFBSTtnQkFBQyxJQUFJRSxJQUFFTixDQUFDLENBQUNJLEVBQUU7Z0JBQUMsSUFBSUcsSUFBRUQsRUFBRUUsT0FBTyxDQUFDO2dCQUFLLElBQUdELElBQUUsR0FBRTtvQkFBQztnQkFBUTtnQkFBQyxJQUFJRSxJQUFFSCxFQUFFSSxNQUFNLENBQUMsR0FBRUgsR0FBR0ksSUFBSTtnQkFBRyxJQUFJQyxJQUFFTixFQUFFSSxNQUFNLENBQUMsRUFBRUgsR0FBRUQsRUFBRUQsTUFBTSxFQUFFTSxJQUFJO2dCQUFHLElBQUcsT0FBS0MsQ0FBQyxDQUFDLEVBQUUsRUFBQztvQkFBQ0EsSUFBRUEsRUFBRUMsS0FBSyxDQUFDLEdBQUUsQ0FBQztnQkFBRTtnQkFBQyxJQUFHQyxhQUFXbkIsQ0FBQyxDQUFDYyxFQUFFLEVBQUM7b0JBQUNkLENBQUMsQ0FBQ2MsRUFBRSxHQUFDTSxVQUFVSCxHQUFFVjtnQkFBRTtZQUFDO1lBQUMsT0FBT1A7UUFBQztRQUFDLFNBQVNILFVBQVVILENBQUMsRUFBQ0MsQ0FBQyxFQUFDRyxDQUFDO1lBQUUsSUFBSUksSUFBRUosS0FBRyxDQUFDO1lBQUUsSUFBSU8sSUFBRUgsRUFBRW1CLE1BQU0sSUFBRXJCO1lBQUUsSUFBRyxPQUFPSyxNQUFJLFlBQVc7Z0JBQUMsTUFBTSxJQUFJRCxVQUFVO1lBQTJCO1lBQUMsSUFBRyxDQUFDRCxFQUFFbUIsSUFBSSxDQUFDNUIsSUFBRztnQkFBQyxNQUFNLElBQUlVLFVBQVU7WUFBMkI7WUFBQyxJQUFJRyxJQUFFRixFQUFFVjtZQUFHLElBQUdZLEtBQUcsQ0FBQ0osRUFBRW1CLElBQUksQ0FBQ2YsSUFBRztnQkFBQyxNQUFNLElBQUlILFVBQVU7WUFBMEI7WUFBQyxJQUFJSyxJQUFFZixJQUFFLE1BQUlhO1lBQUUsSUFBRyxRQUFNTCxFQUFFcUIsTUFBTSxFQUFDO2dCQUFDLElBQUlaLElBQUVULEVBQUVxQixNQUFNLEdBQUM7Z0JBQUUsSUFBR0MsTUFBTWIsTUFBSSxDQUFDYyxTQUFTZCxJQUFHO29CQUFDLE1BQU0sSUFBSVAsVUFBVTtnQkFBMkI7Z0JBQUNLLEtBQUcsZUFBYWlCLEtBQUtDLEtBQUssQ0FBQ2hCO1lBQUU7WUFBQyxJQUFHVCxFQUFFMEIsTUFBTSxFQUFDO2dCQUFDLElBQUcsQ0FBQ3pCLEVBQUVtQixJQUFJLENBQUNwQixFQUFFMEIsTUFBTSxHQUFFO29CQUFDLE1BQU0sSUFBSXhCLFVBQVU7Z0JBQTJCO2dCQUFDSyxLQUFHLGNBQVlQLEVBQUUwQixNQUFNO1lBQUE7WUFBQyxJQUFHMUIsRUFBRTJCLElBQUksRUFBQztnQkFBQyxJQUFHLENBQUMxQixFQUFFbUIsSUFBSSxDQUFDcEIsRUFBRTJCLElBQUksR0FBRTtvQkFBQyxNQUFNLElBQUl6QixVQUFVO2dCQUF5QjtnQkFBQ0ssS0FBRyxZQUFVUCxFQUFFMkIsSUFBSTtZQUFBO1lBQUMsSUFBRzNCLEVBQUU0QixPQUFPLEVBQUM7Z0JBQUMsSUFBRyxPQUFPNUIsRUFBRTRCLE9BQU8sQ0FBQ0MsV0FBVyxLQUFHLFlBQVc7b0JBQUMsTUFBTSxJQUFJM0IsVUFBVTtnQkFBNEI7Z0JBQUNLLEtBQUcsZUFBYVAsRUFBRTRCLE9BQU8sQ0FBQ0MsV0FBVztZQUFFO1lBQUMsSUFBRzdCLEVBQUU4QixRQUFRLEVBQUM7Z0JBQUN2QixLQUFHO1lBQVk7WUFBQyxJQUFHUCxFQUFFK0IsTUFBTSxFQUFDO2dCQUFDeEIsS0FBRztZQUFVO1lBQUMsSUFBR1AsRUFBRWdDLFFBQVEsRUFBQztnQkFBQyxJQUFJdEIsSUFBRSxPQUFPVixFQUFFZ0MsUUFBUSxLQUFHLFdBQVNoQyxFQUFFZ0MsUUFBUSxDQUFDQyxXQUFXLEtBQUdqQyxFQUFFZ0MsUUFBUTtnQkFBQyxPQUFPdEI7b0JBQUcsS0FBSzt3QkFBS0gsS0FBRzt3QkFBb0I7b0JBQU0sS0FBSTt3QkFBTUEsS0FBRzt3QkFBaUI7b0JBQU0sS0FBSTt3QkFBU0EsS0FBRzt3QkFBb0I7b0JBQU0sS0FBSTt3QkFBT0EsS0FBRzt3QkFBa0I7b0JBQU07d0JBQVEsTUFBTSxJQUFJTCxVQUFVO2dCQUE2QjtZQUFDO1lBQUMsT0FBT0s7UUFBQztRQUFDLFNBQVNXLFVBQVUxQixDQUFDLEVBQUNDLENBQUM7WUFBRSxJQUFHO2dCQUFDLE9BQU9BLEVBQUVEO1lBQUUsRUFBQyxPQUFNQyxHQUFFO2dCQUFDLE9BQU9EO1lBQUM7UUFBQztJQUFDO0lBQUswQyxPQUFPQyxPQUFPLEdBQUMzQztBQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY29va2llL2luZGV4LmpzP2IyNWUiXSwic291cmNlc0NvbnRlbnQiOlsiKCgpPT57XCJ1c2Ugc3RyaWN0XCI7aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciBlPXt9OygoKT0+e3ZhciByPWU7XG4vKiFcbiAqIGNvb2tpZVxuICogQ29weXJpZ2h0KGMpIDIwMTItMjAxNCBSb21hbiBTaHR5bG1hblxuICogQ29weXJpZ2h0KGMpIDIwMTUgRG91Z2xhcyBDaHJpc3RvcGhlciBXaWxzb25cbiAqIE1JVCBMaWNlbnNlZFxuICovci5wYXJzZT1wYXJzZTtyLnNlcmlhbGl6ZT1zZXJpYWxpemU7dmFyIGk9ZGVjb2RlVVJJQ29tcG9uZW50O3ZhciB0PWVuY29kZVVSSUNvbXBvbmVudDt2YXIgYT0vOyAqLzt2YXIgbj0vXltcXHUwMDA5XFx1MDAyMC1cXHUwMDdlXFx1MDA4MC1cXHUwMGZmXSskLztmdW5jdGlvbiBwYXJzZShlLHIpe2lmKHR5cGVvZiBlIT09XCJzdHJpbmdcIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IHN0ciBtdXN0IGJlIGEgc3RyaW5nXCIpfXZhciB0PXt9O3ZhciBuPXJ8fHt9O3ZhciBvPWUuc3BsaXQoYSk7dmFyIHM9bi5kZWNvZGV8fGk7Zm9yKHZhciBwPTA7cDxvLmxlbmd0aDtwKyspe3ZhciBmPW9bcF07dmFyIHU9Zi5pbmRleE9mKFwiPVwiKTtpZih1PDApe2NvbnRpbnVlfXZhciB2PWYuc3Vic3RyKDAsdSkudHJpbSgpO3ZhciBjPWYuc3Vic3RyKCsrdSxmLmxlbmd0aCkudHJpbSgpO2lmKCdcIic9PWNbMF0pe2M9Yy5zbGljZSgxLC0xKX1pZih1bmRlZmluZWQ9PXRbdl0pe3Rbdl09dHJ5RGVjb2RlKGMscyl9fXJldHVybiB0fWZ1bmN0aW9uIHNlcmlhbGl6ZShlLHIsaSl7dmFyIGE9aXx8e307dmFyIG89YS5lbmNvZGV8fHQ7aWYodHlwZW9mIG8hPT1cImZ1bmN0aW9uXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvcHRpb24gZW5jb2RlIGlzIGludmFsaWRcIil9aWYoIW4udGVzdChlKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IG5hbWUgaXMgaW52YWxpZFwiKX12YXIgcz1vKHIpO2lmKHMmJiFuLnRlc3Qocykpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJhcmd1bWVudCB2YWwgaXMgaW52YWxpZFwiKX12YXIgcD1lK1wiPVwiK3M7aWYobnVsbCE9YS5tYXhBZ2Upe3ZhciBmPWEubWF4QWdlLTA7aWYoaXNOYU4oZil8fCFpc0Zpbml0ZShmKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBtYXhBZ2UgaXMgaW52YWxpZFwiKX1wKz1cIjsgTWF4LUFnZT1cIitNYXRoLmZsb29yKGYpfWlmKGEuZG9tYWluKXtpZighbi50ZXN0KGEuZG9tYWluKSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBkb21haW4gaXMgaW52YWxpZFwiKX1wKz1cIjsgRG9tYWluPVwiK2EuZG9tYWlufWlmKGEucGF0aCl7aWYoIW4udGVzdChhLnBhdGgpKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIHBhdGggaXMgaW52YWxpZFwiKX1wKz1cIjsgUGF0aD1cIithLnBhdGh9aWYoYS5leHBpcmVzKXtpZih0eXBlb2YgYS5leHBpcmVzLnRvVVRDU3RyaW5nIT09XCJmdW5jdGlvblwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwib3B0aW9uIGV4cGlyZXMgaXMgaW52YWxpZFwiKX1wKz1cIjsgRXhwaXJlcz1cIithLmV4cGlyZXMudG9VVENTdHJpbmcoKX1pZihhLmh0dHBPbmx5KXtwKz1cIjsgSHR0cE9ubHlcIn1pZihhLnNlY3VyZSl7cCs9XCI7IFNlY3VyZVwifWlmKGEuc2FtZVNpdGUpe3ZhciB1PXR5cGVvZiBhLnNhbWVTaXRlPT09XCJzdHJpbmdcIj9hLnNhbWVTaXRlLnRvTG93ZXJDYXNlKCk6YS5zYW1lU2l0ZTtzd2l0Y2godSl7Y2FzZSB0cnVlOnArPVwiOyBTYW1lU2l0ZT1TdHJpY3RcIjticmVhaztjYXNlXCJsYXhcIjpwKz1cIjsgU2FtZVNpdGU9TGF4XCI7YnJlYWs7Y2FzZVwic3RyaWN0XCI6cCs9XCI7IFNhbWVTaXRlPVN0cmljdFwiO2JyZWFrO2Nhc2VcIm5vbmVcIjpwKz1cIjsgU2FtZVNpdGU9Tm9uZVwiO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9wdGlvbiBzYW1lU2l0ZSBpcyBpbnZhbGlkXCIpfX1yZXR1cm4gcH1mdW5jdGlvbiB0cnlEZWNvZGUoZSxyKXt0cnl7cmV0dXJuIHIoZSl9Y2F0Y2gocil7cmV0dXJuIGV9fX0pKCk7bW9kdWxlLmV4cG9ydHM9ZX0pKCk7Il0sIm5hbWVzIjpbIl9fbmNjd3Bja19yZXF1aXJlX18iLCJhYiIsIl9fZGlybmFtZSIsImUiLCJyIiwicGFyc2UiLCJzZXJpYWxpemUiLCJpIiwiZGVjb2RlVVJJQ29tcG9uZW50IiwidCIsImVuY29kZVVSSUNvbXBvbmVudCIsImEiLCJuIiwiVHlwZUVycm9yIiwibyIsInNwbGl0IiwicyIsImRlY29kZSIsInAiLCJsZW5ndGgiLCJmIiwidSIsImluZGV4T2YiLCJ2Iiwic3Vic3RyIiwidHJpbSIsImMiLCJzbGljZSIsInVuZGVmaW5lZCIsInRyeURlY29kZSIsImVuY29kZSIsInRlc3QiLCJtYXhBZ2UiLCJpc05hTiIsImlzRmluaXRlIiwiTWF0aCIsImZsb29yIiwiZG9tYWluIiwicGF0aCIsImV4cGlyZXMiLCJ0b1VUQ1N0cmluZyIsImh0dHBPbmx5Iiwic2VjdXJlIiwic2FtZVNpdGUiLCJ0b0xvd2VyQ2FzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/compiled/cookie/index.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/action-async-storage.external.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   actionAsyncStorage: () => (/* binding */ actionAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst actionAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=action-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9hY3Rpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRTtBQUN6RCxNQUFNQyxxQkFBcUJELDZFQUF1QkEsR0FBRyxDQUU1RCx5REFBeUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYWN0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanM/OGRlMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSB9IGZyb20gXCIuL2FzeW5jLWxvY2FsLXN0b3JhZ2VcIjtcbmV4cG9ydCBjb25zdCBhY3Rpb25Bc3luY1N0b3JhZ2UgPSBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hY3Rpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcy5tYXAiXSwibmFtZXMiOlsiY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UiLCJhY3Rpb25Bc3luY1N0b3JhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/app-router-headers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ACTION: () => (/* binding */ ACTION),\n/* harmony export */   FLIGHT_PARAMETERS: () => (/* binding */ FLIGHT_PARAMETERS),\n/* harmony export */   NEXT_DID_POSTPONE_HEADER: () => (/* binding */ NEXT_DID_POSTPONE_HEADER),\n/* harmony export */   NEXT_ROUTER_PREFETCH_HEADER: () => (/* binding */ NEXT_ROUTER_PREFETCH_HEADER),\n/* harmony export */   NEXT_ROUTER_STATE_TREE: () => (/* binding */ NEXT_ROUTER_STATE_TREE),\n/* harmony export */   NEXT_RSC_UNION_QUERY: () => (/* binding */ NEXT_RSC_UNION_QUERY),\n/* harmony export */   NEXT_URL: () => (/* binding */ NEXT_URL),\n/* harmony export */   RSC_CONTENT_TYPE_HEADER: () => (/* binding */ RSC_CONTENT_TYPE_HEADER),\n/* harmony export */   RSC_HEADER: () => (/* binding */ RSC_HEADER),\n/* harmony export */   RSC_VARY_HEADER: () => (/* binding */ RSC_VARY_HEADER)\n/* harmony export */ });\nconst RSC_HEADER = \"RSC\";\nconst ACTION = \"Next-Action\";\nconst NEXT_ROUTER_STATE_TREE = \"Next-Router-State-Tree\";\nconst NEXT_ROUTER_PREFETCH_HEADER = \"Next-Router-Prefetch\";\nconst NEXT_URL = \"Next-Url\";\nconst RSC_CONTENT_TYPE_HEADER = \"text/x-component\";\nconst RSC_VARY_HEADER = RSC_HEADER + \", \" + NEXT_ROUTER_STATE_TREE + \", \" + NEXT_ROUTER_PREFETCH_HEADER + \", \" + NEXT_URL;\nconst FLIGHT_PARAMETERS = [\n    [\n        RSC_HEADER\n    ],\n    [\n        NEXT_ROUTER_STATE_TREE\n    ],\n    [\n        NEXT_ROUTER_PREFETCH_HEADER\n    ]\n];\nconst NEXT_RSC_UNION_QUERY = \"_rsc\";\nconst NEXT_DID_POSTPONE_HEADER = \"x-nextjs-postponed\"; //# sourceMappingURL=app-router-headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxhQUFhLE1BQU07QUFDekIsTUFBTUMsU0FBUyxjQUFjO0FBQzdCLE1BQU1DLHlCQUF5Qix5QkFBeUI7QUFDeEQsTUFBTUMsOEJBQThCLHVCQUF1QjtBQUMzRCxNQUFNQyxXQUFXLFdBQVc7QUFDNUIsTUFBTUMsMEJBQTBCLG1CQUFtQjtBQUNuRCxNQUFNQyxrQkFBa0JOLGFBQWEsT0FBT0UseUJBQXlCLE9BQU9DLDhCQUE4QixPQUFPQyxTQUFTO0FBQzFILE1BQU1HLG9CQUFvQjtJQUM3QjtRQUNJUDtLQUNIO0lBQ0Q7UUFDSUU7S0FDSDtJQUNEO1FBQ0lDO0tBQ0g7Q0FDSixDQUFDO0FBQ0ssTUFBTUssdUJBQXVCLE9BQU87QUFDcEMsTUFBTUMsMkJBQTJCLHFCQUFxQixDQUU3RCw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYXBwLXJvdXRlci1oZWFkZXJzLmpzPzIyN2EiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFJTQ19IRUFERVIgPSBcIlJTQ1wiO1xuZXhwb3J0IGNvbnN0IEFDVElPTiA9IFwiTmV4dC1BY3Rpb25cIjtcbmV4cG9ydCBjb25zdCBORVhUX1JPVVRFUl9TVEFURV9UUkVFID0gXCJOZXh0LVJvdXRlci1TdGF0ZS1UcmVlXCI7XG5leHBvcnQgY29uc3QgTkVYVF9ST1VURVJfUFJFRkVUQ0hfSEVBREVSID0gXCJOZXh0LVJvdXRlci1QcmVmZXRjaFwiO1xuZXhwb3J0IGNvbnN0IE5FWFRfVVJMID0gXCJOZXh0LVVybFwiO1xuZXhwb3J0IGNvbnN0IFJTQ19DT05URU5UX1RZUEVfSEVBREVSID0gXCJ0ZXh0L3gtY29tcG9uZW50XCI7XG5leHBvcnQgY29uc3QgUlNDX1ZBUllfSEVBREVSID0gUlNDX0hFQURFUiArIFwiLCBcIiArIE5FWFRfUk9VVEVSX1NUQVRFX1RSRUUgKyBcIiwgXCIgKyBORVhUX1JPVVRFUl9QUkVGRVRDSF9IRUFERVIgKyBcIiwgXCIgKyBORVhUX1VSTDtcbmV4cG9ydCBjb25zdCBGTElHSFRfUEFSQU1FVEVSUyA9IFtcbiAgICBbXG4gICAgICAgIFJTQ19IRUFERVJcbiAgICBdLFxuICAgIFtcbiAgICAgICAgTkVYVF9ST1VURVJfU1RBVEVfVFJFRVxuICAgIF0sXG4gICAgW1xuICAgICAgICBORVhUX1JPVVRFUl9QUkVGRVRDSF9IRUFERVJcbiAgICBdXG5dO1xuZXhwb3J0IGNvbnN0IE5FWFRfUlNDX1VOSU9OX1FVRVJZID0gXCJfcnNjXCI7XG5leHBvcnQgY29uc3QgTkVYVF9ESURfUE9TVFBPTkVfSEVBREVSID0gXCJ4LW5leHRqcy1wb3N0cG9uZWRcIjtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlci1oZWFkZXJzLmpzLm1hcCJdLCJuYW1lcyI6WyJSU0NfSEVBREVSIiwiQUNUSU9OIiwiTkVYVF9ST1VURVJfU1RBVEVfVFJFRSIsIk5FWFRfUk9VVEVSX1BSRUZFVENIX0hFQURFUiIsIk5FWFRfVVJMIiwiUlNDX0NPTlRFTlRfVFlQRV9IRUFERVIiLCJSU0NfVkFSWV9IRUFERVIiLCJGTElHSFRfUEFSQU1FVEVSUyIsIk5FWFRfUlNDX1VOSU9OX1FVRVJZIiwiTkVYVF9ESURfUE9TVFBPTkVfSEVBREVSIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bailoutToClientRendering: () => (/* binding */ bailoutToClientRendering)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_lazy_dynamic_no_ssr_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/lazy-dynamic/no-ssr-error */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/lazy-dynamic/no-ssr-error.js\");\n/* harmony import */ var _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./static-generation-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n\n\nfunction bailoutToClientRendering() {\n    const staticGenerationStore = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.staticGenerationAsyncStorage.getStore();\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.forceStatic) {\n        return;\n    }\n    if (staticGenerationStore == null ? void 0 : staticGenerationStore.isStaticGeneration) {\n        (0,_shared_lib_lazy_dynamic_no_ssr_error__WEBPACK_IMPORTED_MODULE_0__.throwWithNoSSR)();\n    }\n} //# sourceMappingURL=bailout-to-client-rendering.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvYmFpbG91dC10by1jbGllbnQtcmVuZGVyaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0RTtBQUNjO0FBQ25GLFNBQVNFO0lBQ1osTUFBTUMsd0JBQXdCRixtR0FBNEJBLENBQUNHLFFBQVE7SUFDbkUsSUFBSUQseUJBQXlCLE9BQU8sS0FBSyxJQUFJQSxzQkFBc0JFLFdBQVcsRUFBRTtRQUM1RTtJQUNKO0lBQ0EsSUFBSUYseUJBQXlCLE9BQU8sS0FBSyxJQUFJQSxzQkFBc0JHLGtCQUFrQixFQUFFO1FBQ25GTixxRkFBY0E7SUFDbEI7QUFDSixFQUVBLHVEQUF1RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9iYWlsb3V0LXRvLWNsaWVudC1yZW5kZXJpbmcuanM/YmY1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0aHJvd1dpdGhOb1NTUiB9IGZyb20gXCIuLi8uLi9zaGFyZWQvbGliL2xhenktZHluYW1pYy9uby1zc3ItZXJyb3JcIjtcbmltcG9ydCB7IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UgfSBmcm9tIFwiLi9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsXCI7XG5leHBvcnQgZnVuY3Rpb24gYmFpbG91dFRvQ2xpZW50UmVuZGVyaW5nKCkge1xuICAgIGNvbnN0IHN0YXRpY0dlbmVyYXRpb25TdG9yZSA9IHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuZm9yY2VTdGF0aWMpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoc3RhdGljR2VuZXJhdGlvblN0b3JlID09IG51bGwgPyB2b2lkIDAgOiBzdGF0aWNHZW5lcmF0aW9uU3RvcmUuaXNTdGF0aWNHZW5lcmF0aW9uKSB7XG4gICAgICAgIHRocm93V2l0aE5vU1NSKCk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1iYWlsb3V0LXRvLWNsaWVudC1yZW5kZXJpbmcuanMubWFwIl0sIm5hbWVzIjpbInRocm93V2l0aE5vU1NSIiwic3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSIsImJhaWxvdXRUb0NsaWVudFJlbmRlcmluZyIsInN0YXRpY0dlbmVyYXRpb25TdG9yZSIsImdldFN0b3JlIiwiZm9yY2VTdGF0aWMiLCJpc1N0YXRpY0dlbmVyYXRpb24iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clientHookInServerComponentError: () => (/* binding */ clientHookInServerComponentError)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction clientHookInServerComponentError(hookName) {\n    if (true) {\n        // If useState is undefined we're in a server component\n        if (!(react__WEBPACK_IMPORTED_MODULE_0___default().useState)) {\n            throw new Error(\"\" + hookName + ' only works in Client Components. Add the \"use client\" directive at the top of the file to use it. Read more: https://nextjs.org/docs/messages/react-client-hook-in-server-component');\n        }\n    }\n} //# sourceMappingURL=client-hook-in-server-component-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LWhvb2staW4tc2VydmVyLWNvbXBvbmVudC1lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEI7QUFDbkIsU0FBU0MsaUNBQWlDQyxRQUFRO0lBQ3JELElBQUlDLElBQXFDLEVBQUU7UUFDdkMsdURBQXVEO1FBQ3ZELElBQUksQ0FBQ0gsdURBQWMsRUFBRTtZQUNqQixNQUFNLElBQUlLLE1BQU0sS0FBS0gsV0FBVztRQUNwQztJQUNKO0FBQ0osRUFFQSxpRUFBaUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvY2xpZW50LWhvb2staW4tc2VydmVyLWNvbXBvbmVudC1lcnJvci5qcz81Njc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmV4cG9ydCBmdW5jdGlvbiBjbGllbnRIb29rSW5TZXJ2ZXJDb21wb25lbnRFcnJvcihob29rTmFtZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgICAgLy8gSWYgdXNlU3RhdGUgaXMgdW5kZWZpbmVkIHdlJ3JlIGluIGEgc2VydmVyIGNvbXBvbmVudFxuICAgICAgICBpZiAoIVJlYWN0LnVzZVN0YXRlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJcIiArIGhvb2tOYW1lICsgJyBvbmx5IHdvcmtzIGluIENsaWVudCBDb21wb25lbnRzLiBBZGQgdGhlIFwidXNlIGNsaWVudFwiIGRpcmVjdGl2ZSBhdCB0aGUgdG9wIG9mIHRoZSBmaWxlIHRvIHVzZSBpdC4gUmVhZCBtb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9yZWFjdC1jbGllbnQtaG9vay1pbi1zZXJ2ZXItY29tcG9uZW50Jyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWNsaWVudC1ob29rLWluLXNlcnZlci1jb21wb25lbnQtZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwiY2xpZW50SG9va0luU2VydmVyQ29tcG9uZW50RXJyb3IiLCJob29rTmFtZSIsInByb2Nlc3MiLCJ1c2VTdGF0ZSIsIkVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/draft-mode.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/draft-mode.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftMode: () => (/* binding */ DraftMode)\n/* harmony export */ });\n/* harmony import */ var _static_generation_bailout__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./static-generation-bailout */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js\");\n\nclass DraftMode {\n    get isEnabled() {\n        return this._provider.isEnabled;\n    }\n    enable() {\n        if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_0__.staticGenerationBailout)(\"draftMode().enable()\")) {\n            return;\n        }\n        return this._provider.enable();\n    }\n    disable() {\n        if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_0__.staticGenerationBailout)(\"draftMode().disable()\")) {\n            return;\n        }\n        return this._provider.disable();\n    }\n    constructor(provider){\n        this._provider = provider;\n    }\n} //# sourceMappingURL=draft-mode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvZHJhZnQtbW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzRTtBQUMvRCxNQUFNQztJQUNULElBQUlDLFlBQVk7UUFDWixPQUFPLElBQUksQ0FBQ0MsU0FBUyxDQUFDRCxTQUFTO0lBQ25DO0lBQ0FFLFNBQVM7UUFDTCxJQUFJSixtRkFBdUJBLENBQUMseUJBQXlCO1lBQ2pEO1FBQ0o7UUFDQSxPQUFPLElBQUksQ0FBQ0csU0FBUyxDQUFDQyxNQUFNO0lBQ2hDO0lBQ0FDLFVBQVU7UUFDTixJQUFJTCxtRkFBdUJBLENBQUMsMEJBQTBCO1lBQ2xEO1FBQ0o7UUFDQSxPQUFPLElBQUksQ0FBQ0csU0FBUyxDQUFDRSxPQUFPO0lBQ2pDO0lBQ0FDLFlBQVlDLFFBQVEsQ0FBQztRQUNqQixJQUFJLENBQUNKLFNBQVMsR0FBR0k7SUFDckI7QUFDSixFQUVBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9kcmFmdC1tb2RlLmpzPzkxYWEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSBmcm9tIFwiLi9zdGF0aWMtZ2VuZXJhdGlvbi1iYWlsb3V0XCI7XG5leHBvcnQgY2xhc3MgRHJhZnRNb2RlIHtcbiAgICBnZXQgaXNFbmFibGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fcHJvdmlkZXIuaXNFbmFibGVkO1xuICAgIH1cbiAgICBlbmFibGUoKSB7XG4gICAgICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uQmFpbG91dChcImRyYWZ0TW9kZSgpLmVuYWJsZSgpXCIpKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3Byb3ZpZGVyLmVuYWJsZSgpO1xuICAgIH1cbiAgICBkaXNhYmxlKCkge1xuICAgICAgICBpZiAoc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQoXCJkcmFmdE1vZGUoKS5kaXNhYmxlKClcIikpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fcHJvdmlkZXIuZGlzYWJsZSgpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcihwcm92aWRlcil7XG4gICAgICAgIHRoaXMuX3Byb3ZpZGVyID0gcHJvdmlkZXI7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1kcmFmdC1tb2RlLmpzLm1hcCJdLCJuYW1lcyI6WyJzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCIsIkRyYWZ0TW9kZSIsImlzRW5hYmxlZCIsIl9wcm92aWRlciIsImVuYWJsZSIsImRpc2FibGUiLCJjb25zdHJ1Y3RvciIsInByb3ZpZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/draft-mode.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/headers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/headers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cookies: () => (/* binding */ cookies),\n/* harmony export */   draftMode: () => (/* binding */ draftMode),\n/* harmony export */   headers: () => (/* binding */ headers)\n/* harmony export */ });\n/* harmony import */ var _server_web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../server/web/spec-extension/adapters/request-cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _server_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../server/web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _server_web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../server/web/spec-extension/cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./request-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _action_async_storage_external__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./action-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js\");\n/* harmony import */ var _static_generation_bailout__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./static-generation-bailout */ \"(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js\");\n/* harmony import */ var _draft_mode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./draft-mode */ \"(middleware)/./node_modules/next/dist/esm/client/components/draft-mode.js\");\n\n\n\n\n\n\n\nfunction headers() {\n    if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_5__.staticGenerationBailout)(\"headers\", {\n        link: \"https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering\"\n    })) {\n        return _server_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(new Headers({}));\n    }\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: headers() expects to have requestAsyncStorage, none available.\");\n    }\n    return requestStore.headers;\n}\nfunction cookies() {\n    if ((0,_static_generation_bailout__WEBPACK_IMPORTED_MODULE_5__.staticGenerationBailout)(\"cookies\", {\n        link: \"https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering\"\n    })) {\n        return _server_web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookiesAdapter.seal(new _server_web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookies(new Headers({})));\n    }\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: cookies() expects to have requestAsyncStorage, none available.\");\n    }\n    const asyncActionStore = _action_async_storage_external__WEBPACK_IMPORTED_MODULE_4__.actionAsyncStorage.getStore();\n    if (asyncActionStore && (asyncActionStore.isAction || asyncActionStore.isAppRoute)) {\n        // We can't conditionally return different types here based on the context.\n        // To avoid confusion, we always return the readonly type here.\n        return requestStore.mutableCookies;\n    }\n    return requestStore.cookies;\n}\nfunction draftMode() {\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_3__.requestAsyncStorage.getStore();\n    if (!requestStore) {\n        throw new Error(\"Invariant: draftMode() expects to have requestAsyncStorage, none available.\");\n    }\n    return new _draft_mode__WEBPACK_IMPORTED_MODULE_6__.DraftMode(requestStore.draftMode);\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQWlHO0FBQ2Y7QUFDVDtBQUNGO0FBQ0Y7QUFDQztBQUM3QjtBQUNsQyxTQUFTTztJQUNaLElBQUlGLG1GQUF1QkEsQ0FBQyxXQUFXO1FBQ25DRyxNQUFNO0lBQ1YsSUFBSTtRQUNBLE9BQU9QLHVGQUFjQSxDQUFDUSxJQUFJLENBQUMsSUFBSUMsUUFBUSxDQUFDO0lBQzVDO0lBQ0EsTUFBTUMsZUFBZVIsZ0ZBQW1CQSxDQUFDUyxRQUFRO0lBQ2pELElBQUksQ0FBQ0QsY0FBYztRQUNmLE1BQU0sSUFBSUUsTUFBTTtJQUNwQjtJQUNBLE9BQU9GLGFBQWFKLE9BQU87QUFDL0I7QUFDTyxTQUFTTztJQUNaLElBQUlULG1GQUF1QkEsQ0FBQyxXQUFXO1FBQ25DRyxNQUFNO0lBQ1YsSUFBSTtRQUNBLE9BQU9SLHNHQUFxQkEsQ0FBQ1MsSUFBSSxDQUFDLElBQUlQLDhFQUFjQSxDQUFDLElBQUlRLFFBQVEsQ0FBQztJQUN0RTtJQUNBLE1BQU1DLGVBQWVSLGdGQUFtQkEsQ0FBQ1MsUUFBUTtJQUNqRCxJQUFJLENBQUNELGNBQWM7UUFDZixNQUFNLElBQUlFLE1BQU07SUFDcEI7SUFDQSxNQUFNRSxtQkFBbUJYLDhFQUFrQkEsQ0FBQ1EsUUFBUTtJQUNwRCxJQUFJRyxvQkFBcUJBLENBQUFBLGlCQUFpQkMsUUFBUSxJQUFJRCxpQkFBaUJFLFVBQVUsR0FBRztRQUNoRiwyRUFBMkU7UUFDM0UsK0RBQStEO1FBQy9ELE9BQU9OLGFBQWFPLGNBQWM7SUFDdEM7SUFDQSxPQUFPUCxhQUFhRyxPQUFPO0FBQy9CO0FBQ08sU0FBU0s7SUFDWixNQUFNUixlQUFlUixnRkFBbUJBLENBQUNTLFFBQVE7SUFDakQsSUFBSSxDQUFDRCxjQUFjO1FBQ2YsTUFBTSxJQUFJRSxNQUFNO0lBQ3BCO0lBQ0EsT0FBTyxJQUFJUCxrREFBU0EsQ0FBQ0ssYUFBYVEsU0FBUztBQUMvQyxFQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9oZWFkZXJzLmpzPzU3YjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUmVxdWVzdENvb2tpZXNBZGFwdGVyIH0gZnJvbSBcIi4uLy4uL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVxdWVzdC1jb29raWVzXCI7XG5pbXBvcnQgeyBIZWFkZXJzQWRhcHRlciB9IGZyb20gXCIuLi8uLi9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIjtcbmltcG9ydCB7IFJlcXVlc3RDb29raWVzIH0gZnJvbSBcIi4uLy4uL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llc1wiO1xuaW1wb3J0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSB9IGZyb20gXCIuL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS5leHRlcm5hbFwiO1xuaW1wb3J0IHsgYWN0aW9uQXN5bmNTdG9yYWdlIH0gZnJvbSBcIi4vYWN0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWxcIjtcbmltcG9ydCB7IHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gZnJvbSBcIi4vc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dFwiO1xuaW1wb3J0IHsgRHJhZnRNb2RlIH0gZnJvbSBcIi4vZHJhZnQtbW9kZVwiO1xuZXhwb3J0IGZ1bmN0aW9uIGhlYWRlcnMoKSB7XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0KFwiaGVhZGVyc1wiLCB7XG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvYXBwL2J1aWxkaW5nLXlvdXItYXBwbGljYXRpb24vcmVuZGVyaW5nL3N0YXRpYy1hbmQtZHluYW1pYyNkeW5hbWljLXJlbmRlcmluZ1wiXG4gICAgfSkpIHtcbiAgICAgICAgcmV0dXJuIEhlYWRlcnNBZGFwdGVyLnNlYWwobmV3IEhlYWRlcnMoe30pKTtcbiAgICB9XG4gICAgY29uc3QgcmVxdWVzdFN0b3JlID0gcmVxdWVzdEFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmICghcmVxdWVzdFN0b3JlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogaGVhZGVycygpIGV4cGVjdHMgdG8gaGF2ZSByZXF1ZXN0QXN5bmNTdG9yYWdlLCBub25lIGF2YWlsYWJsZS5cIik7XG4gICAgfVxuICAgIHJldHVybiByZXF1ZXN0U3RvcmUuaGVhZGVycztcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb29raWVzKCkge1xuICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uQmFpbG91dChcImNvb2tpZXNcIiwge1xuICAgICAgICBsaW5rOiBcImh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL2FwcC9idWlsZGluZy15b3VyLWFwcGxpY2F0aW9uL3JlbmRlcmluZy9zdGF0aWMtYW5kLWR5bmFtaWMjZHluYW1pYy1yZW5kZXJpbmdcIlxuICAgIH0pKSB7XG4gICAgICAgIHJldHVybiBSZXF1ZXN0Q29va2llc0FkYXB0ZXIuc2VhbChuZXcgUmVxdWVzdENvb2tpZXMobmV3IEhlYWRlcnMoe30pKSk7XG4gICAgfVxuICAgIGNvbnN0IHJlcXVlc3RTdG9yZSA9IHJlcXVlc3RBc3luY1N0b3JhZ2UuZ2V0U3RvcmUoKTtcbiAgICBpZiAoIXJlcXVlc3RTdG9yZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IGNvb2tpZXMoKSBleHBlY3RzIHRvIGhhdmUgcmVxdWVzdEFzeW5jU3RvcmFnZSwgbm9uZSBhdmFpbGFibGUuXCIpO1xuICAgIH1cbiAgICBjb25zdCBhc3luY0FjdGlvblN0b3JlID0gYWN0aW9uQXN5bmNTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKGFzeW5jQWN0aW9uU3RvcmUgJiYgKGFzeW5jQWN0aW9uU3RvcmUuaXNBY3Rpb24gfHwgYXN5bmNBY3Rpb25TdG9yZS5pc0FwcFJvdXRlKSkge1xuICAgICAgICAvLyBXZSBjYW4ndCBjb25kaXRpb25hbGx5IHJldHVybiBkaWZmZXJlbnQgdHlwZXMgaGVyZSBiYXNlZCBvbiB0aGUgY29udGV4dC5cbiAgICAgICAgLy8gVG8gYXZvaWQgY29uZnVzaW9uLCB3ZSBhbHdheXMgcmV0dXJuIHRoZSByZWFkb25seSB0eXBlIGhlcmUuXG4gICAgICAgIHJldHVybiByZXF1ZXN0U3RvcmUubXV0YWJsZUNvb2tpZXM7XG4gICAgfVxuICAgIHJldHVybiByZXF1ZXN0U3RvcmUuY29va2llcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBkcmFmdE1vZGUoKSB7XG4gICAgY29uc3QgcmVxdWVzdFN0b3JlID0gcmVxdWVzdEFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmICghcmVxdWVzdFN0b3JlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFyaWFudDogZHJhZnRNb2RlKCkgZXhwZWN0cyB0byBoYXZlIHJlcXVlc3RBc3luY1N0b3JhZ2UsIG5vbmUgYXZhaWxhYmxlLlwiKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBEcmFmdE1vZGUocmVxdWVzdFN0b3JlLmRyYWZ0TW9kZSk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhlYWRlcnMuanMubWFwIl0sIm5hbWVzIjpbIlJlcXVlc3RDb29raWVzQWRhcHRlciIsIkhlYWRlcnNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXMiLCJyZXF1ZXN0QXN5bmNTdG9yYWdlIiwiYWN0aW9uQXN5bmNTdG9yYWdlIiwic3RhdGljR2VuZXJhdGlvbkJhaWxvdXQiLCJEcmFmdE1vZGUiLCJoZWFkZXJzIiwibGluayIsInNlYWwiLCJIZWFkZXJzIiwicmVxdWVzdFN0b3JlIiwiZ2V0U3RvcmUiLCJFcnJvciIsImNvb2tpZXMiLCJhc3luY0FjdGlvblN0b3JlIiwiaXNBY3Rpb24iLCJpc0FwcFJvdXRlIiwibXV0YWJsZUNvb2tpZXMiLCJkcmFmdE1vZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/hooks-server-context.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/hooks-server-context.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DYNAMIC_ERROR_CODE: () => (/* binding */ DYNAMIC_ERROR_CODE),\n/* harmony export */   DynamicServerError: () => (/* binding */ DynamicServerError)\n/* harmony export */ });\nconst DYNAMIC_ERROR_CODE = \"DYNAMIC_SERVER_USAGE\";\nclass DynamicServerError extends Error {\n    constructor(type){\n        super(\"Dynamic server usage: \" + type);\n        this.digest = DYNAMIC_ERROR_CODE;\n    }\n} //# sourceMappingURL=hooks-server-context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvaG9va3Mtc2VydmVyLWNvbnRleHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxNQUFNQSxxQkFBcUIsdUJBQXVCO0FBQ2xELE1BQU1DLDJCQUEyQkM7SUFDcENDLFlBQVlDLElBQUksQ0FBQztRQUNiLEtBQUssQ0FBQywyQkFBMkJBO1FBQ2pDLElBQUksQ0FBQ0MsTUFBTSxHQUFHTDtJQUNsQjtBQUNKLEVBRUEsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL2hvb2tzLXNlcnZlci1jb250ZXh0LmpzPzgyZWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IERZTkFNSUNfRVJST1JfQ09ERSA9IFwiRFlOQU1JQ19TRVJWRVJfVVNBR0VcIjtcbmV4cG9ydCBjbGFzcyBEeW5hbWljU2VydmVyRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IodHlwZSl7XG4gICAgICAgIHN1cGVyKFwiRHluYW1pYyBzZXJ2ZXIgdXNhZ2U6IFwiICsgdHlwZSk7XG4gICAgICAgIHRoaXMuZGlnZXN0ID0gRFlOQU1JQ19FUlJPUl9DT0RFO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aG9va3Mtc2VydmVyLWNvbnRleHQuanMubWFwIl0sIm5hbWVzIjpbIkRZTkFNSUNfRVJST1JfQ09ERSIsIkR5bmFtaWNTZXJ2ZXJFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJ0eXBlIiwiZGlnZXN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/hooks-server-context.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/navigation.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/navigation.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadonlyURLSearchParams: () => (/* binding */ ReadonlyURLSearchParams),\n/* harmony export */   RedirectType: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_6__.RedirectType),\n/* harmony export */   ServerInsertedHTMLContext: () => (/* reexport safe */ _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_5__.ServerInsertedHTMLContext),\n/* harmony export */   notFound: () => (/* reexport safe */ _not_found__WEBPACK_IMPORTED_MODULE_7__.notFound),\n/* harmony export */   permanentRedirect: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_6__.permanentRedirect),\n/* harmony export */   redirect: () => (/* reexport safe */ _redirect__WEBPACK_IMPORTED_MODULE_6__.redirect),\n/* harmony export */   useParams: () => (/* binding */ useParams),\n/* harmony export */   usePathname: () => (/* binding */ usePathname),\n/* harmony export */   useRouter: () => (/* binding */ useRouter),\n/* harmony export */   useSearchParams: () => (/* binding */ useSearchParams),\n/* harmony export */   useSelectedLayoutSegment: () => (/* binding */ useSelectedLayoutSegment),\n/* harmony export */   useSelectedLayoutSegments: () => (/* binding */ useSelectedLayoutSegments),\n/* harmony export */   useServerInsertedHTML: () => (/* reexport safe */ _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_5__.useServerInsertedHTML)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/app-router-context.shared-runtime */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\");\n/* harmony import */ var _shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/hooks-client-context.shared-runtime */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\");\n/* harmony import */ var _client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./client-hook-in-server-component-error */ \"(middleware)/./node_modules/next/dist/esm/client/components/client-hook-in-server-component-error.js\");\n/* harmony import */ var _router_reducer_reducers_get_segment_value__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./router-reducer/reducers/get-segment-value */ \"(middleware)/./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js\");\n/* harmony import */ var _shared_lib_server_inserted_html_shared_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/lib/server-inserted-html.shared-runtime */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\");\n/* harmony import */ var _redirect__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./redirect */ \"(middleware)/./node_modules/next/dist/esm/client/components/redirect.js\");\n/* harmony import */ var _not_found__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./not-found */ \"(middleware)/./node_modules/next/dist/esm/client/components/not-found.js\");\n\n\n\n\n\nconst INTERNAL_URLSEARCHPARAMS_INSTANCE = Symbol(\"internal for urlsearchparams readonly\");\nfunction readonlyURLSearchParamsError() {\n    return new Error(\"ReadonlyURLSearchParams cannot be modified\");\n}\nclass ReadonlyURLSearchParams {\n    [Symbol.iterator]() {\n        return this[INTERNAL_URLSEARCHPARAMS_INSTANCE][Symbol.iterator]();\n    }\n    append() {\n        throw readonlyURLSearchParamsError();\n    }\n    delete() {\n        throw readonlyURLSearchParamsError();\n    }\n    set() {\n        throw readonlyURLSearchParamsError();\n    }\n    sort() {\n        throw readonlyURLSearchParamsError();\n    }\n    constructor(urlSearchParams){\n        this[INTERNAL_URLSEARCHPARAMS_INSTANCE] = urlSearchParams;\n        this.entries = urlSearchParams.entries.bind(urlSearchParams);\n        this.forEach = urlSearchParams.forEach.bind(urlSearchParams);\n        this.get = urlSearchParams.get.bind(urlSearchParams);\n        this.getAll = urlSearchParams.getAll.bind(urlSearchParams);\n        this.has = urlSearchParams.has.bind(urlSearchParams);\n        this.keys = urlSearchParams.keys.bind(urlSearchParams);\n        this.values = urlSearchParams.values.bind(urlSearchParams);\n        this.toString = urlSearchParams.toString.bind(urlSearchParams);\n        this.size = urlSearchParams.size;\n    }\n}\n/**\n * Get a read-only URLSearchParams object. For example searchParams.get('foo') would return 'bar' when ?foo=bar\n * Learn more about URLSearchParams here: https://developer.mozilla.org/docs/Web/API/URLSearchParams\n */ function useSearchParams() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useSearchParams\");\n    const searchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.SearchParamsContext);\n    // In the case where this is `null`, the compat types added in\n    // `next-env.d.ts` will add a new overload that changes the return type to\n    // include `null`.\n    const readonlySearchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        if (!searchParams) {\n            // When the router is not ready in pages, we won't have the search params\n            // available.\n            return null;\n        }\n        return new ReadonlyURLSearchParams(searchParams);\n    }, [\n        searchParams\n    ]);\n    if (true) {\n        // AsyncLocalStorage should not be included in the client bundle.\n        const { bailoutToClientRendering } = __webpack_require__(/*! ./bailout-to-client-rendering */ \"(middleware)/./node_modules/next/dist/esm/client/components/bailout-to-client-rendering.js\");\n        // TODO-APP: handle dynamic = 'force-static' here and on the client\n        bailoutToClientRendering();\n    }\n    return readonlySearchParams;\n}\n/**\n * Get the current pathname. For example usePathname() on /dashboard?foo=bar would return \"/dashboard\"\n */ function usePathname() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"usePathname\");\n    // In the case where this is `null`, the compat types added in `next-env.d.ts`\n    // will add a new overload that changes the return type to include `null`.\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.PathnameContext);\n}\n\n/**\n * Get the router methods. For example router.push('/dashboard')\n */ function useRouter() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useRouter\");\n    const router = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.AppRouterContext);\n    if (router === null) {\n        throw new Error(\"invariant expected app router to be mounted\");\n    }\n    return router;\n}\n// this function performs a depth-first search of the tree to find the selected\n// params\nfunction getSelectedParams(tree, params) {\n    if (params === void 0) params = {};\n    const parallelRoutes = tree[1];\n    for (const parallelRoute of Object.values(parallelRoutes)){\n        const segment = parallelRoute[0];\n        const isDynamicParameter = Array.isArray(segment);\n        const segmentValue = isDynamicParameter ? segment[1] : segment;\n        if (!segmentValue || segmentValue.startsWith(\"__PAGE__\")) continue;\n        // Ensure catchAll and optional catchall are turned into an array\n        const isCatchAll = isDynamicParameter && (segment[2] === \"c\" || segment[2] === \"oc\");\n        if (isCatchAll) {\n            params[segment[0]] = segment[1].split(\"/\");\n        } else if (isDynamicParameter) {\n            params[segment[0]] = segment[1];\n        }\n        params = getSelectedParams(parallelRoute, params);\n    }\n    return params;\n}\n/**\n * Get the current parameters. For example useParams() on /dashboard/[team]\n * where pathname is /dashboard/nextjs would return { team: 'nextjs' }\n */ function useParams() {\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useParams\");\n    const globalLayoutRouter = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.GlobalLayoutRouterContext);\n    const pathParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_hooks_client_context_shared_runtime__WEBPACK_IMPORTED_MODULE_2__.PathParamsContext);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        // When it's under app router\n        if (globalLayoutRouter == null ? void 0 : globalLayoutRouter.tree) {\n            return getSelectedParams(globalLayoutRouter.tree);\n        }\n        // When it's under client side pages router\n        return pathParams;\n    }, [\n        globalLayoutRouter == null ? void 0 : globalLayoutRouter.tree,\n        pathParams\n    ]);\n}\n// TODO-APP: handle parallel routes\n/**\n * Get the canonical parameters from the current level to the leaf node.\n */ function getSelectedLayoutSegmentPath(tree, parallelRouteKey, first, segmentPath) {\n    if (first === void 0) first = true;\n    if (segmentPath === void 0) segmentPath = [];\n    let node;\n    if (first) {\n        // Use the provided parallel route key on the first parallel route\n        node = tree[1][parallelRouteKey];\n    } else {\n        // After first parallel route prefer children, if there's no children pick the first parallel route.\n        const parallelRoutes = tree[1];\n        var _parallelRoutes_children;\n        node = (_parallelRoutes_children = parallelRoutes.children) != null ? _parallelRoutes_children : Object.values(parallelRoutes)[0];\n    }\n    if (!node) return segmentPath;\n    const segment = node[0];\n    const segmentValue = (0,_router_reducer_reducers_get_segment_value__WEBPACK_IMPORTED_MODULE_4__.getSegmentValue)(segment);\n    if (!segmentValue || segmentValue.startsWith(\"__PAGE__\")) return segmentPath;\n    segmentPath.push(segmentValue);\n    return getSelectedLayoutSegmentPath(node, parallelRouteKey, false, segmentPath);\n}\n// TODO-APP: Expand description when the docs are written for it.\n/**\n * Get the canonical segment path from the current level to the leaf node.\n */ function useSelectedLayoutSegments(parallelRouteKey) {\n    if (parallelRouteKey === void 0) parallelRouteKey = \"children\";\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useSelectedLayoutSegments\");\n    const { tree } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_shared_lib_app_router_context_shared_runtime__WEBPACK_IMPORTED_MODULE_1__.LayoutRouterContext);\n    return getSelectedLayoutSegmentPath(tree, parallelRouteKey);\n}\n// TODO-APP: Expand description when the docs are written for it.\n/**\n * Get the segment below the current level\n */ function useSelectedLayoutSegment(parallelRouteKey) {\n    if (parallelRouteKey === void 0) parallelRouteKey = \"children\";\n    (0,_client_hook_in_server_component_error__WEBPACK_IMPORTED_MODULE_3__.clientHookInServerComponentError)(\"useSelectedLayoutSegment\");\n    const selectedLayoutSegments = useSelectedLayoutSegments(parallelRouteKey);\n    if (selectedLayoutSegments.length === 0) {\n        return null;\n    }\n    return selectedLayoutSegments[0];\n}\n\n //# sourceMappingURL=navigation.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/navigation.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/not-found.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/not-found.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNotFoundError: () => (/* binding */ isNotFoundError),\n/* harmony export */   notFound: () => (/* binding */ notFound)\n/* harmony export */ });\nconst NOT_FOUND_ERROR_CODE = \"NEXT_NOT_FOUND\";\n/**\n * When used in a React server component, this will set the status code to 404.\n * When used in a custom app route it will just send a 404 status.\n */ function notFound() {\n    // eslint-disable-next-line no-throw-literal\n    const error = new Error(NOT_FOUND_ERROR_CODE);\n    error.digest = NOT_FOUND_ERROR_CODE;\n    throw error;\n}\n/**\n * Checks an error to determine if it's an error generated by the `notFound()`\n * helper.\n *\n * @param error the error that may reference a not found error\n * @returns true if the error is a not found error\n */ function isNotFoundError(error) {\n    return (error == null ? void 0 : error.digest) === NOT_FOUND_ERROR_CODE;\n} //# sourceMappingURL=not-found.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTUEsdUJBQXVCO0FBQzdCOzs7Q0FHQyxHQUFVLFNBQVNDO0lBQ2hCLDRDQUE0QztJQUM1QyxNQUFNQyxRQUFRLElBQUlDLE1BQU1IO0lBQ3hCRSxNQUFNRSxNQUFNLEdBQUdKO0lBQ2YsTUFBTUU7QUFDVjtBQUNBOzs7Ozs7Q0FNQyxHQUFVLFNBQVNHLGdCQUFnQkgsS0FBSztJQUNyQyxPQUFPLENBQUNBLFNBQVMsT0FBTyxLQUFLLElBQUlBLE1BQU1FLE1BQU0sTUFBTUo7QUFDdkQsRUFFQSxxQ0FBcUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLmpzP2E4ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTk9UX0ZPVU5EX0VSUk9SX0NPREUgPSBcIk5FWFRfTk9UX0ZPVU5EXCI7XG4vKipcbiAqIFdoZW4gdXNlZCBpbiBhIFJlYWN0IHNlcnZlciBjb21wb25lbnQsIHRoaXMgd2lsbCBzZXQgdGhlIHN0YXR1cyBjb2RlIHRvIDQwNC5cbiAqIFdoZW4gdXNlZCBpbiBhIGN1c3RvbSBhcHAgcm91dGUgaXQgd2lsbCBqdXN0IHNlbmQgYSA0MDQgc3RhdHVzLlxuICovIGV4cG9ydCBmdW5jdGlvbiBub3RGb3VuZCgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdGhyb3ctbGl0ZXJhbFxuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKE5PVF9GT1VORF9FUlJPUl9DT0RFKTtcbiAgICBlcnJvci5kaWdlc3QgPSBOT1RfRk9VTkRfRVJST1JfQ09ERTtcbiAgICB0aHJvdyBlcnJvcjtcbn1cbi8qKlxuICogQ2hlY2tzIGFuIGVycm9yIHRvIGRldGVybWluZSBpZiBpdCdzIGFuIGVycm9yIGdlbmVyYXRlZCBieSB0aGUgYG5vdEZvdW5kKClgXG4gKiBoZWxwZXIuXG4gKlxuICogQHBhcmFtIGVycm9yIHRoZSBlcnJvciB0aGF0IG1heSByZWZlcmVuY2UgYSBub3QgZm91bmQgZXJyb3JcbiAqIEByZXR1cm5zIHRydWUgaWYgdGhlIGVycm9yIGlzIGEgbm90IGZvdW5kIGVycm9yXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGlzTm90Rm91bmRFcnJvcihlcnJvcikge1xuICAgIHJldHVybiAoZXJyb3IgPT0gbnVsbCA/IHZvaWQgMCA6IGVycm9yLmRpZ2VzdCkgPT09IE5PVF9GT1VORF9FUlJPUl9DT0RFO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3QtZm91bmQuanMubWFwIl0sIm5hbWVzIjpbIk5PVF9GT1VORF9FUlJPUl9DT0RFIiwibm90Rm91bmQiLCJlcnJvciIsIkVycm9yIiwiZGlnZXN0IiwiaXNOb3RGb3VuZEVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/not-found.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/redirect-status-code.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/redirect-status-code.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectStatusCode: () => (/* binding */ RedirectStatusCode)\n/* harmony export */ });\nvar RedirectStatusCode;\n(function(RedirectStatusCode) {\n    RedirectStatusCode[RedirectStatusCode[\"SeeOther\"] = 303] = \"SeeOther\";\n    RedirectStatusCode[RedirectStatusCode[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    RedirectStatusCode[RedirectStatusCode[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n})(RedirectStatusCode || (RedirectStatusCode = {})); //# sourceMappingURL=redirect-status-code.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcmVkaXJlY3Qtc3RhdHVzLWNvZGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLElBQUlBLG1CQUFtQjtBQUM3QixVQUFTQSxrQkFBa0I7SUFDeEJBLGtCQUFrQixDQUFDQSxrQkFBa0IsQ0FBQyxXQUFXLEdBQUcsSUFBSSxHQUFHO0lBQzNEQSxrQkFBa0IsQ0FBQ0Esa0JBQWtCLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxHQUFHO0lBQ3BFQSxrQkFBa0IsQ0FBQ0Esa0JBQWtCLENBQUMsb0JBQW9CLEdBQUcsSUFBSSxHQUFHO0FBQ3hFLEdBQUdBLHNCQUF1QkEsQ0FBQUEscUJBQXFCLENBQUMsS0FFaEQsZ0RBQWdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JlZGlyZWN0LXN0YXR1cy1jb2RlLmpzP2M5MzAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBSZWRpcmVjdFN0YXR1c0NvZGU7XG4oZnVuY3Rpb24oUmVkaXJlY3RTdGF0dXNDb2RlKSB7XG4gICAgUmVkaXJlY3RTdGF0dXNDb2RlW1JlZGlyZWN0U3RhdHVzQ29kZVtcIlNlZU90aGVyXCJdID0gMzAzXSA9IFwiU2VlT3RoZXJcIjtcbiAgICBSZWRpcmVjdFN0YXR1c0NvZGVbUmVkaXJlY3RTdGF0dXNDb2RlW1wiVGVtcG9yYXJ5UmVkaXJlY3RcIl0gPSAzMDddID0gXCJUZW1wb3JhcnlSZWRpcmVjdFwiO1xuICAgIFJlZGlyZWN0U3RhdHVzQ29kZVtSZWRpcmVjdFN0YXR1c0NvZGVbXCJQZXJtYW5lbnRSZWRpcmVjdFwiXSA9IDMwOF0gPSBcIlBlcm1hbmVudFJlZGlyZWN0XCI7XG59KShSZWRpcmVjdFN0YXR1c0NvZGUgfHwgKFJlZGlyZWN0U3RhdHVzQ29kZSA9IHt9KSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlZGlyZWN0LXN0YXR1cy1jb2RlLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWRpcmVjdFN0YXR1c0NvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/redirect-status-code.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/redirect.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/redirect.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RedirectType: () => (/* binding */ RedirectType),\n/* harmony export */   getRedirectError: () => (/* binding */ getRedirectError),\n/* harmony export */   getRedirectStatusCodeFromError: () => (/* binding */ getRedirectStatusCodeFromError),\n/* harmony export */   getRedirectTypeFromError: () => (/* binding */ getRedirectTypeFromError),\n/* harmony export */   getURLFromRedirectError: () => (/* binding */ getURLFromRedirectError),\n/* harmony export */   isRedirectError: () => (/* binding */ isRedirectError),\n/* harmony export */   permanentRedirect: () => (/* binding */ permanentRedirect),\n/* harmony export */   redirect: () => (/* binding */ redirect)\n/* harmony export */ });\n/* harmony import */ var _request_async_storage_external__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./request-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _action_async_storage_external__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./action-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/action-async-storage.external.js\");\n/* harmony import */ var _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./redirect-status-code */ \"(middleware)/./node_modules/next/dist/esm/client/components/redirect-status-code.js\");\n\n\n\nconst REDIRECT_ERROR_CODE = \"NEXT_REDIRECT\";\nvar RedirectType;\n(function(RedirectType) {\n    RedirectType[\"push\"] = \"push\";\n    RedirectType[\"replace\"] = \"replace\";\n})(RedirectType || (RedirectType = {}));\nfunction getRedirectError(url, type, statusCode) {\n    if (statusCode === void 0) statusCode = _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.TemporaryRedirect;\n    const error = new Error(REDIRECT_ERROR_CODE);\n    error.digest = REDIRECT_ERROR_CODE + \";\" + type + \";\" + url + \";\" + statusCode + \";\";\n    const requestStore = _request_async_storage_external__WEBPACK_IMPORTED_MODULE_0__.requestAsyncStorage.getStore();\n    if (requestStore) {\n        error.mutableCookies = requestStore.mutableCookies;\n    }\n    return error;\n}\n/**\n * When used in a streaming context, this will insert a meta tag to\n * redirect the user to the target page. When used in a custom app route, it\n * will serve a 307/303 to the caller.\n *\n * @param url the url to redirect to\n */ function redirect(url, type) {\n    if (type === void 0) type = \"replace\";\n    const actionStore = _action_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.actionAsyncStorage.getStore();\n    throw getRedirectError(url, type, // as we don't want the POST request to follow the redirect,\n    // as it could result in erroneous re-submissions.\n    (actionStore == null ? void 0 : actionStore.isAction) ? _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.SeeOther : _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.TemporaryRedirect);\n}\n/**\n * When used in a streaming context, this will insert a meta tag to\n * redirect the user to the target page. When used in a custom app route, it\n * will serve a 308/303 to the caller.\n *\n * @param url the url to redirect to\n */ function permanentRedirect(url, type) {\n    if (type === void 0) type = \"replace\";\n    const actionStore = _action_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.actionAsyncStorage.getStore();\n    throw getRedirectError(url, type, // as we don't want the POST request to follow the redirect,\n    // as it could result in erroneous re-submissions.\n    (actionStore == null ? void 0 : actionStore.isAction) ? _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.SeeOther : _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode.PermanentRedirect);\n}\n/**\n * Checks an error to determine if it's an error generated by the\n * `redirect(url)` helper.\n *\n * @param error the error that may reference a redirect error\n * @returns true if the error is a redirect error\n */ function isRedirectError(error) {\n    if (typeof (error == null ? void 0 : error.digest) !== \"string\") return false;\n    const [errorCode, type, destination, status] = error.digest.split(\";\", 4);\n    const statusCode = Number(status);\n    return errorCode === REDIRECT_ERROR_CODE && (type === \"replace\" || type === \"push\") && typeof destination === \"string\" && !isNaN(statusCode) && statusCode in _redirect_status_code__WEBPACK_IMPORTED_MODULE_2__.RedirectStatusCode;\n}\nfunction getURLFromRedirectError(error) {\n    if (!isRedirectError(error)) return null;\n    // Slices off the beginning of the digest that contains the code and the\n    // separating ';'.\n    return error.digest.split(\";\", 3)[2];\n}\nfunction getRedirectTypeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw new Error(\"Not a redirect error\");\n    }\n    return error.digest.split(\";\", 2)[1];\n}\nfunction getRedirectStatusCodeFromError(error) {\n    if (!isRedirectError(error)) {\n        throw new Error(\"Not a redirect error\");\n    }\n    return Number(error.digest.split(\";\", 4)[3]);\n} //# sourceMappingURL=redirect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/redirect.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/request-async-storage.external.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst requestAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=request-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0U7QUFDekQsTUFBTUMsc0JBQXNCRCw2RUFBdUJBLEdBQUcsQ0FFN0QsMERBQTBEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JlcXVlc3QtYXN5bmMtc3RvcmFnZS5leHRlcm5hbC5qcz9iNzYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIH0gZnJvbSBcIi4vYXN5bmMtbG9jYWwtc3RvcmFnZVwiO1xuZXhwb3J0IGNvbnN0IHJlcXVlc3RBc3luY1N0b3JhZ2UgPSBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0LWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwicmVxdWVzdEFzeW5jU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSegmentValue: () => (/* binding */ getSegmentValue)\n/* harmony export */ });\nfunction getSegmentValue(segment) {\n    return Array.isArray(segment) ? segment[1] : segment;\n} //# sourceMappingURL=get-segment-value.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvcm91dGVyLXJlZHVjZXIvcmVkdWNlcnMvZ2V0LXNlZ21lbnQtdmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLFNBQVNBLGdCQUFnQkMsT0FBTztJQUNuQyxPQUFPQyxNQUFNQyxPQUFPLENBQUNGLFdBQVdBLE9BQU8sQ0FBQyxFQUFFLEdBQUdBO0FBQ2pELEVBRUEsNkNBQTZDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL2NsaWVudC9jb21wb25lbnRzL3JvdXRlci1yZWR1Y2VyL3JlZHVjZXJzL2dldC1zZWdtZW50LXZhbHVlLmpzPzRhZDQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdldFNlZ21lbnRWYWx1ZShzZWdtZW50KSB7XG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkoc2VnbWVudCkgPyBzZWdtZW50WzFdIDogc2VnbWVudDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0LXNlZ21lbnQtdmFsdWUuanMubWFwIl0sIm5hbWVzIjpbImdldFNlZ21lbnRWYWx1ZSIsInNlZ21lbnQiLCJBcnJheSIsImlzQXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/router-reducer/reducers/get-segment-value.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var _async_local_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-local-storage */ \"(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js\");\n\nconst staticGenerationAsyncStorage = (0,_async_local_storage__WEBPACK_IMPORTED_MODULE_0__.createAsyncLocalStorage)(); //# sourceMappingURL=static-generation-async-storage.external.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdFO0FBQ3pELE1BQU1DLCtCQUErQkQsNkVBQXVCQSxHQUFHLENBRXRFLG9FQUFvRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9zdGF0aWMtZ2VuZXJhdGlvbi1hc3luYy1zdG9yYWdlLmV4dGVybmFsLmpzPzAxMTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlQXN5bmNMb2NhbFN0b3JhZ2UgfSBmcm9tIFwiLi9hc3luYy1sb2NhbC1zdG9yYWdlXCI7XG5leHBvcnQgY29uc3Qgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSA9IGNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRpYy1nZW5lcmF0aW9uLWFzeW5jLXN0b3JhZ2UuZXh0ZXJuYWwuanMubWFwIl0sIm5hbWVzIjpbImNyZWF0ZUFzeW5jTG9jYWxTdG9yYWdlIiwic3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/static-generation-bailout.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var _hooks_server_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./hooks-server-context */ \"(middleware)/./node_modules/next/dist/esm/client/components/hooks-server-context.js\");\n/* harmony import */ var _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./static-generation-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/static-generation-async-storage.external.js\");\n\n\nclass StaticGenBailoutError extends Error {\n    constructor(...args){\n        super(...args);\n        this.code = \"NEXT_STATIC_GEN_BAILOUT\";\n    }\n}\nfunction formatErrorMessage(reason, opts) {\n    const { dynamic, link } = opts || {};\n    const suffix = link ? \" See more info here: \" + link : \"\";\n    return \"Page\" + (dynamic ? ' with `dynamic = \"' + dynamic + '\"`' : \"\") + \" couldn't be rendered statically because it used `\" + reason + \"`.\" + suffix;\n}\nconst staticGenerationBailout = (reason, param)=>{\n    let { dynamic, link } = param === void 0 ? {} : param;\n    const staticGenerationStore = _static_generation_async_storage_external__WEBPACK_IMPORTED_MODULE_1__.staticGenerationAsyncStorage.getStore();\n    if (!staticGenerationStore) return false;\n    if (staticGenerationStore.forceStatic) {\n        return true;\n    }\n    if (staticGenerationStore.dynamicShouldError) {\n        throw new StaticGenBailoutError(formatErrorMessage(reason, {\n            link,\n            dynamic: dynamic != null ? dynamic : \"error\"\n        }));\n    }\n    const message = formatErrorMessage(reason, {\n        dynamic,\n        // this error should be caught by Next to bail out of static generation\n        // in case it's uncaught, this link provides some additional context as to why\n        link: \"https://nextjs.org/docs/messages/dynamic-server-error\"\n    });\n    // If postpone is available, we should postpone the render.\n    staticGenerationStore.postpone == null ? void 0 : staticGenerationStore.postpone.call(staticGenerationStore, reason);\n    // As this is a bailout, we don't want to revalidate, so set the revalidate\n    // to 0.\n    staticGenerationStore.revalidate = 0;\n    if (staticGenerationStore.isStaticGeneration) {\n        const err = new _hooks_server_context__WEBPACK_IMPORTED_MODULE_0__.DynamicServerError(message);\n        staticGenerationStore.dynamicUsageDescription = reason;\n        staticGenerationStore.dynamicUsageStack = err.stack;\n        throw err;\n    }\n    return false;\n}; //# sourceMappingURL=static-generation-bailout.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEQ7QUFDOEI7QUFDMUYsTUFBTUUsOEJBQThCQztJQUNoQ0MsWUFBWSxHQUFHQyxJQUFJLENBQUM7UUFDaEIsS0FBSyxJQUFJQTtRQUNULElBQUksQ0FBQ0MsSUFBSSxHQUFHO0lBQ2hCO0FBQ0o7QUFDQSxTQUFTQyxtQkFBbUJDLE1BQU0sRUFBRUMsSUFBSTtJQUNwQyxNQUFNLEVBQUVDLE9BQU8sRUFBRUMsSUFBSSxFQUFFLEdBQUdGLFFBQVEsQ0FBQztJQUNuQyxNQUFNRyxTQUFTRCxPQUFPLDBCQUEwQkEsT0FBTztJQUN2RCxPQUFPLFNBQVVELENBQUFBLFVBQVUsdUJBQXVCQSxVQUFVLE9BQU8sRUFBQyxJQUFLLHVEQUF1REYsU0FBUyxPQUFPSTtBQUNwSjtBQUNPLE1BQU1DLDBCQUEwQixDQUFDTCxRQUFRTTtJQUM1QyxJQUFJLEVBQUVKLE9BQU8sRUFBRUMsSUFBSSxFQUFFLEdBQUdHLFVBQVUsS0FBSyxJQUFJLENBQUMsSUFBSUE7SUFDaEQsTUFBTUMsd0JBQXdCZCxtR0FBNEJBLENBQUNlLFFBQVE7SUFDbkUsSUFBSSxDQUFDRCx1QkFBdUIsT0FBTztJQUNuQyxJQUFJQSxzQkFBc0JFLFdBQVcsRUFBRTtRQUNuQyxPQUFPO0lBQ1g7SUFDQSxJQUFJRixzQkFBc0JHLGtCQUFrQixFQUFFO1FBQzFDLE1BQU0sSUFBSWhCLHNCQUFzQkssbUJBQW1CQyxRQUFRO1lBQ3ZERztZQUNBRCxTQUFTQSxXQUFXLE9BQU9BLFVBQVU7UUFDekM7SUFDSjtJQUNBLE1BQU1TLFVBQVVaLG1CQUFtQkMsUUFBUTtRQUN2Q0U7UUFDQSx1RUFBdUU7UUFDdkUsOEVBQThFO1FBQzlFQyxNQUFNO0lBQ1Y7SUFDQSwyREFBMkQ7SUFDM0RJLHNCQUFzQkssUUFBUSxJQUFJLE9BQU8sS0FBSyxJQUFJTCxzQkFBc0JLLFFBQVEsQ0FBQ0MsSUFBSSxDQUFDTix1QkFBdUJQO0lBQzdHLDJFQUEyRTtJQUMzRSxRQUFRO0lBQ1JPLHNCQUFzQk8sVUFBVSxHQUFHO0lBQ25DLElBQUlQLHNCQUFzQlEsa0JBQWtCLEVBQUU7UUFDMUMsTUFBTUMsTUFBTSxJQUFJeEIscUVBQWtCQSxDQUFDbUI7UUFDbkNKLHNCQUFzQlUsdUJBQXVCLEdBQUdqQjtRQUNoRE8sc0JBQXNCVyxpQkFBaUIsR0FBR0YsSUFBSUcsS0FBSztRQUNuRCxNQUFNSDtJQUNWO0lBQ0EsT0FBTztBQUNYLEVBQUUsQ0FFRixxREFBcUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vY2xpZW50L2NvbXBvbmVudHMvc3RhdGljLWdlbmVyYXRpb24tYmFpbG91dC5qcz9kYzgzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtaWNTZXJ2ZXJFcnJvciB9IGZyb20gXCIuL2hvb2tzLXNlcnZlci1jb250ZXh0XCI7XG5pbXBvcnQgeyBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlIH0gZnJvbSBcIi4vc3RhdGljLWdlbmVyYXRpb24tYXN5bmMtc3RvcmFnZS5leHRlcm5hbFwiO1xuY2xhc3MgU3RhdGljR2VuQmFpbG91dEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKC4uLmFyZ3Mpe1xuICAgICAgICBzdXBlciguLi5hcmdzKTtcbiAgICAgICAgdGhpcy5jb2RlID0gXCJORVhUX1NUQVRJQ19HRU5fQkFJTE9VVFwiO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGZvcm1hdEVycm9yTWVzc2FnZShyZWFzb24sIG9wdHMpIHtcbiAgICBjb25zdCB7IGR5bmFtaWMsIGxpbmsgfSA9IG9wdHMgfHwge307XG4gICAgY29uc3Qgc3VmZml4ID0gbGluayA/IFwiIFNlZSBtb3JlIGluZm8gaGVyZTogXCIgKyBsaW5rIDogXCJcIjtcbiAgICByZXR1cm4gXCJQYWdlXCIgKyAoZHluYW1pYyA/ICcgd2l0aCBgZHluYW1pYyA9IFwiJyArIGR5bmFtaWMgKyAnXCJgJyA6IFwiXCIpICsgXCIgY291bGRuJ3QgYmUgcmVuZGVyZWQgc3RhdGljYWxseSBiZWNhdXNlIGl0IHVzZWQgYFwiICsgcmVhc29uICsgXCJgLlwiICsgc3VmZml4O1xufVxuZXhwb3J0IGNvbnN0IHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0ID0gKHJlYXNvbiwgcGFyYW0pPT57XG4gICAgbGV0IHsgZHluYW1pYywgbGluayB9ID0gcGFyYW0gPT09IHZvaWQgMCA/IHt9IDogcGFyYW07XG4gICAgY29uc3Qgc3RhdGljR2VuZXJhdGlvblN0b3JlID0gc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZS5nZXRTdG9yZSgpO1xuICAgIGlmICghc3RhdGljR2VuZXJhdGlvblN0b3JlKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25TdG9yZS5mb3JjZVN0YXRpYykge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgaWYgKHN0YXRpY0dlbmVyYXRpb25TdG9yZS5keW5hbWljU2hvdWxkRXJyb3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN0YXRpY0dlbkJhaWxvdXRFcnJvcihmb3JtYXRFcnJvck1lc3NhZ2UocmVhc29uLCB7XG4gICAgICAgICAgICBsaW5rLFxuICAgICAgICAgICAgZHluYW1pYzogZHluYW1pYyAhPSBudWxsID8gZHluYW1pYyA6IFwiZXJyb3JcIlxuICAgICAgICB9KSk7XG4gICAgfVxuICAgIGNvbnN0IG1lc3NhZ2UgPSBmb3JtYXRFcnJvck1lc3NhZ2UocmVhc29uLCB7XG4gICAgICAgIGR5bmFtaWMsXG4gICAgICAgIC8vIHRoaXMgZXJyb3Igc2hvdWxkIGJlIGNhdWdodCBieSBOZXh0IHRvIGJhaWwgb3V0IG9mIHN0YXRpYyBnZW5lcmF0aW9uXG4gICAgICAgIC8vIGluIGNhc2UgaXQncyB1bmNhdWdodCwgdGhpcyBsaW5rIHByb3ZpZGVzIHNvbWUgYWRkaXRpb25hbCBjb250ZXh0IGFzIHRvIHdoeVxuICAgICAgICBsaW5rOiBcImh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL2R5bmFtaWMtc2VydmVyLWVycm9yXCJcbiAgICB9KTtcbiAgICAvLyBJZiBwb3N0cG9uZSBpcyBhdmFpbGFibGUsIHdlIHNob3VsZCBwb3N0cG9uZSB0aGUgcmVuZGVyLlxuICAgIHN0YXRpY0dlbmVyYXRpb25TdG9yZS5wb3N0cG9uZSA9PSBudWxsID8gdm9pZCAwIDogc3RhdGljR2VuZXJhdGlvblN0b3JlLnBvc3Rwb25lLmNhbGwoc3RhdGljR2VuZXJhdGlvblN0b3JlLCByZWFzb24pO1xuICAgIC8vIEFzIHRoaXMgaXMgYSBiYWlsb3V0LCB3ZSBkb24ndCB3YW50IHRvIHJldmFsaWRhdGUsIHNvIHNldCB0aGUgcmV2YWxpZGF0ZVxuICAgIC8vIHRvIDAuXG4gICAgc3RhdGljR2VuZXJhdGlvblN0b3JlLnJldmFsaWRhdGUgPSAwO1xuICAgIGlmIChzdGF0aWNHZW5lcmF0aW9uU3RvcmUuaXNTdGF0aWNHZW5lcmF0aW9uKSB7XG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBEeW5hbWljU2VydmVyRXJyb3IobWVzc2FnZSk7XG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25TdG9yZS5keW5hbWljVXNhZ2VEZXNjcmlwdGlvbiA9IHJlYXNvbjtcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvblN0b3JlLmR5bmFtaWNVc2FnZVN0YWNrID0gZXJyLnN0YWNrO1xuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0YXRpYy1nZW5lcmF0aW9uLWJhaWxvdXQuanMubWFwIl0sIm5hbWVzIjpbIkR5bmFtaWNTZXJ2ZXJFcnJvciIsInN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UiLCJTdGF0aWNHZW5CYWlsb3V0RXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiYXJncyIsImNvZGUiLCJmb3JtYXRFcnJvck1lc3NhZ2UiLCJyZWFzb24iLCJvcHRzIiwiZHluYW1pYyIsImxpbmsiLCJzdWZmaXgiLCJzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCIsInBhcmFtIiwic3RhdGljR2VuZXJhdGlvblN0b3JlIiwiZ2V0U3RvcmUiLCJmb3JjZVN0YXRpYyIsImR5bmFtaWNTaG91bGRFcnJvciIsIm1lc3NhZ2UiLCJwb3N0cG9uZSIsImNhbGwiLCJyZXZhbGlkYXRlIiwiaXNTdGF0aWNHZW5lcmF0aW9uIiwiZXJyIiwiZHluYW1pY1VzYWdlRGVzY3JpcHRpb24iLCJkeW5hbWljVXNhZ2VTdGFjayIsInN0YWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/client/components/static-generation-bailout.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/lib/constants.js":
/*!*****************************************************!*\
  !*** ./node_modules/next/dist/esm/lib/constants.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APP_DIR_ALIAS: () => (/* binding */ APP_DIR_ALIAS),\n/* harmony export */   CACHE_ONE_YEAR: () => (/* binding */ CACHE_ONE_YEAR),\n/* harmony export */   DOT_NEXT_ALIAS: () => (/* binding */ DOT_NEXT_ALIAS),\n/* harmony export */   ESLINT_DEFAULT_DIRS: () => (/* binding */ ESLINT_DEFAULT_DIRS),\n/* harmony export */   ESLINT_PROMPT_VALUES: () => (/* binding */ ESLINT_PROMPT_VALUES),\n/* harmony export */   GSP_NO_RETURNED_VALUE: () => (/* binding */ GSP_NO_RETURNED_VALUE),\n/* harmony export */   GSSP_COMPONENT_MEMBER_ERROR: () => (/* binding */ GSSP_COMPONENT_MEMBER_ERROR),\n/* harmony export */   GSSP_NO_RETURNED_VALUE: () => (/* binding */ GSSP_NO_RETURNED_VALUE),\n/* harmony export */   INSTRUMENTATION_HOOK_FILENAME: () => (/* binding */ INSTRUMENTATION_HOOK_FILENAME),\n/* harmony export */   MIDDLEWARE_FILENAME: () => (/* binding */ MIDDLEWARE_FILENAME),\n/* harmony export */   MIDDLEWARE_LOCATION_REGEXP: () => (/* binding */ MIDDLEWARE_LOCATION_REGEXP),\n/* harmony export */   NEXT_BODY_SUFFIX: () => (/* binding */ NEXT_BODY_SUFFIX),\n/* harmony export */   NEXT_CACHE_IMPLICIT_TAG_ID: () => (/* binding */ NEXT_CACHE_IMPLICIT_TAG_ID),\n/* harmony export */   NEXT_CACHE_REVALIDATED_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATED_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER: () => (/* binding */ NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_SOFT_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_SOFT_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_SOFT_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_CACHE_TAGS_HEADER: () => (/* binding */ NEXT_CACHE_TAGS_HEADER),\n/* harmony export */   NEXT_CACHE_TAG_MAX_LENGTH: () => (/* binding */ NEXT_CACHE_TAG_MAX_LENGTH),\n/* harmony export */   NEXT_DATA_SUFFIX: () => (/* binding */ NEXT_DATA_SUFFIX),\n/* harmony export */   NEXT_META_SUFFIX: () => (/* binding */ NEXT_META_SUFFIX),\n/* harmony export */   NEXT_QUERY_PARAM_PREFIX: () => (/* binding */ NEXT_QUERY_PARAM_PREFIX),\n/* harmony export */   NON_STANDARD_NODE_ENV: () => (/* binding */ NON_STANDARD_NODE_ENV),\n/* harmony export */   PAGES_DIR_ALIAS: () => (/* binding */ PAGES_DIR_ALIAS),\n/* harmony export */   PRERENDER_REVALIDATE_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_HEADER),\n/* harmony export */   PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER: () => (/* binding */ PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER),\n/* harmony export */   PUBLIC_DIR_MIDDLEWARE_CONFLICT: () => (/* binding */ PUBLIC_DIR_MIDDLEWARE_CONFLICT),\n/* harmony export */   ROOT_DIR_ALIAS: () => (/* binding */ ROOT_DIR_ALIAS),\n/* harmony export */   RSC_ACTION_CLIENT_WRAPPER_ALIAS: () => (/* binding */ RSC_ACTION_CLIENT_WRAPPER_ALIAS),\n/* harmony export */   RSC_ACTION_ENCRYPTION_ALIAS: () => (/* binding */ RSC_ACTION_ENCRYPTION_ALIAS),\n/* harmony export */   RSC_ACTION_PROXY_ALIAS: () => (/* binding */ RSC_ACTION_PROXY_ALIAS),\n/* harmony export */   RSC_ACTION_VALIDATE_ALIAS: () => (/* binding */ RSC_ACTION_VALIDATE_ALIAS),\n/* harmony export */   RSC_MOD_REF_PROXY_ALIAS: () => (/* binding */ RSC_MOD_REF_PROXY_ALIAS),\n/* harmony export */   RSC_PREFETCH_SUFFIX: () => (/* binding */ RSC_PREFETCH_SUFFIX),\n/* harmony export */   RSC_SUFFIX: () => (/* binding */ RSC_SUFFIX),\n/* harmony export */   SERVER_PROPS_EXPORT_ERROR: () => (/* binding */ SERVER_PROPS_EXPORT_ERROR),\n/* harmony export */   SERVER_PROPS_GET_INIT_PROPS_CONFLICT: () => (/* binding */ SERVER_PROPS_GET_INIT_PROPS_CONFLICT),\n/* harmony export */   SERVER_PROPS_SSG_CONFLICT: () => (/* binding */ SERVER_PROPS_SSG_CONFLICT),\n/* harmony export */   SERVER_RUNTIME: () => (/* binding */ SERVER_RUNTIME),\n/* harmony export */   SSG_FALLBACK_EXPORT_ERROR: () => (/* binding */ SSG_FALLBACK_EXPORT_ERROR),\n/* harmony export */   SSG_GET_INITIAL_PROPS_CONFLICT: () => (/* binding */ SSG_GET_INITIAL_PROPS_CONFLICT),\n/* harmony export */   STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR: () => (/* binding */ STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR),\n/* harmony export */   UNSTABLE_REVALIDATE_RENAME_ERROR: () => (/* binding */ UNSTABLE_REVALIDATE_RENAME_ERROR),\n/* harmony export */   WEBPACK_LAYERS: () => (/* binding */ WEBPACK_LAYERS),\n/* harmony export */   WEBPACK_RESOURCE_QUERIES: () => (/* binding */ WEBPACK_RESOURCE_QUERIES)\n/* harmony export */ });\nconst NEXT_QUERY_PARAM_PREFIX = \"nxtP\";\nconst PRERENDER_REVALIDATE_HEADER = \"x-prerender-revalidate\";\nconst PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER = \"x-prerender-revalidate-if-generated\";\nconst RSC_PREFETCH_SUFFIX = \".prefetch.rsc\";\nconst RSC_SUFFIX = \".rsc\";\nconst NEXT_DATA_SUFFIX = \".json\";\nconst NEXT_META_SUFFIX = \".meta\";\nconst NEXT_BODY_SUFFIX = \".body\";\nconst NEXT_CACHE_TAGS_HEADER = \"x-next-cache-tags\";\nconst NEXT_CACHE_SOFT_TAGS_HEADER = \"x-next-cache-soft-tags\";\nconst NEXT_CACHE_REVALIDATED_TAGS_HEADER = \"x-next-revalidated-tags\";\nconst NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER = \"x-next-revalidate-tag-token\";\nconst NEXT_CACHE_TAG_MAX_LENGTH = 256;\nconst NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024;\nconst NEXT_CACHE_IMPLICIT_TAG_ID = \"_N_T_\";\n// in seconds\nconst CACHE_ONE_YEAR = 31536000;\n// Patterns to detect middleware files\nconst MIDDLEWARE_FILENAME = \"middleware\";\nconst MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`;\n// Pattern to detect instrumentation hooks file\nconst INSTRUMENTATION_HOOK_FILENAME = \"instrumentation\";\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nconst PAGES_DIR_ALIAS = \"private-next-pages\";\nconst DOT_NEXT_ALIAS = \"private-dot-next\";\nconst ROOT_DIR_ALIAS = \"private-next-root-dir\";\nconst APP_DIR_ALIAS = \"private-next-app-dir\";\nconst RSC_MOD_REF_PROXY_ALIAS = \"private-next-rsc-mod-ref-proxy\";\nconst RSC_ACTION_VALIDATE_ALIAS = \"private-next-rsc-action-validate\";\nconst RSC_ACTION_PROXY_ALIAS = \"private-next-rsc-action-proxy\";\nconst RSC_ACTION_ENCRYPTION_ALIAS = \"private-next-rsc-action-encryption\";\nconst RSC_ACTION_CLIENT_WRAPPER_ALIAS = \"private-next-rsc-action-client-wrapper\";\nconst PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`;\nconst SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`;\nconst SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`;\nconst SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`;\nconst STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`;\nconst SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`;\nconst GSP_NO_RETURNED_VALUE = \"Your `getStaticProps` function did not return an object. Did you forget to add a `return`?\";\nconst GSSP_NO_RETURNED_VALUE = \"Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?\";\nconst UNSTABLE_REVALIDATE_RENAME_ERROR = \"The `unstable_revalidate` property is available for general use.\\n\" + \"Please use `revalidate` instead.\";\nconst GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`;\nconst NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`;\nconst SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`;\nconst ESLINT_DEFAULT_DIRS = [\n    \"app\",\n    \"pages\",\n    \"components\",\n    \"lib\",\n    \"src\"\n];\nconst ESLINT_PROMPT_VALUES = [\n    {\n        title: \"Strict\",\n        recommended: true,\n        config: {\n            extends: \"next/core-web-vitals\"\n        }\n    },\n    {\n        title: \"Base\",\n        config: {\n            extends: \"next\"\n        }\n    },\n    {\n        title: \"Cancel\",\n        config: null\n    }\n];\nconst SERVER_RUNTIME = {\n    edge: \"edge\",\n    experimentalEdge: \"experimental-edge\",\n    nodejs: \"nodejs\"\n};\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */ const WEBPACK_LAYERS_NAMES = {\n    /**\n   * The layer for the shared code between the client and server bundles.\n   */ shared: \"shared\",\n    /**\n   * React Server Components layer (rsc).\n   */ reactServerComponents: \"rsc\",\n    /**\n   * Server Side Rendering layer for app (ssr).\n   */ serverSideRendering: \"ssr\",\n    /**\n   * The browser client bundle layer for actions.\n   */ actionBrowser: \"action-browser\",\n    /**\n   * The layer for the API routes.\n   */ api: \"api\",\n    /**\n   * The layer for the middleware code.\n   */ middleware: \"middleware\",\n    /**\n   * The layer for assets on the edge.\n   */ edgeAsset: \"edge-asset\",\n    /**\n   * The browser client bundle layer for App directory.\n   */ appPagesBrowser: \"app-pages-browser\",\n    /**\n   * The server bundle layer for metadata routes.\n   */ appMetadataRoute: \"app-metadata-route\",\n    /**\n   * The layer for the server bundle for App Route handlers.\n   */ appRouteHandler: \"app-route-handler\"\n};\nconst WEBPACK_LAYERS = {\n    ...WEBPACK_LAYERS_NAMES,\n    GROUP: {\n        server: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.appRouteHandler\n        ],\n        nonClientServerTarget: [\n            // plus middleware and pages api\n            WEBPACK_LAYERS_NAMES.middleware,\n            WEBPACK_LAYERS_NAMES.api\n        ],\n        app: [\n            WEBPACK_LAYERS_NAMES.reactServerComponents,\n            WEBPACK_LAYERS_NAMES.actionBrowser,\n            WEBPACK_LAYERS_NAMES.appMetadataRoute,\n            WEBPACK_LAYERS_NAMES.appRouteHandler,\n            WEBPACK_LAYERS_NAMES.serverSideRendering,\n            WEBPACK_LAYERS_NAMES.appPagesBrowser\n        ]\n    }\n};\nconst WEBPACK_RESOURCE_QUERIES = {\n    edgeSSREntry: \"__next_edge_ssr_entry__\",\n    metadata: \"__next_metadata__\",\n    metadataRoute: \"__next_metadata_route__\",\n    metadataImageMeta: \"__next_metadata_image_meta__\"\n};\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/lib/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/api-utils/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApiError: () => (/* binding */ ApiError),\n/* harmony export */   COOKIE_NAME_PRERENDER_BYPASS: () => (/* binding */ COOKIE_NAME_PRERENDER_BYPASS),\n/* harmony export */   COOKIE_NAME_PRERENDER_DATA: () => (/* binding */ COOKIE_NAME_PRERENDER_DATA),\n/* harmony export */   RESPONSE_LIMIT_DEFAULT: () => (/* binding */ RESPONSE_LIMIT_DEFAULT),\n/* harmony export */   SYMBOL_CLEARED_COOKIES: () => (/* binding */ SYMBOL_CLEARED_COOKIES),\n/* harmony export */   SYMBOL_PREVIEW_DATA: () => (/* binding */ SYMBOL_PREVIEW_DATA),\n/* harmony export */   checkIsOnDemandRevalidate: () => (/* binding */ checkIsOnDemandRevalidate),\n/* harmony export */   clearPreviewData: () => (/* binding */ clearPreviewData),\n/* harmony export */   redirect: () => (/* binding */ redirect),\n/* harmony export */   sendError: () => (/* binding */ sendError),\n/* harmony export */   sendStatusCode: () => (/* binding */ sendStatusCode),\n/* harmony export */   setLazyProp: () => (/* binding */ setLazyProp)\n/* harmony export */ });\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n\n\n/**\n *\n * @param res response object\n * @param statusCode `HTTP` status code of response\n */ function sendStatusCode(res, statusCode) {\n    res.statusCode = statusCode;\n    return res;\n}\n/**\n *\n * @param res response object\n * @param [statusOrUrl] `HTTP` status code of redirect\n * @param url URL of redirect\n */ function redirect(res, statusOrUrl, url) {\n    if (typeof statusOrUrl === \"string\") {\n        url = statusOrUrl;\n        statusOrUrl = 307;\n    }\n    if (typeof statusOrUrl !== \"number\" || typeof url !== \"string\") {\n        throw new Error(`Invalid redirect arguments. Please use a single argument URL, e.g. res.redirect('/destination') or use a status code and URL, e.g. res.redirect(307, '/destination').`);\n    }\n    res.writeHead(statusOrUrl, {\n        Location: url\n    });\n    res.write(url);\n    res.end();\n    return res;\n}\nfunction checkIsOnDemandRevalidate(req, previewProps) {\n    const headers = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_0__.HeadersAdapter.from(req.headers);\n    const previewModeId = headers.get(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_HEADER);\n    const isOnDemandRevalidate = previewModeId === previewProps.previewModeId;\n    const revalidateOnlyGenerated = headers.has(_lib_constants__WEBPACK_IMPORTED_MODULE_1__.PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER);\n    return {\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n    };\n}\nconst COOKIE_NAME_PRERENDER_BYPASS = `__prerender_bypass`;\nconst COOKIE_NAME_PRERENDER_DATA = `__next_preview_data`;\nconst RESPONSE_LIMIT_DEFAULT = 4 * 1024 * 1024;\nconst SYMBOL_PREVIEW_DATA = Symbol(COOKIE_NAME_PRERENDER_DATA);\nconst SYMBOL_CLEARED_COOKIES = Symbol(COOKIE_NAME_PRERENDER_BYPASS);\nfunction clearPreviewData(res, options = {}) {\n    if (SYMBOL_CLEARED_COOKIES in res) {\n        return res;\n    }\n    const { serialize } = __webpack_require__(/*! next/dist/compiled/cookie */ \"(middleware)/./node_modules/next/dist/compiled/cookie/index.js\");\n    const previous = res.getHeader(\"Set-Cookie\");\n    res.setHeader(`Set-Cookie`, [\n        ...typeof previous === \"string\" ? [\n            previous\n        ] : Array.isArray(previous) ? previous : [],\n        serialize(COOKIE_NAME_PRERENDER_BYPASS, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        }),\n        serialize(COOKIE_NAME_PRERENDER_DATA, \"\", {\n            // To delete a cookie, set `expires` to a date in the past:\n            // https://tools.ietf.org/html/rfc6265#section-4.1.1\n            // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n            expires: new Date(0),\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            ...options.path !== undefined ? {\n                path: options.path\n            } : undefined\n        })\n    ]);\n    Object.defineProperty(res, SYMBOL_CLEARED_COOKIES, {\n        value: true,\n        enumerable: false\n    });\n    return res;\n}\n/**\n * Custom error class\n */ class ApiError extends Error {\n    constructor(statusCode, message){\n        super(message);\n        this.statusCode = statusCode;\n    }\n}\n/**\n * Sends error in `response`\n * @param res response object\n * @param statusCode of response\n * @param message of response\n */ function sendError(res, statusCode, message) {\n    res.statusCode = statusCode;\n    res.statusMessage = message;\n    res.end(message);\n}\n/**\n * Execute getter function only if its needed\n * @param LazyProps `req` and `params` for lazyProp\n * @param prop name of property\n * @param getter function to get data\n */ function setLazyProp({ req }, prop, getter) {\n    const opts = {\n        configurable: true,\n        enumerable: true\n    };\n    const optsReset = {\n        ...opts,\n        writable: true\n    };\n    Object.defineProperty(req, prop, {\n        ...opts,\n        get: ()=>{\n            const value = getter();\n            // we set the property on the object to avoid recalculating it\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n            return value;\n        },\n        set: (value)=>{\n            Object.defineProperty(req, prop, {\n                ...optsReset,\n                value\n            });\n        }\n    });\n} //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DraftModeProvider: () => (/* binding */ DraftModeProvider)\n/* harmony export */ });\n/* harmony import */ var _api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../api-utils */ \"(middleware)/./node_modules/next/dist/esm/server/api-utils/index.js\");\n\nclass DraftModeProvider {\n    constructor(previewProps, req, cookies, mutableCookies){\n        var _cookies_get;\n        // The logic for draftMode() is very similar to tryGetPreviewData()\n        // but Draft Mode does not have any data associated with it.\n        const isOnDemandRevalidate = previewProps && (0,_api_utils__WEBPACK_IMPORTED_MODULE_0__.checkIsOnDemandRevalidate)(req, previewProps).isOnDemandRevalidate;\n        const cookieValue = (_cookies_get = cookies.get(_api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n        this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && cookieValue === previewProps.previewModeId);\n        this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n        this._mutableCookies = mutableCookies;\n    }\n    enable() {\n        if (!this._previewModeId) {\n            throw new Error(\"Invariant: previewProps missing previewModeId this should never happen\");\n        }\n        this._mutableCookies.set({\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n            value: this._previewModeId,\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\"\n        });\n    }\n    disable() {\n        // To delete a cookie, set `expires` to a date in the past:\n        // https://tools.ietf.org/html/rfc6265#section-4.1.1\n        // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n        this._mutableCookies.set({\n            name: _api_utils__WEBPACK_IMPORTED_MODULE_0__.COOKIE_NAME_PRERENDER_BYPASS,\n            value: \"\",\n            httpOnly: true,\n            sameSite:  false ? 0 : \"lax\",\n            secure: \"development\" !== \"development\",\n            path: \"/\",\n            expires: new Date(0)\n        });\n    }\n} //# sourceMappingURL=draft-mode-provider.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvZHJhZnQtbW9kZS1wcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1RjtBQUNoRixNQUFNRTtJQUNUQyxZQUFZQyxZQUFZLEVBQUVDLEdBQUcsRUFBRUMsT0FBTyxFQUFFQyxjQUFjLENBQUM7UUFDbkQsSUFBSUM7UUFDSixtRUFBbUU7UUFDbkUsNERBQTREO1FBQzVELE1BQU1DLHVCQUF1QkwsZ0JBQWdCSCxxRUFBeUJBLENBQUNJLEtBQUtELGNBQWNLLG9CQUFvQjtRQUM5RyxNQUFNQyxjQUFjLENBQUNGLGVBQWVGLFFBQVFLLEdBQUcsQ0FBQ1gsb0VBQTRCQSxDQUFBLEtBQU0sT0FBTyxLQUFLLElBQUlRLGFBQWFJLEtBQUs7UUFDcEgsSUFBSSxDQUFDQyxTQUFTLEdBQUdDLFFBQVEsQ0FBQ0wsd0JBQXdCQyxlQUFlTixnQkFBZ0JNLGdCQUFnQk4sYUFBYVcsYUFBYTtRQUMzSCxJQUFJLENBQUNDLGNBQWMsR0FBR1osZ0JBQWdCLE9BQU8sS0FBSyxJQUFJQSxhQUFhVyxhQUFhO1FBQ2hGLElBQUksQ0FBQ0UsZUFBZSxHQUFHVjtJQUMzQjtJQUNBVyxTQUFTO1FBQ0wsSUFBSSxDQUFDLElBQUksQ0FBQ0YsY0FBYyxFQUFFO1lBQ3RCLE1BQU0sSUFBSUcsTUFBTTtRQUNwQjtRQUNBLElBQUksQ0FBQ0YsZUFBZSxDQUFDRyxHQUFHLENBQUM7WUFDckJDLE1BQU1yQixvRUFBNEJBO1lBQ2xDWSxPQUFPLElBQUksQ0FBQ0ksY0FBYztZQUMxQk0sVUFBVTtZQUNWQyxVQUFVQyxNQUFzQyxHQUFHLENBQU0sR0FBRztZQUM1REMsUUFBUUQsa0JBQXlCO1lBQ2pDRSxNQUFNO1FBQ1Y7SUFDSjtJQUNBQyxVQUFVO1FBQ04sMkRBQTJEO1FBQzNELG9EQUFvRDtRQUNwRCx3RUFBd0U7UUFDeEUsSUFBSSxDQUFDVixlQUFlLENBQUNHLEdBQUcsQ0FBQztZQUNyQkMsTUFBTXJCLG9FQUE0QkE7WUFDbENZLE9BQU87WUFDUFUsVUFBVTtZQUNWQyxVQUFVQyxNQUFzQyxHQUFHLENBQU0sR0FBRztZQUM1REMsUUFBUUQsa0JBQXlCO1lBQ2pDRSxNQUFNO1lBQ05FLFNBQVMsSUFBSUMsS0FBSztRQUN0QjtJQUNKO0FBQ0osRUFFQSwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvZHJhZnQtbW9kZS1wcm92aWRlci5qcz84N2UwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MsIGNoZWNrSXNPbkRlbWFuZFJldmFsaWRhdGUgfSBmcm9tIFwiLi4vYXBpLXV0aWxzXCI7XG5leHBvcnQgY2xhc3MgRHJhZnRNb2RlUHJvdmlkZXIge1xuICAgIGNvbnN0cnVjdG9yKHByZXZpZXdQcm9wcywgcmVxLCBjb29raWVzLCBtdXRhYmxlQ29va2llcyl7XG4gICAgICAgIHZhciBfY29va2llc19nZXQ7XG4gICAgICAgIC8vIFRoZSBsb2dpYyBmb3IgZHJhZnRNb2RlKCkgaXMgdmVyeSBzaW1pbGFyIHRvIHRyeUdldFByZXZpZXdEYXRhKClcbiAgICAgICAgLy8gYnV0IERyYWZ0IE1vZGUgZG9lcyBub3QgaGF2ZSBhbnkgZGF0YSBhc3NvY2lhdGVkIHdpdGggaXQuXG4gICAgICAgIGNvbnN0IGlzT25EZW1hbmRSZXZhbGlkYXRlID0gcHJldmlld1Byb3BzICYmIGNoZWNrSXNPbkRlbWFuZFJldmFsaWRhdGUocmVxLCBwcmV2aWV3UHJvcHMpLmlzT25EZW1hbmRSZXZhbGlkYXRlO1xuICAgICAgICBjb25zdCBjb29raWVWYWx1ZSA9IChfY29va2llc19nZXQgPSBjb29raWVzLmdldChDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTKSkgPT0gbnVsbCA/IHZvaWQgMCA6IF9jb29raWVzX2dldC52YWx1ZTtcbiAgICAgICAgdGhpcy5pc0VuYWJsZWQgPSBCb29sZWFuKCFpc09uRGVtYW5kUmV2YWxpZGF0ZSAmJiBjb29raWVWYWx1ZSAmJiBwcmV2aWV3UHJvcHMgJiYgY29va2llVmFsdWUgPT09IHByZXZpZXdQcm9wcy5wcmV2aWV3TW9kZUlkKTtcbiAgICAgICAgdGhpcy5fcHJldmlld01vZGVJZCA9IHByZXZpZXdQcm9wcyA9PSBudWxsID8gdm9pZCAwIDogcHJldmlld1Byb3BzLnByZXZpZXdNb2RlSWQ7XG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzID0gbXV0YWJsZUNvb2tpZXM7XG4gICAgfVxuICAgIGVuYWJsZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9wcmV2aWV3TW9kZUlkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhcmlhbnQ6IHByZXZpZXdQcm9wcyBtaXNzaW5nIHByZXZpZXdNb2RlSWQgdGhpcyBzaG91bGQgbmV2ZXIgaGFwcGVuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzLnNldCh7XG4gICAgICAgICAgICBuYW1lOiBDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTLFxuICAgICAgICAgICAgdmFsdWU6IHRoaXMuX3ByZXZpZXdNb2RlSWQsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiID8gXCJub25lXCIgOiBcImxheFwiLFxuICAgICAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiLFxuICAgICAgICAgICAgcGF0aDogXCIvXCJcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGRpc2FibGUoKSB7XG4gICAgICAgIC8vIFRvIGRlbGV0ZSBhIGNvb2tpZSwgc2V0IGBleHBpcmVzYCB0byBhIGRhdGUgaW4gdGhlIHBhc3Q6XG4gICAgICAgIC8vIGh0dHBzOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9yZmM2MjY1I3NlY3Rpb24tNC4xLjFcbiAgICAgICAgLy8gYE1heC1BZ2U6IDBgIGlzIG5vdCB2YWxpZCwgdGh1cyBpZ25vcmVkLCBhbmQgdGhlIGNvb2tpZSBpcyBwZXJzaXN0ZWQuXG4gICAgICAgIHRoaXMuX211dGFibGVDb29raWVzLnNldCh7XG4gICAgICAgICAgICBuYW1lOiBDT09LSUVfTkFNRV9QUkVSRU5ERVJfQllQQVNTLFxuICAgICAgICAgICAgdmFsdWU6IFwiXCIsXG4gICAgICAgICAgICBodHRwT25seTogdHJ1ZSxcbiAgICAgICAgICAgIHNhbWVTaXRlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiID8gXCJub25lXCIgOiBcImxheFwiLFxuICAgICAgICAgICAgc2VjdXJlOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJkZXZlbG9wbWVudFwiLFxuICAgICAgICAgICAgcGF0aDogXCIvXCIsXG4gICAgICAgICAgICBleHBpcmVzOiBuZXcgRGF0ZSgwKVxuICAgICAgICB9KTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRyYWZ0LW1vZGUtcHJvdmlkZXIuanMubWFwIl0sIm5hbWVzIjpbIkNPT0tJRV9OQU1FX1BSRVJFTkRFUl9CWVBBU1MiLCJjaGVja0lzT25EZW1hbmRSZXZhbGlkYXRlIiwiRHJhZnRNb2RlUHJvdmlkZXIiLCJjb25zdHJ1Y3RvciIsInByZXZpZXdQcm9wcyIsInJlcSIsImNvb2tpZXMiLCJtdXRhYmxlQ29va2llcyIsIl9jb29raWVzX2dldCIsImlzT25EZW1hbmRSZXZhbGlkYXRlIiwiY29va2llVmFsdWUiLCJnZXQiLCJ2YWx1ZSIsImlzRW5hYmxlZCIsIkJvb2xlYW4iLCJwcmV2aWV3TW9kZUlkIiwiX3ByZXZpZXdNb2RlSWQiLCJfbXV0YWJsZUNvb2tpZXMiLCJlbmFibGUiLCJFcnJvciIsInNldCIsIm5hbWUiLCJodHRwT25seSIsInNhbWVTaXRlIiwicHJvY2VzcyIsInNlY3VyZSIsInBhdGgiLCJkaXNhYmxlIiwiZXhwaXJlcyIsIkRhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestAsyncStorageWrapper: () => (/* binding */ RequestAsyncStorageWrapper)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../web/spec-extension/adapters/headers */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\");\n/* harmony import */ var _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../web/spec-extension/adapters/request-cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\");\n/* harmony import */ var _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../web/spec-extension/cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./draft-mode-provider */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/draft-mode-provider.js\");\n\n\n\n\n\nfunction getHeaders(headers) {\n    const cleaned = _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers);\n    for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.FLIGHT_PARAMETERS){\n        cleaned.delete(param.toString().toLowerCase());\n    }\n    return _web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.seal(cleaned);\n}\nfunction getCookies(headers) {\n    const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n    return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.RequestCookiesAdapter.seal(cookies);\n}\nfunction getMutableCookies(headers, onUpdateCookies) {\n    const cookies = new _web_spec_extension_cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(_web_spec_extension_adapters_headers__WEBPACK_IMPORTED_MODULE_1__.HeadersAdapter.from(headers));\n    return _web_spec_extension_adapters_request_cookies__WEBPACK_IMPORTED_MODULE_2__.MutableRequestCookiesAdapter.wrap(cookies, onUpdateCookies);\n}\nconst RequestAsyncStorageWrapper = {\n    /**\n   * Wrap the callback with the given store so it can access the underlying\n   * store using hooks.\n   *\n   * @param storage underlying storage object returned by the module\n   * @param context context to seed the store\n   * @param callback function to call within the scope of the context\n   * @returns the result returned by the callback\n   */ wrap (storage, { req, res, renderOpts }, callback) {\n        let previewProps = undefined;\n        if (renderOpts && \"previewProps\" in renderOpts) {\n            // TODO: investigate why previewProps isn't on RenderOpts\n            previewProps = renderOpts.previewProps;\n        }\n        function defaultOnUpdateCookies(cookies) {\n            if (res) {\n                res.setHeader(\"Set-Cookie\", cookies);\n            }\n        }\n        const cache = {};\n        const store = {\n            get headers () {\n                if (!cache.headers) {\n                    // Seal the headers object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.headers = getHeaders(req.headers);\n                }\n                return cache.headers;\n            },\n            get cookies () {\n                if (!cache.cookies) {\n                    // Seal the cookies object that'll freeze out any methods that could\n                    // mutate the underlying data.\n                    cache.cookies = getCookies(req.headers);\n                }\n                return cache.cookies;\n            },\n            get mutableCookies () {\n                if (!cache.mutableCookies) {\n                    cache.mutableCookies = getMutableCookies(req.headers, (renderOpts == null ? void 0 : renderOpts.onUpdateCookies) || (res ? defaultOnUpdateCookies : undefined));\n                }\n                return cache.mutableCookies;\n            },\n            get draftMode () {\n                if (!cache.draftMode) {\n                    cache.draftMode = new _draft_mode_provider__WEBPACK_IMPORTED_MODULE_4__.DraftModeProvider(previewProps, req, this.cookies, this.mutableCookies);\n                }\n                return cache.draftMode;\n            }\n        };\n        return storage.run(store, callback, store);\n    }\n}; //# sourceMappingURL=request-async-storage-wrapper.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2FzeW5jLXN0b3JhZ2UvcmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStFO0FBQ1A7QUFDNkM7QUFDdEQ7QUFDTDtBQUMxRCxTQUFTTSxXQUFXQyxPQUFPO0lBQ3ZCLE1BQU1DLFVBQVVQLGdGQUFjQSxDQUFDUSxJQUFJLENBQUNGO0lBQ3BDLEtBQUssTUFBTUcsU0FBU1Ysb0ZBQWlCQSxDQUFDO1FBQ2xDUSxRQUFRRyxNQUFNLENBQUNELE1BQU1FLFFBQVEsR0FBR0MsV0FBVztJQUMvQztJQUNBLE9BQU9aLGdGQUFjQSxDQUFDYSxJQUFJLENBQUNOO0FBQy9CO0FBQ0EsU0FBU08sV0FBV1IsT0FBTztJQUN2QixNQUFNUyxVQUFVLElBQUlaLHVFQUFjQSxDQUFDSCxnRkFBY0EsQ0FBQ1EsSUFBSSxDQUFDRjtJQUN2RCxPQUFPSiwrRkFBcUJBLENBQUNXLElBQUksQ0FBQ0U7QUFDdEM7QUFDQSxTQUFTQyxrQkFBa0JWLE9BQU8sRUFBRVcsZUFBZTtJQUMvQyxNQUFNRixVQUFVLElBQUlaLHVFQUFjQSxDQUFDSCxnRkFBY0EsQ0FBQ1EsSUFBSSxDQUFDRjtJQUN2RCxPQUFPTCxzR0FBNEJBLENBQUNpQixJQUFJLENBQUNILFNBQVNFO0FBQ3REO0FBQ08sTUFBTUUsNkJBQTZCO0lBQ3RDOzs7Ozs7OztHQVFELEdBQUdELE1BQU1FLE9BQU8sRUFBRSxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsVUFBVSxFQUFFLEVBQUVDLFFBQVE7UUFDL0MsSUFBSUMsZUFBZUM7UUFDbkIsSUFBSUgsY0FBYyxrQkFBa0JBLFlBQVk7WUFDNUMseURBQXlEO1lBQ3pERSxlQUFlRixXQUFXRSxZQUFZO1FBQzFDO1FBQ0EsU0FBU0UsdUJBQXVCWixPQUFPO1lBQ25DLElBQUlPLEtBQUs7Z0JBQ0xBLElBQUlNLFNBQVMsQ0FBQyxjQUFjYjtZQUNoQztRQUNKO1FBQ0EsTUFBTWMsUUFBUSxDQUFDO1FBQ2YsTUFBTUMsUUFBUTtZQUNWLElBQUl4QixXQUFXO2dCQUNYLElBQUksQ0FBQ3VCLE1BQU12QixPQUFPLEVBQUU7b0JBQ2hCLG9FQUFvRTtvQkFDcEUsOEJBQThCO29CQUM5QnVCLE1BQU12QixPQUFPLEdBQUdELFdBQVdnQixJQUFJZixPQUFPO2dCQUMxQztnQkFDQSxPQUFPdUIsTUFBTXZCLE9BQU87WUFDeEI7WUFDQSxJQUFJUyxXQUFXO2dCQUNYLElBQUksQ0FBQ2MsTUFBTWQsT0FBTyxFQUFFO29CQUNoQixvRUFBb0U7b0JBQ3BFLDhCQUE4QjtvQkFDOUJjLE1BQU1kLE9BQU8sR0FBR0QsV0FBV08sSUFBSWYsT0FBTztnQkFDMUM7Z0JBQ0EsT0FBT3VCLE1BQU1kLE9BQU87WUFDeEI7WUFDQSxJQUFJZ0Isa0JBQWtCO2dCQUNsQixJQUFJLENBQUNGLE1BQU1FLGNBQWMsRUFBRTtvQkFDdkJGLE1BQU1FLGNBQWMsR0FBR2Ysa0JBQWtCSyxJQUFJZixPQUFPLEVBQUUsQ0FBQ2lCLGNBQWMsT0FBTyxLQUFLLElBQUlBLFdBQVdOLGVBQWUsS0FBTUssQ0FBQUEsTUFBTUsseUJBQXlCRCxTQUFRO2dCQUNoSztnQkFDQSxPQUFPRyxNQUFNRSxjQUFjO1lBQy9CO1lBQ0EsSUFBSUMsYUFBYTtnQkFDYixJQUFJLENBQUNILE1BQU1HLFNBQVMsRUFBRTtvQkFDbEJILE1BQU1HLFNBQVMsR0FBRyxJQUFJNUIsbUVBQWlCQSxDQUFDcUIsY0FBY0osS0FBSyxJQUFJLENBQUNOLE9BQU8sRUFBRSxJQUFJLENBQUNnQixjQUFjO2dCQUNoRztnQkFDQSxPQUFPRixNQUFNRyxTQUFTO1lBQzFCO1FBQ0o7UUFDQSxPQUFPWixRQUFRYSxHQUFHLENBQUNILE9BQU9OLFVBQVVNO0lBQ3hDO0FBQ0osRUFBRSxDQUVGLHlEQUF5RCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvYXN5bmMtc3RvcmFnZS9yZXF1ZXN0LWFzeW5jLXN0b3JhZ2Utd3JhcHBlci5qcz9jNjUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZMSUdIVF9QQVJBTUVURVJTIH0gZnJvbSBcIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXItaGVhZGVyc1wiO1xuaW1wb3J0IHsgSGVhZGVyc0FkYXB0ZXIgfSBmcm9tIFwiLi4vd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL2hlYWRlcnNcIjtcbmltcG9ydCB7IE11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIsIFJlcXVlc3RDb29raWVzQWRhcHRlciB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vYWRhcHRlcnMvcmVxdWVzdC1jb29raWVzXCI7XG5pbXBvcnQgeyBSZXF1ZXN0Q29va2llcyB9IGZyb20gXCIuLi93ZWIvc3BlYy1leHRlbnNpb24vY29va2llc1wiO1xuaW1wb3J0IHsgRHJhZnRNb2RlUHJvdmlkZXIgfSBmcm9tIFwiLi9kcmFmdC1tb2RlLXByb3ZpZGVyXCI7XG5mdW5jdGlvbiBnZXRIZWFkZXJzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBjbGVhbmVkID0gSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKTtcbiAgICBmb3IgKGNvbnN0IHBhcmFtIG9mIEZMSUdIVF9QQVJBTUVURVJTKXtcbiAgICAgICAgY2xlYW5lZC5kZWxldGUocGFyYW0udG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKTtcbiAgICB9XG4gICAgcmV0dXJuIEhlYWRlcnNBZGFwdGVyLnNlYWwoY2xlYW5lZCk7XG59XG5mdW5jdGlvbiBnZXRDb29raWVzKGhlYWRlcnMpIHtcbiAgICBjb25zdCBjb29raWVzID0gbmV3IFJlcXVlc3RDb29raWVzKEhlYWRlcnNBZGFwdGVyLmZyb20oaGVhZGVycykpO1xuICAgIHJldHVybiBSZXF1ZXN0Q29va2llc0FkYXB0ZXIuc2VhbChjb29raWVzKTtcbn1cbmZ1bmN0aW9uIGdldE11dGFibGVDb29raWVzKGhlYWRlcnMsIG9uVXBkYXRlQ29va2llcykge1xuICAgIGNvbnN0IGNvb2tpZXMgPSBuZXcgUmVxdWVzdENvb2tpZXMoSGVhZGVyc0FkYXB0ZXIuZnJvbShoZWFkZXJzKSk7XG4gICAgcmV0dXJuIE11dGFibGVSZXF1ZXN0Q29va2llc0FkYXB0ZXIud3JhcChjb29raWVzLCBvblVwZGF0ZUNvb2tpZXMpO1xufVxuZXhwb3J0IGNvbnN0IFJlcXVlc3RBc3luY1N0b3JhZ2VXcmFwcGVyID0ge1xuICAgIC8qKlxuICAgKiBXcmFwIHRoZSBjYWxsYmFjayB3aXRoIHRoZSBnaXZlbiBzdG9yZSBzbyBpdCBjYW4gYWNjZXNzIHRoZSB1bmRlcmx5aW5nXG4gICAqIHN0b3JlIHVzaW5nIGhvb2tzLlxuICAgKlxuICAgKiBAcGFyYW0gc3RvcmFnZSB1bmRlcmx5aW5nIHN0b3JhZ2Ugb2JqZWN0IHJldHVybmVkIGJ5IHRoZSBtb2R1bGVcbiAgICogQHBhcmFtIGNvbnRleHQgY29udGV4dCB0byBzZWVkIHRoZSBzdG9yZVxuICAgKiBAcGFyYW0gY2FsbGJhY2sgZnVuY3Rpb24gdG8gY2FsbCB3aXRoaW4gdGhlIHNjb3BlIG9mIHRoZSBjb250ZXh0XG4gICAqIEByZXR1cm5zIHRoZSByZXN1bHQgcmV0dXJuZWQgYnkgdGhlIGNhbGxiYWNrXG4gICAqLyB3cmFwIChzdG9yYWdlLCB7IHJlcSwgcmVzLCByZW5kZXJPcHRzIH0sIGNhbGxiYWNrKSB7XG4gICAgICAgIGxldCBwcmV2aWV3UHJvcHMgPSB1bmRlZmluZWQ7XG4gICAgICAgIGlmIChyZW5kZXJPcHRzICYmIFwicHJldmlld1Byb3BzXCIgaW4gcmVuZGVyT3B0cykge1xuICAgICAgICAgICAgLy8gVE9ETzogaW52ZXN0aWdhdGUgd2h5IHByZXZpZXdQcm9wcyBpc24ndCBvbiBSZW5kZXJPcHRzXG4gICAgICAgICAgICBwcmV2aWV3UHJvcHMgPSByZW5kZXJPcHRzLnByZXZpZXdQcm9wcztcbiAgICAgICAgfVxuICAgICAgICBmdW5jdGlvbiBkZWZhdWx0T25VcGRhdGVDb29raWVzKGNvb2tpZXMpIHtcbiAgICAgICAgICAgIGlmIChyZXMpIHtcbiAgICAgICAgICAgICAgICByZXMuc2V0SGVhZGVyKFwiU2V0LUNvb2tpZVwiLCBjb29raWVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjYWNoZSA9IHt9O1xuICAgICAgICBjb25zdCBzdG9yZSA9IHtcbiAgICAgICAgICAgIGdldCBoZWFkZXJzICgpIHtcbiAgICAgICAgICAgICAgICBpZiAoIWNhY2hlLmhlYWRlcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gU2VhbCB0aGUgaGVhZGVycyBvYmplY3QgdGhhdCdsbCBmcmVlemUgb3V0IGFueSBtZXRob2RzIHRoYXQgY291bGRcbiAgICAgICAgICAgICAgICAgICAgLy8gbXV0YXRlIHRoZSB1bmRlcmx5aW5nIGRhdGEuXG4gICAgICAgICAgICAgICAgICAgIGNhY2hlLmhlYWRlcnMgPSBnZXRIZWFkZXJzKHJlcS5oZWFkZXJzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNhY2hlLmhlYWRlcnM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGNvb2tpZXMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUuY29va2llcykge1xuICAgICAgICAgICAgICAgICAgICAvLyBTZWFsIHRoZSBjb29raWVzIG9iamVjdCB0aGF0J2xsIGZyZWV6ZSBvdXQgYW55IG1ldGhvZHMgdGhhdCBjb3VsZFxuICAgICAgICAgICAgICAgICAgICAvLyBtdXRhdGUgdGhlIHVuZGVybHlpbmcgZGF0YS5cbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuY29va2llcyA9IGdldENvb2tpZXMocmVxLmhlYWRlcnMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuY29va2llcztcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgbXV0YWJsZUNvb2tpZXMgKCkge1xuICAgICAgICAgICAgICAgIGlmICghY2FjaGUubXV0YWJsZUNvb2tpZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUubXV0YWJsZUNvb2tpZXMgPSBnZXRNdXRhYmxlQ29va2llcyhyZXEuaGVhZGVycywgKHJlbmRlck9wdHMgPT0gbnVsbCA/IHZvaWQgMCA6IHJlbmRlck9wdHMub25VcGRhdGVDb29raWVzKSB8fCAocmVzID8gZGVmYXVsdE9uVXBkYXRlQ29va2llcyA6IHVuZGVmaW5lZCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUubXV0YWJsZUNvb2tpZXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZ2V0IGRyYWZ0TW9kZSAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjYWNoZS5kcmFmdE1vZGUpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FjaGUuZHJhZnRNb2RlID0gbmV3IERyYWZ0TW9kZVByb3ZpZGVyKHByZXZpZXdQcm9wcywgcmVxLCB0aGlzLmNvb2tpZXMsIHRoaXMubXV0YWJsZUNvb2tpZXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY2FjaGUuZHJhZnRNb2RlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gc3RvcmFnZS5ydW4oc3RvcmUsIGNhbGxiYWNrLCBzdG9yZSk7XG4gICAgfVxufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdC1hc3luYy1zdG9yYWdlLXdyYXBwZXIuanMubWFwIl0sIm5hbWVzIjpbIkZMSUdIVF9QQVJBTUVURVJTIiwiSGVhZGVyc0FkYXB0ZXIiLCJNdXRhYmxlUmVxdWVzdENvb2tpZXNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXNBZGFwdGVyIiwiUmVxdWVzdENvb2tpZXMiLCJEcmFmdE1vZGVQcm92aWRlciIsImdldEhlYWRlcnMiLCJoZWFkZXJzIiwiY2xlYW5lZCIsImZyb20iLCJwYXJhbSIsImRlbGV0ZSIsInRvU3RyaW5nIiwidG9Mb3dlckNhc2UiLCJzZWFsIiwiZ2V0Q29va2llcyIsImNvb2tpZXMiLCJnZXRNdXRhYmxlQ29va2llcyIsIm9uVXBkYXRlQ29va2llcyIsIndyYXAiLCJSZXF1ZXN0QXN5bmNTdG9yYWdlV3JhcHBlciIsInN0b3JhZ2UiLCJyZXEiLCJyZXMiLCJyZW5kZXJPcHRzIiwiY2FsbGJhY2siLCJwcmV2aWV3UHJvcHMiLCJ1bmRlZmluZWQiLCJkZWZhdWx0T25VcGRhdGVDb29raWVzIiwic2V0SGVhZGVyIiwiY2FjaGUiLCJzdG9yZSIsIm11dGFibGVDb29raWVzIiwiZHJhZnRNb2RlIiwicnVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/internal-utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/internal-utils.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stripInternalHeaders: () => (/* binding */ stripInternalHeaders),\n/* harmony export */   stripInternalQueries: () => (/* binding */ stripInternalQueries),\n/* harmony export */   stripInternalSearchParams: () => (/* binding */ stripInternalSearchParams)\n/* harmony export */ });\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _shared_lib_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../shared/lib/constants */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/constants.js\");\n\n\nconst INTERNAL_QUERY_NAMES = [\n    \"__nextFallback\",\n    \"__nextLocale\",\n    \"__nextInferredLocaleFromDefault\",\n    \"__nextDefaultLocale\",\n    \"__nextIsNotFound\",\n    _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_0__.NEXT_RSC_UNION_QUERY\n];\nconst EDGE_EXTENDED_INTERNAL_QUERY_NAMES = [\n    \"__nextDataReq\"\n];\nfunction stripInternalQueries(query) {\n    for (const name of INTERNAL_QUERY_NAMES){\n        delete query[name];\n    }\n}\nfunction stripInternalSearchParams(url, isEdge) {\n    const isStringUrl = typeof url === \"string\";\n    const instance = isStringUrl ? new URL(url) : url;\n    for (const name of INTERNAL_QUERY_NAMES){\n        instance.searchParams.delete(name);\n    }\n    if (isEdge) {\n        for (const name of EDGE_EXTENDED_INTERNAL_QUERY_NAMES){\n            instance.searchParams.delete(name);\n        }\n    }\n    return isStringUrl ? instance.toString() : instance;\n}\n/**\n * Strip internal headers from the request headers.\n *\n * @param headers the headers to strip of internal headers\n */ function stripInternalHeaders(headers) {\n    for (const key of _shared_lib_constants__WEBPACK_IMPORTED_MODULE_1__.INTERNAL_HEADERS){\n        delete headers[key];\n    }\n} //# sourceMappingURL=internal-utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL2ludGVybmFsLXV0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStFO0FBQ3BCO0FBQzNELE1BQU1FLHVCQUF1QjtJQUN6QjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0FGLHVGQUFvQkE7Q0FDdkI7QUFDRCxNQUFNRyxxQ0FBcUM7SUFDdkM7Q0FDSDtBQUNNLFNBQVNDLHFCQUFxQkMsS0FBSztJQUN0QyxLQUFLLE1BQU1DLFFBQVFKLHFCQUFxQjtRQUNwQyxPQUFPRyxLQUFLLENBQUNDLEtBQUs7SUFDdEI7QUFDSjtBQUNPLFNBQVNDLDBCQUEwQkMsR0FBRyxFQUFFQyxNQUFNO0lBQ2pELE1BQU1DLGNBQWMsT0FBT0YsUUFBUTtJQUNuQyxNQUFNRyxXQUFXRCxjQUFjLElBQUlFLElBQUlKLE9BQU9BO0lBQzlDLEtBQUssTUFBTUYsUUFBUUoscUJBQXFCO1FBQ3BDUyxTQUFTRSxZQUFZLENBQUNDLE1BQU0sQ0FBQ1I7SUFDakM7SUFDQSxJQUFJRyxRQUFRO1FBQ1IsS0FBSyxNQUFNSCxRQUFRSCxtQ0FBbUM7WUFDbERRLFNBQVNFLFlBQVksQ0FBQ0MsTUFBTSxDQUFDUjtRQUNqQztJQUNKO0lBQ0EsT0FBT0ksY0FBY0MsU0FBU0ksUUFBUSxLQUFLSjtBQUMvQztBQUNBOzs7O0NBSUMsR0FBVSxTQUFTSyxxQkFBcUJDLE9BQU87SUFDNUMsS0FBSyxNQUFNQyxPQUFPakIsbUVBQWdCQSxDQUFDO1FBQy9CLE9BQU9nQixPQUFPLENBQUNDLElBQUk7SUFDdkI7QUFDSixFQUVBLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvaW50ZXJuYWwtdXRpbHMuanM/YjMyYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBORVhUX1JTQ19VTklPTl9RVUVSWSB9IGZyb20gXCIuLi9jbGllbnQvY29tcG9uZW50cy9hcHAtcm91dGVyLWhlYWRlcnNcIjtcbmltcG9ydCB7IElOVEVSTkFMX0hFQURFUlMgfSBmcm9tIFwiLi4vc2hhcmVkL2xpYi9jb25zdGFudHNcIjtcbmNvbnN0IElOVEVSTkFMX1FVRVJZX05BTUVTID0gW1xuICAgIFwiX19uZXh0RmFsbGJhY2tcIixcbiAgICBcIl9fbmV4dExvY2FsZVwiLFxuICAgIFwiX19uZXh0SW5mZXJyZWRMb2NhbGVGcm9tRGVmYXVsdFwiLFxuICAgIFwiX19uZXh0RGVmYXVsdExvY2FsZVwiLFxuICAgIFwiX19uZXh0SXNOb3RGb3VuZFwiLFxuICAgIE5FWFRfUlNDX1VOSU9OX1FVRVJZXG5dO1xuY29uc3QgRURHRV9FWFRFTkRFRF9JTlRFUk5BTF9RVUVSWV9OQU1FUyA9IFtcbiAgICBcIl9fbmV4dERhdGFSZXFcIlxuXTtcbmV4cG9ydCBmdW5jdGlvbiBzdHJpcEludGVybmFsUXVlcmllcyhxdWVyeSkge1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgIGRlbGV0ZSBxdWVyeVtuYW1lXTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gc3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyh1cmwsIGlzRWRnZSkge1xuICAgIGNvbnN0IGlzU3RyaW5nVXJsID0gdHlwZW9mIHVybCA9PT0gXCJzdHJpbmdcIjtcbiAgICBjb25zdCBpbnN0YW5jZSA9IGlzU3RyaW5nVXJsID8gbmV3IFVSTCh1cmwpIDogdXJsO1xuICAgIGZvciAoY29uc3QgbmFtZSBvZiBJTlRFUk5BTF9RVUVSWV9OQU1FUyl7XG4gICAgICAgIGluc3RhbmNlLnNlYXJjaFBhcmFtcy5kZWxldGUobmFtZSk7XG4gICAgfVxuICAgIGlmIChpc0VkZ2UpIHtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lIG9mIEVER0VfRVhURU5ERURfSU5URVJOQUxfUVVFUllfTkFNRVMpe1xuICAgICAgICAgICAgaW5zdGFuY2Uuc2VhcmNoUGFyYW1zLmRlbGV0ZShuYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaXNTdHJpbmdVcmwgPyBpbnN0YW5jZS50b1N0cmluZygpIDogaW5zdGFuY2U7XG59XG4vKipcbiAqIFN0cmlwIGludGVybmFsIGhlYWRlcnMgZnJvbSB0aGUgcmVxdWVzdCBoZWFkZXJzLlxuICpcbiAqIEBwYXJhbSBoZWFkZXJzIHRoZSBoZWFkZXJzIHRvIHN0cmlwIG9mIGludGVybmFsIGhlYWRlcnNcbiAqLyBleHBvcnQgZnVuY3Rpb24gc3RyaXBJbnRlcm5hbEhlYWRlcnMoaGVhZGVycykge1xuICAgIGZvciAoY29uc3Qga2V5IG9mIElOVEVSTkFMX0hFQURFUlMpe1xuICAgICAgICBkZWxldGUgaGVhZGVyc1trZXldO1xuICAgIH1cbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50ZXJuYWwtdXRpbHMuanMubWFwIl0sIm5hbWVzIjpbIk5FWFRfUlNDX1VOSU9OX1FVRVJZIiwiSU5URVJOQUxfSEVBREVSUyIsIklOVEVSTkFMX1FVRVJZX05BTUVTIiwiRURHRV9FWFRFTkRFRF9JTlRFUk5BTF9RVUVSWV9OQU1FUyIsInN0cmlwSW50ZXJuYWxRdWVyaWVzIiwicXVlcnkiLCJuYW1lIiwic3RyaXBJbnRlcm5hbFNlYXJjaFBhcmFtcyIsInVybCIsImlzRWRnZSIsImlzU3RyaW5nVXJsIiwiaW5zdGFuY2UiLCJVUkwiLCJzZWFyY2hQYXJhbXMiLCJkZWxldGUiLCJ0b1N0cmluZyIsInN0cmlwSW50ZXJuYWxIZWFkZXJzIiwiaGVhZGVycyIsImtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/trace/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppRenderSpan: () => (/* binding */ AppRenderSpan),\n/* harmony export */   AppRouteRouteHandlersSpan: () => (/* binding */ AppRouteRouteHandlersSpan),\n/* harmony export */   BaseServerSpan: () => (/* binding */ BaseServerSpan),\n/* harmony export */   LoadComponentsSpan: () => (/* binding */ LoadComponentsSpan),\n/* harmony export */   NextNodeServerSpan: () => (/* binding */ NextNodeServerSpan),\n/* harmony export */   NextServerSpan: () => (/* binding */ NextServerSpan),\n/* harmony export */   NextVanillaSpanAllowlist: () => (/* binding */ NextVanillaSpanAllowlist),\n/* harmony export */   NodeSpan: () => (/* binding */ NodeSpan),\n/* harmony export */   RenderSpan: () => (/* binding */ RenderSpan),\n/* harmony export */   ResolveMetadataSpan: () => (/* binding */ ResolveMetadataSpan),\n/* harmony export */   RouterSpan: () => (/* binding */ RouterSpan),\n/* harmony export */   StartServerSpan: () => (/* binding */ StartServerSpan)\n/* harmony export */ });\n/**\n * Contains predefined constants for the trace span name in next/server.\n *\n * Currently, next/server/tracer is internal implementation only for tracking\n * next.js's implementation only with known span names defined here.\n **/ // eslint typescript has a bug with TS enums\n/* eslint-disable no-shadow */ var BaseServerSpan;\n(function(BaseServerSpan) {\n    BaseServerSpan[\"handleRequest\"] = \"BaseServer.handleRequest\";\n    BaseServerSpan[\"run\"] = \"BaseServer.run\";\n    BaseServerSpan[\"pipe\"] = \"BaseServer.pipe\";\n    BaseServerSpan[\"getStaticHTML\"] = \"BaseServer.getStaticHTML\";\n    BaseServerSpan[\"render\"] = \"BaseServer.render\";\n    BaseServerSpan[\"renderToResponseWithComponents\"] = \"BaseServer.renderToResponseWithComponents\";\n    BaseServerSpan[\"renderToResponse\"] = \"BaseServer.renderToResponse\";\n    BaseServerSpan[\"renderToHTML\"] = \"BaseServer.renderToHTML\";\n    BaseServerSpan[\"renderError\"] = \"BaseServer.renderError\";\n    BaseServerSpan[\"renderErrorToResponse\"] = \"BaseServer.renderErrorToResponse\";\n    BaseServerSpan[\"renderErrorToHTML\"] = \"BaseServer.renderErrorToHTML\";\n    BaseServerSpan[\"render404\"] = \"BaseServer.render404\";\n})(BaseServerSpan || (BaseServerSpan = {}));\nvar LoadComponentsSpan;\n(function(LoadComponentsSpan) {\n    LoadComponentsSpan[\"loadDefaultErrorComponents\"] = \"LoadComponents.loadDefaultErrorComponents\";\n    LoadComponentsSpan[\"loadComponents\"] = \"LoadComponents.loadComponents\";\n})(LoadComponentsSpan || (LoadComponentsSpan = {}));\nvar NextServerSpan;\n(function(NextServerSpan) {\n    NextServerSpan[\"getRequestHandler\"] = \"NextServer.getRequestHandler\";\n    NextServerSpan[\"getServer\"] = \"NextServer.getServer\";\n    NextServerSpan[\"getServerRequestHandler\"] = \"NextServer.getServerRequestHandler\";\n    NextServerSpan[\"createServer\"] = \"createServer.createServer\";\n})(NextServerSpan || (NextServerSpan = {}));\nvar NextNodeServerSpan;\n(function(NextNodeServerSpan) {\n    NextNodeServerSpan[\"compression\"] = \"NextNodeServer.compression\";\n    NextNodeServerSpan[\"getBuildId\"] = \"NextNodeServer.getBuildId\";\n    NextNodeServerSpan[\"generateStaticRoutes\"] = \"NextNodeServer.generateStaticRoutes\";\n    NextNodeServerSpan[\"generateFsStaticRoutes\"] = \"NextNodeServer.generateFsStaticRoutes\";\n    NextNodeServerSpan[\"generatePublicRoutes\"] = \"NextNodeServer.generatePublicRoutes\";\n    NextNodeServerSpan[\"generateImageRoutes\"] = \"NextNodeServer.generateImageRoutes.route\";\n    NextNodeServerSpan[\"sendRenderResult\"] = \"NextNodeServer.sendRenderResult\";\n    NextNodeServerSpan[\"proxyRequest\"] = \"NextNodeServer.proxyRequest\";\n    NextNodeServerSpan[\"runApi\"] = \"NextNodeServer.runApi\";\n    NextNodeServerSpan[\"render\"] = \"NextNodeServer.render\";\n    NextNodeServerSpan[\"renderHTML\"] = \"NextNodeServer.renderHTML\";\n    NextNodeServerSpan[\"imageOptimizer\"] = \"NextNodeServer.imageOptimizer\";\n    NextNodeServerSpan[\"getPagePath\"] = \"NextNodeServer.getPagePath\";\n    NextNodeServerSpan[\"getRoutesManifest\"] = \"NextNodeServer.getRoutesManifest\";\n    NextNodeServerSpan[\"findPageComponents\"] = \"NextNodeServer.findPageComponents\";\n    NextNodeServerSpan[\"getFontManifest\"] = \"NextNodeServer.getFontManifest\";\n    NextNodeServerSpan[\"getServerComponentManifest\"] = \"NextNodeServer.getServerComponentManifest\";\n    NextNodeServerSpan[\"getRequestHandler\"] = \"NextNodeServer.getRequestHandler\";\n    NextNodeServerSpan[\"renderToHTML\"] = \"NextNodeServer.renderToHTML\";\n    NextNodeServerSpan[\"renderError\"] = \"NextNodeServer.renderError\";\n    NextNodeServerSpan[\"renderErrorToHTML\"] = \"NextNodeServer.renderErrorToHTML\";\n    NextNodeServerSpan[\"render404\"] = \"NextNodeServer.render404\";\n    NextNodeServerSpan[\"route\"] = \"route\";\n    NextNodeServerSpan[\"onProxyReq\"] = \"onProxyReq\";\n    NextNodeServerSpan[\"apiResolver\"] = \"apiResolver\";\n    NextNodeServerSpan[\"internalFetch\"] = \"internalFetch\";\n})(NextNodeServerSpan || (NextNodeServerSpan = {}));\nvar StartServerSpan;\n(function(StartServerSpan) {\n    StartServerSpan[\"startServer\"] = \"startServer.startServer\";\n})(StartServerSpan || (StartServerSpan = {}));\nvar RenderSpan;\n(function(RenderSpan) {\n    RenderSpan[\"getServerSideProps\"] = \"Render.getServerSideProps\";\n    RenderSpan[\"getStaticProps\"] = \"Render.getStaticProps\";\n    RenderSpan[\"renderToString\"] = \"Render.renderToString\";\n    RenderSpan[\"renderDocument\"] = \"Render.renderDocument\";\n    RenderSpan[\"createBodyResult\"] = \"Render.createBodyResult\";\n})(RenderSpan || (RenderSpan = {}));\nvar AppRenderSpan;\n(function(AppRenderSpan) {\n    AppRenderSpan[\"renderToString\"] = \"AppRender.renderToString\";\n    AppRenderSpan[\"renderToReadableStream\"] = \"AppRender.renderToReadableStream\";\n    AppRenderSpan[\"getBodyResult\"] = \"AppRender.getBodyResult\";\n    AppRenderSpan[\"fetch\"] = \"AppRender.fetch\";\n})(AppRenderSpan || (AppRenderSpan = {}));\nvar RouterSpan;\n(function(RouterSpan) {\n    RouterSpan[\"executeRoute\"] = \"Router.executeRoute\";\n})(RouterSpan || (RouterSpan = {}));\nvar NodeSpan;\n(function(NodeSpan) {\n    NodeSpan[\"runHandler\"] = \"Node.runHandler\";\n})(NodeSpan || (NodeSpan = {}));\nvar AppRouteRouteHandlersSpan;\n(function(AppRouteRouteHandlersSpan) {\n    AppRouteRouteHandlersSpan[\"runHandler\"] = \"AppRouteRouteHandlers.runHandler\";\n})(AppRouteRouteHandlersSpan || (AppRouteRouteHandlersSpan = {}));\nvar ResolveMetadataSpan;\n(function(ResolveMetadataSpan) {\n    ResolveMetadataSpan[\"generateMetadata\"] = \"ResolveMetadata.generateMetadata\";\n    ResolveMetadataSpan[\"generateViewport\"] = \"ResolveMetadata.generateViewport\";\n})(ResolveMetadataSpan || (ResolveMetadataSpan = {}));\n// This list is used to filter out spans that are not relevant to the user\nconst NextVanillaSpanAllowlist = [\n    \"BaseServer.handleRequest\",\n    \"Render.getServerSideProps\",\n    \"Render.getStaticProps\",\n    \"AppRender.fetch\",\n    \"AppRender.getBodyResult\",\n    \"Render.renderDocument\",\n    \"Node.runHandler\",\n    \"AppRouteRouteHandlers.runHandler\",\n    \"ResolveMetadata.generateMetadata\",\n    \"ResolveMetadata.generateViewport\"\n];\n //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/lib/trace/tracer.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SpanKind: () => (/* binding */ SpanKind),\n/* harmony export */   SpanStatusCode: () => (/* binding */ SpanStatusCode),\n/* harmony export */   getTracer: () => (/* binding */ getTracer)\n/* harmony export */ });\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/constants.js\");\n\nlet api;\n// we want to allow users to use their own version of @opentelemetry/api if they\n// want to, so we try to require it first, and if it fails we fall back to the\n// version that is bundled with Next.js\n// this is because @opentelemetry/api has to be synced with the version of\n// @opentelemetry/tracing that is used, and we don't want to force users to use\n// the version that is bundled with Next.js.\n// the API is ~stable, so this should be fine\nif (true) {\n    api = __webpack_require__(/*! @opentelemetry/api */ \"(middleware)/./node_modules/next/dist/compiled/@opentelemetry/api/index.js\");\n} else {}\nconst { context, propagation, trace, SpanStatusCode, SpanKind, ROOT_CONTEXT } = api;\nconst isPromise = (p)=>{\n    return p !== null && typeof p === \"object\" && typeof p.then === \"function\";\n};\nconst closeSpanWithError = (span, error)=>{\n    if ((error == null ? void 0 : error.bubble) === true) {\n        span.setAttribute(\"next.bubble\", true);\n    } else {\n        if (error) {\n            span.recordException(error);\n        }\n        span.setStatus({\n            code: SpanStatusCode.ERROR,\n            message: error == null ? void 0 : error.message\n        });\n    }\n    span.end();\n};\n/** we use this map to propagate attributes from nested spans to the top span */ const rootSpanAttributesStore = new Map();\nconst rootSpanIdKey = api.createContextKey(\"next.rootSpanId\");\nlet lastSpanId = 0;\nconst getSpanId = ()=>lastSpanId++;\nclass NextTracerImpl {\n    /**\n   * Returns an instance to the trace with configured name.\n   * Since wrap / trace can be defined in any place prior to actual trace subscriber initialization,\n   * This should be lazily evaluated.\n   */ getTracerInstance() {\n        return trace.getTracer(\"next.js\", \"0.0.1\");\n    }\n    getContext() {\n        return context;\n    }\n    getActiveScopeSpan() {\n        return trace.getSpan(context == null ? void 0 : context.active());\n    }\n    withPropagatedContext(carrier, fn, getter) {\n        const activeContext = context.active();\n        if (trace.getSpanContext(activeContext)) {\n            // Active span is already set, too late to propagate.\n            return fn();\n        }\n        const remoteContext = propagation.extract(activeContext, carrier, getter);\n        return context.with(remoteContext, fn);\n    }\n    trace(...args) {\n        var _trace_getSpanContext;\n        const [type, fnOrOptions, fnOrEmpty] = args;\n        // coerce options form overload\n        const { fn, options } = typeof fnOrOptions === \"function\" ? {\n            fn: fnOrOptions,\n            options: {}\n        } : {\n            fn: fnOrEmpty,\n            options: {\n                ...fnOrOptions\n            }\n        };\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.NextVanillaSpanAllowlist.includes(type) && process.env.NEXT_OTEL_VERBOSE !== \"1\" || options.hideSpan) {\n            return fn();\n        }\n        const spanName = options.spanName ?? type;\n        // Trying to get active scoped span to assign parent. If option specifies parent span manually, will try to use it.\n        let spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        let isRootSpan = false;\n        if (!spanContext) {\n            spanContext = ROOT_CONTEXT;\n            isRootSpan = true;\n        } else if ((_trace_getSpanContext = trace.getSpanContext(spanContext)) == null ? void 0 : _trace_getSpanContext.isRemote) {\n            isRootSpan = true;\n        }\n        const spanId = getSpanId();\n        options.attributes = {\n            \"next.span_name\": spanName,\n            \"next.span_type\": type,\n            ...options.attributes\n        };\n        return context.with(spanContext.setValue(rootSpanIdKey, spanId), ()=>this.getTracerInstance().startActiveSpan(spanName, options, (span)=>{\n                const onCleanup = ()=>{\n                    rootSpanAttributesStore.delete(spanId);\n                };\n                if (isRootSpan) {\n                    rootSpanAttributesStore.set(spanId, new Map(Object.entries(options.attributes ?? {})));\n                }\n                try {\n                    if (fn.length > 1) {\n                        return fn(span, (err)=>closeSpanWithError(span, err));\n                    }\n                    const result = fn(span);\n                    if (isPromise(result)) {\n                        result.then(()=>span.end(), (err)=>closeSpanWithError(span, err)).finally(onCleanup);\n                    } else {\n                        span.end();\n                        onCleanup();\n                    }\n                    return result;\n                } catch (err) {\n                    closeSpanWithError(span, err);\n                    onCleanup();\n                    throw err;\n                }\n            }));\n    }\n    wrap(...args) {\n        const tracer = this;\n        const [name, options, fn] = args.length === 3 ? args : [\n            args[0],\n            {},\n            args[1]\n        ];\n        if (!_constants__WEBPACK_IMPORTED_MODULE_0__.NextVanillaSpanAllowlist.includes(name) && process.env.NEXT_OTEL_VERBOSE !== \"1\") {\n            return fn;\n        }\n        return function() {\n            let optionsObj = options;\n            if (typeof optionsObj === \"function\" && typeof fn === \"function\") {\n                optionsObj = optionsObj.apply(this, arguments);\n            }\n            const lastArgId = arguments.length - 1;\n            const cb = arguments[lastArgId];\n            if (typeof cb === \"function\") {\n                const scopeBoundCb = tracer.getContext().bind(context.active(), cb);\n                return tracer.trace(name, optionsObj, (_span, done)=>{\n                    arguments[lastArgId] = function(err) {\n                        done == null ? void 0 : done(err);\n                        return scopeBoundCb.apply(this, arguments);\n                    };\n                    return fn.apply(this, arguments);\n                });\n            } else {\n                return tracer.trace(name, optionsObj, ()=>fn.apply(this, arguments));\n            }\n        };\n    }\n    startSpan(...args) {\n        const [type, options] = args;\n        const spanContext = this.getSpanContext((options == null ? void 0 : options.parentSpan) ?? this.getActiveScopeSpan());\n        return this.getTracerInstance().startSpan(type, options, spanContext);\n    }\n    getSpanContext(parentSpan) {\n        const spanContext = parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined;\n        return spanContext;\n    }\n    getRootSpanAttributes() {\n        const spanId = context.active().getValue(rootSpanIdKey);\n        return rootSpanAttributesStore.get(spanId);\n    }\n}\nconst getTracer = (()=>{\n    const tracer = new NextTracerImpl();\n    return ()=>tracer;\n})();\n //# sourceMappingURL=tracer.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/adapter.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/adapter.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   adapter: () => (/* binding */ adapter)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./spec-extension/fetch-event */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\");\n/* harmony import */ var _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./spec-extension/request */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\");\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n/* harmony import */ var _shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../shared/lib/router/utils/relativize-url */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\");\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _internal_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../internal-utils */ \"(middleware)/./node_modules/next/dist/esm/server/internal-utils.js\");\n/* harmony import */ var _shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../shared/lib/router/utils/app-paths */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\");\n/* harmony import */ var _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../client/components/app-router-headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/app-router-headers.js\");\n/* harmony import */ var _lib_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../lib/constants */ \"(middleware)/./node_modules/next/dist/esm/lib/constants.js\");\n/* harmony import */ var _globals__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./globals */ \"(middleware)/./node_modules/next/dist/esm/server/web/globals.js\");\n/* harmony import */ var _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../async-storage/request-async-storage-wrapper */ \"(middleware)/./node_modules/next/dist/esm/server/async-storage/request-async-storage-wrapper.js\");\n/* harmony import */ var _client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../client/components/request-async-storage.external */ \"(shared)/./node_modules/next/dist/esm/client/components/request-async-storage.external.js\");\n/* harmony import */ var _lib_trace_tracer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../lib/trace/tracer */ \"(middleware)/./node_modules/next/dist/esm/server/lib/trace/tracer.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass NextRequestHint extends _spec_extension_request__WEBPACK_IMPORTED_MODULE_3__.NextRequest {\n    constructor(params){\n        super(params.input, params.init);\n        this.sourcePage = params.page;\n    }\n    get request() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    respondWith() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    waitUntil() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n}\nconst headersGetter = {\n    keys: (headers)=>Array.from(headers.keys()),\n    get: (headers, key)=>headers.get(key) ?? undefined\n};\nlet propagator = (request, fn)=>{\n    const tracer = (0,_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_14__.getTracer)();\n    return tracer.withPropagatedContext(request.headers, fn, headersGetter);\n};\nlet testApisIntercepted = false;\nfunction ensureTestApisIntercepted() {\n    if (!testApisIntercepted) {\n        testApisIntercepted = true;\n        if (process.env.NEXT_PRIVATE_TEST_PROXY === \"true\") {\n            const { interceptTestApis, wrapRequestHandler } = __webpack_require__(/*! next/dist/experimental/testmode/server-edge */ \"(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js\");\n            interceptTestApis();\n            propagator = wrapRequestHandler(propagator);\n        }\n    }\n}\nasync function adapter(params) {\n    ensureTestApisIntercepted();\n    await (0,_globals__WEBPACK_IMPORTED_MODULE_11__.ensureInstrumentationRegistered)();\n    // TODO-APP: use explicit marker for this\n    const isEdgeRendering = typeof self.__BUILD_MANIFEST !== \"undefined\";\n    const prerenderManifest = typeof self.__PRERENDER_MANIFEST === \"string\" ? JSON.parse(self.__PRERENDER_MANIFEST) : undefined;\n    params.request.url = (0,_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_8__.normalizeRscURL)(params.request.url);\n    const requestUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(params.request.url, {\n        headers: params.request.headers,\n        nextConfig: params.request.nextConfig\n    });\n    // Iterator uses an index to keep track of the current iteration. Because of deleting and appending below we can't just use the iterator.\n    // Instead we use the keys before iteration.\n    const keys = [\n        ...requestUrl.searchParams.keys()\n    ];\n    for (const key of keys){\n        const value = requestUrl.searchParams.getAll(key);\n        if (key !== _lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX && key.startsWith(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX)) {\n            const normalizedKey = key.substring(_lib_constants__WEBPACK_IMPORTED_MODULE_10__.NEXT_QUERY_PARAM_PREFIX.length);\n            requestUrl.searchParams.delete(normalizedKey);\n            for (const val of value){\n                requestUrl.searchParams.append(normalizedKey, val);\n            }\n            requestUrl.searchParams.delete(key);\n        }\n    }\n    // Ensure users only see page requests, never data requests.\n    const buildId = requestUrl.buildId;\n    requestUrl.buildId = \"\";\n    const isDataReq = params.request.headers[\"x-nextjs-data\"];\n    if (isDataReq && requestUrl.pathname === \"/index\") {\n        requestUrl.pathname = \"/\";\n    }\n    const requestHeaders = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.fromNodeOutgoingHttpHeaders)(params.request.headers);\n    const flightHeaders = new Map();\n    // Parameters should only be stripped for middleware\n    if (!isEdgeRendering) {\n        for (const param of _client_components_app_router_headers__WEBPACK_IMPORTED_MODULE_9__.FLIGHT_PARAMETERS){\n            const key = param.toString().toLowerCase();\n            const value = requestHeaders.get(key);\n            if (value) {\n                flightHeaders.set(key, requestHeaders.get(key));\n                requestHeaders.delete(key);\n            }\n        }\n    }\n    const normalizeUrl =  false ? 0 : requestUrl;\n    const request = new NextRequestHint({\n        page: params.page,\n        // Strip internal query parameters off the request.\n        input: (0,_internal_utils__WEBPACK_IMPORTED_MODULE_7__.stripInternalSearchParams)(normalizeUrl, true).toString(),\n        init: {\n            body: params.request.body,\n            geo: params.request.geo,\n            headers: requestHeaders,\n            ip: params.request.ip,\n            method: params.request.method,\n            nextConfig: params.request.nextConfig,\n            signal: params.request.signal\n        }\n    });\n    /**\n   * This allows to identify the request as a data request. The user doesn't\n   * need to know about this property neither use it. We add it for testing\n   * purposes.\n   */ if (isDataReq) {\n        Object.defineProperty(request, \"__isData\", {\n            enumerable: false,\n            value: true\n        });\n    }\n    if (!globalThis.__incrementalCache && params.IncrementalCache) {\n        globalThis.__incrementalCache = new params.IncrementalCache({\n            appDir: true,\n            fetchCache: true,\n            minimalMode: \"development\" !== \"development\",\n            fetchCacheKeyPrefix: undefined,\n            dev: \"development\" === \"development\",\n            requestHeaders: params.request.headers,\n            requestProtocol: \"https\",\n            getPrerenderManifest: ()=>{\n                return {\n                    version: -1,\n                    routes: {},\n                    dynamicRoutes: {},\n                    notFoundRoutes: [],\n                    preview: {\n                        previewModeId: \"development-id\"\n                    }\n                };\n            }\n        });\n    }\n    const event = new _spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.NextFetchEvent({\n        request,\n        page: params.page\n    });\n    let response;\n    let cookiesFromResponse;\n    response = await propagator(request, ()=>{\n        // we only care to make async storage available for middleware\n        const isMiddleware = params.page === \"/middleware\" || params.page === \"/src/middleware\";\n        if (isMiddleware) {\n            return _async_storage_request_async_storage_wrapper__WEBPACK_IMPORTED_MODULE_12__.RequestAsyncStorageWrapper.wrap(_client_components_request_async_storage_external__WEBPACK_IMPORTED_MODULE_13__.requestAsyncStorage, {\n                req: request,\n                renderOpts: {\n                    onUpdateCookies: (cookies)=>{\n                        cookiesFromResponse = cookies;\n                    },\n                    // @ts-expect-error: TODO: investigate why previewProps isn't on RenderOpts\n                    previewProps: (prerenderManifest == null ? void 0 : prerenderManifest.preview) || {\n                        previewModeId: \"development-id\",\n                        previewModeEncryptionKey: \"\",\n                        previewModeSigningKey: \"\"\n                    }\n                }\n            }, ()=>params.handler(request, event));\n        }\n        return params.handler(request, event);\n    });\n    // check if response is a Response object\n    if (response && !(response instanceof Response)) {\n        throw new TypeError(\"Expected an instance of Response to be returned\");\n    }\n    if (response && cookiesFromResponse) {\n        response.headers.set(\"set-cookie\", cookiesFromResponse);\n    }\n    /**\n   * For rewrites we must always include the locale in the final pathname\n   * so we re-create the NextURL forcing it to include it when the it is\n   * an internal rewrite. Also we make sure the outgoing rewrite URL is\n   * a data URL if the request was a data request.\n   */ const rewrite = response == null ? void 0 : response.headers.get(\"x-middleware-rewrite\");\n    if (response && rewrite) {\n        const rewriteUrl = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(rewrite, {\n            forceLocale: true,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        if (true) {\n            if (rewriteUrl.host === request.nextUrl.host) {\n                rewriteUrl.buildId = buildId || rewriteUrl.buildId;\n                response.headers.set(\"x-middleware-rewrite\", String(rewriteUrl));\n            }\n        }\n        /**\n     * When the request is a data request we must show if there was a rewrite\n     * with an internal header so the client knows which component to load\n     * from the data request.\n     */ const relativizedRewrite = (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(rewriteUrl), String(requestUrl));\n        if (isDataReq && // if the rewrite is external and external rewrite\n        // resolving config is enabled don't add this header\n        // so the upstream app can set it instead\n        !(undefined && 0)) {\n            response.headers.set(\"x-nextjs-rewrite\", relativizedRewrite);\n        }\n    }\n    /**\n   * For redirects we will not include the locale in case when it is the\n   * default and we must also make sure the outgoing URL is a data one if\n   * the incoming request was a data request.\n   */ const redirect = response == null ? void 0 : response.headers.get(\"Location\");\n    if (response && redirect && !isEdgeRendering) {\n        const redirectURL = new _next_url__WEBPACK_IMPORTED_MODULE_6__.NextURL(redirect, {\n            forceLocale: false,\n            headers: params.request.headers,\n            nextConfig: params.request.nextConfig\n        });\n        /**\n     * Responses created from redirects have immutable headers so we have\n     * to clone the response to be able to modify it.\n     */ response = new Response(response.body, response);\n        if (true) {\n            if (redirectURL.host === request.nextUrl.host) {\n                redirectURL.buildId = buildId || redirectURL.buildId;\n                response.headers.set(\"Location\", String(redirectURL));\n            }\n        }\n        /**\n     * When the request is a data request we can't use the location header as\n     * it may end up with CORS error. Instead we map to an internal header so\n     * the client knows the destination.\n     */ if (isDataReq) {\n            response.headers.delete(\"Location\");\n            response.headers.set(\"x-nextjs-redirect\", (0,_shared_lib_router_utils_relativize_url__WEBPACK_IMPORTED_MODULE_5__.relativizeURL)(String(redirectURL), String(requestUrl)));\n        }\n    }\n    const finalResponse = response ? response : _spec_extension_response__WEBPACK_IMPORTED_MODULE_4__.NextResponse.next();\n    // Flight headers are not overridable / removable so they are applied at the end.\n    const middlewareOverrideHeaders = finalResponse.headers.get(\"x-middleware-override-headers\");\n    const overwrittenHeaders = [];\n    if (middlewareOverrideHeaders) {\n        for (const [key, value] of flightHeaders){\n            finalResponse.headers.set(`x-middleware-request-${key}`, value);\n            overwrittenHeaders.push(key);\n        }\n        if (overwrittenHeaders.length > 0) {\n            finalResponse.headers.set(\"x-middleware-override-headers\", middlewareOverrideHeaders + \",\" + overwrittenHeaders.join(\",\"));\n        }\n    }\n    return {\n        response: finalResponse,\n        waitUntil: Promise.all(event[_spec_extension_fetch_event__WEBPACK_IMPORTED_MODULE_2__.waitUntilSymbol]),\n        fetchMetrics: request.fetchMetrics\n    };\n} //# sourceMappingURL=adapter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/adapter.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/error.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/error.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PageSignatureError: () => (/* binding */ PageSignatureError),\n/* harmony export */   RemovedPageError: () => (/* binding */ RemovedPageError),\n/* harmony export */   RemovedUAError: () => (/* binding */ RemovedUAError)\n/* harmony export */ });\nclass PageSignatureError extends Error {\n    constructor({ page }){\n        super(`The middleware \"${page}\" accepts an async API directly with the form:\n  \n  export function middleware(request, event) {\n    return NextResponse.redirect('/new-location')\n  }\n  \n  Read more: https://nextjs.org/docs/messages/middleware-new-signature\n  `);\n    }\n}\nclass RemovedPageError extends Error {\n    constructor(){\n        super(`The request.page has been deprecated in favour of \\`URLPattern\\`.\n  Read more: https://nextjs.org/docs/messages/middleware-request-page\n  `);\n    }\n}\nclass RemovedUAError extends Error {\n    constructor(){\n        super(`The request.ua has been removed in favour of \\`userAgent\\` function.\n  Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n  `);\n    }\n} //# sourceMappingURL=error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9lcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxNQUFNQSwyQkFBMkJDO0lBQ3BDQyxZQUFZLEVBQUVDLElBQUksRUFBRSxDQUFDO1FBQ2pCLEtBQUssQ0FBQyxDQUFDLGdCQUFnQixFQUFFQSxLQUFLOzs7Ozs7O0VBT3BDLENBQUM7SUFDQztBQUNKO0FBQ08sTUFBTUMseUJBQXlCSDtJQUNsQ0MsYUFBYTtRQUNULEtBQUssQ0FBQyxDQUFDOztFQUViLENBQUM7SUFDQztBQUNKO0FBQ08sTUFBTUcsdUJBQXVCSjtJQUNoQ0MsYUFBYTtRQUNULEtBQUssQ0FBQyxDQUFDOztFQUViLENBQUM7SUFDQztBQUNKLEVBRUEsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZXJyb3IuanM/ZWFkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUGFnZVNpZ25hdHVyZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHsgcGFnZSB9KXtcbiAgICAgICAgc3VwZXIoYFRoZSBtaWRkbGV3YXJlIFwiJHtwYWdlfVwiIGFjY2VwdHMgYW4gYXN5bmMgQVBJIGRpcmVjdGx5IHdpdGggdGhlIGZvcm06XG4gIFxuICBleHBvcnQgZnVuY3Rpb24gbWlkZGxld2FyZShyZXF1ZXN0LCBldmVudCkge1xuICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmVkaXJlY3QoJy9uZXctbG9jYXRpb24nKVxuICB9XG4gIFxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtbmV3LXNpZ25hdHVyZVxuICBgKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUmVtb3ZlZFBhZ2VFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcihgVGhlIHJlcXVlc3QucGFnZSBoYXMgYmVlbiBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBcXGBVUkxQYXR0ZXJuXFxgLlxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcmVxdWVzdC1wYWdlXG4gIGApO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSZW1vdmVkVUFFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3Rvcigpe1xuICAgICAgICBzdXBlcihgVGhlIHJlcXVlc3QudWEgaGFzIGJlZW4gcmVtb3ZlZCBpbiBmYXZvdXIgb2YgXFxgdXNlckFnZW50XFxgIGZ1bmN0aW9uLlxuICBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzL21pZGRsZXdhcmUtcGFyc2UtdXNlci1hZ2VudFxuICBgKTtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9yLmpzLm1hcCJdLCJuYW1lcyI6WyJQYWdlU2lnbmF0dXJlRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwicGFnZSIsIlJlbW92ZWRQYWdlRXJyb3IiLCJSZW1vdmVkVUFFcnJvciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/error.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js":
/*!************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/exports/next-response.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _spec_extension_response__WEBPACK_IMPORTED_MODULE_0__.NextResponse)\n/* harmony export */ });\n/* harmony import */ var _spec_extension_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../spec-extension/response */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\");\n// This file is for modularized imports for next/server to get fully-treeshaking.\n //# sourceMappingURL=next-response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9leHBvcnRzL25leHQtcmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxpRkFBaUY7QUFDWixDQUVyRSx5Q0FBeUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9leHBvcnRzL25leHQtcmVzcG9uc2UuanM/NjQxNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGZpbGUgaXMgZm9yIG1vZHVsYXJpemVkIGltcG9ydHMgZm9yIG5leHQvc2VydmVyIHRvIGdldCBmdWxseS10cmVlc2hha2luZy5cbmV4cG9ydCB7IE5leHRSZXNwb25zZSBhcyBkZWZhdWx0IH0gZnJvbSBcIi4uL3NwZWMtZXh0ZW5zaW9uL3Jlc3BvbnNlXCI7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5leHQtcmVzcG9uc2UuanMubWFwIl0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/globals.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/globals.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureInstrumentationRegistered: () => (/* binding */ ensureInstrumentationRegistered)\n/* harmony export */ });\nasync function registerInstrumentation() {\n    if (\"_ENTRIES\" in globalThis && _ENTRIES.middleware_instrumentation && _ENTRIES.middleware_instrumentation.register) {\n        try {\n            await _ENTRIES.middleware_instrumentation.register();\n        } catch (err) {\n            err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n            throw err;\n        }\n    }\n}\nlet registerInstrumentationPromise = null;\nfunction ensureInstrumentationRegistered() {\n    if (!registerInstrumentationPromise) {\n        registerInstrumentationPromise = registerInstrumentation();\n    }\n    return registerInstrumentationPromise;\n}\nfunction getUnsupportedModuleErrorMessage(module) {\n    // warning: if you change these messages, you must adjust how react-dev-overlay's middleware detects modules not found\n    return `The edge runtime does not support Node.js '${module}' module.\nLearn More: https://nextjs.org/docs/messages/node-module-in-edge-runtime`;\n}\nfunction __import_unsupported(moduleName) {\n    const proxy = new Proxy(function() {}, {\n        get (_obj, prop) {\n            if (prop === \"then\") {\n                return {};\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        construct () {\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        },\n        apply (_target, _this, args) {\n            if (typeof args[0] === \"function\") {\n                return args[0](proxy);\n            }\n            throw new Error(getUnsupportedModuleErrorMessage(moduleName));\n        }\n    });\n    return new Proxy({}, {\n        get: ()=>proxy\n    });\n}\nfunction enhanceGlobals() {\n    // The condition is true when the \"process\" module is provided\n    if (process !== __webpack_require__.g.process) {\n        // prefer local process but global.process has correct \"env\"\n        process.env = __webpack_require__.g.process.env;\n        __webpack_require__.g.process = process;\n    }\n    // to allow building code that import but does not use node.js modules,\n    // webpack will expect this function to exist in global scope\n    Object.defineProperty(globalThis, \"__import_unsupported\", {\n        value: __import_unsupported,\n        enumerable: false,\n        configurable: false\n    });\n    // Eagerly fire instrumentation hook to make the startup faster.\n    void ensureInstrumentationRegistered();\n}\nenhanceGlobals(); //# sourceMappingURL=globals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9nbG9iYWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxlQUFlQTtJQUNYLElBQUksY0FBY0MsY0FBY0MsU0FBU0MsMEJBQTBCLElBQUlELFNBQVNDLDBCQUEwQixDQUFDQyxRQUFRLEVBQUU7UUFDakgsSUFBSTtZQUNBLE1BQU1GLFNBQVNDLDBCQUEwQixDQUFDQyxRQUFRO1FBQ3RELEVBQUUsT0FBT0MsS0FBSztZQUNWQSxJQUFJQyxPQUFPLEdBQUcsQ0FBQyxzREFBc0QsRUFBRUQsSUFBSUMsT0FBTyxDQUFDLENBQUM7WUFDcEYsTUFBTUQ7UUFDVjtJQUNKO0FBQ0o7QUFDQSxJQUFJRSxpQ0FBaUM7QUFDOUIsU0FBU0M7SUFDWixJQUFJLENBQUNELGdDQUFnQztRQUNqQ0EsaUNBQWlDUDtJQUNyQztJQUNBLE9BQU9PO0FBQ1g7QUFDQSxTQUFTRSxpQ0FBaUNDLE1BQU07SUFDNUMsc0hBQXNIO0lBQ3RILE9BQU8sQ0FBQywyQ0FBMkMsRUFBRUEsT0FBTzt3RUFDUSxDQUFDO0FBQ3pFO0FBQ0EsU0FBU0MscUJBQXFCQyxVQUFVO0lBQ3BDLE1BQU1DLFFBQVEsSUFBSUMsTUFBTSxZQUFZLEdBQUc7UUFDbkNDLEtBQUtDLElBQUksRUFBRUMsSUFBSTtZQUNYLElBQUlBLFNBQVMsUUFBUTtnQkFDakIsT0FBTyxDQUFDO1lBQ1o7WUFDQSxNQUFNLElBQUlDLE1BQU1ULGlDQUFpQ0c7UUFDckQ7UUFDQU87WUFDSSxNQUFNLElBQUlELE1BQU1ULGlDQUFpQ0c7UUFDckQ7UUFDQVEsT0FBT0MsT0FBTyxFQUFFQyxLQUFLLEVBQUVDLElBQUk7WUFDdkIsSUFBSSxPQUFPQSxJQUFJLENBQUMsRUFBRSxLQUFLLFlBQVk7Z0JBQy9CLE9BQU9BLElBQUksQ0FBQyxFQUFFLENBQUNWO1lBQ25CO1lBQ0EsTUFBTSxJQUFJSyxNQUFNVCxpQ0FBaUNHO1FBQ3JEO0lBQ0o7SUFDQSxPQUFPLElBQUlFLE1BQU0sQ0FBQyxHQUFHO1FBQ2pCQyxLQUFLLElBQUlGO0lBQ2I7QUFDSjtBQUNBLFNBQVNXO0lBQ0wsOERBQThEO0lBQzlELElBQUlDLFlBQVlDLHFCQUFNQSxDQUFDRCxPQUFPLEVBQUU7UUFDNUIsNERBQTREO1FBQzVEQSxRQUFRRSxHQUFHLEdBQUdELHFCQUFNQSxDQUFDRCxPQUFPLENBQUNFLEdBQUc7UUFDaENELHFCQUFNQSxDQUFDRCxPQUFPLEdBQUdBO0lBQ3JCO0lBQ0EsdUVBQXVFO0lBQ3ZFLDZEQUE2RDtJQUM3REcsT0FBT0MsY0FBYyxDQUFDNUIsWUFBWSx3QkFBd0I7UUFDdEQ2QixPQUFPbkI7UUFDUG9CLFlBQVk7UUFDWkMsY0FBYztJQUNsQjtJQUNBLGdFQUFnRTtJQUNoRSxLQUFLeEI7QUFDVDtBQUNBZ0Isa0JBRUEsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvZ2xvYmFscy5qcz81YzZhIl0sInNvdXJjZXNDb250ZW50IjpbImFzeW5jIGZ1bmN0aW9uIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uKCkge1xuICAgIGlmIChcIl9FTlRSSUVTXCIgaW4gZ2xvYmFsVGhpcyAmJiBfRU5UUklFUy5taWRkbGV3YXJlX2luc3RydW1lbnRhdGlvbiAmJiBfRU5UUklFUy5taWRkbGV3YXJlX2luc3RydW1lbnRhdGlvbi5yZWdpc3Rlcikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgX0VOVFJJRVMubWlkZGxld2FyZV9pbnN0cnVtZW50YXRpb24ucmVnaXN0ZXIoKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBlcnIubWVzc2FnZSA9IGBBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSBsb2FkaW5nIGluc3RydW1lbnRhdGlvbiBob29rOiAke2Vyci5tZXNzYWdlfWA7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9XG59XG5sZXQgcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlID0gbnVsbDtcbmV4cG9ydCBmdW5jdGlvbiBlbnN1cmVJbnN0cnVtZW50YXRpb25SZWdpc3RlcmVkKCkge1xuICAgIGlmICghcmVnaXN0ZXJJbnN0cnVtZW50YXRpb25Qcm9taXNlKSB7XG4gICAgICAgIHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uUHJvbWlzZSA9IHJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uKCk7XG4gICAgfVxuICAgIHJldHVybiByZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2U7XG59XG5mdW5jdGlvbiBnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGUpIHtcbiAgICAvLyB3YXJuaW5nOiBpZiB5b3UgY2hhbmdlIHRoZXNlIG1lc3NhZ2VzLCB5b3UgbXVzdCBhZGp1c3QgaG93IHJlYWN0LWRldi1vdmVybGF5J3MgbWlkZGxld2FyZSBkZXRlY3RzIG1vZHVsZXMgbm90IGZvdW5kXG4gICAgcmV0dXJuIGBUaGUgZWRnZSBydW50aW1lIGRvZXMgbm90IHN1cHBvcnQgTm9kZS5qcyAnJHttb2R1bGV9JyBtb2R1bGUuXG5MZWFybiBNb3JlOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy9ub2RlLW1vZHVsZS1pbi1lZGdlLXJ1bnRpbWVgO1xufVxuZnVuY3Rpb24gX19pbXBvcnRfdW5zdXBwb3J0ZWQobW9kdWxlTmFtZSkge1xuICAgIGNvbnN0IHByb3h5ID0gbmV3IFByb3h5KGZ1bmN0aW9uKCkge30sIHtcbiAgICAgICAgZ2V0IChfb2JqLCBwcm9wKSB7XG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gXCJ0aGVuXCIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge307XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UobW9kdWxlTmFtZSkpO1xuICAgICAgICB9LFxuICAgICAgICBjb25zdHJ1Y3QgKCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGdldFVuc3VwcG9ydGVkTW9kdWxlRXJyb3JNZXNzYWdlKG1vZHVsZU5hbWUpKTtcbiAgICAgICAgfSxcbiAgICAgICAgYXBwbHkgKF90YXJnZXQsIF90aGlzLCBhcmdzKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGFyZ3NbMF0gPT09IFwiZnVuY3Rpb25cIikge1xuICAgICAgICAgICAgICAgIHJldHVybiBhcmdzWzBdKHByb3h5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihnZXRVbnN1cHBvcnRlZE1vZHVsZUVycm9yTWVzc2FnZShtb2R1bGVOYW1lKSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gbmV3IFByb3h5KHt9LCB7XG4gICAgICAgIGdldDogKCk9PnByb3h5XG4gICAgfSk7XG59XG5mdW5jdGlvbiBlbmhhbmNlR2xvYmFscygpIHtcbiAgICAvLyBUaGUgY29uZGl0aW9uIGlzIHRydWUgd2hlbiB0aGUgXCJwcm9jZXNzXCIgbW9kdWxlIGlzIHByb3ZpZGVkXG4gICAgaWYgKHByb2Nlc3MgIT09IGdsb2JhbC5wcm9jZXNzKSB7XG4gICAgICAgIC8vIHByZWZlciBsb2NhbCBwcm9jZXNzIGJ1dCBnbG9iYWwucHJvY2VzcyBoYXMgY29ycmVjdCBcImVudlwiXG4gICAgICAgIHByb2Nlc3MuZW52ID0gZ2xvYmFsLnByb2Nlc3MuZW52O1xuICAgICAgICBnbG9iYWwucHJvY2VzcyA9IHByb2Nlc3M7XG4gICAgfVxuICAgIC8vIHRvIGFsbG93IGJ1aWxkaW5nIGNvZGUgdGhhdCBpbXBvcnQgYnV0IGRvZXMgbm90IHVzZSBub2RlLmpzIG1vZHVsZXMsXG4gICAgLy8gd2VicGFjayB3aWxsIGV4cGVjdCB0aGlzIGZ1bmN0aW9uIHRvIGV4aXN0IGluIGdsb2JhbCBzY29wZVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShnbG9iYWxUaGlzLCBcIl9faW1wb3J0X3Vuc3VwcG9ydGVkXCIsIHtcbiAgICAgICAgdmFsdWU6IF9faW1wb3J0X3Vuc3VwcG9ydGVkLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZVxuICAgIH0pO1xuICAgIC8vIEVhZ2VybHkgZmlyZSBpbnN0cnVtZW50YXRpb24gaG9vayB0byBtYWtlIHRoZSBzdGFydHVwIGZhc3Rlci5cbiAgICB2b2lkIGVuc3VyZUluc3RydW1lbnRhdGlvblJlZ2lzdGVyZWQoKTtcbn1cbmVuaGFuY2VHbG9iYWxzKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdsb2JhbHMuanMubWFwIl0sIm5hbWVzIjpbInJlZ2lzdGVySW5zdHJ1bWVudGF0aW9uIiwiZ2xvYmFsVGhpcyIsIl9FTlRSSUVTIiwibWlkZGxld2FyZV9pbnN0cnVtZW50YXRpb24iLCJyZWdpc3RlciIsImVyciIsIm1lc3NhZ2UiLCJyZWdpc3Rlckluc3RydW1lbnRhdGlvblByb21pc2UiLCJlbnN1cmVJbnN0cnVtZW50YXRpb25SZWdpc3RlcmVkIiwiZ2V0VW5zdXBwb3J0ZWRNb2R1bGVFcnJvck1lc3NhZ2UiLCJtb2R1bGUiLCJfX2ltcG9ydF91bnN1cHBvcnRlZCIsIm1vZHVsZU5hbWUiLCJwcm94eSIsIlByb3h5IiwiZ2V0IiwiX29iaiIsInByb3AiLCJFcnJvciIsImNvbnN0cnVjdCIsImFwcGx5IiwiX3RhcmdldCIsIl90aGlzIiwiYXJncyIsImVuaGFuY2VHbG9iYWxzIiwicHJvY2VzcyIsImdsb2JhbCIsImVudiIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/globals.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/next-url.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/next-url.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextURL: () => (/* binding */ NextURL)\n/* harmony export */ });\n/* harmony import */ var _shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../shared/lib/i18n/detect-domain-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\");\n/* harmony import */ var _shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../shared/lib/router/utils/format-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\");\n/* harmony import */ var _shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../shared/lib/get-hostname */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\");\n/* harmony import */ var _shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../shared/lib/router/utils/get-next-pathname-info */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\");\n\n\n\n\nconst REGEX_LOCALHOST_HOSTNAME = /(?!^https?:\\/\\/)(127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}|\\[::1\\]|localhost)/;\nfunction parseURL(url, base) {\n    return new URL(String(url).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"), base && String(base).replace(REGEX_LOCALHOST_HOSTNAME, \"localhost\"));\n}\nconst Internal = Symbol(\"NextURLInternal\");\nclass NextURL {\n    constructor(input, baseOrOpts, opts){\n        let base;\n        let options;\n        if (typeof baseOrOpts === \"object\" && \"pathname\" in baseOrOpts || typeof baseOrOpts === \"string\") {\n            base = baseOrOpts;\n            options = opts || {};\n        } else {\n            options = opts || baseOrOpts || {};\n        }\n        this[Internal] = {\n            url: parseURL(input, base ?? options.base),\n            options: options,\n            basePath: \"\"\n        };\n        this.analyze();\n    }\n    analyze() {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig, _this_Internal_domainLocale, _this_Internal_options_nextConfig_i18n1, _this_Internal_options_nextConfig1;\n        const info = (0,_shared_lib_router_utils_get_next_pathname_info__WEBPACK_IMPORTED_MODULE_3__.getNextPathnameInfo)(this[Internal].url.pathname, {\n            nextConfig: this[Internal].options.nextConfig,\n            parseData: !undefined,\n            i18nProvider: this[Internal].options.i18nProvider\n        });\n        const hostname = (0,_shared_lib_get_hostname__WEBPACK_IMPORTED_MODULE_2__.getHostname)(this[Internal].url, this[Internal].options.headers);\n        this[Internal].domainLocale = this[Internal].options.i18nProvider ? this[Internal].options.i18nProvider.detectDomainLocale(hostname) : (0,_shared_lib_i18n_detect_domain_locale__WEBPACK_IMPORTED_MODULE_0__.detectDomainLocale)((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.domains, hostname);\n        const defaultLocale = ((_this_Internal_domainLocale = this[Internal].domainLocale) == null ? void 0 : _this_Internal_domainLocale.defaultLocale) || ((_this_Internal_options_nextConfig1 = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n1 = _this_Internal_options_nextConfig1.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n1.defaultLocale);\n        this[Internal].url.pathname = info.pathname;\n        this[Internal].defaultLocale = defaultLocale;\n        this[Internal].basePath = info.basePath ?? \"\";\n        this[Internal].buildId = info.buildId;\n        this[Internal].locale = info.locale ?? defaultLocale;\n        this[Internal].trailingSlash = info.trailingSlash;\n    }\n    formatPathname() {\n        return (0,_shared_lib_router_utils_format_next_pathname_info__WEBPACK_IMPORTED_MODULE_1__.formatNextPathnameInfo)({\n            basePath: this[Internal].basePath,\n            buildId: this[Internal].buildId,\n            defaultLocale: !this[Internal].options.forceLocale ? this[Internal].defaultLocale : undefined,\n            locale: this[Internal].locale,\n            pathname: this[Internal].url.pathname,\n            trailingSlash: this[Internal].trailingSlash\n        });\n    }\n    formatSearch() {\n        return this[Internal].url.search;\n    }\n    get buildId() {\n        return this[Internal].buildId;\n    }\n    set buildId(buildId) {\n        this[Internal].buildId = buildId;\n    }\n    get locale() {\n        return this[Internal].locale ?? \"\";\n    }\n    set locale(locale) {\n        var _this_Internal_options_nextConfig_i18n, _this_Internal_options_nextConfig;\n        if (!this[Internal].locale || !((_this_Internal_options_nextConfig = this[Internal].options.nextConfig) == null ? void 0 : (_this_Internal_options_nextConfig_i18n = _this_Internal_options_nextConfig.i18n) == null ? void 0 : _this_Internal_options_nextConfig_i18n.locales.includes(locale))) {\n            throw new TypeError(`The NextURL configuration includes no locale \"${locale}\"`);\n        }\n        this[Internal].locale = locale;\n    }\n    get defaultLocale() {\n        return this[Internal].defaultLocale;\n    }\n    get domainLocale() {\n        return this[Internal].domainLocale;\n    }\n    get searchParams() {\n        return this[Internal].url.searchParams;\n    }\n    get host() {\n        return this[Internal].url.host;\n    }\n    set host(value) {\n        this[Internal].url.host = value;\n    }\n    get hostname() {\n        return this[Internal].url.hostname;\n    }\n    set hostname(value) {\n        this[Internal].url.hostname = value;\n    }\n    get port() {\n        return this[Internal].url.port;\n    }\n    set port(value) {\n        this[Internal].url.port = value;\n    }\n    get protocol() {\n        return this[Internal].url.protocol;\n    }\n    set protocol(value) {\n        this[Internal].url.protocol = value;\n    }\n    get href() {\n        const pathname = this.formatPathname();\n        const search = this.formatSearch();\n        return `${this.protocol}//${this.host}${pathname}${search}${this.hash}`;\n    }\n    set href(url) {\n        this[Internal].url = parseURL(url);\n        this.analyze();\n    }\n    get origin() {\n        return this[Internal].url.origin;\n    }\n    get pathname() {\n        return this[Internal].url.pathname;\n    }\n    set pathname(value) {\n        this[Internal].url.pathname = value;\n    }\n    get hash() {\n        return this[Internal].url.hash;\n    }\n    set hash(value) {\n        this[Internal].url.hash = value;\n    }\n    get search() {\n        return this[Internal].url.search;\n    }\n    set search(value) {\n        this[Internal].url.search = value;\n    }\n    get password() {\n        return this[Internal].url.password;\n    }\n    set password(value) {\n        this[Internal].url.password = value;\n    }\n    get username() {\n        return this[Internal].url.username;\n    }\n    set username(value) {\n        this[Internal].url.username = value;\n    }\n    get basePath() {\n        return this[Internal].basePath;\n    }\n    set basePath(value) {\n        this[Internal].basePath = value.startsWith(\"/\") ? value : `/${value}`;\n    }\n    toString() {\n        return this.href;\n    }\n    toJSON() {\n        return this.href;\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            href: this.href,\n            origin: this.origin,\n            protocol: this.protocol,\n            username: this.username,\n            password: this.password,\n            host: this.host,\n            hostname: this.hostname,\n            port: this.port,\n            pathname: this.pathname,\n            search: this.search,\n            searchParams: this.searchParams,\n            hash: this.hash\n        };\n    }\n    clone() {\n        return new NextURL(String(this), this[Internal].options);\n    }\n} //# sourceMappingURL=next-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HeadersAdapter: () => (/* binding */ HeadersAdapter),\n/* harmony export */   ReadonlyHeadersError: () => (/* binding */ ReadonlyHeadersError)\n/* harmony export */ });\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n/**\n * @internal\n */ class ReadonlyHeadersError extends Error {\n    constructor(){\n        super(\"Headers cannot be modified. Read more: https://nextjs.org/docs/app/api-reference/functions/headers\");\n    }\n    static callable() {\n        throw new ReadonlyHeadersError();\n    }\n}\nclass HeadersAdapter extends Headers {\n    constructor(headers){\n        // We've already overridden the methods that would be called, so we're just\n        // calling the super constructor to ensure that the instanceof check works.\n        super();\n        this.headers = new Proxy(headers, {\n            get (target, prop, receiver) {\n                // Because this is just an object, we expect that all \"get\" operations\n                // are for properties. If it's a \"get\" for a symbol, we'll just return\n                // the symbol.\n                if (typeof prop === \"symbol\") {\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return undefined.\n                if (typeof original === \"undefined\") return;\n                // If the original casing exists, return the value.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, original, receiver);\n            },\n            set (target, prop, value, receiver) {\n                if (typeof prop === \"symbol\") {\n                    return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, prop, value, receiver);\n                }\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, use the prop as the key.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.set(target, original ?? prop, value, receiver);\n            },\n            has (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return false.\n                if (typeof original === \"undefined\") return false;\n                // If the original casing exists, return true.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.has(target, original);\n            },\n            deleteProperty (target, prop) {\n                if (typeof prop === \"symbol\") return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, prop);\n                const lowercased = prop.toLowerCase();\n                // Let's find the original casing of the key. This assumes that there is\n                // no mixed case keys (e.g. \"Content-Type\" and \"content-type\") in the\n                // headers object.\n                const original = Object.keys(headers).find((o)=>o.toLowerCase() === lowercased);\n                // If the original casing doesn't exist, return true.\n                if (typeof original === \"undefined\") return true;\n                // If the original casing exists, delete the property.\n                return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.deleteProperty(target, original);\n            }\n        });\n    }\n    /**\n   * Seals a Headers instance to prevent modification by throwing an error when\n   * any mutating method is called.\n   */ static seal(headers) {\n        return new Proxy(headers, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"append\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyHeadersError.callable;\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_0__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n    /**\n   * Merges a header value into a string. This stores multiple values as an\n   * array, so we need to merge them into a string.\n   *\n   * @param value a header value\n   * @returns a merged header value (a string)\n   */ merge(value) {\n        if (Array.isArray(value)) return value.join(\", \");\n        return value;\n    }\n    /**\n   * Creates a Headers instance from a plain object or a Headers instance.\n   *\n   * @param headers a plain object or a Headers instance\n   * @returns a headers instance\n   */ static from(headers) {\n        if (headers instanceof Headers) return headers;\n        return new HeadersAdapter(headers);\n    }\n    append(name, value) {\n        const existing = this.headers[name];\n        if (typeof existing === \"string\") {\n            this.headers[name] = [\n                existing,\n                value\n            ];\n        } else if (Array.isArray(existing)) {\n            existing.push(value);\n        } else {\n            this.headers[name] = value;\n        }\n    }\n    delete(name) {\n        delete this.headers[name];\n    }\n    get(name) {\n        const value = this.headers[name];\n        if (typeof value !== \"undefined\") return this.merge(value);\n        return null;\n    }\n    has(name) {\n        return typeof this.headers[name] !== \"undefined\";\n    }\n    set(name, value) {\n        this.headers[name] = value;\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [name, value] of this.entries()){\n            callbackfn.call(thisArg, value, name, this);\n        }\n    }\n    *entries() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(name);\n            yield [\n                name,\n                value\n            ];\n        }\n    }\n    *keys() {\n        for (const key of Object.keys(this.headers)){\n            const name = key.toLowerCase();\n            yield name;\n        }\n    }\n    *values() {\n        for (const key of Object.keys(this.headers)){\n            // We assert here that this is a string because we got it from the\n            // Object.keys() call above.\n            const value = this.get(key);\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n} //# sourceMappingURL=headers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReflectAdapter: () => (/* binding */ ReflectAdapter)\n/* harmony export */ });\nclass ReflectAdapter {\n    static get(target, prop, receiver) {\n        const value = Reflect.get(target, prop, receiver);\n        if (typeof value === \"function\") {\n            return value.bind(target);\n        }\n        return value;\n    }\n    static set(target, prop, value, receiver) {\n        return Reflect.set(target, prop, value, receiver);\n    }\n    static has(target, prop) {\n        return Reflect.has(target, prop);\n    }\n    static deleteProperty(target, prop) {\n        return Reflect.deleteProperty(target, prop);\n    }\n} //# sourceMappingURL=reflect.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9hZGFwdGVycy9yZWZsZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxNQUFNQTtJQUNULE9BQU9DLElBQUlDLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUU7UUFDL0IsTUFBTUMsUUFBUUMsUUFBUUwsR0FBRyxDQUFDQyxRQUFRQyxNQUFNQztRQUN4QyxJQUFJLE9BQU9DLFVBQVUsWUFBWTtZQUM3QixPQUFPQSxNQUFNRSxJQUFJLENBQUNMO1FBQ3RCO1FBQ0EsT0FBT0c7SUFDWDtJQUNBLE9BQU9HLElBQUlOLE1BQU0sRUFBRUMsSUFBSSxFQUFFRSxLQUFLLEVBQUVELFFBQVEsRUFBRTtRQUN0QyxPQUFPRSxRQUFRRSxHQUFHLENBQUNOLFFBQVFDLE1BQU1FLE9BQU9EO0lBQzVDO0lBQ0EsT0FBT0ssSUFBSVAsTUFBTSxFQUFFQyxJQUFJLEVBQUU7UUFDckIsT0FBT0csUUFBUUcsR0FBRyxDQUFDUCxRQUFRQztJQUMvQjtJQUNBLE9BQU9PLGVBQWVSLE1BQU0sRUFBRUMsSUFBSSxFQUFFO1FBQ2hDLE9BQU9HLFFBQVFJLGNBQWMsQ0FBQ1IsUUFBUUM7SUFDMUM7QUFDSixFQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2FkYXB0ZXJzL3JlZmxlY3QuanM/MjA2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUmVmbGVjdEFkYXB0ZXIge1xuICAgIHN0YXRpYyBnZXQodGFyZ2V0LCBwcm9wLCByZWNlaXZlcikge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcCwgcmVjZWl2ZXIpO1xuICAgICAgICBpZiAodHlwZW9mIHZhbHVlID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5iaW5kKHRhcmdldCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBzdGF0aWMgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUsIHJlY2VpdmVyKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LnNldCh0YXJnZXQsIHByb3AsIHZhbHVlLCByZWNlaXZlcik7XG4gICAgfVxuICAgIHN0YXRpYyBoYXModGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0Lmhhcyh0YXJnZXQsIHByb3ApO1xuICAgIH1cbiAgICBzdGF0aWMgZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wKSB7XG4gICAgICAgIHJldHVybiBSZWZsZWN0LmRlbGV0ZVByb3BlcnR5KHRhcmdldCwgcHJvcCk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWZsZWN0LmpzLm1hcCJdLCJuYW1lcyI6WyJSZWZsZWN0QWRhcHRlciIsImdldCIsInRhcmdldCIsInByb3AiLCJyZWNlaXZlciIsInZhbHVlIiwiUmVmbGVjdCIsImJpbmQiLCJzZXQiLCJoYXMiLCJkZWxldGVQcm9wZXJ0eSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutableRequestCookiesAdapter: () => (/* binding */ MutableRequestCookiesAdapter),\n/* harmony export */   ReadonlyRequestCookiesError: () => (/* binding */ ReadonlyRequestCookiesError),\n/* harmony export */   RequestCookiesAdapter: () => (/* binding */ RequestCookiesAdapter),\n/* harmony export */   appendMutableCookies: () => (/* binding */ appendMutableCookies),\n/* harmony export */   getModifiedCookieValues: () => (/* binding */ getModifiedCookieValues)\n/* harmony export */ });\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n/* harmony import */ var _reflect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reflect */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/reflect.js\");\n\n\n/**\n * @internal\n */ class ReadonlyRequestCookiesError extends Error {\n    constructor(){\n        super(\"Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options\");\n    }\n    static callable() {\n        throw new ReadonlyRequestCookiesError();\n    }\n}\nclass RequestCookiesAdapter {\n    static seal(cookies) {\n        return new Proxy(cookies, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    case \"clear\":\n                    case \"delete\":\n                    case \"set\":\n                        return ReadonlyRequestCookiesError.callable;\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for(\"next.mutated.cookies\");\nfunction getModifiedCookieValues(cookies) {\n    const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n    if (!modified || !Array.isArray(modified) || modified.length === 0) {\n        return [];\n    }\n    return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n    const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n    if (modifiedCookieValues.length === 0) {\n        return false;\n    }\n    // Return a new response that extends the response with\n    // the modified cookies as fallbacks. `res` cookies\n    // will still take precedence.\n    const resCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(headers);\n    const returnedCookies = resCookies.getAll();\n    // Set the modified cookies as fallbacks.\n    for (const cookie of modifiedCookieValues){\n        resCookies.set(cookie);\n    }\n    // Set the original cookies as the final values.\n    for (const cookie of returnedCookies){\n        resCookies.set(cookie);\n    }\n    return true;\n}\nclass MutableRequestCookiesAdapter {\n    static wrap(cookies, onUpdateCookies) {\n        const responseCookes = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n        for (const cookie of cookies.getAll()){\n            responseCookes.set(cookie);\n        }\n        let modifiedValues = [];\n        const modifiedCookies = new Set();\n        const updateResponseCookies = ()=>{\n            var _fetch___nextGetStaticStore;\n            // TODO-APP: change method of getting staticGenerationAsyncStore\n            const staticGenerationAsyncStore = fetch.__nextGetStaticStore == null ? void 0 : (_fetch___nextGetStaticStore = fetch.__nextGetStaticStore.call(fetch)) == null ? void 0 : _fetch___nextGetStaticStore.getStore();\n            if (staticGenerationAsyncStore) {\n                staticGenerationAsyncStore.pathWasRevalidated = true;\n            }\n            const allCookies = responseCookes.getAll();\n            modifiedValues = allCookies.filter((c)=>modifiedCookies.has(c.name));\n            if (onUpdateCookies) {\n                const serializedCookies = [];\n                for (const cookie of modifiedValues){\n                    const tempCookies = new _cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies(new Headers());\n                    tempCookies.set(cookie);\n                    serializedCookies.push(tempCookies.toString());\n                }\n                onUpdateCookies(serializedCookies);\n            }\n        };\n        return new Proxy(responseCookes, {\n            get (target, prop, receiver) {\n                switch(prop){\n                    // A special symbol to get the modified cookie values\n                    case SYMBOL_MODIFY_COOKIE_VALUES:\n                        return modifiedValues;\n                    // TODO: Throw error if trying to set a cookie after the response\n                    // headers have been set.\n                    case \"delete\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                target.delete(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    case \"set\":\n                        return function(...args) {\n                            modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n                            try {\n                                return target.set(...args);\n                            } finally{\n                                updateResponseCookies();\n                            }\n                        };\n                    default:\n                        return _reflect__WEBPACK_IMPORTED_MODULE_1__.ReflectAdapter.get(target, prop, receiver);\n                }\n            }\n        });\n    }\n} //# sourceMappingURL=request-cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/adapters/request-cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/cookies.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.RequestCookies),\n/* harmony export */   ResponseCookies: () => (/* reexport safe */ next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__.ResponseCookies)\n/* harmony export */ });\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/compiled/@edge-runtime/cookies */ \"(middleware)/./node_modules/next/dist/compiled/@edge-runtime/cookies/index.js\");\n/* harmony import */ var next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_compiled_edge_runtime_cookies__WEBPACK_IMPORTED_MODULE_0__);\n //# sourceMappingURL=cookies.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9jb29raWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkYsQ0FFM0YsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vY29va2llcy5qcz84YzkzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IFJlcXVlc3RDb29raWVzLCBSZXNwb25zZUNvb2tpZXMgfSBmcm9tIFwibmV4dC9kaXN0L2NvbXBpbGVkL0BlZGdlLXJ1bnRpbWUvY29va2llc1wiO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb29raWVzLmpzLm1hcCJdLCJuYW1lcyI6WyJSZXF1ZXN0Q29va2llcyIsIlJlc3BvbnNlQ29va2llcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextFetchEvent: () => (/* binding */ NextFetchEvent),\n/* harmony export */   waitUntilSymbol: () => (/* binding */ waitUntilSymbol)\n/* harmony export */ });\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n\nconst responseSymbol = Symbol(\"response\");\nconst passThroughSymbol = Symbol(\"passThrough\");\nconst waitUntilSymbol = Symbol(\"waitUntil\");\nclass FetchEvent {\n    // eslint-disable-next-line @typescript-eslint/no-useless-constructor\n    constructor(_request){\n        this[waitUntilSymbol] = [];\n        this[passThroughSymbol] = false;\n    }\n    respondWith(response) {\n        if (!this[responseSymbol]) {\n            this[responseSymbol] = Promise.resolve(response);\n        }\n    }\n    passThroughOnException() {\n        this[passThroughSymbol] = true;\n    }\n    waitUntil(promise) {\n        this[waitUntilSymbol].push(promise);\n    }\n}\nclass NextFetchEvent extends FetchEvent {\n    constructor(params){\n        super(params.request);\n        this.sourcePage = params.page;\n    }\n    /**\n   * @deprecated The `request` is now the first parameter and the API is now async.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ get request() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n    /**\n   * @deprecated Using `respondWith` is no longer needed.\n   *\n   * Read more: https://nextjs.org/docs/messages/middleware-new-signature\n   */ respondWith() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_0__.PageSignatureError({\n            page: this.sourcePage\n        });\n    }\n} //# sourceMappingURL=fetch-event.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9mZXRjaC1ldmVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDOUMsTUFBTUMsaUJBQWlCQyxPQUFPO0FBQzlCLE1BQU1DLG9CQUFvQkQsT0FBTztBQUMxQixNQUFNRSxrQkFBa0JGLE9BQU8sYUFBYTtBQUNuRCxNQUFNRztJQUNGLHFFQUFxRTtJQUNyRUMsWUFBWUMsUUFBUSxDQUFDO1FBQ2pCLElBQUksQ0FBQ0gsZ0JBQWdCLEdBQUcsRUFBRTtRQUMxQixJQUFJLENBQUNELGtCQUFrQixHQUFHO0lBQzlCO0lBQ0FLLFlBQVlDLFFBQVEsRUFBRTtRQUNsQixJQUFJLENBQUMsSUFBSSxDQUFDUixlQUFlLEVBQUU7WUFDdkIsSUFBSSxDQUFDQSxlQUFlLEdBQUdTLFFBQVFDLE9BQU8sQ0FBQ0Y7UUFDM0M7SUFDSjtJQUNBRyx5QkFBeUI7UUFDckIsSUFBSSxDQUFDVCxrQkFBa0IsR0FBRztJQUM5QjtJQUNBVSxVQUFVQyxPQUFPLEVBQUU7UUFDZixJQUFJLENBQUNWLGdCQUFnQixDQUFDVyxJQUFJLENBQUNEO0lBQy9CO0FBQ0o7QUFDTyxNQUFNRSx1QkFBdUJYO0lBQ2hDQyxZQUFZVyxNQUFNLENBQUM7UUFDZixLQUFLLENBQUNBLE9BQU9DLE9BQU87UUFDcEIsSUFBSSxDQUFDQyxVQUFVLEdBQUdGLE9BQU9HLElBQUk7SUFDakM7SUFDQTs7OztHQUlELEdBQUcsSUFBSUYsVUFBVTtRQUNaLE1BQU0sSUFBSWxCLHNEQUFrQkEsQ0FBQztZQUN6Qm9CLE1BQU0sSUFBSSxDQUFDRCxVQUFVO1FBQ3pCO0lBQ0o7SUFDQTs7OztHQUlELEdBQUdYLGNBQWM7UUFDWixNQUFNLElBQUlSLHNEQUFrQkEsQ0FBQztZQUN6Qm9CLE1BQU0sSUFBSSxDQUFDRCxVQUFVO1FBQ3pCO0lBQ0o7QUFDSixFQUVBLHVDQUF1QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zZXJ2ZXIvd2ViL3NwZWMtZXh0ZW5zaW9uL2ZldGNoLWV2ZW50LmpzPzkyYmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZVNpZ25hdHVyZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9yXCI7XG5jb25zdCByZXNwb25zZVN5bWJvbCA9IFN5bWJvbChcInJlc3BvbnNlXCIpO1xuY29uc3QgcGFzc1Rocm91Z2hTeW1ib2wgPSBTeW1ib2woXCJwYXNzVGhyb3VnaFwiKTtcbmV4cG9ydCBjb25zdCB3YWl0VW50aWxTeW1ib2wgPSBTeW1ib2woXCJ3YWl0VW50aWxcIik7XG5jbGFzcyBGZXRjaEV2ZW50IHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZWxlc3MtY29uc3RydWN0b3JcbiAgICBjb25zdHJ1Y3RvcihfcmVxdWVzdCl7XG4gICAgICAgIHRoaXNbd2FpdFVudGlsU3ltYm9sXSA9IFtdO1xuICAgICAgICB0aGlzW3Bhc3NUaHJvdWdoU3ltYm9sXSA9IGZhbHNlO1xuICAgIH1cbiAgICByZXNwb25kV2l0aChyZXNwb25zZSkge1xuICAgICAgICBpZiAoIXRoaXNbcmVzcG9uc2VTeW1ib2xdKSB7XG4gICAgICAgICAgICB0aGlzW3Jlc3BvbnNlU3ltYm9sXSA9IFByb21pc2UucmVzb2x2ZShyZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcGFzc1Rocm91Z2hPbkV4Y2VwdGlvbigpIHtcbiAgICAgICAgdGhpc1twYXNzVGhyb3VnaFN5bWJvbF0gPSB0cnVlO1xuICAgIH1cbiAgICB3YWl0VW50aWwocHJvbWlzZSkge1xuICAgICAgICB0aGlzW3dhaXRVbnRpbFN5bWJvbF0ucHVzaChwcm9taXNlKTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgTmV4dEZldGNoRXZlbnQgZXh0ZW5kcyBGZXRjaEV2ZW50IHtcbiAgICBjb25zdHJ1Y3RvcihwYXJhbXMpe1xuICAgICAgICBzdXBlcihwYXJhbXMucmVxdWVzdCk7XG4gICAgICAgIHRoaXMuc291cmNlUGFnZSA9IHBhcmFtcy5wYWdlO1xuICAgIH1cbiAgICAvKipcbiAgICogQGRlcHJlY2F0ZWQgVGhlIGByZXF1ZXN0YCBpcyBub3cgdGhlIGZpcnN0IHBhcmFtZXRlciBhbmQgdGhlIEFQSSBpcyBub3cgYXN5bmMuXG4gICAqXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gICAqLyBnZXQgcmVxdWVzdCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhZ2VTaWduYXR1cmVFcnJvcih7XG4gICAgICAgICAgICBwYWdlOiB0aGlzLnNvdXJjZVBhZ2VcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBAZGVwcmVjYXRlZCBVc2luZyBgcmVzcG9uZFdpdGhgIGlzIG5vIGxvbmdlciBuZWVkZWQuXG4gICAqXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1uZXctc2lnbmF0dXJlXG4gICAqLyByZXNwb25kV2l0aCgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFBhZ2VTaWduYXR1cmVFcnJvcih7XG4gICAgICAgICAgICBwYWdlOiB0aGlzLnNvdXJjZVBhZ2VcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mZXRjaC1ldmVudC5qcy5tYXAiXSwibmFtZXMiOlsiUGFnZVNpZ25hdHVyZUVycm9yIiwicmVzcG9uc2VTeW1ib2wiLCJTeW1ib2wiLCJwYXNzVGhyb3VnaFN5bWJvbCIsIndhaXRVbnRpbFN5bWJvbCIsIkZldGNoRXZlbnQiLCJjb25zdHJ1Y3RvciIsIl9yZXF1ZXN0IiwicmVzcG9uZFdpdGgiLCJyZXNwb25zZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicGFzc1Rocm91Z2hPbkV4Y2VwdGlvbiIsIndhaXRVbnRpbCIsInByb21pc2UiLCJwdXNoIiwiTmV4dEZldGNoRXZlbnQiLCJwYXJhbXMiLCJyZXF1ZXN0Iiwic291cmNlUGFnZSIsInBhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/fetch-event.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/request.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INTERNALS: () => (/* binding */ INTERNALS),\n/* harmony export */   NextRequest: () => (/* binding */ NextRequest)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _error__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../error */ \"(middleware)/./node_modules/next/dist/esm/server/web/error.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\n\n\n\nconst INTERNALS = Symbol(\"internal request\");\nclass NextRequest extends Request {\n    constructor(input, init = {}){\n        const url = typeof input !== \"string\" && \"url\" in input ? input.url : String(input);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url);\n        if (input instanceof Request) super(input, init);\n        else super(url, init);\n        const nextUrl = new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(url, {\n            headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n            nextConfig: init.nextConfig\n        });\n        this[INTERNALS] = {\n            cookies: new _cookies__WEBPACK_IMPORTED_MODULE_3__.RequestCookies(this.headers),\n            geo: init.geo || {},\n            ip: init.ip,\n            nextUrl,\n            url:  false ? 0 : nextUrl.toString()\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            geo: this.geo,\n            ip: this.ip,\n            nextUrl: this.nextUrl,\n            url: this.url,\n            // rest of props come from Request\n            bodyUsed: this.bodyUsed,\n            cache: this.cache,\n            credentials: this.credentials,\n            destination: this.destination,\n            headers: Object.fromEntries(this.headers),\n            integrity: this.integrity,\n            keepalive: this.keepalive,\n            method: this.method,\n            mode: this.mode,\n            redirect: this.redirect,\n            referrer: this.referrer,\n            referrerPolicy: this.referrerPolicy,\n            signal: this.signal\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    get geo() {\n        return this[INTERNALS].geo;\n    }\n    get ip() {\n        return this[INTERNALS].ip;\n    }\n    get nextUrl() {\n        return this[INTERNALS].nextUrl;\n    }\n    /**\n   * @deprecated\n   * `page` has been deprecated in favour of `URLPattern`.\n   * Read more: https://nextjs.org/docs/messages/middleware-request-page\n   */ get page() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedPageError();\n    }\n    /**\n   * @deprecated\n   * `ua` has been removed in favour of \\`userAgent\\` function.\n   * Read more: https://nextjs.org/docs/messages/middleware-parse-user-agent\n   */ get ua() {\n        throw new _error__WEBPACK_IMPORTED_MODULE_2__.RemovedUAError();\n    }\n    get url() {\n        return this[INTERNALS].url;\n    }\n} //# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2VydmVyL3dlYi9zcGVjLWV4dGVuc2lvbi9yZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUM0QjtBQUNOO0FBQ2pCO0FBQ3BDLE1BQU1NLFlBQVlDLE9BQU8sb0JBQW9CO0FBQzdDLE1BQU1DLG9CQUFvQkM7SUFDN0JDLFlBQVlDLEtBQUssRUFBRUMsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUN6QixNQUFNQyxNQUFNLE9BQU9GLFVBQVUsWUFBWSxTQUFTQSxRQUFRQSxNQUFNRSxHQUFHLEdBQUdDLE9BQU9IO1FBQzdFVCxtREFBV0EsQ0FBQ1c7UUFDWixJQUFJRixpQkFBaUJGLFNBQVMsS0FBSyxDQUFDRSxPQUFPQzthQUN0QyxLQUFLLENBQUNDLEtBQUtEO1FBQ2hCLE1BQU1HLFVBQVUsSUFBSWYsOENBQU9BLENBQUNhLEtBQUs7WUFDN0JHLFNBQVNmLGlFQUF5QkEsQ0FBQyxJQUFJLENBQUNlLE9BQU87WUFDL0NDLFlBQVlMLEtBQUtLLFVBQVU7UUFDL0I7UUFDQSxJQUFJLENBQUNYLFVBQVUsR0FBRztZQUNkWSxTQUFTLElBQUliLG9EQUFjQSxDQUFDLElBQUksQ0FBQ1csT0FBTztZQUN4Q0csS0FBS1AsS0FBS08sR0FBRyxJQUFJLENBQUM7WUFDbEJDLElBQUlSLEtBQUtRLEVBQUU7WUFDWEw7WUFDQUYsS0FBS1EsTUFBOEMsR0FBR1IsQ0FBR0EsR0FBR0UsUUFBUVMsUUFBUTtRQUNoRjtJQUNKO0lBQ0EsQ0FBQ2pCLE9BQU9rQixHQUFHLENBQUMsK0JBQStCLEdBQUc7UUFDMUMsT0FBTztZQUNIUCxTQUFTLElBQUksQ0FBQ0EsT0FBTztZQUNyQkMsS0FBSyxJQUFJLENBQUNBLEdBQUc7WUFDYkMsSUFBSSxJQUFJLENBQUNBLEVBQUU7WUFDWEwsU0FBUyxJQUFJLENBQUNBLE9BQU87WUFDckJGLEtBQUssSUFBSSxDQUFDQSxHQUFHO1lBQ2Isa0NBQWtDO1lBQ2xDYSxVQUFVLElBQUksQ0FBQ0EsUUFBUTtZQUN2QkMsT0FBTyxJQUFJLENBQUNBLEtBQUs7WUFDakJDLGFBQWEsSUFBSSxDQUFDQSxXQUFXO1lBQzdCQyxhQUFhLElBQUksQ0FBQ0EsV0FBVztZQUM3QmIsU0FBU2MsT0FBT0MsV0FBVyxDQUFDLElBQUksQ0FBQ2YsT0FBTztZQUN4Q2dCLFdBQVcsSUFBSSxDQUFDQSxTQUFTO1lBQ3pCQyxXQUFXLElBQUksQ0FBQ0EsU0FBUztZQUN6QkMsUUFBUSxJQUFJLENBQUNBLE1BQU07WUFDbkJDLE1BQU0sSUFBSSxDQUFDQSxJQUFJO1lBQ2ZDLFVBQVUsSUFBSSxDQUFDQSxRQUFRO1lBQ3ZCQyxVQUFVLElBQUksQ0FBQ0EsUUFBUTtZQUN2QkMsZ0JBQWdCLElBQUksQ0FBQ0EsY0FBYztZQUNuQ0MsUUFBUSxJQUFJLENBQUNBLE1BQU07UUFDdkI7SUFDSjtJQUNBLElBQUlyQixVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUNaLFVBQVUsQ0FBQ1ksT0FBTztJQUNsQztJQUNBLElBQUlDLE1BQU07UUFDTixPQUFPLElBQUksQ0FBQ2IsVUFBVSxDQUFDYSxHQUFHO0lBQzlCO0lBQ0EsSUFBSUMsS0FBSztRQUNMLE9BQU8sSUFBSSxDQUFDZCxVQUFVLENBQUNjLEVBQUU7SUFDN0I7SUFDQSxJQUFJTCxVQUFVO1FBQ1YsT0FBTyxJQUFJLENBQUNULFVBQVUsQ0FBQ1MsT0FBTztJQUNsQztJQUNBOzs7O0dBSUQsR0FBRyxJQUFJeUIsT0FBTztRQUNULE1BQU0sSUFBSXBDLG9EQUFnQkE7SUFDOUI7SUFDQTs7OztHQUlELEdBQUcsSUFBSXFDLEtBQUs7UUFDUCxNQUFNLElBQUl0QyxrREFBY0E7SUFDNUI7SUFDQSxJQUFJVSxNQUFNO1FBQ04sT0FBTyxJQUFJLENBQUNQLFVBQVUsQ0FBQ08sR0FBRztJQUM5QjtBQUNKLEVBRUEsbUNBQW1DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NlcnZlci93ZWIvc3BlYy1leHRlbnNpb24vcmVxdWVzdC5qcz8xNWQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRVUkwgfSBmcm9tIFwiLi4vbmV4dC11cmxcIjtcbmltcG9ydCB7IHRvTm9kZU91dGdvaW5nSHR0cEhlYWRlcnMsIHZhbGlkYXRlVVJMIH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5pbXBvcnQgeyBSZW1vdmVkVUFFcnJvciwgUmVtb3ZlZFBhZ2VFcnJvciB9IGZyb20gXCIuLi9lcnJvclwiO1xuaW1wb3J0IHsgUmVxdWVzdENvb2tpZXMgfSBmcm9tIFwiLi9jb29raWVzXCI7XG5leHBvcnQgY29uc3QgSU5URVJOQUxTID0gU3ltYm9sKFwiaW50ZXJuYWwgcmVxdWVzdFwiKTtcbmV4cG9ydCBjbGFzcyBOZXh0UmVxdWVzdCBleHRlbmRzIFJlcXVlc3Qge1xuICAgIGNvbnN0cnVjdG9yKGlucHV0LCBpbml0ID0ge30pe1xuICAgICAgICBjb25zdCB1cmwgPSB0eXBlb2YgaW5wdXQgIT09IFwic3RyaW5nXCIgJiYgXCJ1cmxcIiBpbiBpbnB1dCA/IGlucHV0LnVybCA6IFN0cmluZyhpbnB1dCk7XG4gICAgICAgIHZhbGlkYXRlVVJMKHVybCk7XG4gICAgICAgIGlmIChpbnB1dCBpbnN0YW5jZW9mIFJlcXVlc3QpIHN1cGVyKGlucHV0LCBpbml0KTtcbiAgICAgICAgZWxzZSBzdXBlcih1cmwsIGluaXQpO1xuICAgICAgICBjb25zdCBuZXh0VXJsID0gbmV3IE5leHRVUkwodXJsLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzKHRoaXMuaGVhZGVycyksXG4gICAgICAgICAgICBuZXh0Q29uZmlnOiBpbml0Lm5leHRDb25maWdcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXNbSU5URVJOQUxTXSA9IHtcbiAgICAgICAgICAgIGNvb2tpZXM6IG5ldyBSZXF1ZXN0Q29va2llcyh0aGlzLmhlYWRlcnMpLFxuICAgICAgICAgICAgZ2VvOiBpbml0LmdlbyB8fCB7fSxcbiAgICAgICAgICAgIGlwOiBpbml0LmlwLFxuICAgICAgICAgICAgbmV4dFVybCxcbiAgICAgICAgICAgIHVybDogcHJvY2Vzcy5lbnYuX19ORVhUX05PX01JRERMRVdBUkVfVVJMX05PUk1BTElaRSA/IHVybCA6IG5leHRVcmwudG9TdHJpbmcoKVxuICAgICAgICB9O1xuICAgIH1cbiAgICBbU3ltYm9sLmZvcihcImVkZ2UtcnVudGltZS5pbnNwZWN0LmN1c3RvbVwiKV0oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb29raWVzOiB0aGlzLmNvb2tpZXMsXG4gICAgICAgICAgICBnZW86IHRoaXMuZ2VvLFxuICAgICAgICAgICAgaXA6IHRoaXMuaXAsXG4gICAgICAgICAgICBuZXh0VXJsOiB0aGlzLm5leHRVcmwsXG4gICAgICAgICAgICB1cmw6IHRoaXMudXJsLFxuICAgICAgICAgICAgLy8gcmVzdCBvZiBwcm9wcyBjb21lIGZyb20gUmVxdWVzdFxuICAgICAgICAgICAgYm9keVVzZWQ6IHRoaXMuYm9keVVzZWQsXG4gICAgICAgICAgICBjYWNoZTogdGhpcy5jYWNoZSxcbiAgICAgICAgICAgIGNyZWRlbnRpYWxzOiB0aGlzLmNyZWRlbnRpYWxzLFxuICAgICAgICAgICAgZGVzdGluYXRpb246IHRoaXMuZGVzdGluYXRpb24sXG4gICAgICAgICAgICBoZWFkZXJzOiBPYmplY3QuZnJvbUVudHJpZXModGhpcy5oZWFkZXJzKSxcbiAgICAgICAgICAgIGludGVncml0eTogdGhpcy5pbnRlZ3JpdHksXG4gICAgICAgICAgICBrZWVwYWxpdmU6IHRoaXMua2VlcGFsaXZlLFxuICAgICAgICAgICAgbWV0aG9kOiB0aGlzLm1ldGhvZCxcbiAgICAgICAgICAgIG1vZGU6IHRoaXMubW9kZSxcbiAgICAgICAgICAgIHJlZGlyZWN0OiB0aGlzLnJlZGlyZWN0LFxuICAgICAgICAgICAgcmVmZXJyZXI6IHRoaXMucmVmZXJyZXIsXG4gICAgICAgICAgICByZWZlcnJlclBvbGljeTogdGhpcy5yZWZlcnJlclBvbGljeSxcbiAgICAgICAgICAgIHNpZ25hbDogdGhpcy5zaWduYWxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0IGNvb2tpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10uY29va2llcztcbiAgICB9XG4gICAgZ2V0IGdlbygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5nZW87XG4gICAgfVxuICAgIGdldCBpcCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbSU5URVJOQUxTXS5pcDtcbiAgICB9XG4gICAgZ2V0IG5leHRVcmwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW0lOVEVSTkFMU10ubmV4dFVybDtcbiAgICB9XG4gICAgLyoqXG4gICAqIEBkZXByZWNhdGVkXG4gICAqIGBwYWdlYCBoYXMgYmVlbiBkZXByZWNhdGVkIGluIGZhdm91ciBvZiBgVVJMUGF0dGVybmAuXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1yZXF1ZXN0LXBhZ2VcbiAgICovIGdldCBwYWdlKCkge1xuICAgICAgICB0aHJvdyBuZXcgUmVtb3ZlZFBhZ2VFcnJvcigpO1xuICAgIH1cbiAgICAvKipcbiAgICogQGRlcHJlY2F0ZWRcbiAgICogYHVhYCBoYXMgYmVlbiByZW1vdmVkIGluIGZhdm91ciBvZiBcXGB1c2VyQWdlbnRcXGAgZnVuY3Rpb24uXG4gICAqIFJlYWQgbW9yZTogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvbWlkZGxld2FyZS1wYXJzZS11c2VyLWFnZW50XG4gICAqLyBnZXQgdWEoKSB7XG4gICAgICAgIHRocm93IG5ldyBSZW1vdmVkVUFFcnJvcigpO1xuICAgIH1cbiAgICBnZXQgdXJsKCkge1xuICAgICAgICByZXR1cm4gdGhpc1tJTlRFUk5BTFNdLnVybDtcbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QuanMubWFwIl0sIm5hbWVzIjpbIk5leHRVUkwiLCJ0b05vZGVPdXRnb2luZ0h0dHBIZWFkZXJzIiwidmFsaWRhdGVVUkwiLCJSZW1vdmVkVUFFcnJvciIsIlJlbW92ZWRQYWdlRXJyb3IiLCJSZXF1ZXN0Q29va2llcyIsIklOVEVSTkFMUyIsIlN5bWJvbCIsIk5leHRSZXF1ZXN0IiwiUmVxdWVzdCIsImNvbnN0cnVjdG9yIiwiaW5wdXQiLCJpbml0IiwidXJsIiwiU3RyaW5nIiwibmV4dFVybCIsImhlYWRlcnMiLCJuZXh0Q29uZmlnIiwiY29va2llcyIsImdlbyIsImlwIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9OT19NSURETEVXQVJFX1VSTF9OT1JNQUxJWkUiLCJ0b1N0cmluZyIsImZvciIsImJvZHlVc2VkIiwiY2FjaGUiLCJjcmVkZW50aWFscyIsImRlc3RpbmF0aW9uIiwiT2JqZWN0IiwiZnJvbUVudHJpZXMiLCJpbnRlZ3JpdHkiLCJrZWVwYWxpdmUiLCJtZXRob2QiLCJtb2RlIiwicmVkaXJlY3QiLCJyZWZlcnJlciIsInJlZmVycmVyUG9saWN5Iiwic2lnbmFsIiwicGFnZSIsInVhIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/request.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/spec-extension/response.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextResponse: () => (/* binding */ NextResponse)\n/* harmony export */ });\n/* harmony import */ var _next_url__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../next-url */ \"(middleware)/./node_modules/next/dist/esm/server/web/next-url.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(middleware)/./node_modules/next/dist/esm/server/web/utils.js\");\n/* harmony import */ var _cookies__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cookies */ \"(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/cookies.js\");\n\n\n\nconst INTERNALS = Symbol(\"internal response\");\nconst REDIRECTS = new Set([\n    301,\n    302,\n    303,\n    307,\n    308\n]);\nfunction handleMiddlewareField(init, headers) {\n    var _init_request;\n    if (init == null ? void 0 : (_init_request = init.request) == null ? void 0 : _init_request.headers) {\n        if (!(init.request.headers instanceof Headers)) {\n            throw new Error(\"request.headers must be an instance of Headers\");\n        }\n        const keys = [];\n        for (const [key, value] of init.request.headers){\n            headers.set(\"x-middleware-request-\" + key, value);\n            keys.push(key);\n        }\n        headers.set(\"x-middleware-override-headers\", keys.join(\",\"));\n    }\n}\nclass NextResponse extends Response {\n    constructor(body, init = {}){\n        super(body, init);\n        this[INTERNALS] = {\n            cookies: new _cookies__WEBPACK_IMPORTED_MODULE_2__.ResponseCookies(this.headers),\n            url: init.url ? new _next_url__WEBPACK_IMPORTED_MODULE_0__.NextURL(init.url, {\n                headers: (0,_utils__WEBPACK_IMPORTED_MODULE_1__.toNodeOutgoingHttpHeaders)(this.headers),\n                nextConfig: init.nextConfig\n            }) : undefined\n        };\n    }\n    [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n        return {\n            cookies: this.cookies,\n            url: this.url,\n            // rest of props come from Response\n            body: this.body,\n            bodyUsed: this.bodyUsed,\n            headers: Object.fromEntries(this.headers),\n            ok: this.ok,\n            redirected: this.redirected,\n            status: this.status,\n            statusText: this.statusText,\n            type: this.type\n        };\n    }\n    get cookies() {\n        return this[INTERNALS].cookies;\n    }\n    static json(body, init) {\n        const response = Response.json(body, init);\n        return new NextResponse(response.body, response);\n    }\n    static redirect(url, init) {\n        const status = typeof init === \"number\" ? init : (init == null ? void 0 : init.status) ?? 307;\n        if (!REDIRECTS.has(status)) {\n            throw new RangeError('Failed to execute \"redirect\" on \"response\": Invalid status code');\n        }\n        const initObj = typeof init === \"object\" ? init : {};\n        const headers = new Headers(initObj == null ? void 0 : initObj.headers);\n        headers.set(\"Location\", (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(url));\n        return new NextResponse(null, {\n            ...initObj,\n            headers,\n            status\n        });\n    }\n    static rewrite(destination, init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-rewrite\", (0,_utils__WEBPACK_IMPORTED_MODULE_1__.validateURL)(destination));\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n    static next(init) {\n        const headers = new Headers(init == null ? void 0 : init.headers);\n        headers.set(\"x-middleware-next\", \"1\");\n        handleMiddlewareField(init, headers);\n        return new NextResponse(null, {\n            ...init,\n            headers\n        });\n    }\n} //# sourceMappingURL=response.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/spec-extension/response.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/server/web/utils.js":
/*!********************************************************!*\
  !*** ./node_modules/next/dist/esm/server/web/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromNodeOutgoingHttpHeaders: () => (/* binding */ fromNodeOutgoingHttpHeaders),\n/* harmony export */   splitCookiesString: () => (/* binding */ splitCookiesString),\n/* harmony export */   toNodeOutgoingHttpHeaders: () => (/* binding */ toNodeOutgoingHttpHeaders),\n/* harmony export */   validateURL: () => (/* binding */ validateURL)\n/* harmony export */ });\n/**\n * Converts a Node.js IncomingHttpHeaders object to a Headers object. Any\n * headers with multiple values will be joined with a comma and space. Any\n * headers that have an undefined value will be ignored and others will be\n * coerced to strings.\n *\n * @param nodeHeaders the headers object to convert\n * @returns the converted headers object\n */ function fromNodeOutgoingHttpHeaders(nodeHeaders) {\n    const headers = new Headers();\n    for (let [key, value] of Object.entries(nodeHeaders)){\n        const values = Array.isArray(value) ? value : [\n            value\n        ];\n        for (let v of values){\n            if (typeof v === \"undefined\") continue;\n            if (typeof v === \"number\") {\n                v = v.toString();\n            }\n            headers.append(key, v);\n        }\n    }\n    return headers;\n}\n/*\n  Set-Cookie header field-values are sometimes comma joined in one string. This splits them without choking on commas\n  that are within a single set-cookie field-value, such as in the Expires portion.\n  This is uncommon, but explicitly allowed - see https://tools.ietf.org/html/rfc2616#section-4.2\n  Node.js does this for every header *except* set-cookie - see https://github.com/nodejs/node/blob/d5e363b77ebaf1caf67cd7528224b651c86815c1/lib/_http_incoming.js#L128\n  React Native's fetch does this for *every* header, including set-cookie.\n  \n  Based on: https://github.com/google/j2objc/commit/16820fdbc8f76ca0c33472810ce0cb03d20efe25\n  Credits to: https://github.com/tomball for original and https://github.com/chrusart for JavaScript implementation\n*/ function splitCookiesString(cookiesString) {\n    var cookiesStrings = [];\n    var pos = 0;\n    var start;\n    var ch;\n    var lastComma;\n    var nextStart;\n    var cookiesSeparatorFound;\n    function skipWhitespace() {\n        while(pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))){\n            pos += 1;\n        }\n        return pos < cookiesString.length;\n    }\n    function notSpecialChar() {\n        ch = cookiesString.charAt(pos);\n        return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n    }\n    while(pos < cookiesString.length){\n        start = pos;\n        cookiesSeparatorFound = false;\n        while(skipWhitespace()){\n            ch = cookiesString.charAt(pos);\n            if (ch === \",\") {\n                // ',' is a cookie separator if we have later first '=', not ';' or ','\n                lastComma = pos;\n                pos += 1;\n                skipWhitespace();\n                nextStart = pos;\n                while(pos < cookiesString.length && notSpecialChar()){\n                    pos += 1;\n                }\n                // currently special character\n                if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n                    // we found cookies separator\n                    cookiesSeparatorFound = true;\n                    // pos is inside the next cookie, so back up and return it.\n                    pos = nextStart;\n                    cookiesStrings.push(cookiesString.substring(start, lastComma));\n                    start = pos;\n                } else {\n                    // in param ',' or param separator ';',\n                    // we continue from that comma\n                    pos = lastComma + 1;\n                }\n            } else {\n                pos += 1;\n            }\n        }\n        if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n            cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n        }\n    }\n    return cookiesStrings;\n}\n/**\n * Converts a Headers object to a Node.js OutgoingHttpHeaders object. This is\n * required to support the set-cookie header, which may have multiple values.\n *\n * @param headers the headers object to convert\n * @returns the converted headers object\n */ function toNodeOutgoingHttpHeaders(headers) {\n    const nodeHeaders = {};\n    const cookies = [];\n    if (headers) {\n        for (const [key, value] of headers.entries()){\n            if (key.toLowerCase() === \"set-cookie\") {\n                // We may have gotten a comma joined string of cookies, or multiple\n                // set-cookie headers. We need to merge them into one header array\n                // to represent all the cookies.\n                cookies.push(...splitCookiesString(value));\n                nodeHeaders[key] = cookies.length === 1 ? cookies[0] : cookies;\n            } else {\n                nodeHeaders[key] = value;\n            }\n        }\n    }\n    return nodeHeaders;\n}\n/**\n * Validate the correctness of a user-provided URL.\n */ function validateURL(url) {\n    try {\n        return String(new URL(String(url)));\n    } catch (error) {\n        throw new Error(`URL is malformed \"${String(url)}\". Please use only absolute URLs - https://nextjs.org/docs/messages/middleware-relative-urls`, {\n            cause: error\n        });\n    }\n} //# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/server/web/utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppRouterContext: () => (/* binding */ AppRouterContext),\n/* harmony export */   CacheStates: () => (/* binding */ CacheStates),\n/* harmony export */   GlobalLayoutRouterContext: () => (/* binding */ GlobalLayoutRouterContext),\n/* harmony export */   LayoutRouterContext: () => (/* binding */ LayoutRouterContext),\n/* harmony export */   TemplateContext: () => (/* binding */ TemplateContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\nvar CacheStates;\n(function(CacheStates) {\n    CacheStates[\"LAZY_INITIALIZED\"] = \"LAZYINITIALIZED\";\n    CacheStates[\"DATA_FETCH\"] = \"DATAFETCH\";\n    CacheStates[\"READY\"] = \"READY\";\n})(CacheStates || (CacheStates = {}));\nconst AppRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst LayoutRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst GlobalLayoutRouterContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nconst TemplateContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nif (true) {\n    AppRouterContext.displayName = \"AppRouterContext\";\n    LayoutRouterContext.displayName = \"LayoutRouterContext\";\n    GlobalLayoutRouterContext.displayName = \"GlobalLayoutRouterContext\";\n    TemplateContext.displayName = \"TemplateContext\";\n} //# sourceMappingURL=app-router-context.shared-runtime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9hcHAtcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBO0FBRTBCO0FBQ25CLElBQUlDLFlBQVk7QUFDdEIsVUFBU0EsV0FBVztJQUNqQkEsV0FBVyxDQUFDLG1CQUFtQixHQUFHO0lBQ2xDQSxXQUFXLENBQUMsYUFBYSxHQUFHO0lBQzVCQSxXQUFXLENBQUMsUUFBUSxHQUFHO0FBQzNCLEdBQUdBLGVBQWdCQSxDQUFBQSxjQUFjLENBQUM7QUFDM0IsTUFBTUMsaUNBQW1CRiwwREFBbUIsQ0FBQyxNQUFNO0FBQ25ELE1BQU1JLG9DQUFzQkosMERBQW1CLENBQUMsTUFBTTtBQUN0RCxNQUFNSywwQ0FBNEJMLDBEQUFtQixDQUFDLE1BQU07QUFDNUQsTUFBTU0sZ0NBQWtCTiwwREFBbUIsQ0FBQyxNQUFNO0FBQ3pELElBQUlPLElBQXFDLEVBQUU7SUFDdkNMLGlCQUFpQk0sV0FBVyxHQUFHO0lBQy9CSixvQkFBb0JJLFdBQVcsR0FBRztJQUNsQ0gsMEJBQTBCRyxXQUFXLEdBQUc7SUFDeENGLGdCQUFnQkUsV0FBVyxHQUFHO0FBQ2xDLEVBRUEsNkRBQTZEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvYXBwLXJvdXRlci1jb250ZXh0LnNoYXJlZC1ydW50aW1lLmpzP2NiNzIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmV4cG9ydCB2YXIgQ2FjaGVTdGF0ZXM7XG4oZnVuY3Rpb24oQ2FjaGVTdGF0ZXMpIHtcbiAgICBDYWNoZVN0YXRlc1tcIkxBWllfSU5JVElBTElaRURcIl0gPSBcIkxBWllJTklUSUFMSVpFRFwiO1xuICAgIENhY2hlU3RhdGVzW1wiREFUQV9GRVRDSFwiXSA9IFwiREFUQUZFVENIXCI7XG4gICAgQ2FjaGVTdGF0ZXNbXCJSRUFEWVwiXSA9IFwiUkVBRFlcIjtcbn0pKENhY2hlU3RhdGVzIHx8IChDYWNoZVN0YXRlcyA9IHt9KSk7XG5leHBvcnQgY29uc3QgQXBwUm91dGVyQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5leHBvcnQgY29uc3QgTGF5b3V0Um91dGVyQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5leHBvcnQgY29uc3QgR2xvYmFsTGF5b3V0Um91dGVyQ29udGV4dCA9IFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5leHBvcnQgY29uc3QgVGVtcGxhdGVDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dChudWxsKTtcbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICBBcHBSb3V0ZXJDb250ZXh0LmRpc3BsYXlOYW1lID0gXCJBcHBSb3V0ZXJDb250ZXh0XCI7XG4gICAgTGF5b3V0Um91dGVyQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiTGF5b3V0Um91dGVyQ29udGV4dFwiO1xuICAgIEdsb2JhbExheW91dFJvdXRlckNvbnRleHQuZGlzcGxheU5hbWUgPSBcIkdsb2JhbExheW91dFJvdXRlckNvbnRleHRcIjtcbiAgICBUZW1wbGF0ZUNvbnRleHQuZGlzcGxheU5hbWUgPSBcIlRlbXBsYXRlQ29udGV4dFwiO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGVyLWNvbnRleHQuc2hhcmVkLXJ1bnRpbWUuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwiQ2FjaGVTdGF0ZXMiLCJBcHBSb3V0ZXJDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIkxheW91dFJvdXRlckNvbnRleHQiLCJHbG9iYWxMYXlvdXRSb3V0ZXJDb250ZXh0IiwiVGVtcGxhdGVDb250ZXh0IiwicHJvY2VzcyIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/app-router-context.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/constants.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/constants.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APP_BUILD_MANIFEST: () => (/* binding */ APP_BUILD_MANIFEST),\n/* harmony export */   APP_CLIENT_INTERNALS: () => (/* binding */ APP_CLIENT_INTERNALS),\n/* harmony export */   APP_PATHS_MANIFEST: () => (/* binding */ APP_PATHS_MANIFEST),\n/* harmony export */   APP_PATH_ROUTES_MANIFEST: () => (/* binding */ APP_PATH_ROUTES_MANIFEST),\n/* harmony export */   BARREL_OPTIMIZATION_PREFIX: () => (/* binding */ BARREL_OPTIMIZATION_PREFIX),\n/* harmony export */   BLOCKED_PAGES: () => (/* binding */ BLOCKED_PAGES),\n/* harmony export */   BUILD_ID_FILE: () => (/* binding */ BUILD_ID_FILE),\n/* harmony export */   BUILD_MANIFEST: () => (/* binding */ BUILD_MANIFEST),\n/* harmony export */   CLIENT_PUBLIC_FILES_PATH: () => (/* binding */ CLIENT_PUBLIC_FILES_PATH),\n/* harmony export */   CLIENT_REFERENCE_MANIFEST: () => (/* binding */ CLIENT_REFERENCE_MANIFEST),\n/* harmony export */   CLIENT_STATIC_FILES_PATH: () => (/* binding */ CLIENT_STATIC_FILES_PATH),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_AMP: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_AMP),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_MAIN: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_MAIN),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_MAIN_APP: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_MAIN_APP),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_POLYFILLS: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_POLYFILLS),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH),\n/* harmony export */   CLIENT_STATIC_FILES_RUNTIME_WEBPACK: () => (/* binding */ CLIENT_STATIC_FILES_RUNTIME_WEBPACK),\n/* harmony export */   COMPILER_INDEXES: () => (/* binding */ COMPILER_INDEXES),\n/* harmony export */   COMPILER_NAMES: () => (/* binding */ COMPILER_NAMES),\n/* harmony export */   CONFIG_FILES: () => (/* binding */ CONFIG_FILES),\n/* harmony export */   DEFAULT_SANS_SERIF_FONT: () => (/* binding */ DEFAULT_SANS_SERIF_FONT),\n/* harmony export */   DEFAULT_SERIF_FONT: () => (/* binding */ DEFAULT_SERIF_FONT),\n/* harmony export */   DEV_CLIENT_PAGES_MANIFEST: () => (/* binding */ DEV_CLIENT_PAGES_MANIFEST),\n/* harmony export */   DEV_MIDDLEWARE_MANIFEST: () => (/* binding */ DEV_MIDDLEWARE_MANIFEST),\n/* harmony export */   EDGE_RUNTIME_WEBPACK: () => (/* binding */ EDGE_RUNTIME_WEBPACK),\n/* harmony export */   EDGE_UNSUPPORTED_NODE_APIS: () => (/* binding */ EDGE_UNSUPPORTED_NODE_APIS),\n/* harmony export */   EXPORT_DETAIL: () => (/* binding */ EXPORT_DETAIL),\n/* harmony export */   EXPORT_MARKER: () => (/* binding */ EXPORT_MARKER),\n/* harmony export */   FONT_MANIFEST: () => (/* binding */ FONT_MANIFEST),\n/* harmony export */   FUNCTIONS_CONFIG_MANIFEST: () => (/* binding */ FUNCTIONS_CONFIG_MANIFEST),\n/* harmony export */   GOOGLE_FONT_PROVIDER: () => (/* binding */ GOOGLE_FONT_PROVIDER),\n/* harmony export */   IMAGES_MANIFEST: () => (/* binding */ IMAGES_MANIFEST),\n/* harmony export */   INTERNAL_HEADERS: () => (/* binding */ INTERNAL_HEADERS),\n/* harmony export */   MIDDLEWARE_BUILD_MANIFEST: () => (/* binding */ MIDDLEWARE_BUILD_MANIFEST),\n/* harmony export */   MIDDLEWARE_MANIFEST: () => (/* binding */ MIDDLEWARE_MANIFEST),\n/* harmony export */   MIDDLEWARE_REACT_LOADABLE_MANIFEST: () => (/* binding */ MIDDLEWARE_REACT_LOADABLE_MANIFEST),\n/* harmony export */   MODERN_BROWSERSLIST_TARGET: () => (/* reexport default from dynamic */ _modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0___default.a),\n/* harmony export */   NEXT_BUILTIN_DOCUMENT: () => (/* binding */ NEXT_BUILTIN_DOCUMENT),\n/* harmony export */   NEXT_FONT_MANIFEST: () => (/* binding */ NEXT_FONT_MANIFEST),\n/* harmony export */   OPTIMIZED_FONT_PROVIDERS: () => (/* binding */ OPTIMIZED_FONT_PROVIDERS),\n/* harmony export */   PAGES_MANIFEST: () => (/* binding */ PAGES_MANIFEST),\n/* harmony export */   PAGE_SEGMENT_KEY: () => (/* binding */ PAGE_SEGMENT_KEY),\n/* harmony export */   PHASE_DEVELOPMENT_SERVER: () => (/* binding */ PHASE_DEVELOPMENT_SERVER),\n/* harmony export */   PHASE_EXPORT: () => (/* binding */ PHASE_EXPORT),\n/* harmony export */   PHASE_INFO: () => (/* binding */ PHASE_INFO),\n/* harmony export */   PHASE_PRODUCTION_BUILD: () => (/* binding */ PHASE_PRODUCTION_BUILD),\n/* harmony export */   PHASE_PRODUCTION_SERVER: () => (/* binding */ PHASE_PRODUCTION_SERVER),\n/* harmony export */   PHASE_TEST: () => (/* binding */ PHASE_TEST),\n/* harmony export */   PRERENDER_MANIFEST: () => (/* binding */ PRERENDER_MANIFEST),\n/* harmony export */   REACT_LOADABLE_MANIFEST: () => (/* binding */ REACT_LOADABLE_MANIFEST),\n/* harmony export */   ROUTES_MANIFEST: () => (/* binding */ ROUTES_MANIFEST),\n/* harmony export */   RSC_MODULE_TYPES: () => (/* binding */ RSC_MODULE_TYPES),\n/* harmony export */   SERVER_DIRECTORY: () => (/* binding */ SERVER_DIRECTORY),\n/* harmony export */   SERVER_FILES_MANIFEST: () => (/* binding */ SERVER_FILES_MANIFEST),\n/* harmony export */   SERVER_PROPS_ID: () => (/* binding */ SERVER_PROPS_ID),\n/* harmony export */   SERVER_REFERENCE_MANIFEST: () => (/* binding */ SERVER_REFERENCE_MANIFEST),\n/* harmony export */   STATIC_PROPS_ID: () => (/* binding */ STATIC_PROPS_ID),\n/* harmony export */   STATIC_STATUS_PAGES: () => (/* binding */ STATIC_STATUS_PAGES),\n/* harmony export */   STRING_LITERAL_DROP_BUNDLE: () => (/* binding */ STRING_LITERAL_DROP_BUNDLE),\n/* harmony export */   SUBRESOURCE_INTEGRITY_MANIFEST: () => (/* binding */ SUBRESOURCE_INTEGRITY_MANIFEST),\n/* harmony export */   SYSTEM_ENTRYPOINTS: () => (/* binding */ SYSTEM_ENTRYPOINTS),\n/* harmony export */   TRACE_OUTPUT_VERSION: () => (/* binding */ TRACE_OUTPUT_VERSION),\n/* harmony export */   TURBO_TRACE_DEFAULT_MEMORY_LIMIT: () => (/* binding */ TURBO_TRACE_DEFAULT_MEMORY_LIMIT)\n/* harmony export */ });\n/* harmony import */ var _modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modern-browserslist-target */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js\");\n/* harmony import */ var _modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_modern_browserslist_target__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst COMPILER_NAMES = {\n    client: \"client\",\n    server: \"server\",\n    edgeServer: \"edge-server\"\n};\n/**\n * Headers that are set by the Next.js server and should be stripped from the\n * request headers going to the user's application.\n */ const INTERNAL_HEADERS = [\n    \"x-invoke-error\",\n    \"x-invoke-output\",\n    \"x-invoke-path\",\n    \"x-invoke-query\",\n    \"x-invoke-status\",\n    \"x-middleware-invoke\"\n];\nconst COMPILER_INDEXES = {\n    [COMPILER_NAMES.client]: 0,\n    [COMPILER_NAMES.server]: 1,\n    [COMPILER_NAMES.edgeServer]: 2\n};\nconst PHASE_EXPORT = \"phase-export\";\nconst PHASE_PRODUCTION_BUILD = \"phase-production-build\";\nconst PHASE_PRODUCTION_SERVER = \"phase-production-server\";\nconst PHASE_DEVELOPMENT_SERVER = \"phase-development-server\";\nconst PHASE_TEST = \"phase-test\";\nconst PHASE_INFO = \"phase-info\";\nconst PAGES_MANIFEST = \"pages-manifest.json\";\nconst APP_PATHS_MANIFEST = \"app-paths-manifest.json\";\nconst APP_PATH_ROUTES_MANIFEST = \"app-path-routes-manifest.json\";\nconst BUILD_MANIFEST = \"build-manifest.json\";\nconst APP_BUILD_MANIFEST = \"app-build-manifest.json\";\nconst FUNCTIONS_CONFIG_MANIFEST = \"functions-config-manifest.json\";\nconst SUBRESOURCE_INTEGRITY_MANIFEST = \"subresource-integrity-manifest\";\nconst NEXT_FONT_MANIFEST = \"next-font-manifest\";\nconst EXPORT_MARKER = \"export-marker.json\";\nconst EXPORT_DETAIL = \"export-detail.json\";\nconst PRERENDER_MANIFEST = \"prerender-manifest.json\";\nconst ROUTES_MANIFEST = \"routes-manifest.json\";\nconst IMAGES_MANIFEST = \"images-manifest.json\";\nconst SERVER_FILES_MANIFEST = \"required-server-files.json\";\nconst DEV_CLIENT_PAGES_MANIFEST = \"_devPagesManifest.json\";\nconst MIDDLEWARE_MANIFEST = \"middleware-manifest.json\";\nconst DEV_MIDDLEWARE_MANIFEST = \"_devMiddlewareManifest.json\";\nconst REACT_LOADABLE_MANIFEST = \"react-loadable-manifest.json\";\nconst FONT_MANIFEST = \"font-manifest.json\";\nconst SERVER_DIRECTORY = \"server\";\nconst CONFIG_FILES = [\n    \"next.config.js\",\n    \"next.config.mjs\"\n];\nconst BUILD_ID_FILE = \"BUILD_ID\";\nconst BLOCKED_PAGES = [\n    \"/_document\",\n    \"/_app\",\n    \"/_error\"\n];\nconst CLIENT_PUBLIC_FILES_PATH = \"public\";\nconst CLIENT_STATIC_FILES_PATH = \"static\";\nconst STRING_LITERAL_DROP_BUNDLE = \"__NEXT_DROP_CLIENT_FILE__\";\nconst NEXT_BUILTIN_DOCUMENT = \"__NEXT_BUILTIN_DOCUMENT__\";\nconst BARREL_OPTIMIZATION_PREFIX = \"__barrel_optimize__\";\n// server/[entry]/page_client-reference-manifest.js\nconst CLIENT_REFERENCE_MANIFEST = \"client-reference-manifest\";\n// server/server-reference-manifest\nconst SERVER_REFERENCE_MANIFEST = \"server-reference-manifest\";\n// server/middleware-build-manifest.js\nconst MIDDLEWARE_BUILD_MANIFEST = \"middleware-build-manifest\";\n// server/middleware-react-loadable-manifest.js\nconst MIDDLEWARE_REACT_LOADABLE_MANIFEST = \"middleware-react-loadable-manifest\";\n// static/runtime/main.js\nconst CLIENT_STATIC_FILES_RUNTIME_MAIN = \"main\";\nconst CLIENT_STATIC_FILES_RUNTIME_MAIN_APP = \"\" + CLIENT_STATIC_FILES_RUNTIME_MAIN + \"-app\";\n// next internal client components chunk for layouts\nconst APP_CLIENT_INTERNALS = \"app-pages-internals\";\n// static/runtime/react-refresh.js\nconst CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH = \"react-refresh\";\n// static/runtime/amp.js\nconst CLIENT_STATIC_FILES_RUNTIME_AMP = \"amp\";\n// static/runtime/webpack.js\nconst CLIENT_STATIC_FILES_RUNTIME_WEBPACK = \"webpack\";\n// static/runtime/polyfills.js\nconst CLIENT_STATIC_FILES_RUNTIME_POLYFILLS = \"polyfills\";\nconst CLIENT_STATIC_FILES_RUNTIME_POLYFILLS_SYMBOL = Symbol(CLIENT_STATIC_FILES_RUNTIME_POLYFILLS);\nconst EDGE_RUNTIME_WEBPACK = \"edge-runtime-webpack\";\nconst STATIC_PROPS_ID = \"__N_SSG\";\nconst SERVER_PROPS_ID = \"__N_SSP\";\nconst PAGE_SEGMENT_KEY = \"__PAGE__\";\nconst GOOGLE_FONT_PROVIDER = \"https://fonts.googleapis.com/\";\nconst OPTIMIZED_FONT_PROVIDERS = [\n    {\n        url: GOOGLE_FONT_PROVIDER,\n        preconnect: \"https://fonts.gstatic.com\"\n    },\n    {\n        url: \"https://use.typekit.net\",\n        preconnect: \"https://use.typekit.net\"\n    }\n];\nconst DEFAULT_SERIF_FONT = {\n    name: \"Times New Roman\",\n    xAvgCharWidth: 821,\n    azAvgWidth: 854.3953488372093,\n    unitsPerEm: 2048\n};\nconst DEFAULT_SANS_SERIF_FONT = {\n    name: \"Arial\",\n    xAvgCharWidth: 904,\n    azAvgWidth: 934.5116279069767,\n    unitsPerEm: 2048\n};\nconst STATIC_STATUS_PAGES = [\n    \"/500\"\n];\nconst TRACE_OUTPUT_VERSION = 1;\n// in `MB`\nconst TURBO_TRACE_DEFAULT_MEMORY_LIMIT = 6000;\nconst RSC_MODULE_TYPES = {\n    client: \"client\",\n    server: \"server\"\n};\n// comparing\n// https://nextjs.org/docs/api-reference/edge-runtime\n// with\n// https://nodejs.org/docs/latest/api/globals.html\nconst EDGE_UNSUPPORTED_NODE_APIS = [\n    \"clearImmediate\",\n    \"setImmediate\",\n    \"BroadcastChannel\",\n    \"ByteLengthQueuingStrategy\",\n    \"CompressionStream\",\n    \"CountQueuingStrategy\",\n    \"DecompressionStream\",\n    \"DomException\",\n    \"MessageChannel\",\n    \"MessageEvent\",\n    \"MessagePort\",\n    \"ReadableByteStreamController\",\n    \"ReadableStreamBYOBRequest\",\n    \"ReadableStreamDefaultController\",\n    \"TransformStreamDefaultController\",\n    \"WritableStreamDefaultController\"\n];\nconst SYSTEM_ENTRYPOINTS = new Set([\n    CLIENT_STATIC_FILES_RUNTIME_MAIN,\n    CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n    CLIENT_STATIC_FILES_RUNTIME_AMP,\n    CLIENT_STATIC_FILES_RUNTIME_MAIN_APP\n]); //# sourceMappingURL=constants.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/constants.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/get-hostname.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHostname: () => (/* binding */ getHostname)\n/* harmony export */ });\n/**\n * Takes an object with a hostname property (like a parsed URL) and some\n * headers that may contain Host and returns the preferred hostname.\n * @param parsed An object containing a hostname property.\n * @param headers A dictionary with headers containing a `host`.\n */ function getHostname(parsed, headers) {\n    // Get the hostname from the headers if it exists, otherwise use the parsed\n    // hostname.\n    let hostname;\n    if ((headers == null ? void 0 : headers.host) && !Array.isArray(headers.host)) {\n        hostname = headers.host.toString().split(\":\", 1)[0];\n    } else if (parsed.hostname) {\n        hostname = parsed.hostname;\n    } else return;\n    return hostname.toLowerCase();\n} //# sourceMappingURL=get-hostname.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9nZXQtaG9zdG5hbWUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztDQUtDLEdBQVUsU0FBU0EsWUFBWUMsTUFBTSxFQUFFQyxPQUFPO0lBQzNDLDJFQUEyRTtJQUMzRSxZQUFZO0lBQ1osSUFBSUM7SUFDSixJQUFJLENBQUNELFdBQVcsT0FBTyxLQUFLLElBQUlBLFFBQVFFLElBQUksS0FBSyxDQUFDQyxNQUFNQyxPQUFPLENBQUNKLFFBQVFFLElBQUksR0FBRztRQUMzRUQsV0FBV0QsUUFBUUUsSUFBSSxDQUFDRyxRQUFRLEdBQUdDLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxFQUFFO0lBQ3ZELE9BQU8sSUFBSVAsT0FBT0UsUUFBUSxFQUFFO1FBQ3hCQSxXQUFXRixPQUFPRSxRQUFRO0lBQzlCLE9BQU87SUFDUCxPQUFPQSxTQUFTTSxXQUFXO0FBQy9CLEVBRUEsd0NBQXdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvZ2V0LWhvc3RuYW1lLmpzPzc2MzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUYWtlcyBhbiBvYmplY3Qgd2l0aCBhIGhvc3RuYW1lIHByb3BlcnR5IChsaWtlIGEgcGFyc2VkIFVSTCkgYW5kIHNvbWVcbiAqIGhlYWRlcnMgdGhhdCBtYXkgY29udGFpbiBIb3N0IGFuZCByZXR1cm5zIHRoZSBwcmVmZXJyZWQgaG9zdG5hbWUuXG4gKiBAcGFyYW0gcGFyc2VkIEFuIG9iamVjdCBjb250YWluaW5nIGEgaG9zdG5hbWUgcHJvcGVydHkuXG4gKiBAcGFyYW0gaGVhZGVycyBBIGRpY3Rpb25hcnkgd2l0aCBoZWFkZXJzIGNvbnRhaW5pbmcgYSBgaG9zdGAuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGdldEhvc3RuYW1lKHBhcnNlZCwgaGVhZGVycykge1xuICAgIC8vIEdldCB0aGUgaG9zdG5hbWUgZnJvbSB0aGUgaGVhZGVycyBpZiBpdCBleGlzdHMsIG90aGVyd2lzZSB1c2UgdGhlIHBhcnNlZFxuICAgIC8vIGhvc3RuYW1lLlxuICAgIGxldCBob3N0bmFtZTtcbiAgICBpZiAoKGhlYWRlcnMgPT0gbnVsbCA/IHZvaWQgMCA6IGhlYWRlcnMuaG9zdCkgJiYgIUFycmF5LmlzQXJyYXkoaGVhZGVycy5ob3N0KSkge1xuICAgICAgICBob3N0bmFtZSA9IGhlYWRlcnMuaG9zdC50b1N0cmluZygpLnNwbGl0KFwiOlwiLCAxKVswXTtcbiAgICB9IGVsc2UgaWYgKHBhcnNlZC5ob3N0bmFtZSkge1xuICAgICAgICBob3N0bmFtZSA9IHBhcnNlZC5ob3N0bmFtZTtcbiAgICB9IGVsc2UgcmV0dXJuO1xuICAgIHJldHVybiBob3N0bmFtZS50b0xvd2VyQ2FzZSgpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXQtaG9zdG5hbWUuanMubWFwIl0sIm5hbWVzIjpbImdldEhvc3RuYW1lIiwicGFyc2VkIiwiaGVhZGVycyIsImhvc3RuYW1lIiwiaG9zdCIsIkFycmF5IiwiaXNBcnJheSIsInRvU3RyaW5nIiwic3BsaXQiLCJ0b0xvd2VyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/get-hostname.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PathParamsContext: () => (/* binding */ PathParamsContext),\n/* harmony export */   PathnameContext: () => (/* binding */ PathnameContext),\n/* harmony export */   SearchParamsContext: () => (/* binding */ SearchParamsContext)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\nconst SearchParamsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nconst PathnameContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nconst PathParamsContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);\nif (true) {\n    SearchParamsContext.displayName = \"SearchParamsContext\";\n    PathnameContext.displayName = \"PathnameContext\";\n    PathParamsContext.displayName = \"PathParamsContext\";\n} //# sourceMappingURL=hooks-client-context.shared-runtime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9ob29rcy1jbGllbnQtY29udGV4dC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBRXNDO0FBQy9CLE1BQU1DLG9DQUFzQkQsb0RBQWFBLENBQUMsTUFBTTtBQUNoRCxNQUFNRSxnQ0FBa0JGLG9EQUFhQSxDQUFDLE1BQU07QUFDNUMsTUFBTUcsa0NBQW9CSCxvREFBYUEsQ0FBQyxNQUFNO0FBQ3JELElBQUlJLElBQXFDLEVBQUU7SUFDdkNILG9CQUFvQkksV0FBVyxHQUFHO0lBQ2xDSCxnQkFBZ0JHLFdBQVcsR0FBRztJQUM5QkYsa0JBQWtCRSxXQUFXLEdBQUc7QUFDcEMsRUFFQSwrREFBK0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9ob29rcy1jbGllbnQtY29udGV4dC5zaGFyZWQtcnVudGltZS5qcz84OTZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSBcInJlYWN0XCI7XG5leHBvcnQgY29uc3QgU2VhcmNoUGFyYW1zQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQobnVsbCk7XG5leHBvcnQgY29uc3QgUGF0aG5hbWVDb250ZXh0ID0gY3JlYXRlQ29udGV4dChudWxsKTtcbmV4cG9ydCBjb25zdCBQYXRoUGFyYW1zQ29udGV4dCA9IGNyZWF0ZUNvbnRleHQobnVsbCk7XG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgU2VhcmNoUGFyYW1zQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiU2VhcmNoUGFyYW1zQ29udGV4dFwiO1xuICAgIFBhdGhuYW1lQ29udGV4dC5kaXNwbGF5TmFtZSA9IFwiUGF0aG5hbWVDb250ZXh0XCI7XG4gICAgUGF0aFBhcmFtc0NvbnRleHQuZGlzcGxheU5hbWUgPSBcIlBhdGhQYXJhbXNDb250ZXh0XCI7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhvb2tzLWNsaWVudC1jb250ZXh0LnNoYXJlZC1ydW50aW1lLmpzLm1hcCJdLCJuYW1lcyI6WyJjcmVhdGVDb250ZXh0IiwiU2VhcmNoUGFyYW1zQ29udGV4dCIsIlBhdGhuYW1lQ29udGV4dCIsIlBhdGhQYXJhbXNDb250ZXh0IiwicHJvY2VzcyIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/hooks-client-context.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectDomainLocale: () => (/* binding */ detectDomainLocale)\n/* harmony export */ });\nfunction detectDomainLocale(domainItems, hostname, detectedLocale) {\n    if (!domainItems) return;\n    if (detectedLocale) {\n        detectedLocale = detectedLocale.toLowerCase();\n    }\n    for (const item of domainItems){\n        var _item_domain, _item_locales;\n        // remove port if present\n        const domainHostname = (_item_domain = item.domain) == null ? void 0 : _item_domain.split(\":\", 1)[0].toLowerCase();\n        if (hostname === domainHostname || detectedLocale === item.defaultLocale.toLowerCase() || ((_item_locales = item.locales) == null ? void 0 : _item_locales.some((locale)=>locale.toLowerCase() === detectedLocale))) {\n            return item;\n        }\n    }\n} //# sourceMappingURL=detect-domain-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL2RldGVjdC1kb21haW4tbG9jYWxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxtQkFBbUJDLFdBQVcsRUFBRUMsUUFBUSxFQUFFQyxjQUFjO0lBQ3BFLElBQUksQ0FBQ0YsYUFBYTtJQUNsQixJQUFJRSxnQkFBZ0I7UUFDaEJBLGlCQUFpQkEsZUFBZUMsV0FBVztJQUMvQztJQUNBLEtBQUssTUFBTUMsUUFBUUosWUFBWTtRQUMzQixJQUFJSyxjQUFjQztRQUNsQix5QkFBeUI7UUFDekIsTUFBTUMsaUJBQWlCLENBQUNGLGVBQWVELEtBQUtJLE1BQU0sS0FBSyxPQUFPLEtBQUssSUFBSUgsYUFBYUksS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQ04sV0FBVztRQUNoSCxJQUFJRixhQUFhTSxrQkFBa0JMLG1CQUFtQkUsS0FBS00sYUFBYSxDQUFDUCxXQUFXLE1BQU8sRUFBQ0csZ0JBQWdCRixLQUFLTyxPQUFPLEtBQUssT0FBTyxLQUFLLElBQUlMLGNBQWNNLElBQUksQ0FBQyxDQUFDQyxTQUFTQSxPQUFPVixXQUFXLE9BQU9ELGVBQWMsR0FBSTtZQUNqTixPQUFPRTtRQUNYO0lBQ0o7QUFDSixFQUVBLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL2kxOG4vZGV0ZWN0LWRvbWFpbi1sb2NhbGUuanM/YmNhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZGV0ZWN0RG9tYWluTG9jYWxlKGRvbWFpbkl0ZW1zLCBob3N0bmFtZSwgZGV0ZWN0ZWRMb2NhbGUpIHtcbiAgICBpZiAoIWRvbWFpbkl0ZW1zKSByZXR1cm47XG4gICAgaWYgKGRldGVjdGVkTG9jYWxlKSB7XG4gICAgICAgIGRldGVjdGVkTG9jYWxlID0gZGV0ZWN0ZWRMb2NhbGUudG9Mb3dlckNhc2UoKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBpdGVtIG9mIGRvbWFpbkl0ZW1zKXtcbiAgICAgICAgdmFyIF9pdGVtX2RvbWFpbiwgX2l0ZW1fbG9jYWxlcztcbiAgICAgICAgLy8gcmVtb3ZlIHBvcnQgaWYgcHJlc2VudFxuICAgICAgICBjb25zdCBkb21haW5Ib3N0bmFtZSA9IChfaXRlbV9kb21haW4gPSBpdGVtLmRvbWFpbikgPT0gbnVsbCA/IHZvaWQgMCA6IF9pdGVtX2RvbWFpbi5zcGxpdChcIjpcIiwgMSlbMF0udG9Mb3dlckNhc2UoKTtcbiAgICAgICAgaWYgKGhvc3RuYW1lID09PSBkb21haW5Ib3N0bmFtZSB8fCBkZXRlY3RlZExvY2FsZSA9PT0gaXRlbS5kZWZhdWx0TG9jYWxlLnRvTG93ZXJDYXNlKCkgfHwgKChfaXRlbV9sb2NhbGVzID0gaXRlbS5sb2NhbGVzKSA9PSBudWxsID8gdm9pZCAwIDogX2l0ZW1fbG9jYWxlcy5zb21lKChsb2NhbGUpPT5sb2NhbGUudG9Mb3dlckNhc2UoKSA9PT0gZGV0ZWN0ZWRMb2NhbGUpKSkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW07XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRldGVjdC1kb21haW4tbG9jYWxlLmpzLm1hcCJdLCJuYW1lcyI6WyJkZXRlY3REb21haW5Mb2NhbGUiLCJkb21haW5JdGVtcyIsImhvc3RuYW1lIiwiZGV0ZWN0ZWRMb2NhbGUiLCJ0b0xvd2VyQ2FzZSIsIml0ZW0iLCJfaXRlbV9kb21haW4iLCJfaXRlbV9sb2NhbGVzIiwiZG9tYWluSG9zdG5hbWUiLCJkb21haW4iLCJzcGxpdCIsImRlZmF1bHRMb2NhbGUiLCJsb2NhbGVzIiwic29tZSIsImxvY2FsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/detect-domain-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeLocalePath: () => (/* binding */ normalizeLocalePath)\n/* harmony export */ });\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */ function normalizeLocalePath(pathname, locales) {\n    let detectedLocale;\n    // first item will be empty string from splitting at first char\n    const pathnameParts = pathname.split(\"/\");\n    (locales || []).some((locale)=>{\n        if (pathnameParts[1] && pathnameParts[1].toLowerCase() === locale.toLowerCase()) {\n            detectedLocale = locale;\n            pathnameParts.splice(1, 1);\n            pathname = pathnameParts.join(\"/\") || \"/\";\n            return true;\n        }\n        return false;\n    });\n    return {\n        pathname,\n        detectedLocale\n    };\n} //# sourceMappingURL=normalize-locale-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Ozs7O0NBUUMsR0FBVSxTQUFTQSxvQkFBb0JDLFFBQVEsRUFBRUMsT0FBTztJQUNyRCxJQUFJQztJQUNKLCtEQUErRDtJQUMvRCxNQUFNQyxnQkFBZ0JILFNBQVNJLEtBQUssQ0FBQztJQUNwQ0gsQ0FBQUEsV0FBVyxFQUFFLEVBQUVJLElBQUksQ0FBQyxDQUFDQztRQUNsQixJQUFJSCxhQUFhLENBQUMsRUFBRSxJQUFJQSxhQUFhLENBQUMsRUFBRSxDQUFDSSxXQUFXLE9BQU9ELE9BQU9DLFdBQVcsSUFBSTtZQUM3RUwsaUJBQWlCSTtZQUNqQkgsY0FBY0ssTUFBTSxDQUFDLEdBQUc7WUFDeEJSLFdBQVdHLGNBQWNNLElBQUksQ0FBQyxRQUFRO1lBQ3RDLE9BQU87UUFDWDtRQUNBLE9BQU87SUFDWDtJQUNBLE9BQU87UUFDSFQ7UUFDQUU7SUFDSjtBQUNKLEVBRUEsaURBQWlEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvaTE4bi9ub3JtYWxpemUtbG9jYWxlLXBhdGguanM/NmY4NiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZvciBhIHBhdGhuYW1lIHRoYXQgbWF5IGluY2x1ZGUgYSBsb2NhbGUgZnJvbSBhIGxpc3Qgb2YgbG9jYWxlcywgaXRcbiAqIHJlbW92ZXMgdGhlIGxvY2FsZSBmcm9tIHRoZSBwYXRobmFtZSByZXR1cm5pbmcgaXQgYWxvbmdzaWRlIHdpdGggdGhlXG4gKiBkZXRlY3RlZCBsb2NhbGUuXG4gKlxuICogQHBhcmFtIHBhdGhuYW1lIEEgcGF0aG5hbWUgdGhhdCBtYXkgaW5jbHVkZSBhIGxvY2FsZS5cbiAqIEBwYXJhbSBsb2NhbGVzIEEgbGlzdCBvZiBsb2NhbGVzLlxuICogQHJldHVybnMgVGhlIGRldGVjdGVkIGxvY2FsZSBhbmQgcGF0aG5hbWUgd2l0aG91dCBsb2NhbGVcbiAqLyBleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplTG9jYWxlUGF0aChwYXRobmFtZSwgbG9jYWxlcykge1xuICAgIGxldCBkZXRlY3RlZExvY2FsZTtcbiAgICAvLyBmaXJzdCBpdGVtIHdpbGwgYmUgZW1wdHkgc3RyaW5nIGZyb20gc3BsaXR0aW5nIGF0IGZpcnN0IGNoYXJcbiAgICBjb25zdCBwYXRobmFtZVBhcnRzID0gcGF0aG5hbWUuc3BsaXQoXCIvXCIpO1xuICAgIChsb2NhbGVzIHx8IFtdKS5zb21lKChsb2NhbGUpPT57XG4gICAgICAgIGlmIChwYXRobmFtZVBhcnRzWzFdICYmIHBhdGhuYW1lUGFydHNbMV0udG9Mb3dlckNhc2UoKSA9PT0gbG9jYWxlLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgICAgICAgIGRldGVjdGVkTG9jYWxlID0gbG9jYWxlO1xuICAgICAgICAgICAgcGF0aG5hbWVQYXJ0cy5zcGxpY2UoMSwgMSk7XG4gICAgICAgICAgICBwYXRobmFtZSA9IHBhdGhuYW1lUGFydHMuam9pbihcIi9cIikgfHwgXCIvXCI7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcGF0aG5hbWUsXG4gICAgICAgIGRldGVjdGVkTG9jYWxlXG4gICAgfTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bm9ybWFsaXplLWxvY2FsZS1wYXRoLmpzLm1hcCJdLCJuYW1lcyI6WyJub3JtYWxpemVMb2NhbGVQYXRoIiwicGF0aG5hbWUiLCJsb2NhbGVzIiwiZGV0ZWN0ZWRMb2NhbGUiLCJwYXRobmFtZVBhcnRzIiwic3BsaXQiLCJzb21lIiwibG9jYWxlIiwidG9Mb3dlckNhc2UiLCJzcGxpY2UiLCJqb2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/lazy-dynamic/no-ssr-error.js":
/*!****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/lazy-dynamic/no-ssr-error.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NEXT_DYNAMIC_NO_SSR_CODE: () => (/* binding */ NEXT_DYNAMIC_NO_SSR_CODE),\n/* harmony export */   throwWithNoSSR: () => (/* binding */ throwWithNoSSR)\n/* harmony export */ });\n// This has to be a shared module which is shared between client component error boundary and dynamic component\nconst NEXT_DYNAMIC_NO_SSR_CODE = \"NEXT_DYNAMIC_NO_SSR_CODE\";\nfunction throwWithNoSSR() {\n    const error = new Error(NEXT_DYNAMIC_NO_SSR_CODE);\n    error.digest = NEXT_DYNAMIC_NO_SSR_CODE;\n    throw error;\n} //# sourceMappingURL=no-ssr-error.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9sYXp5LWR5bmFtaWMvbm8tc3NyLWVycm9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsK0dBQStHO0FBQ3hHLE1BQU1BLDJCQUEyQiwyQkFBMkI7QUFDNUQsU0FBU0M7SUFDWixNQUFNQyxRQUFRLElBQUlDLE1BQU1IO0lBQ3hCRSxNQUFNRSxNQUFNLEdBQUdKO0lBQ2YsTUFBTUU7QUFDVixFQUVBLHdDQUF3QyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL2xhenktZHluYW1pYy9uby1zc3ItZXJyb3IuanM/MDI2NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGlzIGhhcyB0byBiZSBhIHNoYXJlZCBtb2R1bGUgd2hpY2ggaXMgc2hhcmVkIGJldHdlZW4gY2xpZW50IGNvbXBvbmVudCBlcnJvciBib3VuZGFyeSBhbmQgZHluYW1pYyBjb21wb25lbnRcbmV4cG9ydCBjb25zdCBORVhUX0RZTkFNSUNfTk9fU1NSX0NPREUgPSBcIk5FWFRfRFlOQU1JQ19OT19TU1JfQ09ERVwiO1xuZXhwb3J0IGZ1bmN0aW9uIHRocm93V2l0aE5vU1NSKCkge1xuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKE5FWFRfRFlOQU1JQ19OT19TU1JfQ09ERSk7XG4gICAgZXJyb3IuZGlnZXN0ID0gTkVYVF9EWU5BTUlDX05PX1NTUl9DT0RFO1xuICAgIHRocm93IGVycm9yO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1uby1zc3ItZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIk5FWFRfRFlOQU1JQ19OT19TU1JfQ09ERSIsInRocm93V2l0aE5vU1NSIiwiZXJyb3IiLCJFcnJvciIsImRpZ2VzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/lazy-dynamic/no-ssr-error.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
eval("// Note: This file is JS because it's used by the taskfile-swc.js file, which is JS.\n// Keep file changes in sync with the corresponding `.d.ts` files.\n/**\n * These are the browser versions that support all of the following:\n * static import: https://caniuse.com/es6-module\n * dynamic import: https://caniuse.com/es6-module-dynamic-import\n * import.meta: https://caniuse.com/mdn-javascript_operators_import_meta\n */ \nconst MODERN_BROWSERSLIST_TARGET = [\n    \"chrome 64\",\n    \"edge 79\",\n    \"firefox 67\",\n    \"opera 51\",\n    \"safari 12\"\n];\nmodule.exports = MODERN_BROWSERSLIST_TARGET; //# sourceMappingURL=modern-browserslist-target.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9tb2Rlcm4tYnJvd3NlcnNsaXN0LXRhcmdldC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvRkFBb0Y7QUFDcEYsa0VBQWtFO0FBQ2xFOzs7OztDQUtDLEdBQUc7QUFBQSxNQUFNQSw2QkFBNkI7SUFDbkM7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNIO0FBQ0RDLE9BQU9DLE9BQU8sR0FBR0YsNEJBRWpCLHNEQUFzRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL21vZGVybi1icm93c2Vyc2xpc3QtdGFyZ2V0LmpzPzExMDMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTm90ZTogVGhpcyBmaWxlIGlzIEpTIGJlY2F1c2UgaXQncyB1c2VkIGJ5IHRoZSB0YXNrZmlsZS1zd2MuanMgZmlsZSwgd2hpY2ggaXMgSlMuXG4vLyBLZWVwIGZpbGUgY2hhbmdlcyBpbiBzeW5jIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgYC5kLnRzYCBmaWxlcy5cbi8qKlxuICogVGhlc2UgYXJlIHRoZSBicm93c2VyIHZlcnNpb25zIHRoYXQgc3VwcG9ydCBhbGwgb2YgdGhlIGZvbGxvd2luZzpcbiAqIHN0YXRpYyBpbXBvcnQ6IGh0dHBzOi8vY2FuaXVzZS5jb20vZXM2LW1vZHVsZVxuICogZHluYW1pYyBpbXBvcnQ6IGh0dHBzOi8vY2FuaXVzZS5jb20vZXM2LW1vZHVsZS1keW5hbWljLWltcG9ydFxuICogaW1wb3J0Lm1ldGE6IGh0dHBzOi8vY2FuaXVzZS5jb20vbWRuLWphdmFzY3JpcHRfb3BlcmF0b3JzX2ltcG9ydF9tZXRhXG4gKi8gY29uc3QgTU9ERVJOX0JST1dTRVJTTElTVF9UQVJHRVQgPSBbXG4gICAgXCJjaHJvbWUgNjRcIixcbiAgICBcImVkZ2UgNzlcIixcbiAgICBcImZpcmVmb3ggNjdcIixcbiAgICBcIm9wZXJhIDUxXCIsXG4gICAgXCJzYWZhcmkgMTJcIlxuXTtcbm1vZHVsZS5leHBvcnRzID0gTU9ERVJOX0JST1dTRVJTTElTVF9UQVJHRVQ7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1vZGVybi1icm93c2Vyc2xpc3QtdGFyZ2V0LmpzLm1hcCJdLCJuYW1lcyI6WyJNT0RFUk5fQlJPV1NFUlNMSVNUX1RBUkdFVCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/modern-browserslist-target.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureLeadingSlash: () => (/* binding */ ensureLeadingSlash)\n/* harmony export */ });\n/**\n * For a given page path, this function ensures that there is a leading slash.\n * If there is not a leading slash, one is added, otherwise it is noop.\n */ function ensureLeadingSlash(path) {\n    return path.startsWith(\"/\") ? path : \"/\" + path;\n} //# sourceMappingURL=ensure-leading-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9wYWdlLXBhdGgvZW5zdXJlLWxlYWRpbmctc2xhc2guanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7Q0FHQyxHQUFVLFNBQVNBLG1CQUFtQkMsSUFBSTtJQUN2QyxPQUFPQSxLQUFLQyxVQUFVLENBQUMsT0FBT0QsT0FBTyxNQUFNQTtBQUMvQyxFQUVBLGdEQUFnRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3BhZ2UtcGF0aC9lbnN1cmUtbGVhZGluZy1zbGFzaC5qcz8wNDY0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRm9yIGEgZ2l2ZW4gcGFnZSBwYXRoLCB0aGlzIGZ1bmN0aW9uIGVuc3VyZXMgdGhhdCB0aGVyZSBpcyBhIGxlYWRpbmcgc2xhc2guXG4gKiBJZiB0aGVyZSBpcyBub3QgYSBsZWFkaW5nIHNsYXNoLCBvbmUgaXMgYWRkZWQsIG90aGVyd2lzZSBpdCBpcyBub29wLlxuICovIGV4cG9ydCBmdW5jdGlvbiBlbnN1cmVMZWFkaW5nU2xhc2gocGF0aCkge1xuICAgIHJldHVybiBwYXRoLnN0YXJ0c1dpdGgoXCIvXCIpID8gcGF0aCA6IFwiL1wiICsgcGF0aDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZW5zdXJlLWxlYWRpbmctc2xhc2guanMubWFwIl0sIm5hbWVzIjpbImVuc3VyZUxlYWRpbmdTbGFzaCIsInBhdGgiLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addLocale: () => (/* binding */ addLocale)\n/* harmony export */ });\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */ function addLocale(path, locale, defaultLocale, ignorePrefix) {\n    // If no locale was given or the locale is the default locale, we don't need\n    // to prefix the path.\n    if (!locale || locale === defaultLocale) return path;\n    const lower = path.toLowerCase();\n    // If the path is an API path or the path already has the locale prefix, we\n    // don't need to prefix the path.\n    if (!ignorePrefix) {\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/api\")) return path;\n        if ((0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_1__.pathHasPrefix)(lower, \"/\" + locale.toLowerCase())) return path;\n    }\n    // Add the locale prefix to the path.\n    return (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_0__.addPathPrefix)(path, \"/\" + locale);\n} //# sourceMappingURL=add-locale.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLWxvY2FsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBa0Q7QUFDQTtBQUNsRDs7OztDQUlDLEdBQVUsU0FBU0UsVUFBVUMsSUFBSSxFQUFFQyxNQUFNLEVBQUVDLGFBQWEsRUFBRUMsWUFBWTtJQUNuRSw0RUFBNEU7SUFDNUUsc0JBQXNCO0lBQ3RCLElBQUksQ0FBQ0YsVUFBVUEsV0FBV0MsZUFBZSxPQUFPRjtJQUNoRCxNQUFNSSxRQUFRSixLQUFLSyxXQUFXO0lBQzlCLDJFQUEyRTtJQUMzRSxpQ0FBaUM7SUFDakMsSUFBSSxDQUFDRixjQUFjO1FBQ2YsSUFBSUwsK0RBQWFBLENBQUNNLE9BQU8sU0FBUyxPQUFPSjtRQUN6QyxJQUFJRiwrREFBYUEsQ0FBQ00sT0FBTyxNQUFNSCxPQUFPSSxXQUFXLEtBQUssT0FBT0w7SUFDakU7SUFDQSxxQ0FBcUM7SUFDckMsT0FBT0gsK0RBQWFBLENBQUNHLE1BQU0sTUFBTUM7QUFDckMsRUFFQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLWxvY2FsZS5qcz9mODMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZFBhdGhQcmVmaXggfSBmcm9tIFwiLi9hZGQtcGF0aC1wcmVmaXhcIjtcbmltcG9ydCB7IHBhdGhIYXNQcmVmaXggfSBmcm9tIFwiLi9wYXRoLWhhcy1wcmVmaXhcIjtcbi8qKlxuICogRm9yIGEgZ2l2ZW4gcGF0aCBhbmQgYSBsb2NhbGUsIGlmIHRoZSBsb2NhbGUgaXMgZ2l2ZW4sIGl0IHdpbGwgcHJlZml4IHRoZVxuICogbG9jYWxlLiBUaGUgcGF0aCBzaG91bGRuJ3QgYmUgYW4gQVBJIHBhdGguIElmIGEgZGVmYXVsdCBsb2NhbGUgaXMgZ2l2ZW4gdGhlXG4gKiBwcmVmaXggd2lsbCBiZSBvbWl0dGVkIGlmIHRoZSBsb2NhbGUgaXMgYWxyZWFkeSB0aGUgZGVmYXVsdCBsb2NhbGUuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIGFkZExvY2FsZShwYXRoLCBsb2NhbGUsIGRlZmF1bHRMb2NhbGUsIGlnbm9yZVByZWZpeCkge1xuICAgIC8vIElmIG5vIGxvY2FsZSB3YXMgZ2l2ZW4gb3IgdGhlIGxvY2FsZSBpcyB0aGUgZGVmYXVsdCBsb2NhbGUsIHdlIGRvbid0IG5lZWRcbiAgICAvLyB0byBwcmVmaXggdGhlIHBhdGguXG4gICAgaWYgKCFsb2NhbGUgfHwgbG9jYWxlID09PSBkZWZhdWx0TG9jYWxlKSByZXR1cm4gcGF0aDtcbiAgICBjb25zdCBsb3dlciA9IHBhdGgudG9Mb3dlckNhc2UoKTtcbiAgICAvLyBJZiB0aGUgcGF0aCBpcyBhbiBBUEkgcGF0aCBvciB0aGUgcGF0aCBhbHJlYWR5IGhhcyB0aGUgbG9jYWxlIHByZWZpeCwgd2VcbiAgICAvLyBkb24ndCBuZWVkIHRvIHByZWZpeCB0aGUgcGF0aC5cbiAgICBpZiAoIWlnbm9yZVByZWZpeCkge1xuICAgICAgICBpZiAocGF0aEhhc1ByZWZpeChsb3dlciwgXCIvYXBpXCIpKSByZXR1cm4gcGF0aDtcbiAgICAgICAgaWYgKHBhdGhIYXNQcmVmaXgobG93ZXIsIFwiL1wiICsgbG9jYWxlLnRvTG93ZXJDYXNlKCkpKSByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgLy8gQWRkIHRoZSBsb2NhbGUgcHJlZml4IHRvIHRoZSBwYXRoLlxuICAgIHJldHVybiBhZGRQYXRoUHJlZml4KHBhdGgsIFwiL1wiICsgbG9jYWxlKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkLWxvY2FsZS5qcy5tYXAiXSwibmFtZXMiOlsiYWRkUGF0aFByZWZpeCIsInBhdGhIYXNQcmVmaXgiLCJhZGRMb2NhbGUiLCJwYXRoIiwibG9jYWxlIiwiZGVmYXVsdExvY2FsZSIsImlnbm9yZVByZWZpeCIsImxvd2VyIiwidG9Mb3dlckNhc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathPrefix: () => (/* binding */ addPathPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */ function addPathPrefix(path, prefix) {\n    if (!path.startsWith(\"/\") || !prefix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + prefix + pathname + query + hash;\n} //# sourceMappingURL=add-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDOzs7Q0FHQyxHQUFVLFNBQVNDLGNBQWNDLElBQUksRUFBRUMsTUFBTTtJQUMxQyxJQUFJLENBQUNELEtBQUtFLFVBQVUsQ0FBQyxRQUFRLENBQUNELFFBQVE7UUFDbEMsT0FBT0Q7SUFDWDtJQUNBLE1BQU0sRUFBRUcsUUFBUSxFQUFFQyxLQUFLLEVBQUVDLElBQUksRUFBRSxHQUFHUCxzREFBU0EsQ0FBQ0U7SUFDNUMsT0FBTyxLQUFLQyxTQUFTRSxXQUFXQyxRQUFRQztBQUM1QyxFQUVBLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hZGQtcGF0aC1wcmVmaXguanM/MTA3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZVBhdGggfSBmcm9tIFwiLi9wYXJzZS1wYXRoXCI7XG4vKipcbiAqIEFkZHMgdGhlIHByb3ZpZGVkIHByZWZpeCB0byB0aGUgZ2l2ZW4gcGF0aC4gSXQgZmlyc3QgZW5zdXJlcyB0aGF0IHRoZSBwYXRoXG4gKiBpcyBpbmRlZWQgc3RhcnRpbmcgd2l0aCBhIHNsYXNoLlxuICovIGV4cG9ydCBmdW5jdGlvbiBhZGRQYXRoUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKFwiL1wiKSB8fCAhcHJlZml4KSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lLCBxdWVyeSwgaGFzaCB9ID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIHJldHVybiBcIlwiICsgcHJlZml4ICsgcGF0aG5hbWUgKyBxdWVyeSArIGhhc2g7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1wYXRoLXByZWZpeC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwiYWRkUGF0aFByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJzdGFydHNXaXRoIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPathSuffix: () => (/* binding */ addPathSuffix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */ function addPathSuffix(path, suffix) {\n    if (!path.startsWith(\"/\") || !suffix) {\n        return path;\n    }\n    const { pathname, query, hash } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return \"\" + pathname + suffix + query + hash;\n} //# sourceMappingURL=add-path-suffix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtc3VmZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDOzs7O0NBSUMsR0FBVSxTQUFTQyxjQUFjQyxJQUFJLEVBQUVDLE1BQU07SUFDMUMsSUFBSSxDQUFDRCxLQUFLRSxVQUFVLENBQUMsUUFBUSxDQUFDRCxRQUFRO1FBQ2xDLE9BQU9EO0lBQ1g7SUFDQSxNQUFNLEVBQUVHLFFBQVEsRUFBRUMsS0FBSyxFQUFFQyxJQUFJLEVBQUUsR0FBR1Asc0RBQVNBLENBQUNFO0lBQzVDLE9BQU8sS0FBS0csV0FBV0YsU0FBU0csUUFBUUM7QUFDNUMsRUFFQSwyQ0FBMkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYWRkLXBhdGgtc3VmZml4LmpzP2RmY2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VQYXRoIH0gZnJvbSBcIi4vcGFyc2UtcGF0aFwiO1xuLyoqXG4gKiBTaW1pbGFybHkgdG8gYGFkZFBhdGhQcmVmaXhgLCB0aGlzIGZ1bmN0aW9uIGFkZHMgYSBzdWZmaXggYXQgdGhlIGVuZCBvbiB0aGVcbiAqIHByb3ZpZGVkIHBhdGguIEl0IGFsc28gd29ya3Mgb25seSBmb3IgcGF0aHMgZW5zdXJpbmcgdGhlIGFyZ3VtZW50IHN0YXJ0c1xuICogd2l0aCBhIHNsYXNoLlxuICovIGV4cG9ydCBmdW5jdGlvbiBhZGRQYXRoU3VmZml4KHBhdGgsIHN1ZmZpeCkge1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKFwiL1wiKSB8fCAhc3VmZml4KSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lLCBxdWVyeSwgaGFzaCB9ID0gcGFyc2VQYXRoKHBhdGgpO1xuICAgIHJldHVybiBcIlwiICsgcGF0aG5hbWUgKyBzdWZmaXggKyBxdWVyeSArIGhhc2g7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFkZC1wYXRoLXN1ZmZpeC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwiYWRkUGF0aFN1ZmZpeCIsInBhdGgiLCJzdWZmaXgiLCJzdGFydHNXaXRoIiwicGF0aG5hbWUiLCJxdWVyeSIsImhhc2giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js":
/*!*************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizeAppPath: () => (/* binding */ normalizeAppPath),\n/* harmony export */   normalizeRscURL: () => (/* binding */ normalizeRscURL)\n/* harmony export */ });\n/* harmony import */ var _page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../page-path/ensure-leading-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/page-path/ensure-leading-slash.js\");\n/* harmony import */ var _segment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../segment */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\");\n\n\n/**\n * Normalizes an app route so it represents the actual request path. Essentially\n * performing the following transformations:\n *\n * - `/(dashboard)/user/[id]/page` to `/user/[id]`\n * - `/(dashboard)/account/page` to `/account`\n * - `/user/[id]/page` to `/user/[id]`\n * - `/account/page` to `/account`\n * - `/page` to `/`\n * - `/(dashboard)/user/[id]/route` to `/user/[id]`\n * - `/(dashboard)/account/route` to `/account`\n * - `/user/[id]/route` to `/user/[id]`\n * - `/account/route` to `/account`\n * - `/route` to `/`\n * - `/` to `/`\n *\n * @param route the app route to normalize\n * @returns the normalized pathname\n */ function normalizeAppPath(route) {\n    return (0,_page_path_ensure_leading_slash__WEBPACK_IMPORTED_MODULE_0__.ensureLeadingSlash)(route.split(\"/\").reduce((pathname, segment, index, segments)=>{\n        // Empty segments are ignored.\n        if (!segment) {\n            return pathname;\n        }\n        // Groups are ignored.\n        if ((0,_segment__WEBPACK_IMPORTED_MODULE_1__.isGroupSegment)(segment)) {\n            return pathname;\n        }\n        // Parallel segments are ignored.\n        if (segment[0] === \"@\") {\n            return pathname;\n        }\n        // The last segment (if it's a leaf) should be ignored.\n        if ((segment === \"page\" || segment === \"route\") && index === segments.length - 1) {\n            return pathname;\n        }\n        return pathname + \"/\" + segment;\n    }, \"\"));\n}\n/**\n * Strips the `.rsc` extension if it's in the pathname.\n * Since this function is used on full urls it checks `?` for searchParams handling.\n */ function normalizeRscURL(url) {\n    return url.replace(/\\.rsc($|\\?)/, \"$1\");\n} //# sourceMappingURL=app-paths.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvYXBwLXBhdGhzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEU7QUFDM0I7QUFDL0M7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQWtCQyxHQUFVLFNBQVNFLGlCQUFpQkMsS0FBSztJQUN0QyxPQUFPSCxtRkFBa0JBLENBQUNHLE1BQU1DLEtBQUssQ0FBQyxLQUFLQyxNQUFNLENBQUMsQ0FBQ0MsVUFBVUMsU0FBU0MsT0FBT0M7UUFDekUsOEJBQThCO1FBQzlCLElBQUksQ0FBQ0YsU0FBUztZQUNWLE9BQU9EO1FBQ1g7UUFDQSxzQkFBc0I7UUFDdEIsSUFBSUwsd0RBQWNBLENBQUNNLFVBQVU7WUFDekIsT0FBT0Q7UUFDWDtRQUNBLGlDQUFpQztRQUNqQyxJQUFJQyxPQUFPLENBQUMsRUFBRSxLQUFLLEtBQUs7WUFDcEIsT0FBT0Q7UUFDWDtRQUNBLHVEQUF1RDtRQUN2RCxJQUFJLENBQUNDLFlBQVksVUFBVUEsWUFBWSxPQUFNLEtBQU1DLFVBQVVDLFNBQVNDLE1BQU0sR0FBRyxHQUFHO1lBQzlFLE9BQU9KO1FBQ1g7UUFDQSxPQUFPQSxXQUFXLE1BQU1DO0lBQzVCLEdBQUc7QUFDUDtBQUNBOzs7Q0FHQyxHQUFVLFNBQVNJLGdCQUFnQkMsR0FBRztJQUNuQyxPQUFPQSxJQUFJQyxPQUFPLENBQUMsZUFDbkI7QUFDSixFQUVBLHFDQUFxQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9hcHAtcGF0aHMuanM/YjY4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbnN1cmVMZWFkaW5nU2xhc2ggfSBmcm9tIFwiLi4vLi4vcGFnZS1wYXRoL2Vuc3VyZS1sZWFkaW5nLXNsYXNoXCI7XG5pbXBvcnQgeyBpc0dyb3VwU2VnbWVudCB9IGZyb20gXCIuLi8uLi9zZWdtZW50XCI7XG4vKipcbiAqIE5vcm1hbGl6ZXMgYW4gYXBwIHJvdXRlIHNvIGl0IHJlcHJlc2VudHMgdGhlIGFjdHVhbCByZXF1ZXN0IHBhdGguIEVzc2VudGlhbGx5XG4gKiBwZXJmb3JtaW5nIHRoZSBmb2xsb3dpbmcgdHJhbnNmb3JtYXRpb25zOlxuICpcbiAqIC0gYC8oZGFzaGJvYXJkKS91c2VyL1tpZF0vcGFnZWAgdG8gYC91c2VyL1tpZF1gXG4gKiAtIGAvKGRhc2hib2FyZCkvYWNjb3VudC9wYWdlYCB0byBgL2FjY291bnRgXG4gKiAtIGAvdXNlci9baWRdL3BhZ2VgIHRvIGAvdXNlci9baWRdYFxuICogLSBgL2FjY291bnQvcGFnZWAgdG8gYC9hY2NvdW50YFxuICogLSBgL3BhZ2VgIHRvIGAvYFxuICogLSBgLyhkYXNoYm9hcmQpL3VzZXIvW2lkXS9yb3V0ZWAgdG8gYC91c2VyL1tpZF1gXG4gKiAtIGAvKGRhc2hib2FyZCkvYWNjb3VudC9yb3V0ZWAgdG8gYC9hY2NvdW50YFxuICogLSBgL3VzZXIvW2lkXS9yb3V0ZWAgdG8gYC91c2VyL1tpZF1gXG4gKiAtIGAvYWNjb3VudC9yb3V0ZWAgdG8gYC9hY2NvdW50YFxuICogLSBgL3JvdXRlYCB0byBgL2BcbiAqIC0gYC9gIHRvIGAvYFxuICpcbiAqIEBwYXJhbSByb3V0ZSB0aGUgYXBwIHJvdXRlIHRvIG5vcm1hbGl6ZVxuICogQHJldHVybnMgdGhlIG5vcm1hbGl6ZWQgcGF0aG5hbWVcbiAqLyBleHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplQXBwUGF0aChyb3V0ZSkge1xuICAgIHJldHVybiBlbnN1cmVMZWFkaW5nU2xhc2gocm91dGUuc3BsaXQoXCIvXCIpLnJlZHVjZSgocGF0aG5hbWUsIHNlZ21lbnQsIGluZGV4LCBzZWdtZW50cyk9PntcbiAgICAgICAgLy8gRW1wdHkgc2VnbWVudHMgYXJlIGlnbm9yZWQuXG4gICAgICAgIGlmICghc2VnbWVudCkge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgICAgIC8vIEdyb3VwcyBhcmUgaWdub3JlZC5cbiAgICAgICAgaWYgKGlzR3JvdXBTZWdtZW50KHNlZ21lbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgLy8gUGFyYWxsZWwgc2VnbWVudHMgYXJlIGlnbm9yZWQuXG4gICAgICAgIGlmIChzZWdtZW50WzBdID09PSBcIkBcIikge1xuICAgICAgICAgICAgcmV0dXJuIHBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRoZSBsYXN0IHNlZ21lbnQgKGlmIGl0J3MgYSBsZWFmKSBzaG91bGQgYmUgaWdub3JlZC5cbiAgICAgICAgaWYgKChzZWdtZW50ID09PSBcInBhZ2VcIiB8fCBzZWdtZW50ID09PSBcInJvdXRlXCIpICYmIGluZGV4ID09PSBzZWdtZW50cy5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aG5hbWU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHBhdGhuYW1lICsgXCIvXCIgKyBzZWdtZW50O1xuICAgIH0sIFwiXCIpKTtcbn1cbi8qKlxuICogU3RyaXBzIHRoZSBgLnJzY2AgZXh0ZW5zaW9uIGlmIGl0J3MgaW4gdGhlIHBhdGhuYW1lLlxuICogU2luY2UgdGhpcyBmdW5jdGlvbiBpcyB1c2VkIG9uIGZ1bGwgdXJscyBpdCBjaGVja3MgYD9gIGZvciBzZWFyY2hQYXJhbXMgaGFuZGxpbmcuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZVJzY1VSTCh1cmwpIHtcbiAgICByZXR1cm4gdXJsLnJlcGxhY2UoL1xcLnJzYygkfFxcPykvLCAvLyAkMSBlbnN1cmVzIGA/YCBpcyBwcmVzZXJ2ZWRcbiAgICBcIiQxXCIpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcGF0aHMuanMubWFwIl0sIm5hbWVzIjpbImVuc3VyZUxlYWRpbmdTbGFzaCIsImlzR3JvdXBTZWdtZW50Iiwibm9ybWFsaXplQXBwUGF0aCIsInJvdXRlIiwic3BsaXQiLCJyZWR1Y2UiLCJwYXRobmFtZSIsInNlZ21lbnQiLCJpbmRleCIsInNlZ21lbnRzIiwibGVuZ3RoIiwibm9ybWFsaXplUnNjVVJMIiwidXJsIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/app-paths.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatNextPathnameInfo: () => (/* binding */ formatNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./remove-trailing-slash */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\");\n/* harmony import */ var _add_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./add-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-prefix.js\");\n/* harmony import */ var _add_path_suffix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./add-path-suffix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-path-suffix.js\");\n/* harmony import */ var _add_locale__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./add-locale */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/add-locale.js\");\n\n\n\n\nfunction formatNextPathnameInfo(info) {\n    let pathname = (0,_add_locale__WEBPACK_IMPORTED_MODULE_3__.addLocale)(info.pathname, info.locale, info.buildId ? undefined : info.defaultLocale, info.ignorePrefix);\n    if (info.buildId || !info.trailingSlash) {\n        pathname = (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n    }\n    if (info.buildId) {\n        pathname = (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)((0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, \"/_next/data/\" + info.buildId), info.pathname === \"/\" ? \"index.json\" : \".json\");\n    }\n    pathname = (0,_add_path_prefix__WEBPACK_IMPORTED_MODULE_1__.addPathPrefix)(pathname, info.basePath);\n    return !info.buildId && info.trailingSlash ? !pathname.endsWith(\"/\") ? (0,_add_path_suffix__WEBPACK_IMPORTED_MODULE_2__.addPathSuffix)(pathname, \"/\") : pathname : (0,_remove_trailing_slash__WEBPACK_IMPORTED_MODULE_0__.removeTrailingSlash)(pathname);\n} //# sourceMappingURL=format-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZm9ybWF0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4RDtBQUNaO0FBQ0E7QUFDVDtBQUNsQyxTQUFTSSx1QkFBdUJDLElBQUk7SUFDdkMsSUFBSUMsV0FBV0gsc0RBQVNBLENBQUNFLEtBQUtDLFFBQVEsRUFBRUQsS0FBS0UsTUFBTSxFQUFFRixLQUFLRyxPQUFPLEdBQUdDLFlBQVlKLEtBQUtLLGFBQWEsRUFBRUwsS0FBS00sWUFBWTtJQUNySCxJQUFJTixLQUFLRyxPQUFPLElBQUksQ0FBQ0gsS0FBS08sYUFBYSxFQUFFO1FBQ3JDTixXQUFXTiwyRUFBbUJBLENBQUNNO0lBQ25DO0lBQ0EsSUFBSUQsS0FBS0csT0FBTyxFQUFFO1FBQ2RGLFdBQVdKLCtEQUFhQSxDQUFDRCwrREFBYUEsQ0FBQ0ssVUFBVSxpQkFBaUJELEtBQUtHLE9BQU8sR0FBR0gsS0FBS0MsUUFBUSxLQUFLLE1BQU0sZUFBZTtJQUM1SDtJQUNBQSxXQUFXTCwrREFBYUEsQ0FBQ0ssVUFBVUQsS0FBS1EsUUFBUTtJQUNoRCxPQUFPLENBQUNSLEtBQUtHLE9BQU8sSUFBSUgsS0FBS08sYUFBYSxHQUFHLENBQUNOLFNBQVNRLFFBQVEsQ0FBQyxPQUFPWiwrREFBYUEsQ0FBQ0ksVUFBVSxPQUFPQSxXQUFXTiwyRUFBbUJBLENBQUNNO0FBQ3pJLEVBRUEscURBQXFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2Zvcm1hdC1uZXh0LXBhdGhuYW1lLWluZm8uanM/NTQ3YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZW1vdmVUcmFpbGluZ1NsYXNoIH0gZnJvbSBcIi4vcmVtb3ZlLXRyYWlsaW5nLXNsYXNoXCI7XG5pbXBvcnQgeyBhZGRQYXRoUHJlZml4IH0gZnJvbSBcIi4vYWRkLXBhdGgtcHJlZml4XCI7XG5pbXBvcnQgeyBhZGRQYXRoU3VmZml4IH0gZnJvbSBcIi4vYWRkLXBhdGgtc3VmZml4XCI7XG5pbXBvcnQgeyBhZGRMb2NhbGUgfSBmcm9tIFwiLi9hZGQtbG9jYWxlXCI7XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0TmV4dFBhdGhuYW1lSW5mbyhpbmZvKSB7XG4gICAgbGV0IHBhdGhuYW1lID0gYWRkTG9jYWxlKGluZm8ucGF0aG5hbWUsIGluZm8ubG9jYWxlLCBpbmZvLmJ1aWxkSWQgPyB1bmRlZmluZWQgOiBpbmZvLmRlZmF1bHRMb2NhbGUsIGluZm8uaWdub3JlUHJlZml4KTtcbiAgICBpZiAoaW5mby5idWlsZElkIHx8ICFpbmZvLnRyYWlsaW5nU2xhc2gpIHtcbiAgICAgICAgcGF0aG5hbWUgPSByZW1vdmVUcmFpbGluZ1NsYXNoKHBhdGhuYW1lKTtcbiAgICB9XG4gICAgaWYgKGluZm8uYnVpbGRJZCkge1xuICAgICAgICBwYXRobmFtZSA9IGFkZFBhdGhTdWZmaXgoYWRkUGF0aFByZWZpeChwYXRobmFtZSwgXCIvX25leHQvZGF0YS9cIiArIGluZm8uYnVpbGRJZCksIGluZm8ucGF0aG5hbWUgPT09IFwiL1wiID8gXCJpbmRleC5qc29uXCIgOiBcIi5qc29uXCIpO1xuICAgIH1cbiAgICBwYXRobmFtZSA9IGFkZFBhdGhQcmVmaXgocGF0aG5hbWUsIGluZm8uYmFzZVBhdGgpO1xuICAgIHJldHVybiAhaW5mby5idWlsZElkICYmIGluZm8udHJhaWxpbmdTbGFzaCA/ICFwYXRobmFtZS5lbmRzV2l0aChcIi9cIikgPyBhZGRQYXRoU3VmZml4KHBhdGhuYW1lLCBcIi9cIikgOiBwYXRobmFtZSA6IHJlbW92ZVRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb3JtYXQtbmV4dC1wYXRobmFtZS1pbmZvLmpzLm1hcCJdLCJuYW1lcyI6WyJyZW1vdmVUcmFpbGluZ1NsYXNoIiwiYWRkUGF0aFByZWZpeCIsImFkZFBhdGhTdWZmaXgiLCJhZGRMb2NhbGUiLCJmb3JtYXROZXh0UGF0aG5hbWVJbmZvIiwiaW5mbyIsInBhdGhuYW1lIiwibG9jYWxlIiwiYnVpbGRJZCIsInVuZGVmaW5lZCIsImRlZmF1bHRMb2NhbGUiLCJpZ25vcmVQcmVmaXgiLCJ0cmFpbGluZ1NsYXNoIiwiYmFzZVBhdGgiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/format-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNextPathnameInfo: () => (/* binding */ getNextPathnameInfo)\n/* harmony export */ });\n/* harmony import */ var _i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../i18n/normalize-locale-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/i18n/normalize-locale-path.js\");\n/* harmony import */ var _remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./remove-path-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\");\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n\n\nfunction getNextPathnameInfo(pathname, options) {\n    var _options_nextConfig;\n    const { basePath, i18n, trailingSlash } = (_options_nextConfig = options.nextConfig) != null ? _options_nextConfig : {};\n    const info = {\n        pathname,\n        trailingSlash: pathname !== \"/\" ? pathname.endsWith(\"/\") : trailingSlash\n    };\n    if (basePath && (0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_2__.pathHasPrefix)(info.pathname, basePath)) {\n        info.pathname = (0,_remove_path_prefix__WEBPACK_IMPORTED_MODULE_1__.removePathPrefix)(info.pathname, basePath);\n        info.basePath = basePath;\n    }\n    let pathnameNoDataPrefix = info.pathname;\n    if (info.pathname.startsWith(\"/_next/data/\") && info.pathname.endsWith(\".json\")) {\n        const paths = info.pathname.replace(/^\\/_next\\/data\\//, \"\").replace(/\\.json$/, \"\").split(\"/\");\n        const buildId = paths[0];\n        info.buildId = buildId;\n        pathnameNoDataPrefix = paths[1] !== \"index\" ? \"/\" + paths.slice(1).join(\"/\") : \"/\";\n        // update pathname with normalized if enabled although\n        // we use normalized to populate locale info still\n        if (options.parseData === true) {\n            info.pathname = pathnameNoDataPrefix;\n        }\n    }\n    // If provided, use the locale route normalizer to detect the locale instead\n    // of the function below.\n    if (i18n) {\n        let result = options.i18nProvider ? options.i18nProvider.analyze(info.pathname) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(info.pathname, i18n.locales);\n        info.locale = result.detectedLocale;\n        var _result_pathname;\n        info.pathname = (_result_pathname = result.pathname) != null ? _result_pathname : info.pathname;\n        if (!result.detectedLocale && info.buildId) {\n            result = options.i18nProvider ? options.i18nProvider.analyze(pathnameNoDataPrefix) : (0,_i18n_normalize_locale_path__WEBPACK_IMPORTED_MODULE_0__.normalizeLocalePath)(pathnameNoDataPrefix, i18n.locales);\n            if (result.detectedLocale) {\n                info.locale = result.detectedLocale;\n            }\n        }\n    }\n    return info;\n} //# sourceMappingURL=get-next-pathname-info.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvZ2V0LW5leHQtcGF0aG5hbWUtaW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVFO0FBQ2Y7QUFDTjtBQUMzQyxTQUFTRyxvQkFBb0JDLFFBQVEsRUFBRUMsT0FBTztJQUNqRCxJQUFJQztJQUNKLE1BQU0sRUFBRUMsUUFBUSxFQUFFQyxJQUFJLEVBQUVDLGFBQWEsRUFBRSxHQUFHLENBQUNILHNCQUFzQkQsUUFBUUssVUFBVSxLQUFLLE9BQU9KLHNCQUFzQixDQUFDO0lBQ3RILE1BQU1LLE9BQU87UUFDVFA7UUFDQUssZUFBZUwsYUFBYSxNQUFNQSxTQUFTUSxRQUFRLENBQUMsT0FBT0g7SUFDL0Q7SUFDQSxJQUFJRixZQUFZTCwrREFBYUEsQ0FBQ1MsS0FBS1AsUUFBUSxFQUFFRyxXQUFXO1FBQ3BESSxLQUFLUCxRQUFRLEdBQUdILHFFQUFnQkEsQ0FBQ1UsS0FBS1AsUUFBUSxFQUFFRztRQUNoREksS0FBS0osUUFBUSxHQUFHQTtJQUNwQjtJQUNBLElBQUlNLHVCQUF1QkYsS0FBS1AsUUFBUTtJQUN4QyxJQUFJTyxLQUFLUCxRQUFRLENBQUNVLFVBQVUsQ0FBQyxtQkFBbUJILEtBQUtQLFFBQVEsQ0FBQ1EsUUFBUSxDQUFDLFVBQVU7UUFDN0UsTUFBTUcsUUFBUUosS0FBS1AsUUFBUSxDQUFDWSxPQUFPLENBQUMsb0JBQW9CLElBQUlBLE9BQU8sQ0FBQyxXQUFXLElBQUlDLEtBQUssQ0FBQztRQUN6RixNQUFNQyxVQUFVSCxLQUFLLENBQUMsRUFBRTtRQUN4QkosS0FBS08sT0FBTyxHQUFHQTtRQUNmTCx1QkFBdUJFLEtBQUssQ0FBQyxFQUFFLEtBQUssVUFBVSxNQUFNQSxNQUFNSSxLQUFLLENBQUMsR0FBR0MsSUFBSSxDQUFDLE9BQU87UUFDL0Usc0RBQXNEO1FBQ3RELGtEQUFrRDtRQUNsRCxJQUFJZixRQUFRZ0IsU0FBUyxLQUFLLE1BQU07WUFDNUJWLEtBQUtQLFFBQVEsR0FBR1M7UUFDcEI7SUFDSjtJQUNBLDRFQUE0RTtJQUM1RSx5QkFBeUI7SUFDekIsSUFBSUwsTUFBTTtRQUNOLElBQUljLFNBQVNqQixRQUFRa0IsWUFBWSxHQUFHbEIsUUFBUWtCLFlBQVksQ0FBQ0MsT0FBTyxDQUFDYixLQUFLUCxRQUFRLElBQUlKLGdGQUFtQkEsQ0FBQ1csS0FBS1AsUUFBUSxFQUFFSSxLQUFLaUIsT0FBTztRQUNqSWQsS0FBS2UsTUFBTSxHQUFHSixPQUFPSyxjQUFjO1FBQ25DLElBQUlDO1FBQ0pqQixLQUFLUCxRQUFRLEdBQUcsQ0FBQ3dCLG1CQUFtQk4sT0FBT2xCLFFBQVEsS0FBSyxPQUFPd0IsbUJBQW1CakIsS0FBS1AsUUFBUTtRQUMvRixJQUFJLENBQUNrQixPQUFPSyxjQUFjLElBQUloQixLQUFLTyxPQUFPLEVBQUU7WUFDeENJLFNBQVNqQixRQUFRa0IsWUFBWSxHQUFHbEIsUUFBUWtCLFlBQVksQ0FBQ0MsT0FBTyxDQUFDWCx3QkFBd0JiLGdGQUFtQkEsQ0FBQ2Esc0JBQXNCTCxLQUFLaUIsT0FBTztZQUMzSSxJQUFJSCxPQUFPSyxjQUFjLEVBQUU7Z0JBQ3ZCaEIsS0FBS2UsTUFBTSxHQUFHSixPQUFPSyxjQUFjO1lBQ3ZDO1FBQ0o7SUFDSjtJQUNBLE9BQU9oQjtBQUNYLEVBRUEsa0RBQWtEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL2dldC1uZXh0LXBhdGhuYW1lLWluZm8uanM/MTQ1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBub3JtYWxpemVMb2NhbGVQYXRoIH0gZnJvbSBcIi4uLy4uL2kxOG4vbm9ybWFsaXplLWxvY2FsZS1wYXRoXCI7XG5pbXBvcnQgeyByZW1vdmVQYXRoUHJlZml4IH0gZnJvbSBcIi4vcmVtb3ZlLXBhdGgtcHJlZml4XCI7XG5pbXBvcnQgeyBwYXRoSGFzUHJlZml4IH0gZnJvbSBcIi4vcGF0aC1oYXMtcHJlZml4XCI7XG5leHBvcnQgZnVuY3Rpb24gZ2V0TmV4dFBhdGhuYW1lSW5mbyhwYXRobmFtZSwgb3B0aW9ucykge1xuICAgIHZhciBfb3B0aW9uc19uZXh0Q29uZmlnO1xuICAgIGNvbnN0IHsgYmFzZVBhdGgsIGkxOG4sIHRyYWlsaW5nU2xhc2ggfSA9IChfb3B0aW9uc19uZXh0Q29uZmlnID0gb3B0aW9ucy5uZXh0Q29uZmlnKSAhPSBudWxsID8gX29wdGlvbnNfbmV4dENvbmZpZyA6IHt9O1xuICAgIGNvbnN0IGluZm8gPSB7XG4gICAgICAgIHBhdGhuYW1lLFxuICAgICAgICB0cmFpbGluZ1NsYXNoOiBwYXRobmFtZSAhPT0gXCIvXCIgPyBwYXRobmFtZS5lbmRzV2l0aChcIi9cIikgOiB0cmFpbGluZ1NsYXNoXG4gICAgfTtcbiAgICBpZiAoYmFzZVBhdGggJiYgcGF0aEhhc1ByZWZpeChpbmZvLnBhdGhuYW1lLCBiYXNlUGF0aCkpIHtcbiAgICAgICAgaW5mby5wYXRobmFtZSA9IHJlbW92ZVBhdGhQcmVmaXgoaW5mby5wYXRobmFtZSwgYmFzZVBhdGgpO1xuICAgICAgICBpbmZvLmJhc2VQYXRoID0gYmFzZVBhdGg7XG4gICAgfVxuICAgIGxldCBwYXRobmFtZU5vRGF0YVByZWZpeCA9IGluZm8ucGF0aG5hbWU7XG4gICAgaWYgKGluZm8ucGF0aG5hbWUuc3RhcnRzV2l0aChcIi9fbmV4dC9kYXRhL1wiKSAmJiBpbmZvLnBhdGhuYW1lLmVuZHNXaXRoKFwiLmpzb25cIikpIHtcbiAgICAgICAgY29uc3QgcGF0aHMgPSBpbmZvLnBhdGhuYW1lLnJlcGxhY2UoL15cXC9fbmV4dFxcL2RhdGFcXC8vLCBcIlwiKS5yZXBsYWNlKC9cXC5qc29uJC8sIFwiXCIpLnNwbGl0KFwiL1wiKTtcbiAgICAgICAgY29uc3QgYnVpbGRJZCA9IHBhdGhzWzBdO1xuICAgICAgICBpbmZvLmJ1aWxkSWQgPSBidWlsZElkO1xuICAgICAgICBwYXRobmFtZU5vRGF0YVByZWZpeCA9IHBhdGhzWzFdICE9PSBcImluZGV4XCIgPyBcIi9cIiArIHBhdGhzLnNsaWNlKDEpLmpvaW4oXCIvXCIpIDogXCIvXCI7XG4gICAgICAgIC8vIHVwZGF0ZSBwYXRobmFtZSB3aXRoIG5vcm1hbGl6ZWQgaWYgZW5hYmxlZCBhbHRob3VnaFxuICAgICAgICAvLyB3ZSB1c2Ugbm9ybWFsaXplZCB0byBwb3B1bGF0ZSBsb2NhbGUgaW5mbyBzdGlsbFxuICAgICAgICBpZiAob3B0aW9ucy5wYXJzZURhdGEgPT09IHRydWUpIHtcbiAgICAgICAgICAgIGluZm8ucGF0aG5hbWUgPSBwYXRobmFtZU5vRGF0YVByZWZpeDtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBJZiBwcm92aWRlZCwgdXNlIHRoZSBsb2NhbGUgcm91dGUgbm9ybWFsaXplciB0byBkZXRlY3QgdGhlIGxvY2FsZSBpbnN0ZWFkXG4gICAgLy8gb2YgdGhlIGZ1bmN0aW9uIGJlbG93LlxuICAgIGlmIChpMThuKSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBvcHRpb25zLmkxOG5Qcm92aWRlciA/IG9wdGlvbnMuaTE4blByb3ZpZGVyLmFuYWx5emUoaW5mby5wYXRobmFtZSkgOiBub3JtYWxpemVMb2NhbGVQYXRoKGluZm8ucGF0aG5hbWUsIGkxOG4ubG9jYWxlcyk7XG4gICAgICAgIGluZm8ubG9jYWxlID0gcmVzdWx0LmRldGVjdGVkTG9jYWxlO1xuICAgICAgICB2YXIgX3Jlc3VsdF9wYXRobmFtZTtcbiAgICAgICAgaW5mby5wYXRobmFtZSA9IChfcmVzdWx0X3BhdGhuYW1lID0gcmVzdWx0LnBhdGhuYW1lKSAhPSBudWxsID8gX3Jlc3VsdF9wYXRobmFtZSA6IGluZm8ucGF0aG5hbWU7XG4gICAgICAgIGlmICghcmVzdWx0LmRldGVjdGVkTG9jYWxlICYmIGluZm8uYnVpbGRJZCkge1xuICAgICAgICAgICAgcmVzdWx0ID0gb3B0aW9ucy5pMThuUHJvdmlkZXIgPyBvcHRpb25zLmkxOG5Qcm92aWRlci5hbmFseXplKHBhdGhuYW1lTm9EYXRhUHJlZml4KSA6IG5vcm1hbGl6ZUxvY2FsZVBhdGgocGF0aG5hbWVOb0RhdGFQcmVmaXgsIGkxOG4ubG9jYWxlcyk7XG4gICAgICAgICAgICBpZiAocmVzdWx0LmRldGVjdGVkTG9jYWxlKSB7XG4gICAgICAgICAgICAgICAgaW5mby5sb2NhbGUgPSByZXN1bHQuZGV0ZWN0ZWRMb2NhbGU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGluZm87XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldC1uZXh0LXBhdGhuYW1lLWluZm8uanMubWFwIl0sIm5hbWVzIjpbIm5vcm1hbGl6ZUxvY2FsZVBhdGgiLCJyZW1vdmVQYXRoUHJlZml4IiwicGF0aEhhc1ByZWZpeCIsImdldE5leHRQYXRobmFtZUluZm8iLCJwYXRobmFtZSIsIm9wdGlvbnMiLCJfb3B0aW9uc19uZXh0Q29uZmlnIiwiYmFzZVBhdGgiLCJpMThuIiwidHJhaWxpbmdTbGFzaCIsIm5leHRDb25maWciLCJpbmZvIiwiZW5kc1dpdGgiLCJwYXRobmFtZU5vRGF0YVByZWZpeCIsInN0YXJ0c1dpdGgiLCJwYXRocyIsInJlcGxhY2UiLCJzcGxpdCIsImJ1aWxkSWQiLCJzbGljZSIsImpvaW4iLCJwYXJzZURhdGEiLCJyZXN1bHQiLCJpMThuUHJvdmlkZXIiLCJhbmFseXplIiwibG9jYWxlcyIsImxvY2FsZSIsImRldGVjdGVkTG9jYWxlIiwiX3Jlc3VsdF9wYXRobmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/get-next-pathname-info.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js":
/*!**************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePath: () => (/* binding */ parsePath)\n/* harmony export */ });\n/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */ function parsePath(path) {\n    const hashIndex = path.indexOf(\"#\");\n    const queryIndex = path.indexOf(\"?\");\n    const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex);\n    if (hasQuery || hashIndex > -1) {\n        return {\n            pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n            query: hasQuery ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined) : \"\",\n            hash: hashIndex > -1 ? path.slice(hashIndex) : \"\"\n        };\n    }\n    return {\n        pathname: path,\n        query: \"\",\n        hash: \"\"\n    };\n} //# sourceMappingURL=parse-path.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7Q0FJQyxHQUFVLFNBQVNBLFVBQVVDLElBQUk7SUFDOUIsTUFBTUMsWUFBWUQsS0FBS0UsT0FBTyxDQUFDO0lBQy9CLE1BQU1DLGFBQWFILEtBQUtFLE9BQU8sQ0FBQztJQUNoQyxNQUFNRSxXQUFXRCxhQUFhLENBQUMsS0FBTUYsQ0FBQUEsWUFBWSxLQUFLRSxhQUFhRixTQUFRO0lBQzNFLElBQUlHLFlBQVlILFlBQVksQ0FBQyxHQUFHO1FBQzVCLE9BQU87WUFDSEksVUFBVUwsS0FBS00sU0FBUyxDQUFDLEdBQUdGLFdBQVdELGFBQWFGO1lBQ3BETSxPQUFPSCxXQUFXSixLQUFLTSxTQUFTLENBQUNILFlBQVlGLFlBQVksQ0FBQyxJQUFJQSxZQUFZTyxhQUFhO1lBQ3ZGQyxNQUFNUixZQUFZLENBQUMsSUFBSUQsS0FBS1UsS0FBSyxDQUFDVCxhQUFhO1FBQ25EO0lBQ0o7SUFDQSxPQUFPO1FBQ0hJLFVBQVVMO1FBQ1ZPLE9BQU87UUFDUEUsTUFBTTtJQUNWO0FBQ0osRUFFQSxzQ0FBc0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGFyc2UtcGF0aC5qcz9iM2M0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2l2ZW4gYSBwYXRoIHRoaXMgZnVuY3Rpb24gd2lsbCBmaW5kIHRoZSBwYXRobmFtZSwgcXVlcnkgYW5kIGhhc2ggYW5kIHJldHVyblxuICogdGhlbS4gVGhpcyBpcyB1c2VmdWwgdG8gcGFyc2UgZnVsbCBwYXRocyBvbiB0aGUgY2xpZW50IHNpZGUuXG4gKiBAcGFyYW0gcGF0aCBBIHBhdGggdG8gcGFyc2UgZS5nLiAvZm9vL2Jhcj9pZD0xI2hhc2hcbiAqLyBleHBvcnQgZnVuY3Rpb24gcGFyc2VQYXRoKHBhdGgpIHtcbiAgICBjb25zdCBoYXNoSW5kZXggPSBwYXRoLmluZGV4T2YoXCIjXCIpO1xuICAgIGNvbnN0IHF1ZXJ5SW5kZXggPSBwYXRoLmluZGV4T2YoXCI/XCIpO1xuICAgIGNvbnN0IGhhc1F1ZXJ5ID0gcXVlcnlJbmRleCA+IC0xICYmIChoYXNoSW5kZXggPCAwIHx8IHF1ZXJ5SW5kZXggPCBoYXNoSW5kZXgpO1xuICAgIGlmIChoYXNRdWVyeSB8fCBoYXNoSW5kZXggPiAtMSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcGF0aG5hbWU6IHBhdGguc3Vic3RyaW5nKDAsIGhhc1F1ZXJ5ID8gcXVlcnlJbmRleCA6IGhhc2hJbmRleCksXG4gICAgICAgICAgICBxdWVyeTogaGFzUXVlcnkgPyBwYXRoLnN1YnN0cmluZyhxdWVyeUluZGV4LCBoYXNoSW5kZXggPiAtMSA/IGhhc2hJbmRleCA6IHVuZGVmaW5lZCkgOiBcIlwiLFxuICAgICAgICAgICAgaGFzaDogaGFzaEluZGV4ID4gLTEgPyBwYXRoLnNsaWNlKGhhc2hJbmRleCkgOiBcIlwiXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHBhdGhuYW1lOiBwYXRoLFxuICAgICAgICBxdWVyeTogXCJcIixcbiAgICAgICAgaGFzaDogXCJcIlxuICAgIH07XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhcnNlLXBhdGguanMubWFwIl0sIm5hbWVzIjpbInBhcnNlUGF0aCIsInBhdGgiLCJoYXNoSW5kZXgiLCJpbmRleE9mIiwicXVlcnlJbmRleCIsImhhc1F1ZXJ5IiwicGF0aG5hbWUiLCJzdWJzdHJpbmciLCJxdWVyeSIsInVuZGVmaW5lZCIsImhhc2giLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pathHasPrefix: () => (/* binding */ pathHasPrefix)\n/* harmony export */ });\n/* harmony import */ var _parse_path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse-path */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/parse-path.js\");\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */ function pathHasPrefix(path, prefix) {\n    if (typeof path !== \"string\") {\n        return false;\n    }\n    const { pathname } = (0,_parse_path__WEBPACK_IMPORTED_MODULE_0__.parsePath)(path);\n    return pathname === prefix || pathname.startsWith(prefix + \"/\");\n} //# sourceMappingURL=path-has-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcGF0aC1oYXMtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDOzs7Ozs7Q0FNQyxHQUFVLFNBQVNDLGNBQWNDLElBQUksRUFBRUMsTUFBTTtJQUMxQyxJQUFJLE9BQU9ELFNBQVMsVUFBVTtRQUMxQixPQUFPO0lBQ1g7SUFDQSxNQUFNLEVBQUVFLFFBQVEsRUFBRSxHQUFHSixzREFBU0EsQ0FBQ0U7SUFDL0IsT0FBT0UsYUFBYUQsVUFBVUMsU0FBU0MsVUFBVSxDQUFDRixTQUFTO0FBQy9ELEVBRUEsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3BhdGgtaGFzLXByZWZpeC5qcz82NGJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlUGF0aCB9IGZyb20gXCIuL3BhcnNlLXBhdGhcIjtcbi8qKlxuICogQ2hlY2tzIGlmIGEgZ2l2ZW4gcGF0aCBzdGFydHMgd2l0aCBhIGdpdmVuIHByZWZpeC4gSXQgZW5zdXJlcyBpdCBtYXRjaGVzXG4gKiBleGFjdGx5IHdpdGhvdXQgY29udGFpbmluZyBleHRyYSBjaGFycy4gZS5nLiBwcmVmaXggL2RvY3Mgc2hvdWxkIHJlcGxhY2VcbiAqIGZvciAvZG9jcywgL2RvY3MvLCAvZG9jcy9hIGJ1dCBub3QgL2RvY3Nzc1xuICogQHBhcmFtIHBhdGggVGhlIHBhdGggdG8gY2hlY2suXG4gKiBAcGFyYW0gcHJlZml4IFRoZSBwcmVmaXggdG8gY2hlY2sgYWdhaW5zdC5cbiAqLyBleHBvcnQgZnVuY3Rpb24gcGF0aEhhc1ByZWZpeChwYXRoLCBwcmVmaXgpIHtcbiAgICBpZiAodHlwZW9mIHBhdGggIT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCB7IHBhdGhuYW1lIH0gPSBwYXJzZVBhdGgocGF0aCk7XG4gICAgcmV0dXJuIHBhdGhuYW1lID09PSBwcmVmaXggfHwgcGF0aG5hbWUuc3RhcnRzV2l0aChwcmVmaXggKyBcIi9cIik7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGgtaGFzLXByZWZpeC5qcy5tYXAiXSwibmFtZXMiOlsicGFyc2VQYXRoIiwicGF0aEhhc1ByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJwYXRobmFtZSIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js":
/*!******************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   relativizeURL: () => (/* binding */ relativizeURL)\n/* harmony export */ });\n/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */ function relativizeURL(url, base) {\n    const baseURL = typeof base === \"string\" ? new URL(base) : base;\n    const relative = new URL(url, base);\n    const origin = baseURL.protocol + \"//\" + baseURL.host;\n    return relative.protocol + \"//\" + relative.host === origin ? relative.toString().replace(origin, \"\") : relative.toString();\n} //# sourceMappingURL=relativize-url.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVsYXRpdml6ZS11cmwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7O0NBSUMsR0FBVSxTQUFTQSxjQUFjQyxHQUFHLEVBQUVDLElBQUk7SUFDdkMsTUFBTUMsVUFBVSxPQUFPRCxTQUFTLFdBQVcsSUFBSUUsSUFBSUYsUUFBUUE7SUFDM0QsTUFBTUcsV0FBVyxJQUFJRCxJQUFJSCxLQUFLQztJQUM5QixNQUFNSSxTQUFTSCxRQUFRSSxRQUFRLEdBQUcsT0FBT0osUUFBUUssSUFBSTtJQUNyRCxPQUFPSCxTQUFTRSxRQUFRLEdBQUcsT0FBT0YsU0FBU0csSUFBSSxLQUFLRixTQUFTRCxTQUFTSSxRQUFRLEdBQUdDLE9BQU8sQ0FBQ0osUUFBUSxNQUFNRCxTQUFTSSxRQUFRO0FBQzVILEVBRUEsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvcm91dGVyL3V0aWxzL3JlbGF0aXZpemUtdXJsLmpzPzczZDIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhIFVSTCBhcyBhIHN0cmluZyBhbmQgYSBiYXNlIFVSTCBpdCB3aWxsIG1ha2UgdGhlIFVSTCByZWxhdGl2ZVxuICogaWYgdGhlIHBhcnNlZCBwcm90b2NvbCBhbmQgaG9zdCBpcyB0aGUgc2FtZSBhcyB0aGUgb25lIGluIHRoZSBiYXNlXG4gKiBVUkwuIE90aGVyd2lzZSBpdCByZXR1cm5zIHRoZSBzYW1lIFVSTCBzdHJpbmcuXG4gKi8gZXhwb3J0IGZ1bmN0aW9uIHJlbGF0aXZpemVVUkwodXJsLCBiYXNlKSB7XG4gICAgY29uc3QgYmFzZVVSTCA9IHR5cGVvZiBiYXNlID09PSBcInN0cmluZ1wiID8gbmV3IFVSTChiYXNlKSA6IGJhc2U7XG4gICAgY29uc3QgcmVsYXRpdmUgPSBuZXcgVVJMKHVybCwgYmFzZSk7XG4gICAgY29uc3Qgb3JpZ2luID0gYmFzZVVSTC5wcm90b2NvbCArIFwiLy9cIiArIGJhc2VVUkwuaG9zdDtcbiAgICByZXR1cm4gcmVsYXRpdmUucHJvdG9jb2wgKyBcIi8vXCIgKyByZWxhdGl2ZS5ob3N0ID09PSBvcmlnaW4gPyByZWxhdGl2ZS50b1N0cmluZygpLnJlcGxhY2Uob3JpZ2luLCBcIlwiKSA6IHJlbGF0aXZlLnRvU3RyaW5nKCk7XG59XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlbGF0aXZpemUtdXJsLmpzLm1hcCJdLCJuYW1lcyI6WyJyZWxhdGl2aXplVVJMIiwidXJsIiwiYmFzZSIsImJhc2VVUkwiLCJVUkwiLCJyZWxhdGl2ZSIsIm9yaWdpbiIsInByb3RvY29sIiwiaG9zdCIsInRvU3RyaW5nIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/relativize-url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removePathPrefix: () => (/* binding */ removePathPrefix)\n/* harmony export */ });\n/* harmony import */ var _path_has_prefix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./path-has-prefix */ \"(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/path-has-prefix.js\");\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */ function removePathPrefix(path, prefix) {\n    // If the path doesn't start with the prefix we can return it as is. This\n    // protects us from situations where the prefix is a substring of the path\n    // prefix such as:\n    //\n    // For prefix: /blog\n    //\n    //   /blog -> true\n    //   /blog/ -> true\n    //   /blog/1 -> true\n    //   /blogging -> false\n    //   /blogging/ -> false\n    //   /blogging/1 -> false\n    if (!(0,_path_has_prefix__WEBPACK_IMPORTED_MODULE_0__.pathHasPrefix)(path, prefix)) {\n        return path;\n    }\n    // Remove the prefix from the path via slicing.\n    const withoutPrefix = path.slice(prefix.length);\n    // If the path without the prefix starts with a `/` we can return it as is.\n    if (withoutPrefix.startsWith(\"/\")) {\n        return withoutPrefix;\n    }\n    // If the path without the prefix doesn't start with a `/` we need to add it\n    // back to the path to make sure it's a valid path.\n    return \"/\" + withoutPrefix;\n} //# sourceMappingURL=remove-path-prefix.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXBhdGgtcHJlZml4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEO0FBQ2xEOzs7Ozs7O0NBT0MsR0FBVSxTQUFTQyxpQkFBaUJDLElBQUksRUFBRUMsTUFBTTtJQUM3Qyx5RUFBeUU7SUFDekUsMEVBQTBFO0lBQzFFLGtCQUFrQjtJQUNsQixFQUFFO0lBQ0Ysb0JBQW9CO0lBQ3BCLEVBQUU7SUFDRixrQkFBa0I7SUFDbEIsbUJBQW1CO0lBQ25CLG9CQUFvQjtJQUNwQix1QkFBdUI7SUFDdkIsd0JBQXdCO0lBQ3hCLHlCQUF5QjtJQUN6QixJQUFJLENBQUNILCtEQUFhQSxDQUFDRSxNQUFNQyxTQUFTO1FBQzlCLE9BQU9EO0lBQ1g7SUFDQSwrQ0FBK0M7SUFDL0MsTUFBTUUsZ0JBQWdCRixLQUFLRyxLQUFLLENBQUNGLE9BQU9HLE1BQU07SUFDOUMsMkVBQTJFO0lBQzNFLElBQUlGLGNBQWNHLFVBQVUsQ0FBQyxNQUFNO1FBQy9CLE9BQU9IO0lBQ1g7SUFDQSw0RUFBNEU7SUFDNUUsbURBQW1EO0lBQ25ELE9BQU8sTUFBTUE7QUFDakIsRUFFQSw4Q0FBOEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXBhdGgtcHJlZml4LmpzPzExYTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGF0aEhhc1ByZWZpeCB9IGZyb20gXCIuL3BhdGgtaGFzLXByZWZpeFwiO1xuLyoqXG4gKiBHaXZlbiBhIHBhdGggYW5kIGEgcHJlZml4IGl0IHdpbGwgcmVtb3ZlIHRoZSBwcmVmaXggd2hlbiBpdCBleGlzdHMgaW4gdGhlXG4gKiBnaXZlbiBwYXRoLiBJdCBlbnN1cmVzIGl0IG1hdGNoZXMgZXhhY3RseSB3aXRob3V0IGNvbnRhaW5pbmcgZXh0cmEgY2hhcnNcbiAqIGFuZCBpZiB0aGUgcHJlZml4IGlzIG5vdCB0aGVyZSBpdCB3aWxsIGJlIG5vb3AuXG4gKlxuICogQHBhcmFtIHBhdGggVGhlIHBhdGggdG8gcmVtb3ZlIHRoZSBwcmVmaXggZnJvbS5cbiAqIEBwYXJhbSBwcmVmaXggVGhlIHByZWZpeCB0byBiZSByZW1vdmVkLlxuICovIGV4cG9ydCBmdW5jdGlvbiByZW1vdmVQYXRoUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIC8vIElmIHRoZSBwYXRoIGRvZXNuJ3Qgc3RhcnQgd2l0aCB0aGUgcHJlZml4IHdlIGNhbiByZXR1cm4gaXQgYXMgaXMuIFRoaXNcbiAgICAvLyBwcm90ZWN0cyB1cyBmcm9tIHNpdHVhdGlvbnMgd2hlcmUgdGhlIHByZWZpeCBpcyBhIHN1YnN0cmluZyBvZiB0aGUgcGF0aFxuICAgIC8vIHByZWZpeCBzdWNoIGFzOlxuICAgIC8vXG4gICAgLy8gRm9yIHByZWZpeDogL2Jsb2dcbiAgICAvL1xuICAgIC8vICAgL2Jsb2cgLT4gdHJ1ZVxuICAgIC8vICAgL2Jsb2cvIC0+IHRydWVcbiAgICAvLyAgIC9ibG9nLzEgLT4gdHJ1ZVxuICAgIC8vICAgL2Jsb2dnaW5nIC0+IGZhbHNlXG4gICAgLy8gICAvYmxvZ2dpbmcvIC0+IGZhbHNlXG4gICAgLy8gICAvYmxvZ2dpbmcvMSAtPiBmYWxzZVxuICAgIGlmICghcGF0aEhhc1ByZWZpeChwYXRoLCBwcmVmaXgpKSB7XG4gICAgICAgIHJldHVybiBwYXRoO1xuICAgIH1cbiAgICAvLyBSZW1vdmUgdGhlIHByZWZpeCBmcm9tIHRoZSBwYXRoIHZpYSBzbGljaW5nLlxuICAgIGNvbnN0IHdpdGhvdXRQcmVmaXggPSBwYXRoLnNsaWNlKHByZWZpeC5sZW5ndGgpO1xuICAgIC8vIElmIHRoZSBwYXRoIHdpdGhvdXQgdGhlIHByZWZpeCBzdGFydHMgd2l0aCBhIGAvYCB3ZSBjYW4gcmV0dXJuIGl0IGFzIGlzLlxuICAgIGlmICh3aXRob3V0UHJlZml4LnN0YXJ0c1dpdGgoXCIvXCIpKSB7XG4gICAgICAgIHJldHVybiB3aXRob3V0UHJlZml4O1xuICAgIH1cbiAgICAvLyBJZiB0aGUgcGF0aCB3aXRob3V0IHRoZSBwcmVmaXggZG9lc24ndCBzdGFydCB3aXRoIGEgYC9gIHdlIG5lZWQgdG8gYWRkIGl0XG4gICAgLy8gYmFjayB0byB0aGUgcGF0aCB0byBtYWtlIHN1cmUgaXQncyBhIHZhbGlkIHBhdGguXG4gICAgcmV0dXJuIFwiL1wiICsgd2l0aG91dFByZWZpeDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLXBhdGgtcHJlZml4LmpzLm1hcCJdLCJuYW1lcyI6WyJwYXRoSGFzUHJlZml4IiwicmVtb3ZlUGF0aFByZWZpeCIsInBhdGgiLCJwcmVmaXgiLCJ3aXRob3V0UHJlZml4Iiwic2xpY2UiLCJsZW5ndGgiLCJzdGFydHNXaXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-path-prefix.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   removeTrailingSlash: () => (/* binding */ removeTrailingSlash)\n/* harmony export */ });\n/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */ function removeTrailingSlash(route) {\n    return route.replace(/\\/$/, \"\") || \"/\";\n} //# sourceMappingURL=remove-trailing-slash.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9yb3V0ZXIvdXRpbHMvcmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7Ozs7O0NBTUMsR0FBVSxTQUFTQSxvQkFBb0JDLEtBQUs7SUFDekMsT0FBT0EsTUFBTUMsT0FBTyxDQUFDLE9BQU8sT0FBTztBQUN2QyxFQUVBLGlEQUFpRCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3JvdXRlci91dGlscy9yZW1vdmUtdHJhaWxpbmctc2xhc2guanM/ODJmNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFJlbW92ZXMgdGhlIHRyYWlsaW5nIHNsYXNoIGZvciBhIGdpdmVuIHJvdXRlIG9yIHBhZ2UgcGF0aC4gUHJlc2VydmVzIHRoZVxuICogcm9vdCBwYWdlLiBFeGFtcGxlczpcbiAqICAgLSBgL2Zvby9iYXIvYCAtPiBgL2Zvby9iYXJgXG4gKiAgIC0gYC9mb28vYmFyYCAtPiBgL2Zvby9iYXJgXG4gKiAgIC0gYC9gIC0+IGAvYFxuICovIGV4cG9ydCBmdW5jdGlvbiByZW1vdmVUcmFpbGluZ1NsYXNoKHJvdXRlKSB7XG4gICAgcmV0dXJuIHJvdXRlLnJlcGxhY2UoL1xcLyQvLCBcIlwiKSB8fCBcIi9cIjtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVtb3ZlLXRyYWlsaW5nLXNsYXNoLmpzLm1hcCJdLCJuYW1lcyI6WyJyZW1vdmVUcmFpbGluZ1NsYXNoIiwicm91dGUiLCJyZXBsYWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/router/utils/remove-trailing-slash.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/segment.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isGroupSegment: () => (/* binding */ isGroupSegment)\n/* harmony export */ });\nfunction isGroupSegment(segment) {\n    // Use array[0] for performant purpose\n    return segment[0] === \"(\" && segment.endsWith(\")\");\n} //# sourceMappingURL=segment.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZWdtZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxTQUFTQSxlQUFlQyxPQUFPO0lBQ2xDLHNDQUFzQztJQUN0QyxPQUFPQSxPQUFPLENBQUMsRUFBRSxLQUFLLE9BQU9BLFFBQVFDLFFBQVEsQ0FBQztBQUNsRCxFQUVBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9zaGFyZWQvbGliL3NlZ21lbnQuanM/ZmNkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNHcm91cFNlZ21lbnQoc2VnbWVudCkge1xuICAgIC8vIFVzZSBhcnJheVswXSBmb3IgcGVyZm9ybWFudCBwdXJwb3NlXG4gICAgcmV0dXJuIHNlZ21lbnRbMF0gPT09IFwiKFwiICYmIHNlZ21lbnQuZW5kc1dpdGgoXCIpXCIpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZWdtZW50LmpzLm1hcCJdLCJuYW1lcyI6WyJpc0dyb3VwU2VnbWVudCIsInNlZ21lbnQiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/segment.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerInsertedHTMLContext: () => (/* binding */ ServerInsertedHTMLContext),\n/* harmony export */   useServerInsertedHTML: () => (/* binding */ useServerInsertedHTML)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(middleware)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\"use client\";\n\n// Use `React.createContext` to avoid errors from the RSC checks because\n// it can't be imported directly in Server Components:\n//\n//   import { createContext } from 'react'\n//\n// More info: https://github.com/vercel/next.js/pull/40686\nconst ServerInsertedHTMLContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext(null);\nfunction useServerInsertedHTML(callback) {\n    const addInsertedServerHTMLCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ServerInsertedHTMLContext);\n    // Should have no effects on client where there's no flush effects provider\n    if (addInsertedServerHTMLCallback) {\n        addInsertedServerHTMLCallback(callback);\n    }\n} //# sourceMappingURL=server-inserted-html.shared-runtime.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9lc20vc2hhcmVkL2xpYi9zZXJ2ZXItaW5zZXJ0ZWQtaHRtbC5zaGFyZWQtcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFFMEM7QUFDMUMsd0VBQXdFO0FBQ3hFLHNEQUFzRDtBQUN0RCxFQUFFO0FBQ0YsMENBQTBDO0FBQzFDLEVBQUU7QUFDRiwwREFBMEQ7QUFDbkQsTUFBTUUsNEJBQTRCLFdBQVcsR0FBR0YsMERBQW1CLENBQUMsTUFBTTtBQUMxRSxTQUFTSSxzQkFBc0JDLFFBQVE7SUFDMUMsTUFBTUMsZ0NBQWdDTCxpREFBVUEsQ0FBQ0M7SUFDakQsMkVBQTJFO0lBQzNFLElBQUlJLCtCQUErQjtRQUMvQkEsOEJBQThCRDtJQUNsQztBQUNKLEVBRUEsK0RBQStEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvZXNtL3NoYXJlZC9saWIvc2VydmVyLWluc2VydGVkLWh0bWwuc2hhcmVkLXJ1bnRpbWUuanM/NjUwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IFJlYWN0LCB7IHVzZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcbi8vIFVzZSBgUmVhY3QuY3JlYXRlQ29udGV4dGAgdG8gYXZvaWQgZXJyb3JzIGZyb20gdGhlIFJTQyBjaGVja3MgYmVjYXVzZVxuLy8gaXQgY2FuJ3QgYmUgaW1wb3J0ZWQgZGlyZWN0bHkgaW4gU2VydmVyIENvbXBvbmVudHM6XG4vL1xuLy8gICBpbXBvcnQgeyBjcmVhdGVDb250ZXh0IH0gZnJvbSAncmVhY3QnXG4vL1xuLy8gTW9yZSBpbmZvOiBodHRwczovL2dpdGh1Yi5jb20vdmVyY2VsL25leHQuanMvcHVsbC80MDY4NlxuZXhwb3J0IGNvbnN0IFNlcnZlckluc2VydGVkSFRNTENvbnRleHQgPSAvKiNfX1BVUkVfXyovIFJlYWN0LmNyZWF0ZUNvbnRleHQobnVsbCk7XG5leHBvcnQgZnVuY3Rpb24gdXNlU2VydmVySW5zZXJ0ZWRIVE1MKGNhbGxiYWNrKSB7XG4gICAgY29uc3QgYWRkSW5zZXJ0ZWRTZXJ2ZXJIVE1MQ2FsbGJhY2sgPSB1c2VDb250ZXh0KFNlcnZlckluc2VydGVkSFRNTENvbnRleHQpO1xuICAgIC8vIFNob3VsZCBoYXZlIG5vIGVmZmVjdHMgb24gY2xpZW50IHdoZXJlIHRoZXJlJ3Mgbm8gZmx1c2ggZWZmZWN0cyBwcm92aWRlclxuICAgIGlmIChhZGRJbnNlcnRlZFNlcnZlckhUTUxDYWxsYmFjaykge1xuICAgICAgICBhZGRJbnNlcnRlZFNlcnZlckhUTUxDYWxsYmFjayhjYWxsYmFjayk7XG4gICAgfVxufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJ2ZXItaW5zZXJ0ZWQtaHRtbC5zaGFyZWQtcnVudGltZS5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VDb250ZXh0IiwiU2VydmVySW5zZXJ0ZWRIVE1MQ29udGV4dCIsImNyZWF0ZUNvbnRleHQiLCJ1c2VTZXJ2ZXJJbnNlcnRlZEhUTUwiLCJjYWxsYmFjayIsImFkZEluc2VydGVkU2VydmVySFRNTENhbGxiYWNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/esm/shared/lib/server-inserted-html.shared-runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/context.js":
/*!*****************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/context.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    withRequest: function() {\n        return withRequest;\n    },\n    getTestReqInfo: function() {\n        return getTestReqInfo;\n    }\n});\nconst _nodeasync_hooks = __webpack_require__(/*! node:async_hooks */ \"node:async_hooks\");\nconst testStorage = new _nodeasync_hooks.AsyncLocalStorage();\nfunction extractTestInfoFromRequest(req, reader) {\n    const proxyPortHeader = reader.header(req, \"next-test-proxy-port\");\n    if (!proxyPortHeader) {\n        return undefined;\n    }\n    const url = reader.url(req);\n    const proxyPort = Number(proxyPortHeader);\n    const testData = reader.header(req, \"next-test-data\") || \"\";\n    return {\n        url,\n        proxyPort,\n        testData\n    };\n}\nfunction withRequest(req, reader, fn) {\n    const testReqInfo = extractTestInfoFromRequest(req, reader);\n    if (!testReqInfo) {\n        return fn();\n    }\n    return testStorage.run(testReqInfo, fn);\n}\nfunction getTestReqInfo(req, reader) {\n    const testReqInfo = testStorage.getStore();\n    if (testReqInfo) {\n        return testReqInfo;\n    }\n    if (req && reader) {\n        return extractTestInfoFromRequest(req, reader);\n    }\n    return undefined;\n} //# sourceMappingURL=context.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvY29udGV4dC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFDekNHLE9BQU87QUFDWCxDQUFDLEVBQUM7QUFDRixLQUFNQyxDQUFBQSxDQUdOO0FBQ0EsU0FBU0csUUFBUUMsTUFBTSxFQUFFQyxHQUFHO0lBQ3hCLElBQUksSUFBSUMsUUFBUUQsSUFBSVQsT0FBT0MsY0FBYyxDQUFDTyxRQUFRRSxNQUFNO1FBQ3BEQyxZQUFZO1FBQ1pDLEtBQUtILEdBQUcsQ0FBQ0MsS0FBSztJQUNsQjtBQUNKO0FBQ0FILFFBQVFMLFNBQVM7SUFDYkcsYUFBYTtRQUNULE9BQU9BO0lBQ1g7SUFDQUMsZ0JBQWdCO1FBQ1osT0FBT0E7SUFDWDtBQUNKO0FBQ0EsTUFBTU8sbUJBQW1CQyxtQkFBT0EsQ0FBQywwQ0FBa0I7QUFDbkQsTUFBTUMsY0FBYyxJQUFJRixpQkFBaUJHLGlCQUFpQjtBQUMxRCxTQUFTQywyQkFBMkJDLEdBQUcsRUFBRUMsTUFBTTtJQUMzQyxNQUFNQyxrQkFBa0JELE9BQU9FLE1BQU0sQ0FBQ0gsS0FBSztJQUMzQyxJQUFJLENBQUNFLGlCQUFpQjtRQUNsQixPQUFPRTtJQUNYO0lBQ0EsTUFBTUMsTUFBTUosT0FBT0ksR0FBRyxDQUFDTDtJQUN2QixNQUFNTSxZQUFZQyxPQUFPTDtJQUN6QixNQUFNTSxXQUFXUCxPQUFPRSxNQUFNLENBQUNILEtBQUsscUJBQXFCO0lBQ3pELE9BQU87UUFDSEs7UUFDQUM7UUFDQUU7SUFDSjtBQUNKO0FBQ0EsU0FBU3JCLFlBQVlhLEdBQUcsRUFBRUMsTUFBTSxFQUFFUSxFQUFFO0lBQ2hDLE1BQU1DLGNBQWNYLDJCQUEyQkMsS0FBS0M7SUFDcEQsSUFBSSxDQUFDUyxhQUFhO1FBQ2QsT0FBT0Q7SUFDWDtJQUNBLE9BQU9aLFlBQVljLEdBQUcsQ0FBQ0QsYUFBYUQ7QUFDeEM7QUFDQSxTQUFTckIsZUFBZVksR0FBRyxFQUFFQyxNQUFNO0lBQy9CLE1BQU1TLGNBQWNiLFlBQVllLFFBQVE7SUFDeEMsSUFBSUYsYUFBYTtRQUNiLE9BQU9BO0lBQ1g7SUFDQSxJQUFJVixPQUFPQyxRQUFRO1FBQ2YsT0FBT0YsMkJBQTJCQyxLQUFLQztJQUMzQztJQUNBLE9BQU9HO0FBQ1gsRUFFQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvY29udGV4dC5qcz85MzU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuMCAmJiAobW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgd2l0aFJlcXVlc3Q6IG51bGwsXG4gICAgZ2V0VGVzdFJlcUluZm86IG51bGxcbn0pO1xuZnVuY3Rpb24gX2V4cG9ydCh0YXJnZXQsIGFsbCkge1xuICAgIGZvcih2YXIgbmFtZSBpbiBhbGwpT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwgbmFtZSwge1xuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICBnZXQ6IGFsbFtuYW1lXVxuICAgIH0pO1xufVxuX2V4cG9ydChleHBvcnRzLCB7XG4gICAgd2l0aFJlcXVlc3Q6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gd2l0aFJlcXVlc3Q7XG4gICAgfSxcbiAgICBnZXRUZXN0UmVxSW5mbzogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBnZXRUZXN0UmVxSW5mbztcbiAgICB9XG59KTtcbmNvbnN0IF9ub2RlYXN5bmNfaG9va3MgPSByZXF1aXJlKFwibm9kZTphc3luY19ob29rc1wiKTtcbmNvbnN0IHRlc3RTdG9yYWdlID0gbmV3IF9ub2RlYXN5bmNfaG9va3MuQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbmZ1bmN0aW9uIGV4dHJhY3RUZXN0SW5mb0Zyb21SZXF1ZXN0KHJlcSwgcmVhZGVyKSB7XG4gICAgY29uc3QgcHJveHlQb3J0SGVhZGVyID0gcmVhZGVyLmhlYWRlcihyZXEsIFwibmV4dC10ZXN0LXByb3h5LXBvcnRcIik7XG4gICAgaWYgKCFwcm94eVBvcnRIZWFkZXIpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY29uc3QgdXJsID0gcmVhZGVyLnVybChyZXEpO1xuICAgIGNvbnN0IHByb3h5UG9ydCA9IE51bWJlcihwcm94eVBvcnRIZWFkZXIpO1xuICAgIGNvbnN0IHRlc3REYXRhID0gcmVhZGVyLmhlYWRlcihyZXEsIFwibmV4dC10ZXN0LWRhdGFcIikgfHwgXCJcIjtcbiAgICByZXR1cm4ge1xuICAgICAgICB1cmwsXG4gICAgICAgIHByb3h5UG9ydCxcbiAgICAgICAgdGVzdERhdGFcbiAgICB9O1xufVxuZnVuY3Rpb24gd2l0aFJlcXVlc3QocmVxLCByZWFkZXIsIGZuKSB7XG4gICAgY29uc3QgdGVzdFJlcUluZm8gPSBleHRyYWN0VGVzdEluZm9Gcm9tUmVxdWVzdChyZXEsIHJlYWRlcik7XG4gICAgaWYgKCF0ZXN0UmVxSW5mbykge1xuICAgICAgICByZXR1cm4gZm4oKTtcbiAgICB9XG4gICAgcmV0dXJuIHRlc3RTdG9yYWdlLnJ1bih0ZXN0UmVxSW5mbywgZm4pO1xufVxuZnVuY3Rpb24gZ2V0VGVzdFJlcUluZm8ocmVxLCByZWFkZXIpIHtcbiAgICBjb25zdCB0ZXN0UmVxSW5mbyA9IHRlc3RTdG9yYWdlLmdldFN0b3JlKCk7XG4gICAgaWYgKHRlc3RSZXFJbmZvKSB7XG4gICAgICAgIHJldHVybiB0ZXN0UmVxSW5mbztcbiAgICB9XG4gICAgaWYgKHJlcSAmJiByZWFkZXIpIHtcbiAgICAgICAgcmV0dXJuIGV4dHJhY3RUZXN0SW5mb0Zyb21SZXF1ZXN0KHJlcSwgcmVhZGVyKTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29udGV4dC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJ3aXRoUmVxdWVzdCIsImdldFRlc3RSZXFJbmZvIiwiX2V4cG9ydCIsInRhcmdldCIsImFsbCIsIm5hbWUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiX25vZGVhc3luY19ob29rcyIsInJlcXVpcmUiLCJ0ZXN0U3RvcmFnZSIsIkFzeW5jTG9jYWxTdG9yYWdlIiwiZXh0cmFjdFRlc3RJbmZvRnJvbVJlcXVlc3QiLCJyZXEiLCJyZWFkZXIiLCJwcm94eVBvcnRIZWFkZXIiLCJoZWFkZXIiLCJ1bmRlZmluZWQiLCJ1cmwiLCJwcm94eVBvcnQiLCJOdW1iZXIiLCJ0ZXN0RGF0YSIsImZuIiwidGVzdFJlcUluZm8iLCJydW4iLCJnZXRTdG9yZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/context.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js":
/*!***************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/fetch.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"buffer\")[\"Buffer\"];\n\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    reader: function() {\n        return reader;\n    },\n    handleFetch: function() {\n        return handleFetch;\n    },\n    interceptFetch: function() {\n        return interceptFetch;\n    }\n});\nconst _context = __webpack_require__(/*! ./context */ \"(middleware)/./node_modules/next/dist/experimental/testmode/context.js\");\nconst reader = {\n    url (req) {\n        return req.url;\n    },\n    header (req, name) {\n        return req.headers.get(name);\n    }\n};\nfunction getTestStack() {\n    let stack = (new Error().stack ?? \"\").split(\"\\n\");\n    // Skip the first line and find first non-empty line.\n    for(let i = 1; i < stack.length; i++){\n        if (stack[i].length > 0) {\n            stack = stack.slice(i);\n            break;\n        }\n    }\n    // Filter out franmework lines.\n    stack = stack.filter((f)=>!f.includes(\"/next/dist/\"));\n    // At most 5 lines.\n    stack = stack.slice(0, 5);\n    // Cleanup some internal info and trim.\n    stack = stack.map((s)=>s.replace(\"webpack-internal:///(rsc)/\", \"\").trim());\n    return stack.join(\"    \");\n}\nasync function buildProxyRequest(testData, request) {\n    const { url, method, headers, body, cache, credentials, integrity, mode, redirect, referrer, referrerPolicy } = request;\n    return {\n        testData,\n        api: \"fetch\",\n        request: {\n            url,\n            method,\n            headers: [\n                ...Array.from(headers),\n                [\n                    \"next-test-stack\",\n                    getTestStack()\n                ]\n            ],\n            body: body ? Buffer.from(await request.arrayBuffer()).toString(\"base64\") : null,\n            cache,\n            credentials,\n            integrity,\n            mode,\n            redirect,\n            referrer,\n            referrerPolicy\n        }\n    };\n}\nfunction buildResponse(proxyResponse) {\n    const { status, headers, body } = proxyResponse.response;\n    return new Response(body ? Buffer.from(body, \"base64\") : null, {\n        status,\n        headers: new Headers(headers)\n    });\n}\nasync function handleFetch(originalFetch, request) {\n    const testInfo = (0, _context.getTestReqInfo)(request, reader);\n    if (!testInfo) {\n        throw new Error(`No test info for ${request.method} ${request.url}`);\n    }\n    const { testData, proxyPort } = testInfo;\n    const proxyRequest = await buildProxyRequest(testData, request);\n    const resp = await originalFetch(`http://localhost:${proxyPort}`, {\n        method: \"POST\",\n        body: JSON.stringify(proxyRequest),\n        next: {\n            // @ts-ignore\n            internal: true\n        }\n    });\n    if (!resp.ok) {\n        throw new Error(`Proxy request failed: ${resp.status}`);\n    }\n    const proxyResponse = await resp.json();\n    const { api } = proxyResponse;\n    switch(api){\n        case \"continue\":\n            return originalFetch(request);\n        case \"abort\":\n        case \"unhandled\":\n            throw new Error(`Proxy request aborted [${request.method} ${request.url}]`);\n        default:\n            break;\n    }\n    return buildResponse(proxyResponse);\n}\nfunction interceptFetch(originalFetch) {\n    __webpack_require__.g.fetch = function testFetch(input, init) {\n        var _init_next;\n        // Passthrough internal requests.\n        // @ts-ignore\n        if (init == null ? void 0 : (_init_next = init.next) == null ? void 0 : _init_next.internal) {\n            return originalFetch(input, init);\n        }\n        return handleFetch(originalFetch, new Request(input, init));\n    };\n    return ()=>{\n        __webpack_require__.g.fetch = originalFetch;\n    };\n} //# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js":
/*!*********************************************************************!*\
  !*** ./node_modules/next/dist/experimental/testmode/server-edge.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\n0 && (0);\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    interceptTestApis: function() {\n        return interceptTestApis;\n    },\n    wrapRequestHandler: function() {\n        return wrapRequestHandler;\n    }\n});\nconst _context = __webpack_require__(/*! ./context */ \"(middleware)/./node_modules/next/dist/experimental/testmode/context.js\");\nconst _fetch = __webpack_require__(/*! ./fetch */ \"(middleware)/./node_modules/next/dist/experimental/testmode/fetch.js\");\nfunction interceptTestApis() {\n    return (0, _fetch.interceptFetch)(__webpack_require__.g.fetch);\n}\nfunction wrapRequestHandler(handler) {\n    return (req, fn)=>(0, _context.withRequest)(req, _fetch.reader, ()=>handler(req, fn));\n} //# sourceMappingURL=server-edge.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvc2VydmVyLWVkZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQ3pDRyxPQUFPO0FBQ1gsQ0FBQyxFQUFDO0FBQ0YsS0FBTUMsQ0FBQUEsQ0FHTjtBQUNBLFNBQVNHLFFBQVFDLE1BQU0sRUFBRUMsR0FBRztJQUN4QixJQUFJLElBQUlDLFFBQVFELElBQUlULE9BQU9DLGNBQWMsQ0FBQ08sUUFBUUUsTUFBTTtRQUNwREMsWUFBWTtRQUNaQyxLQUFLSCxHQUFHLENBQUNDLEtBQUs7SUFDbEI7QUFDSjtBQUNBSCxRQUFRTCxTQUFTO0lBQ2JHLG1CQUFtQjtRQUNmLE9BQU9BO0lBQ1g7SUFDQUMsb0JBQW9CO1FBQ2hCLE9BQU9BO0lBQ1g7QUFDSjtBQUNBLE1BQU1PLFdBQVdDLG1CQUFPQSxDQUFDLHlGQUFXO0FBQ3BDLE1BQU1DLFNBQVNELG1CQUFPQSxDQUFDLHFGQUFTO0FBQ2hDLFNBQVNUO0lBQ0wsT0FBTyxDQUFDLEdBQUdVLE9BQU9DLGNBQWMsRUFBRUMscUJBQU1BLENBQUNDLEtBQUs7QUFDbEQ7QUFDQSxTQUFTWixtQkFBbUJhLE9BQU87SUFDL0IsT0FBTyxDQUFDQyxLQUFLQyxLQUFLLENBQUMsR0FBR1IsU0FBU1MsV0FBVyxFQUFFRixLQUFLTCxPQUFPUSxNQUFNLEVBQUUsSUFBSUosUUFBUUMsS0FBS0M7QUFDckYsRUFFQSx1Q0FBdUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9leHBlcmltZW50YWwvdGVzdG1vZGUvc2VydmVyLWVkZ2UuanM/NDcxOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbjAgJiYgKG1vZHVsZS5leHBvcnRzID0ge1xuICAgIGludGVyY2VwdFRlc3RBcGlzOiBudWxsLFxuICAgIHdyYXBSZXF1ZXN0SGFuZGxlcjogbnVsbFxufSk7XG5mdW5jdGlvbiBfZXhwb3J0KHRhcmdldCwgYWxsKSB7XG4gICAgZm9yKHZhciBuYW1lIGluIGFsbClPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBuYW1lLCB7XG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIGdldDogYWxsW25hbWVdXG4gICAgfSk7XG59XG5fZXhwb3J0KGV4cG9ydHMsIHtcbiAgICBpbnRlcmNlcHRUZXN0QXBpczogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiBpbnRlcmNlcHRUZXN0QXBpcztcbiAgICB9LFxuICAgIHdyYXBSZXF1ZXN0SGFuZGxlcjogZnVuY3Rpb24oKSB7XG4gICAgICAgIHJldHVybiB3cmFwUmVxdWVzdEhhbmRsZXI7XG4gICAgfVxufSk7XG5jb25zdCBfY29udGV4dCA9IHJlcXVpcmUoXCIuL2NvbnRleHRcIik7XG5jb25zdCBfZmV0Y2ggPSByZXF1aXJlKFwiLi9mZXRjaFwiKTtcbmZ1bmN0aW9uIGludGVyY2VwdFRlc3RBcGlzKCkge1xuICAgIHJldHVybiAoMCwgX2ZldGNoLmludGVyY2VwdEZldGNoKShnbG9iYWwuZmV0Y2gpO1xufVxuZnVuY3Rpb24gd3JhcFJlcXVlc3RIYW5kbGVyKGhhbmRsZXIpIHtcbiAgICByZXR1cm4gKHJlcSwgZm4pPT4oMCwgX2NvbnRleHQud2l0aFJlcXVlc3QpKHJlcSwgX2ZldGNoLnJlYWRlciwgKCk9PmhhbmRsZXIocmVxLCBmbikpO1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zZXJ2ZXItZWRnZS5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJtb2R1bGUiLCJpbnRlcmNlcHRUZXN0QXBpcyIsIndyYXBSZXF1ZXN0SGFuZGxlciIsIl9leHBvcnQiLCJ0YXJnZXQiLCJhbGwiLCJuYW1lIiwiZW51bWVyYWJsZSIsImdldCIsIl9jb250ZXh0IiwicmVxdWlyZSIsIl9mZXRjaCIsImludGVyY2VwdEZldGNoIiwiZ2xvYmFsIiwiZmV0Y2giLCJoYW5kbGVyIiwicmVxIiwiZm4iLCJ3aXRoUmVxdWVzdCIsInJlYWRlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/dist/experimental/testmode/server-edge.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/headers.js":
/*!**************************************!*\
  !*** ./node_modules/next/headers.js ***!
  \**************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./dist/client/components/headers */ \"(middleware)/./node_modules/next/dist/esm/client/components/headers.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvaGVhZGVycy5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLHNKQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9oZWFkZXJzLmpzP2RmZjIiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvaGVhZGVycycpXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/headers.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/next/navigation.js":
/*!*****************************************!*\
  !*** ./node_modules/next/navigation.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nmodule.exports = __webpack_require__(/*! ./dist/client/components/navigation */ \"(middleware)/./node_modules/next/dist/esm/client/components/navigation.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL25leHQvbmF2aWdhdGlvbi5qcyIsIm1hcHBpbmdzIjoiO0FBQUFBLDRKQUF5QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9uYXZpZ2F0aW9uLmpzP2EwOTkiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbmF2aWdhdGlvbicpXG4iXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/next/navigation.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* module decorator */ module = __webpack_require__.nmd(module);\n/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */ \nif (true) {\n    (function() {\n        \"use strict\";\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n        }\n        var ReactVersion = \"18.2.0\";\n        // ATTENTION\n        // When adding new symbols to this file,\n        // Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n        // The Symbol used to tag the ReactElement-like types.\n        var REACT_ELEMENT_TYPE = Symbol.for(\"react.element\");\n        var REACT_PORTAL_TYPE = Symbol.for(\"react.portal\");\n        var REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\n        var REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\");\n        var REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n        var REACT_PROVIDER_TYPE = Symbol.for(\"react.provider\");\n        var REACT_CONTEXT_TYPE = Symbol.for(\"react.context\");\n        var REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\");\n        var REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\");\n        var REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\");\n        var REACT_MEMO_TYPE = Symbol.for(\"react.memo\");\n        var REACT_LAZY_TYPE = Symbol.for(\"react.lazy\");\n        var REACT_OFFSCREEN_TYPE = Symbol.for(\"react.offscreen\");\n        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\n        var FAUX_ITERATOR_SYMBOL = \"@@iterator\";\n        function getIteratorFn(maybeIterable) {\n            if (maybeIterable === null || typeof maybeIterable !== \"object\") {\n                return null;\n            }\n            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n            if (typeof maybeIterator === \"function\") {\n                return maybeIterator;\n            }\n            return null;\n        }\n        /**\n * Keeps track of the current dispatcher.\n */ var ReactCurrentDispatcher = {\n            /**\n   * @internal\n   * @type {ReactComponent}\n   */ current: null\n        };\n        /**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */ var ReactCurrentBatchConfig = {\n            transition: null\n        };\n        var ReactCurrentActQueue = {\n            current: null,\n            // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n            isBatchingLegacy: false,\n            didScheduleLegacyUpdate: false\n        };\n        /**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */ var ReactCurrentOwner = {\n            /**\n   * @internal\n   * @type {ReactComponent}\n   */ current: null\n        };\n        var ReactDebugCurrentFrame = {};\n        var currentExtraStackFrame = null;\n        function setExtraStackFrame(stack) {\n            {\n                currentExtraStackFrame = stack;\n            }\n        }\n        {\n            ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {\n                {\n                    currentExtraStackFrame = stack;\n                }\n            }; // Stack implementation injected by the current renderer.\n            ReactDebugCurrentFrame.getCurrentStack = null;\n            ReactDebugCurrentFrame.getStackAddendum = function() {\n                var stack = \"\"; // Add an extra top frame while an element is being validated\n                if (currentExtraStackFrame) {\n                    stack += currentExtraStackFrame;\n                } // Delegate to the injected renderer-specific implementation\n                var impl = ReactDebugCurrentFrame.getCurrentStack;\n                if (impl) {\n                    stack += impl() || \"\";\n                }\n                return stack;\n            };\n        }\n        // -----------------------------------------------------------------------------\n        var enableScopeAPI = false; // Experimental Create Event Handle API.\n        var enableCacheElement = false;\n        var enableTransitionTracing = false; // No known bugs, but needs performance testing\n        var enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n        // stuff. Intended to enable React core members to more easily debug scheduling\n        // issues in DEV builds.\n        var enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n        var ReactSharedInternals = {\n            ReactCurrentDispatcher: ReactCurrentDispatcher,\n            ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n            ReactCurrentOwner: ReactCurrentOwner\n        };\n        {\n            ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n            ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n        }\n        // by calls to these methods by a Babel plugin.\n        //\n        // In PROD (or in packages without access to React internals),\n        // they are left as they are instead.\n        function warn(format) {\n            {\n                {\n                    for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                        args[_key - 1] = arguments[_key];\n                    }\n                    printWarning(\"warn\", format, args);\n                }\n            }\n        }\n        function error(format) {\n            {\n                {\n                    for(var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++){\n                        args[_key2 - 1] = arguments[_key2];\n                    }\n                    printWarning(\"error\", format, args);\n                }\n            }\n        }\n        function printWarning(level, format, args) {\n            // When changing this logic, you might want to also\n            // update consoleWithStackDev.www.js as well.\n            {\n                var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n                var stack = ReactDebugCurrentFrame.getStackAddendum();\n                if (stack !== \"\") {\n                    format += \"%s\";\n                    args = args.concat([\n                        stack\n                    ]);\n                } // eslint-disable-next-line react-internal/safe-string-coercion\n                var argsWithFormat = args.map(function(item) {\n                    return String(item);\n                }); // Careful: RN currently depends on this prefix\n                argsWithFormat.unshift(\"Warning: \" + format); // We intentionally don't use spread (or .apply) directly because it\n                // breaks IE9: https://github.com/facebook/react/issues/13610\n                // eslint-disable-next-line react-internal/no-production-logging\n                Function.prototype.apply.call(console[level], console, argsWithFormat);\n            }\n        }\n        var didWarnStateUpdateForUnmountedComponent = {};\n        function warnNoop(publicInstance, callerName) {\n            {\n                var _constructor = publicInstance.constructor;\n                var componentName = _constructor && (_constructor.displayName || _constructor.name) || \"ReactClass\";\n                var warningKey = componentName + \".\" + callerName;\n                if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n                    return;\n                }\n                error(\"Can't call %s on a component that is not yet mounted. \" + \"This is a no-op, but it might indicate a bug in your application. \" + \"Instead, assign to `this.state` directly or define a `state = {};` \" + \"class property with the desired state in the %s component.\", callerName, componentName);\n                didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n            }\n        }\n        /**\n * This is the abstract API for an update queue.\n */ var ReactNoopUpdateQueue = {\n            /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */ isMounted: function(publicInstance) {\n                return false;\n            },\n            /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */ enqueueForceUpdate: function(publicInstance, callback, callerName) {\n                warnNoop(publicInstance, \"forceUpdate\");\n            },\n            /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */ enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {\n                warnNoop(publicInstance, \"replaceState\");\n            },\n            /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */ enqueueSetState: function(publicInstance, partialState, callback, callerName) {\n                warnNoop(publicInstance, \"setState\");\n            }\n        };\n        var assign = Object.assign;\n        var emptyObject = {};\n        {\n            Object.freeze(emptyObject);\n        }\n        /**\n * Base class helpers for the updating state of a component.\n */ function Component(props, context, updater) {\n            this.props = props;\n            this.context = context; // If a component has string refs, we will assign a different object later.\n            this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n            // renderer.\n            this.updater = updater || ReactNoopUpdateQueue;\n        }\n        Component.prototype.isReactComponent = {};\n        /**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */ Component.prototype.setState = function(partialState, callback) {\n            if (typeof partialState !== \"object\" && typeof partialState !== \"function\" && partialState != null) {\n                throw new Error(\"setState(...): takes an object of state variables to update or a \" + \"function which returns an object of state variables.\");\n            }\n            this.updater.enqueueSetState(this, partialState, callback, \"setState\");\n        };\n        /**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */ Component.prototype.forceUpdate = function(callback) {\n            this.updater.enqueueForceUpdate(this, callback, \"forceUpdate\");\n        };\n        /**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */ {\n            var deprecatedAPIs = {\n                isMounted: [\n                    \"isMounted\",\n                    \"Instead, make sure to clean up subscriptions and pending requests in \" + \"componentWillUnmount to prevent memory leaks.\"\n                ],\n                replaceState: [\n                    \"replaceState\",\n                    \"Refactor your code to use setState instead (see \" + \"https://github.com/facebook/react/issues/3236).\"\n                ]\n            };\n            var defineDeprecationWarning = function(methodName, info) {\n                Object.defineProperty(Component.prototype, methodName, {\n                    get: function() {\n                        warn(\"%s(...) is deprecated in plain JavaScript React classes. %s\", info[0], info[1]);\n                        return undefined;\n                    }\n                });\n            };\n            for(var fnName in deprecatedAPIs){\n                if (deprecatedAPIs.hasOwnProperty(fnName)) {\n                    defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n                }\n            }\n        }\n        function ComponentDummy() {}\n        ComponentDummy.prototype = Component.prototype;\n        /**\n * Convenience component with default shallow equality check for sCU.\n */ function PureComponent(props, context, updater) {\n            this.props = props;\n            this.context = context; // If a component has string refs, we will assign a different object later.\n            this.refs = emptyObject;\n            this.updater = updater || ReactNoopUpdateQueue;\n        }\n        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\n        pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n        assign(pureComponentPrototype, Component.prototype);\n        pureComponentPrototype.isPureReactComponent = true;\n        // an immutable object with a single mutable value\n        function createRef() {\n            var refObject = {\n                current: null\n            };\n            {\n                Object.seal(refObject);\n            }\n            return refObject;\n        }\n        var isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n        function isArray(a) {\n            return isArrayImpl(a);\n        }\n        /*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */ // $FlowFixMe only called in DEV, so void return is not possible.\n        function typeName(value) {\n            {\n                // toStringTag is needed for namespaced types like Temporal.Instant\n                var hasToStringTag = typeof Symbol === \"function\" && Symbol.toStringTag;\n                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || \"Object\";\n                return type;\n            }\n        } // $FlowFixMe only called in DEV, so void return is not possible.\n        function willCoercionThrow(value) {\n            {\n                try {\n                    testStringCoercion(value);\n                    return false;\n                } catch (e) {\n                    return true;\n                }\n            }\n        }\n        function testStringCoercion(value) {\n            // If you ended up here by following an exception call stack, here's what's\n            // happened: you supplied an object or symbol value to React (as a prop, key,\n            // DOM attribute, CSS property, string ref, etc.) and when React tried to\n            // coerce it to a string using `'' + value`, an exception was thrown.\n            //\n            // The most common types that will cause this exception are `Symbol` instances\n            // and Temporal objects like `Temporal.Instant`. But any object that has a\n            // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n            // exception. (Library authors do this to prevent users from using built-in\n            // numeric operators like `+` or comparison operators like `>=` because custom\n            // methods are needed to perform accurate arithmetic or comparison.)\n            //\n            // To fix the problem, coerce this object or symbol value to a string before\n            // passing it to React. The most reliable way is usually `String(value)`.\n            //\n            // To find which value is throwing, check the browser or debugger console.\n            // Before this exception was thrown, there should be `console.error` output\n            // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n            // problem and how that type was used: key, atrribute, input value prop, etc.\n            // In most cases, this console output also shows the component and its\n            // ancestor components where the exception happened.\n            //\n            // eslint-disable-next-line react-internal/safe-string-coercion\n            return \"\" + value;\n        }\n        function checkKeyStringCoercion(value) {\n            {\n                if (willCoercionThrow(value)) {\n                    error(\"The provided key is an unsupported type %s.\" + \" This value must be coerced to a string before before using it here.\", typeName(value));\n                    return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n                }\n            }\n        }\n        function getWrappedName(outerType, innerType, wrapperName) {\n            var displayName = outerType.displayName;\n            if (displayName) {\n                return displayName;\n            }\n            var functionName = innerType.displayName || innerType.name || \"\";\n            return functionName !== \"\" ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n        } // Keep in sync with react-reconciler/getComponentNameFromFiber\n        function getContextName(type) {\n            return type.displayName || \"Context\";\n        } // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n        function getComponentNameFromType(type) {\n            if (type == null) {\n                // Host root, text node or just invalid type.\n                return null;\n            }\n            {\n                if (typeof type.tag === \"number\") {\n                    error(\"Received an unexpected object in getComponentNameFromType(). \" + \"This is likely a bug in React. Please file an issue.\");\n                }\n            }\n            if (typeof type === \"function\") {\n                return type.displayName || type.name || null;\n            }\n            if (typeof type === \"string\") {\n                return type;\n            }\n            switch(type){\n                case REACT_FRAGMENT_TYPE:\n                    return \"Fragment\";\n                case REACT_PORTAL_TYPE:\n                    return \"Portal\";\n                case REACT_PROFILER_TYPE:\n                    return \"Profiler\";\n                case REACT_STRICT_MODE_TYPE:\n                    return \"StrictMode\";\n                case REACT_SUSPENSE_TYPE:\n                    return \"Suspense\";\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return \"SuspenseList\";\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_CONTEXT_TYPE:\n                        var context = type;\n                        return getContextName(context) + \".Consumer\";\n                    case REACT_PROVIDER_TYPE:\n                        var provider = type;\n                        return getContextName(provider._context) + \".Provider\";\n                    case REACT_FORWARD_REF_TYPE:\n                        return getWrappedName(type, type.render, \"ForwardRef\");\n                    case REACT_MEMO_TYPE:\n                        var outerName = type.displayName || null;\n                        if (outerName !== null) {\n                            return outerName;\n                        }\n                        return getComponentNameFromType(type.type) || \"Memo\";\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                return getComponentNameFromType(init(payload));\n                            } catch (x) {\n                                return null;\n                            }\n                        }\n                }\n            }\n            return null;\n        }\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        var RESERVED_PROPS = {\n            key: true,\n            ref: true,\n            __self: true,\n            __source: true\n        };\n        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n        {\n            didWarnAboutStringRefs = {};\n        }\n        function hasValidRef(config) {\n            {\n                if (hasOwnProperty.call(config, \"ref\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"ref\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.ref !== undefined;\n        }\n        function hasValidKey(config) {\n            {\n                if (hasOwnProperty.call(config, \"key\")) {\n                    var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n                    if (getter && getter.isReactWarning) {\n                        return false;\n                    }\n                }\n            }\n            return config.key !== undefined;\n        }\n        function defineKeyPropWarningGetter(props, displayName) {\n            var warnAboutAccessingKey = function() {\n                {\n                    if (!specialPropKeyWarningShown) {\n                        specialPropKeyWarningShown = true;\n                        error(\"%s: `key` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                }\n            };\n            warnAboutAccessingKey.isReactWarning = true;\n            Object.defineProperty(props, \"key\", {\n                get: warnAboutAccessingKey,\n                configurable: true\n            });\n        }\n        function defineRefPropWarningGetter(props, displayName) {\n            var warnAboutAccessingRef = function() {\n                {\n                    if (!specialPropRefWarningShown) {\n                        specialPropRefWarningShown = true;\n                        error(\"%s: `ref` is not a prop. Trying to access it will result \" + \"in `undefined` being returned. If you need to access the same \" + \"value within the child component, you should pass it as a different \" + \"prop. (https://reactjs.org/link/special-props)\", displayName);\n                    }\n                }\n            };\n            warnAboutAccessingRef.isReactWarning = true;\n            Object.defineProperty(props, \"ref\", {\n                get: warnAboutAccessingRef,\n                configurable: true\n            });\n        }\n        function warnIfStringRefCannotBeAutoConverted(config) {\n            {\n                if (typeof config.ref === \"string\" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n                    var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n                    if (!didWarnAboutStringRefs[componentName]) {\n                        error('Component \"%s\" contains the string ref \"%s\". ' + \"Support for string refs will be removed in a future major release. \" + \"This case cannot be automatically converted to an arrow function. \" + \"We ask you to manually fix this case by using useRef() or createRef() instead. \" + \"Learn more about using refs safely here: \" + \"https://reactjs.org/link/strict-mode-string-ref\", componentName, config.ref);\n                        didWarnAboutStringRefs[componentName] = true;\n                    }\n                }\n            }\n        }\n        /**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */ var ReactElement = function(type, key, ref, self, source, owner, props) {\n            var element = {\n                // This tag allows us to uniquely identify this as a React Element\n                $$typeof: REACT_ELEMENT_TYPE,\n                // Built-in properties that belong on the element\n                type: type,\n                key: key,\n                ref: ref,\n                props: props,\n                // Record the component responsible for creating this element.\n                _owner: owner\n            };\n            {\n                // The validation flag is currently mutative. We put it on\n                // an external backing store so that we can freeze the whole object.\n                // This can be replaced with a WeakMap once they are implemented in\n                // commonly used development environments.\n                element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n                // the validation flag non-enumerable (where possible, which should\n                // include every environment we run tests in), so the test framework\n                // ignores it.\n                Object.defineProperty(element._store, \"validated\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: true,\n                    value: false\n                }); // self and source are DEV only properties.\n                Object.defineProperty(element, \"_self\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: self\n                }); // Two elements created in two different places should be considered\n                // equal for testing purposes and therefore we hide it from enumeration.\n                Object.defineProperty(element, \"_source\", {\n                    configurable: false,\n                    enumerable: false,\n                    writable: false,\n                    value: source\n                });\n                if (Object.freeze) {\n                    Object.freeze(element.props);\n                    Object.freeze(element);\n                }\n            }\n            return element;\n        };\n        /**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */ function createElement(type, config, children) {\n            var propName; // Reserved names are extracted\n            var props = {};\n            var key = null;\n            var ref = null;\n            var self = null;\n            var source = null;\n            if (config != null) {\n                if (hasValidRef(config)) {\n                    ref = config.ref;\n                    {\n                        warnIfStringRefCannotBeAutoConverted(config);\n                    }\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                }\n                self = config.__self === undefined ? null : config.__self;\n                source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        props[propName] = config[propName];\n                    }\n                }\n            } // Children can be more than one argument, and those are transferred onto\n            // the newly allocated props object.\n            var childrenLength = arguments.length - 2;\n            if (childrenLength === 1) {\n                props.children = children;\n            } else if (childrenLength > 1) {\n                var childArray = Array(childrenLength);\n                for(var i = 0; i < childrenLength; i++){\n                    childArray[i] = arguments[i + 2];\n                }\n                {\n                    if (Object.freeze) {\n                        Object.freeze(childArray);\n                    }\n                }\n                props.children = childArray;\n            } // Resolve default props\n            if (type && type.defaultProps) {\n                var defaultProps = type.defaultProps;\n                for(propName in defaultProps){\n                    if (props[propName] === undefined) {\n                        props[propName] = defaultProps[propName];\n                    }\n                }\n            }\n            {\n                if (key || ref) {\n                    var displayName = typeof type === \"function\" ? type.displayName || type.name || \"Unknown\" : type;\n                    if (key) {\n                        defineKeyPropWarningGetter(props, displayName);\n                    }\n                    if (ref) {\n                        defineRefPropWarningGetter(props, displayName);\n                    }\n                }\n            }\n            return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n        }\n        function cloneAndReplaceKey(oldElement, newKey) {\n            var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n            return newElement;\n        }\n        /**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */ function cloneElement(element, config, children) {\n            if (element === null || element === undefined) {\n                throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n            }\n            var propName; // Original props are copied\n            var props = assign({}, element.props); // Reserved names are extracted\n            var key = element.key;\n            var ref = element.ref; // Self is preserved since the owner is preserved.\n            var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n            // transpiler, and the original source is probably a better indicator of the\n            // true owner.\n            var source = element._source; // Owner will be preserved, unless ref is overridden\n            var owner = element._owner;\n            if (config != null) {\n                if (hasValidRef(config)) {\n                    // Silently steal the ref from the parent.\n                    ref = config.ref;\n                    owner = ReactCurrentOwner.current;\n                }\n                if (hasValidKey(config)) {\n                    {\n                        checkKeyStringCoercion(config.key);\n                    }\n                    key = \"\" + config.key;\n                } // Remaining properties override existing props\n                var defaultProps;\n                if (element.type && element.type.defaultProps) {\n                    defaultProps = element.type.defaultProps;\n                }\n                for(propName in config){\n                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n                        if (config[propName] === undefined && defaultProps !== undefined) {\n                            // Resolve default props\n                            props[propName] = defaultProps[propName];\n                        } else {\n                            props[propName] = config[propName];\n                        }\n                    }\n                }\n            } // Children can be more than one argument, and those are transferred onto\n            // the newly allocated props object.\n            var childrenLength = arguments.length - 2;\n            if (childrenLength === 1) {\n                props.children = children;\n            } else if (childrenLength > 1) {\n                var childArray = Array(childrenLength);\n                for(var i = 0; i < childrenLength; i++){\n                    childArray[i] = arguments[i + 2];\n                }\n                props.children = childArray;\n            }\n            return ReactElement(element.type, key, ref, self, source, owner, props);\n        }\n        /**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */ function isValidElement(object) {\n            return typeof object === \"object\" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n        var SEPARATOR = \".\";\n        var SUBSEPARATOR = \":\";\n        /**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */ function escape(key) {\n            var escapeRegex = /[=:]/g;\n            var escaperLookup = {\n                \"=\": \"=0\",\n                \":\": \"=2\"\n            };\n            var escapedString = key.replace(escapeRegex, function(match) {\n                return escaperLookup[match];\n            });\n            return \"$\" + escapedString;\n        }\n        /**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */ var didWarnAboutMaps = false;\n        var userProvidedKeyEscapeRegex = /\\/+/g;\n        function escapeUserProvidedKey(text) {\n            return text.replace(userProvidedKeyEscapeRegex, \"$&/\");\n        }\n        /**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */ function getElementKey(element, index) {\n            // Do some typechecking here since we call this blindly. We want to ensure\n            // that we don't block potential future ES APIs.\n            if (typeof element === \"object\" && element !== null && element.key != null) {\n                // Explicit key\n                {\n                    checkKeyStringCoercion(element.key);\n                }\n                return escape(\"\" + element.key);\n            } // Implicit key determined by the index in the set\n            return index.toString(36);\n        }\n        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n            var type = typeof children;\n            if (type === \"undefined\" || type === \"boolean\") {\n                // All of the above are perceived as null.\n                children = null;\n            }\n            var invokeCallback = false;\n            if (children === null) {\n                invokeCallback = true;\n            } else {\n                switch(type){\n                    case \"string\":\n                    case \"number\":\n                        invokeCallback = true;\n                        break;\n                    case \"object\":\n                        switch(children.$$typeof){\n                            case REACT_ELEMENT_TYPE:\n                            case REACT_PORTAL_TYPE:\n                                invokeCallback = true;\n                        }\n                }\n            }\n            if (invokeCallback) {\n                var _child = children;\n                var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n                // so that it's consistent if the number of children grows:\n                var childKey = nameSoFar === \"\" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n                if (isArray(mappedChild)) {\n                    var escapedChildKey = \"\";\n                    if (childKey != null) {\n                        escapedChildKey = escapeUserProvidedKey(childKey) + \"/\";\n                    }\n                    mapIntoArray(mappedChild, array, escapedChildKey, \"\", function(c) {\n                        return c;\n                    });\n                } else if (mappedChild != null) {\n                    if (isValidElement(mappedChild)) {\n                        {\n                            // The `if` statement here prevents auto-disabling of the safe\n                            // coercion ESLint rule, so we must manually disable it below.\n                            // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n                            if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n                                checkKeyStringCoercion(mappedChild.key);\n                            }\n                        }\n                        mappedChild = cloneAndReplaceKey(mappedChild, // traverseAllChildren used to do for objects as children\n                        escapedPrefix + (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // eslint-disable-next-line react-internal/safe-string-coercion\n                        escapeUserProvidedKey(\"\" + mappedChild.key) + \"/\" : \"\") + childKey);\n                    }\n                    array.push(mappedChild);\n                }\n                return 1;\n            }\n            var child;\n            var nextName;\n            var subtreeCount = 0; // Count of children found in the current subtree.\n            var nextNamePrefix = nameSoFar === \"\" ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n            if (isArray(children)) {\n                for(var i = 0; i < children.length; i++){\n                    child = children[i];\n                    nextName = nextNamePrefix + getElementKey(child, i);\n                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n                }\n            } else {\n                var iteratorFn = getIteratorFn(children);\n                if (typeof iteratorFn === \"function\") {\n                    var iterableChildren = children;\n                    {\n                        // Warn about using Maps as children\n                        if (iteratorFn === iterableChildren.entries) {\n                            if (!didWarnAboutMaps) {\n                                warn(\"Using Maps as children is not supported. \" + \"Use an array of keyed ReactElements instead.\");\n                            }\n                            didWarnAboutMaps = true;\n                        }\n                    }\n                    var iterator = iteratorFn.call(iterableChildren);\n                    var step;\n                    var ii = 0;\n                    while(!(step = iterator.next()).done){\n                        child = step.value;\n                        nextName = nextNamePrefix + getElementKey(child, ii++);\n                        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n                    }\n                } else if (type === \"object\") {\n                    // eslint-disable-next-line react-internal/safe-string-coercion\n                    var childrenString = String(children);\n                    throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === \"[object Object]\" ? \"object with keys {\" + Object.keys(children).join(\", \") + \"}\" : childrenString) + \"). \" + \"If you meant to render a collection of children, use an array \" + \"instead.\");\n                }\n            }\n            return subtreeCount;\n        }\n        /**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */ function mapChildren(children, func, context) {\n            if (children == null) {\n                return children;\n            }\n            var result = [];\n            var count = 0;\n            mapIntoArray(children, result, \"\", \"\", function(child) {\n                return func.call(context, child, count++);\n            });\n            return result;\n        }\n        /**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */ function countChildren(children) {\n            var n = 0;\n            mapChildren(children, function() {\n                n++; // Don't return anything\n            });\n            return n;\n        }\n        /**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */ function forEachChildren(children, forEachFunc, forEachContext) {\n            mapChildren(children, function() {\n                forEachFunc.apply(this, arguments); // Don't return anything.\n            }, forEachContext);\n        }\n        /**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */ function toArray(children) {\n            return mapChildren(children, function(child) {\n                return child;\n            }) || [];\n        }\n        /**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */ function onlyChild(children) {\n            if (!isValidElement(children)) {\n                throw new Error(\"React.Children.only expected to receive a single React element child.\");\n            }\n            return children;\n        }\n        function createContext(defaultValue) {\n            // TODO: Second argument used to be an optional `calculateChangedBits`\n            // function. Warn to reserve for future use?\n            var context = {\n                $$typeof: REACT_CONTEXT_TYPE,\n                // As a workaround to support multiple concurrent renderers, we categorize\n                // some renderers as primary and others as secondary. We only expect\n                // there to be two concurrent renderers at most: React Native (primary) and\n                // Fabric (secondary); React DOM (primary) and React ART (secondary).\n                // Secondary renderers store their context values on separate fields.\n                _currentValue: defaultValue,\n                _currentValue2: defaultValue,\n                // Used to track how many concurrent renderers this context currently\n                // supports within in a single renderer. Such as parallel server rendering.\n                _threadCount: 0,\n                // These are circular\n                Provider: null,\n                Consumer: null,\n                // Add these to use same hidden class in VM as ServerContext\n                _defaultValue: null,\n                _globalName: null\n            };\n            context.Provider = {\n                $$typeof: REACT_PROVIDER_TYPE,\n                _context: context\n            };\n            var hasWarnedAboutUsingNestedContextConsumers = false;\n            var hasWarnedAboutUsingConsumerProvider = false;\n            var hasWarnedAboutDisplayNameOnConsumer = false;\n            {\n                // A separate object, but proxies back to the original context object for\n                // backwards compatibility. It has a different $$typeof, so we can properly\n                // warn for the incorrect usage of Context as a Consumer.\n                var Consumer = {\n                    $$typeof: REACT_CONTEXT_TYPE,\n                    _context: context\n                }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n                Object.defineProperties(Consumer, {\n                    Provider: {\n                        get: function() {\n                            if (!hasWarnedAboutUsingConsumerProvider) {\n                                hasWarnedAboutUsingConsumerProvider = true;\n                                error(\"Rendering <Context.Consumer.Provider> is not supported and will be removed in \" + \"a future major release. Did you mean to render <Context.Provider> instead?\");\n                            }\n                            return context.Provider;\n                        },\n                        set: function(_Provider) {\n                            context.Provider = _Provider;\n                        }\n                    },\n                    _currentValue: {\n                        get: function() {\n                            return context._currentValue;\n                        },\n                        set: function(_currentValue) {\n                            context._currentValue = _currentValue;\n                        }\n                    },\n                    _currentValue2: {\n                        get: function() {\n                            return context._currentValue2;\n                        },\n                        set: function(_currentValue2) {\n                            context._currentValue2 = _currentValue2;\n                        }\n                    },\n                    _threadCount: {\n                        get: function() {\n                            return context._threadCount;\n                        },\n                        set: function(_threadCount) {\n                            context._threadCount = _threadCount;\n                        }\n                    },\n                    Consumer: {\n                        get: function() {\n                            if (!hasWarnedAboutUsingNestedContextConsumers) {\n                                hasWarnedAboutUsingNestedContextConsumers = true;\n                                error(\"Rendering <Context.Consumer.Consumer> is not supported and will be removed in \" + \"a future major release. Did you mean to render <Context.Consumer> instead?\");\n                            }\n                            return context.Consumer;\n                        }\n                    },\n                    displayName: {\n                        get: function() {\n                            return context.displayName;\n                        },\n                        set: function(displayName) {\n                            if (!hasWarnedAboutDisplayNameOnConsumer) {\n                                warn(\"Setting `displayName` on Context.Consumer has no effect. \" + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n                                hasWarnedAboutDisplayNameOnConsumer = true;\n                            }\n                        }\n                    }\n                }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n                context.Consumer = Consumer;\n            }\n            {\n                context._currentRenderer = null;\n                context._currentRenderer2 = null;\n            }\n            return context;\n        }\n        var Uninitialized = -1;\n        var Pending = 0;\n        var Resolved = 1;\n        var Rejected = 2;\n        function lazyInitializer(payload) {\n            if (payload._status === Uninitialized) {\n                var ctor = payload._result;\n                var thenable = ctor(); // Transition to the next state.\n                // This might throw either because it's missing or throws. If so, we treat it\n                // as still uninitialized and try again next time. Which is the same as what\n                // happens if the ctor or any wrappers processing the ctor throws. This might\n                // end up fixing it if the resolution was a concurrency bug.\n                thenable.then(function(moduleObject) {\n                    if (payload._status === Pending || payload._status === Uninitialized) {\n                        // Transition to the next state.\n                        var resolved = payload;\n                        resolved._status = Resolved;\n                        resolved._result = moduleObject;\n                    }\n                }, function(error) {\n                    if (payload._status === Pending || payload._status === Uninitialized) {\n                        // Transition to the next state.\n                        var rejected = payload;\n                        rejected._status = Rejected;\n                        rejected._result = error;\n                    }\n                });\n                if (payload._status === Uninitialized) {\n                    // In case, we're still uninitialized, then we're waiting for the thenable\n                    // to resolve. Set it as pending in the meantime.\n                    var pending = payload;\n                    pending._status = Pending;\n                    pending._result = thenable;\n                }\n            }\n            if (payload._status === Resolved) {\n                var moduleObject = payload._result;\n                {\n                    if (moduleObject === undefined) {\n                        error(\"lazy: Expected the result of a dynamic imp\" + \"ort() call. \" + \"Instead received: %s\\n\\nYour code should look like: \\n  \" + // Break up imports to avoid accidentally parsing them as dependencies.\n                        \"const MyComponent = lazy(() => imp\" + \"ort('./MyComponent'))\\n\\n\" + \"Did you accidentally put curly braces around the import?\", moduleObject);\n                    }\n                }\n                {\n                    if (!(\"default\" in moduleObject)) {\n                        error(\"lazy: Expected the result of a dynamic imp\" + \"ort() call. \" + \"Instead received: %s\\n\\nYour code should look like: \\n  \" + // Break up imports to avoid accidentally parsing them as dependencies.\n                        \"const MyComponent = lazy(() => imp\" + \"ort('./MyComponent'))\", moduleObject);\n                    }\n                }\n                return moduleObject.default;\n            } else {\n                throw payload._result;\n            }\n        }\n        function lazy(ctor) {\n            var payload = {\n                // We use these fields to store the result.\n                _status: Uninitialized,\n                _result: ctor\n            };\n            var lazyType = {\n                $$typeof: REACT_LAZY_TYPE,\n                _payload: payload,\n                _init: lazyInitializer\n            };\n            {\n                // In production, this would just set it on the object.\n                var defaultProps;\n                var propTypes; // $FlowFixMe\n                Object.defineProperties(lazyType, {\n                    defaultProps: {\n                        configurable: true,\n                        get: function() {\n                            return defaultProps;\n                        },\n                        set: function(newDefaultProps) {\n                            error(\"React.lazy(...): It is not supported to assign `defaultProps` to \" + \"a lazy component import. Either specify them where the component \" + \"is defined, or create a wrapping component around it.\");\n                            defaultProps = newDefaultProps; // Match production behavior more closely:\n                            // $FlowFixMe\n                            Object.defineProperty(lazyType, \"defaultProps\", {\n                                enumerable: true\n                            });\n                        }\n                    },\n                    propTypes: {\n                        configurable: true,\n                        get: function() {\n                            return propTypes;\n                        },\n                        set: function(newPropTypes) {\n                            error(\"React.lazy(...): It is not supported to assign `propTypes` to \" + \"a lazy component import. Either specify them where the component \" + \"is defined, or create a wrapping component around it.\");\n                            propTypes = newPropTypes; // Match production behavior more closely:\n                            // $FlowFixMe\n                            Object.defineProperty(lazyType, \"propTypes\", {\n                                enumerable: true\n                            });\n                        }\n                    }\n                });\n            }\n            return lazyType;\n        }\n        function forwardRef(render) {\n            {\n                if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n                    error(\"forwardRef requires a render function but received a `memo` \" + \"component. Instead of forwardRef(memo(...)), use \" + \"memo(forwardRef(...)).\");\n                } else if (typeof render !== \"function\") {\n                    error(\"forwardRef requires a render function but was given %s.\", render === null ? \"null\" : typeof render);\n                } else {\n                    if (render.length !== 0 && render.length !== 2) {\n                        error(\"forwardRef render functions accept exactly two parameters: props and ref. %s\", render.length === 1 ? \"Did you forget to use the ref parameter?\" : \"Any additional parameter will be undefined.\");\n                    }\n                }\n                if (render != null) {\n                    if (render.defaultProps != null || render.propTypes != null) {\n                        error(\"forwardRef render functions do not support propTypes or defaultProps. \" + \"Did you accidentally pass a React component?\");\n                    }\n                }\n            }\n            var elementType = {\n                $$typeof: REACT_FORWARD_REF_TYPE,\n                render: render\n            };\n            {\n                var ownName;\n                Object.defineProperty(elementType, \"displayName\", {\n                    enumerable: false,\n                    configurable: true,\n                    get: function() {\n                        return ownName;\n                    },\n                    set: function(name) {\n                        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n                        // because the component may be used elsewhere.\n                        // But it's nice for anonymous functions to inherit the name,\n                        // so that our component-stack generation logic will display their frames.\n                        // An anonymous function generally suggests a pattern like:\n                        //   React.forwardRef((props, ref) => {...});\n                        // This kind of inner function is not used elsewhere so the side effect is okay.\n                        if (!render.name && !render.displayName) {\n                            render.displayName = name;\n                        }\n                    }\n                });\n            }\n            return elementType;\n        }\n        var REACT_MODULE_REFERENCE;\n        {\n            REACT_MODULE_REFERENCE = Symbol.for(\"react.module.reference\");\n        }\n        function isValidElementType(type) {\n            if (typeof type === \"string\" || typeof type === \"function\") {\n                return true;\n            } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {\n                return true;\n            }\n            if (typeof type === \"object\" && type !== null) {\n                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n                // types supported by any Flight configuration anywhere since\n                // we don't know which Flight build this will end up being used\n                // with.\n                type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        function memo(type, compare) {\n            {\n                if (!isValidElementType(type)) {\n                    error(\"memo: The first argument must be a component. Instead \" + \"received: %s\", type === null ? \"null\" : typeof type);\n                }\n            }\n            var elementType = {\n                $$typeof: REACT_MEMO_TYPE,\n                type: type,\n                compare: compare === undefined ? null : compare\n            };\n            {\n                var ownName;\n                Object.defineProperty(elementType, \"displayName\", {\n                    enumerable: false,\n                    configurable: true,\n                    get: function() {\n                        return ownName;\n                    },\n                    set: function(name) {\n                        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n                        // because the component may be used elsewhere.\n                        // But it's nice for anonymous functions to inherit the name,\n                        // so that our component-stack generation logic will display their frames.\n                        // An anonymous function generally suggests a pattern like:\n                        //   React.memo((props) => {...});\n                        // This kind of inner function is not used elsewhere so the side effect is okay.\n                        if (!type.name && !type.displayName) {\n                            type.displayName = name;\n                        }\n                    }\n                });\n            }\n            return elementType;\n        }\n        function resolveDispatcher() {\n            var dispatcher = ReactCurrentDispatcher.current;\n            {\n                if (dispatcher === null) {\n                    error(\"Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for\" + \" one of the following reasons:\\n\" + \"1. You might have mismatching versions of React and the renderer (such as React DOM)\\n\" + \"2. You might be breaking the Rules of Hooks\\n\" + \"3. You might have more than one copy of React in the same app\\n\" + \"See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\");\n                }\n            }\n            // intentionally don't throw our own error because this is in a hot path.\n            // Also helps ensure this is inlined.\n            return dispatcher;\n        }\n        function useContext(Context) {\n            var dispatcher = resolveDispatcher();\n            {\n                // TODO: add a more generic warning for invalid values.\n                if (Context._context !== undefined) {\n                    var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n                    // and nobody should be using this in existing code.\n                    if (realContext.Consumer === Context) {\n                        error(\"Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be \" + \"removed in a future major release. Did you mean to call useContext(Context) instead?\");\n                    } else if (realContext.Provider === Context) {\n                        error(\"Calling useContext(Context.Provider) is not supported. \" + \"Did you mean to call useContext(Context) instead?\");\n                    }\n                }\n            }\n            return dispatcher.useContext(Context);\n        }\n        function useState(initialState) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useState(initialState);\n        }\n        function useReducer(reducer, initialArg, init) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useReducer(reducer, initialArg, init);\n        }\n        function useRef(initialValue) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useRef(initialValue);\n        }\n        function useEffect(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useEffect(create, deps);\n        }\n        function useInsertionEffect(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useInsertionEffect(create, deps);\n        }\n        function useLayoutEffect(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useLayoutEffect(create, deps);\n        }\n        function useCallback(callback, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useCallback(callback, deps);\n        }\n        function useMemo(create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useMemo(create, deps);\n        }\n        function useImperativeHandle(ref, create, deps) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useImperativeHandle(ref, create, deps);\n        }\n        function useDebugValue(value, formatterFn) {\n            {\n                var dispatcher = resolveDispatcher();\n                return dispatcher.useDebugValue(value, formatterFn);\n            }\n        }\n        function useTransition() {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useTransition();\n        }\n        function useDeferredValue(value) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useDeferredValue(value);\n        }\n        function useId() {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useId();\n        }\n        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n            var dispatcher = resolveDispatcher();\n            return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n        }\n        // Helpers to patch console.logs to avoid logging during side-effect free\n        // replaying on render function. This currently only patches the object\n        // lazily which won't cover if the log function was extracted eagerly.\n        // We could also eagerly patch the method.\n        var disabledDepth = 0;\n        var prevLog;\n        var prevInfo;\n        var prevWarn;\n        var prevError;\n        var prevGroup;\n        var prevGroupCollapsed;\n        var prevGroupEnd;\n        function disabledLog() {}\n        disabledLog.__reactDisabledLog = true;\n        function disableLogs() {\n            {\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ prevLog = console.log;\n                    prevInfo = console.info;\n                    prevWarn = console.warn;\n                    prevError = console.error;\n                    prevGroup = console.group;\n                    prevGroupCollapsed = console.groupCollapsed;\n                    prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n                    var props = {\n                        configurable: true,\n                        enumerable: true,\n                        value: disabledLog,\n                        writable: true\n                    }; // $FlowFixMe Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        info: props,\n                        log: props,\n                        warn: props,\n                        error: props,\n                        group: props,\n                        groupCollapsed: props,\n                        groupEnd: props\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                disabledDepth++;\n            }\n        }\n        function reenableLogs() {\n            {\n                disabledDepth--;\n                if (disabledDepth === 0) {\n                    /* eslint-disable react-internal/no-production-logging */ var props = {\n                        configurable: true,\n                        enumerable: true,\n                        writable: true\n                    }; // $FlowFixMe Flow thinks console is immutable.\n                    Object.defineProperties(console, {\n                        log: assign({}, props, {\n                            value: prevLog\n                        }),\n                        info: assign({}, props, {\n                            value: prevInfo\n                        }),\n                        warn: assign({}, props, {\n                            value: prevWarn\n                        }),\n                        error: assign({}, props, {\n                            value: prevError\n                        }),\n                        group: assign({}, props, {\n                            value: prevGroup\n                        }),\n                        groupCollapsed: assign({}, props, {\n                            value: prevGroupCollapsed\n                        }),\n                        groupEnd: assign({}, props, {\n                            value: prevGroupEnd\n                        })\n                    });\n                /* eslint-enable react-internal/no-production-logging */ }\n                if (disabledDepth < 0) {\n                    error(\"disabledDepth fell below zero. \" + \"This is a bug in React. Please file an issue.\");\n                }\n            }\n        }\n        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\n        var prefix;\n        function describeBuiltInComponentFrame(name, source, ownerFn) {\n            {\n                if (prefix === undefined) {\n                    // Extract the VM specific prefix used by each line.\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        var match = x.stack.trim().match(/\\n( *(at )?)/);\n                        prefix = match && match[1] || \"\";\n                    }\n                } // We use the prefix to ensure our stacks line up with native stack frames.\n                return \"\\n\" + prefix + name;\n            }\n        }\n        var reentry = false;\n        var componentFrameCache;\n        {\n            var PossiblyWeakMap = typeof WeakMap === \"function\" ? WeakMap : Map;\n            componentFrameCache = new PossiblyWeakMap();\n        }\n        function describeNativeComponentFrame(fn, construct) {\n            // If something asked for a stack inside a fake render, it should get ignored.\n            if (!fn || reentry) {\n                return \"\";\n            }\n            {\n                var frame = componentFrameCache.get(fn);\n                if (frame !== undefined) {\n                    return frame;\n                }\n            }\n            var control;\n            reentry = true;\n            var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n            Error.prepareStackTrace = undefined;\n            var previousDispatcher;\n            {\n                previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n                // for warnings.\n                ReactCurrentDispatcher$1.current = null;\n                disableLogs();\n            }\n            try {\n                // This should throw.\n                if (construct) {\n                    // Something should be setting the props in the constructor.\n                    var Fake = function() {\n                        throw Error();\n                    }; // $FlowFixMe\n                    Object.defineProperty(Fake.prototype, \"props\", {\n                        set: function() {\n                            // We use a throwing setter instead of frozen or non-writable props\n                            // because that won't throw in a non-strict mode function.\n                            throw Error();\n                        }\n                    });\n                    if (typeof Reflect === \"object\" && Reflect.construct) {\n                        // We construct a different control for this case to include any extra\n                        // frames added by the construct call.\n                        try {\n                            Reflect.construct(Fake, []);\n                        } catch (x) {\n                            control = x;\n                        }\n                        Reflect.construct(fn, [], Fake);\n                    } else {\n                        try {\n                            Fake.call();\n                        } catch (x) {\n                            control = x;\n                        }\n                        fn.call(Fake.prototype);\n                    }\n                } else {\n                    try {\n                        throw Error();\n                    } catch (x) {\n                        control = x;\n                    }\n                    fn();\n                }\n            } catch (sample) {\n                // This is inlined manually because closure doesn't do it for us.\n                if (sample && control && typeof sample.stack === \"string\") {\n                    // This extracts the first frame from the sample that isn't also in the control.\n                    // Skipping one frame that we assume is the frame that calls the two.\n                    var sampleLines = sample.stack.split(\"\\n\");\n                    var controlLines = control.stack.split(\"\\n\");\n                    var s = sampleLines.length - 1;\n                    var c = controlLines.length - 1;\n                    while(s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]){\n                        // We expect at least one stack frame to be shared.\n                        // Typically this will be the root most one. However, stack frames may be\n                        // cut off due to maximum stack limits. In this case, one maybe cut off\n                        // earlier than the other. We assume that the sample is longer or the same\n                        // and there for cut off earlier. So we should find the root most frame in\n                        // the sample somewhere in the control.\n                        c--;\n                    }\n                    for(; s >= 1 && c >= 0; s--, c--){\n                        // Next we find the first one that isn't the same which should be the\n                        // frame that called our sample function and the control.\n                        if (sampleLines[s] !== controlLines[c]) {\n                            // In V8, the first line is describing the message but other VMs don't.\n                            // If we're about to return the first line, and the control is also on the same\n                            // line, that's a pretty good indicator that our sample threw at same line as\n                            // the control. I.e. before we entered the sample frame. So we ignore this result.\n                            // This can happen if you passed a class to function component, or non-function.\n                            if (s !== 1 || c !== 1) {\n                                do {\n                                    s--;\n                                    c--; // We may still have similar intermediate frames from the construct call.\n                                    // The next one that isn't the same should be our match though.\n                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                                        // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                                        var _frame = \"\\n\" + sampleLines[s].replace(\" at new \", \" at \"); // If our component frame is labeled \"<anonymous>\"\n                                        // but we have a user-provided \"displayName\"\n                                        // splice it in to make the stack more readable.\n                                        if (fn.displayName && _frame.includes(\"<anonymous>\")) {\n                                            _frame = _frame.replace(\"<anonymous>\", fn.displayName);\n                                        }\n                                        {\n                                            if (typeof fn === \"function\") {\n                                                componentFrameCache.set(fn, _frame);\n                                            }\n                                        }\n                                        return _frame;\n                                    }\n                                }while (s >= 1 && c >= 0);\n                            }\n                            break;\n                        }\n                    }\n                }\n            } finally{\n                reentry = false;\n                {\n                    ReactCurrentDispatcher$1.current = previousDispatcher;\n                    reenableLogs();\n                }\n                Error.prepareStackTrace = previousPrepareStackTrace;\n            } // Fallback to just using the name if we couldn't make it throw.\n            var name = fn ? fn.displayName || fn.name : \"\";\n            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : \"\";\n            {\n                if (typeof fn === \"function\") {\n                    componentFrameCache.set(fn, syntheticFrame);\n                }\n            }\n            return syntheticFrame;\n        }\n        function describeFunctionComponentFrame(fn, source, ownerFn) {\n            {\n                return describeNativeComponentFrame(fn, false);\n            }\n        }\n        function shouldConstruct(Component) {\n            var prototype = Component.prototype;\n            return !!(prototype && prototype.isReactComponent);\n        }\n        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n            if (type == null) {\n                return \"\";\n            }\n            if (typeof type === \"function\") {\n                {\n                    return describeNativeComponentFrame(type, shouldConstruct(type));\n                }\n            }\n            if (typeof type === \"string\") {\n                return describeBuiltInComponentFrame(type);\n            }\n            switch(type){\n                case REACT_SUSPENSE_TYPE:\n                    return describeBuiltInComponentFrame(\"Suspense\");\n                case REACT_SUSPENSE_LIST_TYPE:\n                    return describeBuiltInComponentFrame(\"SuspenseList\");\n            }\n            if (typeof type === \"object\") {\n                switch(type.$$typeof){\n                    case REACT_FORWARD_REF_TYPE:\n                        return describeFunctionComponentFrame(type.render);\n                    case REACT_MEMO_TYPE:\n                        // Memo may contain any component type so we recursively resolve it.\n                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n                    case REACT_LAZY_TYPE:\n                        {\n                            var lazyComponent = type;\n                            var payload = lazyComponent._payload;\n                            var init = lazyComponent._init;\n                            try {\n                                // Lazy may contain any component type so we recursively resolve it.\n                                return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n                            } catch (x) {}\n                        }\n                }\n            }\n            return \"\";\n        }\n        var loggedTypeFailures = {};\n        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n        function setCurrentlyValidatingElement(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n                } else {\n                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n                }\n            }\n        }\n        function checkPropTypes(typeSpecs, values, location, componentName, element) {\n            {\n                // $FlowFixMe This is okay but Flow doesn't know it.\n                var has = Function.call.bind(hasOwnProperty);\n                for(var typeSpecName in typeSpecs){\n                    if (has(typeSpecs, typeSpecName)) {\n                        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n                        // fail the render phase where it didn't fail before. So we log it.\n                        // After these have been cleaned up, we'll let them throw.\n                        try {\n                            // This is intentionally an invariant that gets caught. It's the same\n                            // behavior as without this statement except with a better message.\n                            if (typeof typeSpecs[typeSpecName] !== \"function\") {\n                                // eslint-disable-next-line react-internal/prod-error-codes\n                                var err = Error((componentName || \"React class\") + \": \" + location + \" type `\" + typeSpecName + \"` is invalid; \" + \"it must be a function, usually from the `prop-types` package, but received `\" + typeof typeSpecs[typeSpecName] + \"`.\" + \"This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                                err.name = \"Invariant Violation\";\n                                throw err;\n                            }\n                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n                        } catch (ex) {\n                            error$1 = ex;\n                        }\n                        if (error$1 && !(error$1 instanceof Error)) {\n                            setCurrentlyValidatingElement(element);\n                            error(\"%s: type specification of %s\" + \" `%s` is invalid; the type checker \" + \"function must return `null` or an `Error` but returned a %s. \" + \"You may have forgotten to pass an argument to the type checker \" + \"creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and \" + \"shape all require an argument).\", componentName || \"React class\", location, typeSpecName, typeof error$1);\n                            setCurrentlyValidatingElement(null);\n                        }\n                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n                            // Only monitor this failure once because there tends to be a lot of the\n                            // same error.\n                            loggedTypeFailures[error$1.message] = true;\n                            setCurrentlyValidatingElement(element);\n                            error(\"Failed %s type: %s\", location, error$1.message);\n                            setCurrentlyValidatingElement(null);\n                        }\n                    }\n                }\n            }\n        }\n        function setCurrentlyValidatingElement$1(element) {\n            {\n                if (element) {\n                    var owner = element._owner;\n                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n                    setExtraStackFrame(stack);\n                } else {\n                    setExtraStackFrame(null);\n                }\n            }\n        }\n        var propTypesMisspellWarningShown;\n        {\n            propTypesMisspellWarningShown = false;\n        }\n        function getDeclarationErrorAddendum() {\n            if (ReactCurrentOwner.current) {\n                var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n                if (name) {\n                    return \"\\n\\nCheck the render method of `\" + name + \"`.\";\n                }\n            }\n            return \"\";\n        }\n        function getSourceInfoErrorAddendum(source) {\n            if (source !== undefined) {\n                var fileName = source.fileName.replace(/^.*[\\\\\\/]/, \"\");\n                var lineNumber = source.lineNumber;\n                return \"\\n\\nCheck your code at \" + fileName + \":\" + lineNumber + \".\";\n            }\n            return \"\";\n        }\n        function getSourceInfoErrorAddendumForProps(elementProps) {\n            if (elementProps !== null && elementProps !== undefined) {\n                return getSourceInfoErrorAddendum(elementProps.__source);\n            }\n            return \"\";\n        }\n        /**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */ var ownerHasKeyUseWarning = {};\n        function getCurrentComponentErrorInfo(parentType) {\n            var info = getDeclarationErrorAddendum();\n            if (!info) {\n                var parentName = typeof parentType === \"string\" ? parentType : parentType.displayName || parentType.name;\n                if (parentName) {\n                    info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n                }\n            }\n            return info;\n        }\n        /**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */ function validateExplicitKey(element, parentType) {\n            if (!element._store || element._store.validated || element.key != null) {\n                return;\n            }\n            element._store.validated = true;\n            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n                return;\n            }\n            ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n            // property, it may be the creator of the child that's responsible for\n            // assigning it a key.\n            var childOwner = \"\";\n            if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n                // Give the component that originally created this child.\n                childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n            }\n            {\n                setCurrentlyValidatingElement$1(element);\n                error('Each child in a list should have a unique \"key\" prop.' + \"%s%s See https://reactjs.org/link/warning-keys for more information.\", currentComponentErrorInfo, childOwner);\n                setCurrentlyValidatingElement$1(null);\n            }\n        }\n        /**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */ function validateChildKeys(node, parentType) {\n            if (typeof node !== \"object\") {\n                return;\n            }\n            if (isArray(node)) {\n                for(var i = 0; i < node.length; i++){\n                    var child = node[i];\n                    if (isValidElement(child)) {\n                        validateExplicitKey(child, parentType);\n                    }\n                }\n            } else if (isValidElement(node)) {\n                // This element was passed in a valid location.\n                if (node._store) {\n                    node._store.validated = true;\n                }\n            } else if (node) {\n                var iteratorFn = getIteratorFn(node);\n                if (typeof iteratorFn === \"function\") {\n                    // Entry iterators used to provide implicit keys,\n                    // but now we print a separate warning for them later.\n                    if (iteratorFn !== node.entries) {\n                        var iterator = iteratorFn.call(node);\n                        var step;\n                        while(!(step = iterator.next()).done){\n                            if (isValidElement(step.value)) {\n                                validateExplicitKey(step.value, parentType);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        /**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */ function validatePropTypes(element) {\n            {\n                var type = element.type;\n                if (type === null || type === undefined || typeof type === \"string\") {\n                    return;\n                }\n                var propTypes;\n                if (typeof type === \"function\") {\n                    propTypes = type.propTypes;\n                } else if (typeof type === \"object\" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n                // Inner props are checked in the reconciler.\n                type.$$typeof === REACT_MEMO_TYPE)) {\n                    propTypes = type.propTypes;\n                } else {\n                    return;\n                }\n                if (propTypes) {\n                    // Intentionally inside to avoid triggering lazy initializers:\n                    var name = getComponentNameFromType(type);\n                    checkPropTypes(propTypes, element.props, \"prop\", name, element);\n                } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n                    propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n                    var _name = getComponentNameFromType(type);\n                    error(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", _name || \"Unknown\");\n                }\n                if (typeof type.getDefaultProps === \"function\" && !type.getDefaultProps.isReactClassApproved) {\n                    error(\"getDefaultProps is only used on classic React.createClass \" + \"definitions. Use a static property named `defaultProps` instead.\");\n                }\n            }\n        }\n        /**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */ function validateFragmentProps(fragment) {\n            {\n                var keys = Object.keys(fragment.props);\n                for(var i = 0; i < keys.length; i++){\n                    var key = keys[i];\n                    if (key !== \"children\" && key !== \"key\") {\n                        setCurrentlyValidatingElement$1(fragment);\n                        error(\"Invalid prop `%s` supplied to `React.Fragment`. \" + \"React.Fragment can only have `key` and `children` props.\", key);\n                        setCurrentlyValidatingElement$1(null);\n                        break;\n                    }\n                }\n                if (fragment.ref !== null) {\n                    setCurrentlyValidatingElement$1(fragment);\n                    error(\"Invalid attribute `ref` supplied to `React.Fragment`.\");\n                    setCurrentlyValidatingElement$1(null);\n                }\n            }\n        }\n        function createElementWithValidation(type, props, children) {\n            var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n            // succeed and there will likely be errors in render.\n            if (!validType) {\n                var info = \"\";\n                if (type === undefined || typeof type === \"object\" && type !== null && Object.keys(type).length === 0) {\n                    info += \" You likely forgot to export your component from the file \" + \"it's defined in, or you might have mixed up default and named imports.\";\n                }\n                var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n                if (sourceInfo) {\n                    info += sourceInfo;\n                } else {\n                    info += getDeclarationErrorAddendum();\n                }\n                var typeString;\n                if (type === null) {\n                    typeString = \"null\";\n                } else if (isArray(type)) {\n                    typeString = \"array\";\n                } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n                    typeString = \"<\" + (getComponentNameFromType(type.type) || \"Unknown\") + \" />\";\n                    info = \" Did you accidentally export a JSX literal instead of a component?\";\n                } else {\n                    typeString = typeof type;\n                }\n                {\n                    error(\"React.createElement: type is invalid -- expected a string (for \" + \"built-in components) or a class/function (for composite \" + \"components) but got: %s.%s\", typeString, info);\n                }\n            }\n            var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n            // TODO: Drop this when these are no longer allowed as the type argument.\n            if (element == null) {\n                return element;\n            } // Skip key warning if the type isn't valid since our key validation logic\n            // doesn't expect a non-string/function type and can throw confusing errors.\n            // We don't want exception behavior to differ between dev and prod.\n            // (Rendering will throw with a helpful message and as soon as the type is\n            // fixed, the key warnings will appear.)\n            if (validType) {\n                for(var i = 2; i < arguments.length; i++){\n                    validateChildKeys(arguments[i], type);\n                }\n            }\n            if (type === REACT_FRAGMENT_TYPE) {\n                validateFragmentProps(element);\n            } else {\n                validatePropTypes(element);\n            }\n            return element;\n        }\n        var didWarnAboutDeprecatedCreateFactory = false;\n        function createFactoryWithValidation(type) {\n            var validatedFactory = createElementWithValidation.bind(null, type);\n            validatedFactory.type = type;\n            {\n                if (!didWarnAboutDeprecatedCreateFactory) {\n                    didWarnAboutDeprecatedCreateFactory = true;\n                    warn(\"React.createFactory() is deprecated and will be removed in \" + \"a future major release. Consider using JSX \" + \"or use React.createElement() directly instead.\");\n                } // Legacy hook: remove it\n                Object.defineProperty(validatedFactory, \"type\", {\n                    enumerable: false,\n                    get: function() {\n                        warn(\"Factory.type is deprecated. Access the class directly \" + \"before passing it to createFactory.\");\n                        Object.defineProperty(this, \"type\", {\n                            value: type\n                        });\n                        return type;\n                    }\n                });\n            }\n            return validatedFactory;\n        }\n        function cloneElementWithValidation(element, props, children) {\n            var newElement = cloneElement.apply(this, arguments);\n            for(var i = 2; i < arguments.length; i++){\n                validateChildKeys(arguments[i], newElement.type);\n            }\n            validatePropTypes(newElement);\n            return newElement;\n        }\n        function startTransition(scope, options) {\n            var prevTransition = ReactCurrentBatchConfig.transition;\n            ReactCurrentBatchConfig.transition = {};\n            var currentTransition = ReactCurrentBatchConfig.transition;\n            {\n                ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n            }\n            try {\n                scope();\n            } finally{\n                ReactCurrentBatchConfig.transition = prevTransition;\n                {\n                    if (prevTransition === null && currentTransition._updatedFibers) {\n                        var updatedFibersCount = currentTransition._updatedFibers.size;\n                        if (updatedFibersCount > 10) {\n                            warn(\"Detected a large number of updates inside startTransition. \" + \"If this is due to a subscription please re-write it to use React provided hooks. \" + \"Otherwise concurrent mode guarantees are off the table.\");\n                        }\n                        currentTransition._updatedFibers.clear();\n                    }\n                }\n            }\n        }\n        var didWarnAboutMessageChannel = false;\n        var enqueueTaskImpl = null;\n        function enqueueTask(task) {\n            if (enqueueTaskImpl === null) {\n                try {\n                    // read require off the module object to get around the bundlers.\n                    // we don't want them to detect a require and bundle a Node polyfill.\n                    var requireString = (\"require\" + Math.random()).slice(0, 7);\n                    var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n                    // version of setImmediate, bypassing fake timers if any.\n                    enqueueTaskImpl = nodeRequire.call(module, \"timers\").setImmediate;\n                } catch (_err) {\n                    // we're in a browser\n                    // we can't use regular timers because they may still be faked\n                    // so we try MessageChannel+postMessage instead\n                    enqueueTaskImpl = function(callback) {\n                        {\n                            if (didWarnAboutMessageChannel === false) {\n                                didWarnAboutMessageChannel = true;\n                                if (typeof MessageChannel === \"undefined\") {\n                                    error(\"This browser does not have a MessageChannel implementation, \" + \"so enqueuing tasks via await act(async () => ...) will fail. \" + \"Please file an issue at https://github.com/facebook/react/issues \" + \"if you encounter this warning.\");\n                                }\n                            }\n                        }\n                        var channel = new MessageChannel();\n                        channel.port1.onmessage = callback;\n                        channel.port2.postMessage(undefined);\n                    };\n                }\n            }\n            return enqueueTaskImpl(task);\n        }\n        var actScopeDepth = 0;\n        var didWarnNoAwaitAct = false;\n        function act(callback) {\n            {\n                // `act` calls can be nested, so we track the depth. This represents the\n                // number of `act` scopes on the stack.\n                var prevActScopeDepth = actScopeDepth;\n                actScopeDepth++;\n                if (ReactCurrentActQueue.current === null) {\n                    // This is the outermost `act` scope. Initialize the queue. The reconciler\n                    // will detect the queue and use it instead of Scheduler.\n                    ReactCurrentActQueue.current = [];\n                }\n                var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n                var result;\n                try {\n                    // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n                    // set to `true` while the given callback is executed, not for updates\n                    // triggered during an async event, because this is how the legacy\n                    // implementation of `act` behaved.\n                    ReactCurrentActQueue.isBatchingLegacy = true;\n                    result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n                    // which flushed updates immediately after the scope function exits, even\n                    // if it's an async function.\n                    if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n                        var queue = ReactCurrentActQueue.current;\n                        if (queue !== null) {\n                            ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n                            flushActQueue(queue);\n                        }\n                    }\n                } catch (error) {\n                    popActScope(prevActScopeDepth);\n                    throw error;\n                } finally{\n                    ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n                }\n                if (result !== null && typeof result === \"object\" && typeof result.then === \"function\") {\n                    var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n                    // for it to resolve before exiting the current scope.\n                    var wasAwaited = false;\n                    var thenable = {\n                        then: function(resolve, reject) {\n                            wasAwaited = true;\n                            thenableResult.then(function(returnValue) {\n                                popActScope(prevActScopeDepth);\n                                if (actScopeDepth === 0) {\n                                    // We've exited the outermost act scope. Recursively flush the\n                                    // queue until there's no remaining work.\n                                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                                } else {\n                                    resolve(returnValue);\n                                }\n                            }, function(error) {\n                                // The callback threw an error.\n                                popActScope(prevActScopeDepth);\n                                reject(error);\n                            });\n                        }\n                    };\n                    {\n                        if (!didWarnNoAwaitAct && typeof Promise !== \"undefined\") {\n                            // eslint-disable-next-line no-undef\n                            Promise.resolve().then(function() {}).then(function() {\n                                if (!wasAwaited) {\n                                    didWarnNoAwaitAct = true;\n                                    error(\"You called act(async () => ...) without await. \" + \"This could lead to unexpected testing behaviour, \" + \"interleaving multiple act calls and mixing their \" + \"scopes. \" + \"You should - await act(async () => ...);\");\n                                }\n                            });\n                        }\n                    }\n                    return thenable;\n                } else {\n                    var returnValue = result; // The callback is not an async function. Exit the current scope\n                    // immediately, without awaiting.\n                    popActScope(prevActScopeDepth);\n                    if (actScopeDepth === 0) {\n                        // Exiting the outermost act scope. Flush the queue.\n                        var _queue = ReactCurrentActQueue.current;\n                        if (_queue !== null) {\n                            flushActQueue(_queue);\n                            ReactCurrentActQueue.current = null;\n                        } // Return a thenable. If the user awaits it, we'll flush again in\n                        // case additional work was scheduled by a microtask.\n                        var _thenable = {\n                            then: function(resolve, reject) {\n                                // Confirm we haven't re-entered another `act` scope, in case\n                                // the user does something weird like await the thenable\n                                // multiple times.\n                                if (ReactCurrentActQueue.current === null) {\n                                    // Recursively flush the queue until there's no remaining work.\n                                    ReactCurrentActQueue.current = [];\n                                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                                } else {\n                                    resolve(returnValue);\n                                }\n                            }\n                        };\n                        return _thenable;\n                    } else {\n                        // Since we're inside a nested `act` scope, the returned thenable\n                        // immediately resolves. The outer scope will flush the queue.\n                        var _thenable2 = {\n                            then: function(resolve, reject) {\n                                resolve(returnValue);\n                            }\n                        };\n                        return _thenable2;\n                    }\n                }\n            }\n        }\n        function popActScope(prevActScopeDepth) {\n            {\n                if (prevActScopeDepth !== actScopeDepth - 1) {\n                    error(\"You seem to have overlapping act() calls, this is not supported. \" + \"Be sure to await previous act() calls before making a new one. \");\n                }\n                actScopeDepth = prevActScopeDepth;\n            }\n        }\n        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n            {\n                var queue = ReactCurrentActQueue.current;\n                if (queue !== null) {\n                    try {\n                        flushActQueue(queue);\n                        enqueueTask(function() {\n                            if (queue.length === 0) {\n                                // No additional work was scheduled. Finish.\n                                ReactCurrentActQueue.current = null;\n                                resolve(returnValue);\n                            } else {\n                                // Keep flushing work until there's none left.\n                                recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n                            }\n                        });\n                    } catch (error) {\n                        reject(error);\n                    }\n                } else {\n                    resolve(returnValue);\n                }\n            }\n        }\n        var isFlushing = false;\n        function flushActQueue(queue) {\n            {\n                if (!isFlushing) {\n                    // Prevent re-entrance.\n                    isFlushing = true;\n                    var i = 0;\n                    try {\n                        for(; i < queue.length; i++){\n                            var callback = queue[i];\n                            do {\n                                callback = callback(true);\n                            }while (callback !== null);\n                        }\n                        queue.length = 0;\n                    } catch (error) {\n                        // If something throws, leave the remaining callbacks on the queue.\n                        queue = queue.slice(i + 1);\n                        throw error;\n                    } finally{\n                        isFlushing = false;\n                    }\n                }\n            }\n        }\n        var createElement$1 = createElementWithValidation;\n        var cloneElement$1 = cloneElementWithValidation;\n        var createFactory = createFactoryWithValidation;\n        var Children = {\n            map: mapChildren,\n            forEach: forEachChildren,\n            count: countChildren,\n            toArray: toArray,\n            only: onlyChild\n        };\n        exports.Children = Children;\n        exports.Component = Component;\n        exports.Fragment = REACT_FRAGMENT_TYPE;\n        exports.Profiler = REACT_PROFILER_TYPE;\n        exports.PureComponent = PureComponent;\n        exports.StrictMode = REACT_STRICT_MODE_TYPE;\n        exports.Suspense = REACT_SUSPENSE_TYPE;\n        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\n        exports.cloneElement = cloneElement$1;\n        exports.createContext = createContext;\n        exports.createElement = createElement$1;\n        exports.createFactory = createFactory;\n        exports.createRef = createRef;\n        exports.forwardRef = forwardRef;\n        exports.isValidElement = isValidElement;\n        exports.lazy = lazy;\n        exports.memo = memo;\n        exports.startTransition = startTransition;\n        exports.unstable_act = act;\n        exports.useCallback = useCallback;\n        exports.useContext = useContext;\n        exports.useDebugValue = useDebugValue;\n        exports.useDeferredValue = useDeferredValue;\n        exports.useEffect = useEffect;\n        exports.useId = useId;\n        exports.useImperativeHandle = useImperativeHandle;\n        exports.useInsertionEffect = useInsertionEffect;\n        exports.useLayoutEffect = useLayoutEffect;\n        exports.useMemo = useMemo;\n        exports.useReducer = useReducer;\n        exports.useRef = useRef;\n        exports.useState = useState;\n        exports.useSyncExternalStore = useSyncExternalStore;\n        exports.useTransition = useTransition;\n        exports.version = ReactVersion;\n        /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */ if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== \"undefined\" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === \"function\") {\n            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n        }\n    })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/react/cjs/react.development.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nif (false) {} else {\n    module.exports = __webpack_require__(/*! ./cjs/react.development.js */ \"(middleware)/./node_modules/react/cjs/react.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsS0FBeUIsRUFBYyxFQUUxQyxNQUFNO0lBQ0xDLG9JQUF5QjtBQUMzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcmVhY3QvaW5kZXguanM/MWZiMiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiJdLCJuYW1lcyI6WyJwcm9jZXNzIiwibW9kdWxlIiwiZXhwb3J0cyIsInJlcXVpcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/react/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/url-join/lib/url-join.js":
/*!***********************************************!*\
  !*** ./node_modules/url-join/lib/url-join.js ***!
  \***********************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;\n(function(name, context, definition) {\n    if ( true && module.exports) module.exports = definition();\n    else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    else {}\n})(\"urljoin\", void 0, function() {\n    function normalize(strArray) {\n        var resultArray = [];\n        if (strArray.length === 0) {\n            return \"\";\n        }\n        if (typeof strArray[0] !== \"string\") {\n            throw new TypeError(\"Url must be a string. Received \" + strArray[0]);\n        }\n        // If the first part is a plain protocol, we combine it with the next part.\n        if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n            var first = strArray.shift();\n            strArray[0] = first + strArray[0];\n        }\n        // There must be two or three slashes in the file protocol, two slashes in anything else.\n        if (strArray[0].match(/^file:\\/\\/\\//)) {\n            strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, \"$1:///\");\n        } else {\n            strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, \"$1://\");\n        }\n        for(var i = 0; i < strArray.length; i++){\n            var component = strArray[i];\n            if (typeof component !== \"string\") {\n                throw new TypeError(\"Url must be a string. Received \" + component);\n            }\n            if (component === \"\") {\n                continue;\n            }\n            if (i > 0) {\n                // Removing the starting slashes for each component but the first.\n                component = component.replace(/^[\\/]+/, \"\");\n            }\n            if (i < strArray.length - 1) {\n                // Removing the ending slashes for each component but the last.\n                component = component.replace(/[\\/]+$/, \"\");\n            } else {\n                // For the last component we will combine multiple slashes to a single one.\n                component = component.replace(/[\\/]+$/, \"/\");\n            }\n            resultArray.push(component);\n        }\n        var str = resultArray.join(\"/\");\n        // Each input component is now separated by a single slash except the possible first plain protocol part.\n        // remove trailing slash before parameters or hash\n        str = str.replace(/\\/(\\?|&|#[^!])/g, \"$1\");\n        // replace ? in parameters with &\n        var parts = str.split(\"?\");\n        str = parts.shift() + (parts.length > 0 ? \"?\" : \"\") + parts.join(\"&\");\n        return str;\n    }\n    return function() {\n        var input;\n        if (typeof arguments[0] === \"object\") {\n            input = arguments[0];\n        } else {\n            input = [].slice.call(arguments);\n        }\n        return normalize(input);\n    };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL3VybC1qb2luL2xpYi91cmwtam9pbi5qcyIsIm1hcHBpbmdzIjoiO0FBQUMsVUFBVUEsSUFBSSxFQUFFQyxPQUFPLEVBQUVDLFVBQVU7SUFDbEMsSUFBSSxLQUFrQixJQUFlQyxPQUFPQyxPQUFPLEVBQUVELE9BQU9DLE9BQU8sR0FBR0Y7U0FDakUsSUFBSSxJQUEwQyxFQUFFRyxvQ0FBT0gsVUFBVUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxrR0FBQ0E7U0FDbEVELEVBQTZCQztBQUNwQyxHQUFHLFdBQVcsUUFBTTtJQUVsQixTQUFTSyxVQUFXQyxRQUFRO1FBQzFCLElBQUlDLGNBQWMsRUFBRTtRQUNwQixJQUFJRCxTQUFTRSxNQUFNLEtBQUssR0FBRztZQUFFLE9BQU87UUFBSTtRQUV4QyxJQUFJLE9BQU9GLFFBQVEsQ0FBQyxFQUFFLEtBQUssVUFBVTtZQUNuQyxNQUFNLElBQUlHLFVBQVUsb0NBQW9DSCxRQUFRLENBQUMsRUFBRTtRQUNyRTtRQUVBLDJFQUEyRTtRQUMzRSxJQUFJQSxRQUFRLENBQUMsRUFBRSxDQUFDSSxLQUFLLENBQUMsbUJBQW1CSixTQUFTRSxNQUFNLEdBQUcsR0FBRztZQUM1RCxJQUFJRyxRQUFRTCxTQUFTTSxLQUFLO1lBQzFCTixRQUFRLENBQUMsRUFBRSxHQUFHSyxRQUFRTCxRQUFRLENBQUMsRUFBRTtRQUNuQztRQUVBLHlGQUF5RjtRQUN6RixJQUFJQSxRQUFRLENBQUMsRUFBRSxDQUFDSSxLQUFLLENBQUMsaUJBQWlCO1lBQ3JDSixRQUFRLENBQUMsRUFBRSxHQUFHQSxRQUFRLENBQUMsRUFBRSxDQUFDTyxPQUFPLENBQUMsaUJBQWlCO1FBQ3JELE9BQU87WUFDTFAsUUFBUSxDQUFDLEVBQUUsR0FBR0EsUUFBUSxDQUFDLEVBQUUsQ0FBQ08sT0FBTyxDQUFDLGlCQUFpQjtRQUNyRDtRQUVBLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJUixTQUFTRSxNQUFNLEVBQUVNLElBQUs7WUFDeEMsSUFBSUMsWUFBWVQsUUFBUSxDQUFDUSxFQUFFO1lBRTNCLElBQUksT0FBT0MsY0FBYyxVQUFVO2dCQUNqQyxNQUFNLElBQUlOLFVBQVUsb0NBQW9DTTtZQUMxRDtZQUVBLElBQUlBLGNBQWMsSUFBSTtnQkFBRTtZQUFVO1lBRWxDLElBQUlELElBQUksR0FBRztnQkFDVCxrRUFBa0U7Z0JBQ2xFQyxZQUFZQSxVQUFVRixPQUFPLENBQUMsVUFBVTtZQUMxQztZQUNBLElBQUlDLElBQUlSLFNBQVNFLE1BQU0sR0FBRyxHQUFHO2dCQUMzQiwrREFBK0Q7Z0JBQy9ETyxZQUFZQSxVQUFVRixPQUFPLENBQUMsVUFBVTtZQUMxQyxPQUFPO2dCQUNMLDJFQUEyRTtnQkFDM0VFLFlBQVlBLFVBQVVGLE9BQU8sQ0FBQyxVQUFVO1lBQzFDO1lBRUFOLFlBQVlTLElBQUksQ0FBQ0Q7UUFFbkI7UUFFQSxJQUFJRSxNQUFNVixZQUFZVyxJQUFJLENBQUM7UUFDM0IseUdBQXlHO1FBRXpHLGtEQUFrRDtRQUNsREQsTUFBTUEsSUFBSUosT0FBTyxDQUFDLG1CQUFtQjtRQUVyQyxpQ0FBaUM7UUFDakMsSUFBSU0sUUFBUUYsSUFBSUcsS0FBSyxDQUFDO1FBQ3RCSCxNQUFNRSxNQUFNUCxLQUFLLEtBQU1PLENBQUFBLE1BQU1YLE1BQU0sR0FBRyxJQUFJLE1BQUssRUFBQyxJQUFLVyxNQUFNRCxJQUFJLENBQUM7UUFFaEUsT0FBT0Q7SUFDVDtJQUVBLE9BQU87UUFDTCxJQUFJSTtRQUVKLElBQUksT0FBT0MsU0FBUyxDQUFDLEVBQUUsS0FBSyxVQUFVO1lBQ3BDRCxRQUFRQyxTQUFTLENBQUMsRUFBRTtRQUN0QixPQUFPO1lBQ0xELFFBQVEsRUFBRSxDQUFDRSxLQUFLLENBQUNDLElBQUksQ0FBQ0Y7UUFDeEI7UUFFQSxPQUFPakIsVUFBVWdCO0lBQ25CO0FBRUYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3VybC1qb2luL2xpYi91cmwtam9pbi5qcz84OTE5Il0sInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiAobmFtZSwgY29udGV4dCwgZGVmaW5pdGlvbikge1xuICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIG1vZHVsZS5leHBvcnRzID0gZGVmaW5pdGlvbigpO1xuICBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIGRlZmluZS5hbWQpIGRlZmluZShkZWZpbml0aW9uKTtcbiAgZWxzZSBjb250ZXh0W25hbWVdID0gZGVmaW5pdGlvbigpO1xufSkoJ3VybGpvaW4nLCB0aGlzLCBmdW5jdGlvbiAoKSB7XG5cbiAgZnVuY3Rpb24gbm9ybWFsaXplIChzdHJBcnJheSkge1xuICAgIHZhciByZXN1bHRBcnJheSA9IFtdO1xuICAgIGlmIChzdHJBcnJheS5sZW5ndGggPT09IDApIHsgcmV0dXJuICcnOyB9XG5cbiAgICBpZiAodHlwZW9mIHN0ckFycmF5WzBdICE9PSAnc3RyaW5nJykge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVXJsIG11c3QgYmUgYSBzdHJpbmcuIFJlY2VpdmVkICcgKyBzdHJBcnJheVswXSk7XG4gICAgfVxuXG4gICAgLy8gSWYgdGhlIGZpcnN0IHBhcnQgaXMgYSBwbGFpbiBwcm90b2NvbCwgd2UgY29tYmluZSBpdCB3aXRoIHRoZSBuZXh0IHBhcnQuXG4gICAgaWYgKHN0ckFycmF5WzBdLm1hdGNoKC9eW14vOl0rOlxcLyokLykgJiYgc3RyQXJyYXkubGVuZ3RoID4gMSkge1xuICAgICAgdmFyIGZpcnN0ID0gc3RyQXJyYXkuc2hpZnQoKTtcbiAgICAgIHN0ckFycmF5WzBdID0gZmlyc3QgKyBzdHJBcnJheVswXTtcbiAgICB9XG5cbiAgICAvLyBUaGVyZSBtdXN0IGJlIHR3byBvciB0aHJlZSBzbGFzaGVzIGluIHRoZSBmaWxlIHByb3RvY29sLCB0d28gc2xhc2hlcyBpbiBhbnl0aGluZyBlbHNlLlxuICAgIGlmIChzdHJBcnJheVswXS5tYXRjaCgvXmZpbGU6XFwvXFwvXFwvLykpIHtcbiAgICAgIHN0ckFycmF5WzBdID0gc3RyQXJyYXlbMF0ucmVwbGFjZSgvXihbXi86XSspOlxcLyovLCAnJDE6Ly8vJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0ckFycmF5WzBdID0gc3RyQXJyYXlbMF0ucmVwbGFjZSgvXihbXi86XSspOlxcLyovLCAnJDE6Ly8nKTtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN0ckFycmF5Lmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgY29tcG9uZW50ID0gc3RyQXJyYXlbaV07XG5cbiAgICAgIGlmICh0eXBlb2YgY29tcG9uZW50ICE9PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdVcmwgbXVzdCBiZSBhIHN0cmluZy4gUmVjZWl2ZWQgJyArIGNvbXBvbmVudCk7XG4gICAgICB9XG5cbiAgICAgIGlmIChjb21wb25lbnQgPT09ICcnKSB7IGNvbnRpbnVlOyB9XG5cbiAgICAgIGlmIChpID4gMCkge1xuICAgICAgICAvLyBSZW1vdmluZyB0aGUgc3RhcnRpbmcgc2xhc2hlcyBmb3IgZWFjaCBjb21wb25lbnQgYnV0IHRoZSBmaXJzdC5cbiAgICAgICAgY29tcG9uZW50ID0gY29tcG9uZW50LnJlcGxhY2UoL15bXFwvXSsvLCAnJyk7XG4gICAgICB9XG4gICAgICBpZiAoaSA8IHN0ckFycmF5Lmxlbmd0aCAtIDEpIHtcbiAgICAgICAgLy8gUmVtb3ZpbmcgdGhlIGVuZGluZyBzbGFzaGVzIGZvciBlYWNoIGNvbXBvbmVudCBidXQgdGhlIGxhc3QuXG4gICAgICAgIGNvbXBvbmVudCA9IGNvbXBvbmVudC5yZXBsYWNlKC9bXFwvXSskLywgJycpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gRm9yIHRoZSBsYXN0IGNvbXBvbmVudCB3ZSB3aWxsIGNvbWJpbmUgbXVsdGlwbGUgc2xhc2hlcyB0byBhIHNpbmdsZSBvbmUuXG4gICAgICAgIGNvbXBvbmVudCA9IGNvbXBvbmVudC5yZXBsYWNlKC9bXFwvXSskLywgJy8nKTtcbiAgICAgIH1cblxuICAgICAgcmVzdWx0QXJyYXkucHVzaChjb21wb25lbnQpO1xuXG4gICAgfVxuXG4gICAgdmFyIHN0ciA9IHJlc3VsdEFycmF5LmpvaW4oJy8nKTtcbiAgICAvLyBFYWNoIGlucHV0IGNvbXBvbmVudCBpcyBub3cgc2VwYXJhdGVkIGJ5IGEgc2luZ2xlIHNsYXNoIGV4Y2VwdCB0aGUgcG9zc2libGUgZmlyc3QgcGxhaW4gcHJvdG9jb2wgcGFydC5cblxuICAgIC8vIHJlbW92ZSB0cmFpbGluZyBzbGFzaCBiZWZvcmUgcGFyYW1ldGVycyBvciBoYXNoXG4gICAgc3RyID0gc3RyLnJlcGxhY2UoL1xcLyhcXD98JnwjW14hXSkvZywgJyQxJyk7XG5cbiAgICAvLyByZXBsYWNlID8gaW4gcGFyYW1ldGVycyB3aXRoICZcbiAgICB2YXIgcGFydHMgPSBzdHIuc3BsaXQoJz8nKTtcbiAgICBzdHIgPSBwYXJ0cy5zaGlmdCgpICsgKHBhcnRzLmxlbmd0aCA+IDAgPyAnPyc6ICcnKSArIHBhcnRzLmpvaW4oJyYnKTtcblxuICAgIHJldHVybiBzdHI7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIHZhciBpbnB1dDtcblxuICAgIGlmICh0eXBlb2YgYXJndW1lbnRzWzBdID09PSAnb2JqZWN0Jykge1xuICAgICAgaW5wdXQgPSBhcmd1bWVudHNbMF07XG4gICAgfSBlbHNlIHtcbiAgICAgIGlucHV0ID0gW10uc2xpY2UuY2FsbChhcmd1bWVudHMpO1xuICAgIH1cblxuICAgIHJldHVybiBub3JtYWxpemUoaW5wdXQpO1xuICB9O1xuXG59KTtcbiJdLCJuYW1lcyI6WyJuYW1lIiwiY29udGV4dCIsImRlZmluaXRpb24iLCJtb2R1bGUiLCJleHBvcnRzIiwiZGVmaW5lIiwiYW1kIiwibm9ybWFsaXplIiwic3RyQXJyYXkiLCJyZXN1bHRBcnJheSIsImxlbmd0aCIsIlR5cGVFcnJvciIsIm1hdGNoIiwiZmlyc3QiLCJzaGlmdCIsInJlcGxhY2UiLCJpIiwiY29tcG9uZW50IiwicHVzaCIsInN0ciIsImpvaW4iLCJwYXJ0cyIsInNwbGl0IiwiaW5wdXQiLCJhcmd1bWVudHMiLCJzbGljZSIsImNhbGwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/url-join/lib/url-join.js\n");

/***/ }),

/***/ "(middleware)/./src/middleware.js":
/*!***************************!*\
  !*** ./src/middleware.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   middleware: () => (/* binding */ middleware)\n/* harmony export */ });\n/* harmony import */ var _auth0_nextjs_auth0_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @auth0/nextjs-auth0/edge */ \"(middleware)/./node_modules/@auth0/nextjs-auth0/dist/edge.js\");\n/* harmony import */ var _auth0_nextjs_auth0_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_auth0_nextjs_auth0_edge__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(middleware)/./node_modules/next/dist/esm/server/web/exports/next-response.js\");\n\n\nasync function middleware(request) {\n    const path = request.nextUrl.pathname;\n    const id = path.replace(\"/my-mindmap/\", \"\");\n    const response = await fetch(`${\"https://k32sm5-8080.csb.app\"}/mindmaps/${id}`);\n    // console.log(response);\n    const data = await response.json();\n    let status = 0;\n    if (data?.status) {\n        status = parseInt(data.status);\n    }\n    if (status === 0) {\n        const user = await (0,_auth0_nextjs_auth0_edge__WEBPACK_IMPORTED_MODULE_0__.getSession)();\n        if (!user) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_1__[\"default\"].rewrite(new URL(\"/api/auth/login\", request.url));\n        }\n    }\n}\nconst config = {\n    matcher: [\n        \"/my-mindmap/:path*\"\n    ]\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vc3JjL21pZGRsZXdhcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBc0Q7QUFDWDtBQUVwQyxlQUFlRSxXQUFXQyxPQUFPO0lBQ3RDLE1BQU1DLE9BQU9ELFFBQVFFLE9BQU8sQ0FBQ0MsUUFBUTtJQUNyQyxNQUFNQyxLQUFLSCxLQUFLSSxPQUFPLENBQUMsZ0JBQWdCO0lBQ3hDLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxDQUFDLEVBQUVDLDZCQUEyQixDQUFDLFVBQVUsRUFBRUosR0FBRyxDQUFDO0lBQzVFLHlCQUF5QjtJQUN6QixNQUFNTyxPQUFPLE1BQU1MLFNBQVNNLElBQUk7SUFDaEMsSUFBSUMsU0FBUztJQUNiLElBQUlGLE1BQU1FLFFBQVE7UUFDaEJBLFNBQVNDLFNBQVNILEtBQUtFLE1BQU07SUFDL0I7SUFDQSxJQUFJQSxXQUFXLEdBQUc7UUFDaEIsTUFBTUUsT0FBTyxNQUFNbEIsb0VBQVVBO1FBQzdCLElBQUksQ0FBQ2tCLE1BQU07WUFDVCxPQUFPakIsa0ZBQVlBLENBQUNrQixPQUFPLENBQUMsSUFBSUMsSUFBSSxtQkFBbUJqQixRQUFRa0IsR0FBRztRQUNwRTtJQUNGO0FBQ0Y7QUFFTyxNQUFNQyxTQUFTO0lBQ3BCQyxTQUFTO1FBQUM7S0FBcUI7QUFDakMsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbWlkZGxld2FyZS5qcz9hNDlhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFNlc3Npb24gfSBmcm9tIFwiQGF1dGgwL25leHRqcy1hdXRoMC9lZGdlXCI7XHJcbmltcG9ydCB7IE5leHRSZXNwb25zZSB9IGZyb20gXCJuZXh0L3NlcnZlclwiO1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1pZGRsZXdhcmUocmVxdWVzdCkge1xyXG4gIGNvbnN0IHBhdGggPSByZXF1ZXN0Lm5leHRVcmwucGF0aG5hbWU7XHJcbiAgY29uc3QgaWQgPSBwYXRoLnJlcGxhY2UoXCIvbXktbWluZG1hcC9cIiwgXCJcIik7XHJcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUEl9L21pbmRtYXBzLyR7aWR9YCk7XHJcbiAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UpO1xyXG4gIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgbGV0IHN0YXR1cyA9IDA7XHJcbiAgaWYgKGRhdGE/LnN0YXR1cykge1xyXG4gICAgc3RhdHVzID0gcGFyc2VJbnQoZGF0YS5zdGF0dXMpO1xyXG4gIH1cclxuICBpZiAoc3RhdHVzID09PSAwKSB7XHJcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgZ2V0U2Vzc2lvbigpO1xyXG4gICAgaWYgKCF1c2VyKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UucmV3cml0ZShuZXcgVVJMKFwiL2FwaS9hdXRoL2xvZ2luXCIsIHJlcXVlc3QudXJsKSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gIG1hdGNoZXI6IFtcIi9teS1taW5kbWFwLzpwYXRoKlwiXSxcclxufTtcclxuIl0sIm5hbWVzIjpbImdldFNlc3Npb24iLCJOZXh0UmVzcG9uc2UiLCJtaWRkbGV3YXJlIiwicmVxdWVzdCIsInBhdGgiLCJuZXh0VXJsIiwicGF0aG5hbWUiLCJpZCIsInJlcGxhY2UiLCJyZXNwb25zZSIsImZldGNoIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSSIsImRhdGEiLCJqc29uIiwic3RhdHVzIiwicGFyc2VJbnQiLCJ1c2VyIiwicmV3cml0ZSIsIlVSTCIsInVybCIsImNvbmZpZyIsIm1hdGNoZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./src/middleware.js\n");

/***/ }),

/***/ "(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/next/dist/esm/client/components/async-local-storage.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncLocalStorage: () => (/* binding */ createAsyncLocalStorage)\n/* harmony export */ });\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\"Invariant: AsyncLocalStorage accessed in runtime where it is not available\");\nclass FakeAsyncLocalStorage {\n    disable() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    getStore() {\n        // This fake implementation of AsyncLocalStorage always returns `undefined`.\n        return undefined;\n    }\n    run() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    exit() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n    enterWith() {\n        throw sharedAsyncLocalStorageNotAvailableError;\n    }\n}\nconst maybeGlobalAsyncLocalStorage = globalThis.AsyncLocalStorage;\nfunction createAsyncLocalStorage() {\n    if (maybeGlobalAsyncLocalStorage) {\n        return new maybeGlobalAsyncLocalStorage();\n    }\n    return new FakeAsyncLocalStorage();\n} //# sourceMappingURL=async-local-storage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNoYXJlZCkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9hc3luYy1sb2NhbC1zdG9yYWdlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSwyQ0FBMkMsSUFBSUMsTUFBTTtBQUMzRCxNQUFNQztJQUNGQyxVQUFVO1FBQ04sTUFBTUg7SUFDVjtJQUNBSSxXQUFXO1FBQ1AsNEVBQTRFO1FBQzVFLE9BQU9DO0lBQ1g7SUFDQUMsTUFBTTtRQUNGLE1BQU1OO0lBQ1Y7SUFDQU8sT0FBTztRQUNILE1BQU1QO0lBQ1Y7SUFDQVEsWUFBWTtRQUNSLE1BQU1SO0lBQ1Y7QUFDSjtBQUNBLE1BQU1TLCtCQUErQkMsV0FBV0MsaUJBQWlCO0FBQzFELFNBQVNDO0lBQ1osSUFBSUgsOEJBQThCO1FBQzlCLE9BQU8sSUFBSUE7SUFDZjtJQUNBLE9BQU8sSUFBSVA7QUFDZixFQUVBLCtDQUErQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2VzbS9jbGllbnQvY29tcG9uZW50cy9hc3luYy1sb2NhbC1zdG9yYWdlLmpzP2I0MmYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvciA9IG5ldyBFcnJvcihcIkludmFyaWFudDogQXN5bmNMb2NhbFN0b3JhZ2UgYWNjZXNzZWQgaW4gcnVudGltZSB3aGVyZSBpdCBpcyBub3QgYXZhaWxhYmxlXCIpO1xuY2xhc3MgRmFrZUFzeW5jTG9jYWxTdG9yYWdlIHtcbiAgICBkaXNhYmxlKCkge1xuICAgICAgICB0aHJvdyBzaGFyZWRBc3luY0xvY2FsU3RvcmFnZU5vdEF2YWlsYWJsZUVycm9yO1xuICAgIH1cbiAgICBnZXRTdG9yZSgpIHtcbiAgICAgICAgLy8gVGhpcyBmYWtlIGltcGxlbWVudGF0aW9uIG9mIEFzeW5jTG9jYWxTdG9yYWdlIGFsd2F5cyByZXR1cm5zIGB1bmRlZmluZWRgLlxuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBydW4oKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxuICAgIGV4aXQoKSB7XG4gICAgICAgIHRocm93IHNoYXJlZEFzeW5jTG9jYWxTdG9yYWdlTm90QXZhaWxhYmxlRXJyb3I7XG4gICAgfVxuICAgIGVudGVyV2l0aCgpIHtcbiAgICAgICAgdGhyb3cgc2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvcjtcbiAgICB9XG59XG5jb25zdCBtYXliZUdsb2JhbEFzeW5jTG9jYWxTdG9yYWdlID0gZ2xvYmFsVGhpcy5Bc3luY0xvY2FsU3RvcmFnZTtcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSgpIHtcbiAgICBpZiAobWF5YmVHbG9iYWxBc3luY0xvY2FsU3RvcmFnZSkge1xuICAgICAgICByZXR1cm4gbmV3IG1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBGYWtlQXN5bmNMb2NhbFN0b3JhZ2UoKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXN5bmMtbG9jYWwtc3RvcmFnZS5qcy5tYXAiXSwibmFtZXMiOlsic2hhcmVkQXN5bmNMb2NhbFN0b3JhZ2VOb3RBdmFpbGFibGVFcnJvciIsIkVycm9yIiwiRmFrZUFzeW5jTG9jYWxTdG9yYWdlIiwiZGlzYWJsZSIsImdldFN0b3JlIiwidW5kZWZpbmVkIiwicnVuIiwiZXhpdCIsImVudGVyV2l0aCIsIm1heWJlR2xvYmFsQXN5bmNMb2NhbFN0b3JhZ2UiLCJnbG9iYWxUaGlzIiwiQXN5bmNMb2NhbFN0b3JhZ2UiLCJjcmVhdGVBc3luY0xvY2FsU3RvcmFnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(shared)/./node_modules/next/dist/esm/client/components/async-local-storage.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@panva/hkdf/dist/web/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@panva/hkdf/dist/web/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ hkdf),\n/* harmony export */   hkdf: () => (/* binding */ hkdf)\n/* harmony export */ });\n/* harmony import */ var _runtime_hkdf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./runtime/hkdf.js */ \"(middleware)/./node_modules/@panva/hkdf/dist/web/runtime/hkdf.js\");\n\nfunction normalizeDigest(digest) {\n    switch(digest){\n        case \"sha256\":\n        case \"sha384\":\n        case \"sha512\":\n        case \"sha1\":\n            return digest;\n        default:\n            throw new TypeError('unsupported \"digest\" value');\n    }\n}\nfunction normalizeUint8Array(input, label) {\n    if (typeof input === \"string\") return new TextEncoder().encode(input);\n    if (!(input instanceof Uint8Array)) throw new TypeError(`\"${label}\"\" must be an instance of Uint8Array or a string`);\n    return input;\n}\nfunction normalizeIkm(input) {\n    const ikm = normalizeUint8Array(input, \"ikm\");\n    if (!ikm.byteLength) throw new TypeError(`\"ikm\" must be at least one byte in length`);\n    return ikm;\n}\nfunction normalizeInfo(input) {\n    const info = normalizeUint8Array(input, \"info\");\n    if (info.byteLength > 1024) {\n        throw TypeError('\"info\" must not contain more than 1024 bytes');\n    }\n    return info;\n}\nfunction normalizeKeylen(input, digest) {\n    if (typeof input !== \"number\" || !Number.isInteger(input) || input < 1) {\n        throw new TypeError('\"keylen\" must be a positive integer');\n    }\n    const hashlen = parseInt(digest.substr(3), 10) >> 3 || 20;\n    if (input > 255 * hashlen) {\n        throw new TypeError('\"keylen\" too large');\n    }\n    return input;\n}\nasync function hkdf(digest, ikm, salt, info, keylen) {\n    return (0,_runtime_hkdf_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(normalizeDigest(digest), normalizeIkm(ikm), normalizeUint8Array(salt, \"salt\"), normalizeInfo(info), normalizeKeylen(keylen, digest));\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BwYW52YS9oa2RmL2Rpc3Qvd2ViL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1QztBQUN2QyxTQUFTQyxnQkFBZ0JDLE1BQU07SUFDM0IsT0FBUUE7UUFDSixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBT0E7UUFDWDtZQUNJLE1BQU0sSUFBSUMsVUFBVTtJQUM1QjtBQUNKO0FBQ0EsU0FBU0Msb0JBQW9CQyxLQUFLLEVBQUVDLEtBQUs7SUFDckMsSUFBSSxPQUFPRCxVQUFVLFVBQ2pCLE9BQU8sSUFBSUUsY0FBY0MsTUFBTSxDQUFDSDtJQUNwQyxJQUFJLENBQUVBLENBQUFBLGlCQUFpQkksVUFBUyxHQUM1QixNQUFNLElBQUlOLFVBQVUsQ0FBQyxDQUFDLEVBQUVHLE1BQU0sZ0RBQWdELENBQUM7SUFDbkYsT0FBT0Q7QUFDWDtBQUNBLFNBQVNLLGFBQWFMLEtBQUs7SUFDdkIsTUFBTU0sTUFBTVAsb0JBQW9CQyxPQUFPO0lBQ3ZDLElBQUksQ0FBQ00sSUFBSUMsVUFBVSxFQUNmLE1BQU0sSUFBSVQsVUFBVSxDQUFDLHlDQUF5QyxDQUFDO0lBQ25FLE9BQU9RO0FBQ1g7QUFDQSxTQUFTRSxjQUFjUixLQUFLO0lBQ3hCLE1BQU1TLE9BQU9WLG9CQUFvQkMsT0FBTztJQUN4QyxJQUFJUyxLQUFLRixVQUFVLEdBQUcsTUFBTTtRQUN4QixNQUFNVCxVQUFVO0lBQ3BCO0lBQ0EsT0FBT1c7QUFDWDtBQUNBLFNBQVNDLGdCQUFnQlYsS0FBSyxFQUFFSCxNQUFNO0lBQ2xDLElBQUksT0FBT0csVUFBVSxZQUFZLENBQUNXLE9BQU9DLFNBQVMsQ0FBQ1osVUFBVUEsUUFBUSxHQUFHO1FBQ3BFLE1BQU0sSUFBSUYsVUFBVTtJQUN4QjtJQUNBLE1BQU1lLFVBQVVDLFNBQVNqQixPQUFPa0IsTUFBTSxDQUFDLElBQUksT0FBTyxLQUFLO0lBQ3ZELElBQUlmLFFBQVEsTUFBTWEsU0FBUztRQUN2QixNQUFNLElBQUlmLFVBQVU7SUFDeEI7SUFDQSxPQUFPRTtBQUNYO0FBQ0EsZUFBZWdCLEtBQUtuQixNQUFNLEVBQUVTLEdBQUcsRUFBRVcsSUFBSSxFQUFFUixJQUFJLEVBQUVTLE1BQU07SUFDL0MsT0FBT3ZCLDREQUFNQSxDQUFDQyxnQkFBZ0JDLFNBQVNRLGFBQWFDLE1BQU1QLG9CQUFvQmtCLE1BQU0sU0FBU1QsY0FBY0MsT0FBT0MsZ0JBQWdCUSxRQUFRckI7QUFDOUk7QUFDaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BwYW52YS9oa2RmL2Rpc3Qvd2ViL2luZGV4LmpzPzBlMTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRlcml2ZSBmcm9tICcuL3J1bnRpbWUvaGtkZi5qcyc7XG5mdW5jdGlvbiBub3JtYWxpemVEaWdlc3QoZGlnZXN0KSB7XG4gICAgc3dpdGNoIChkaWdlc3QpIHtcbiAgICAgICAgY2FzZSAnc2hhMjU2JzpcbiAgICAgICAgY2FzZSAnc2hhMzg0JzpcbiAgICAgICAgY2FzZSAnc2hhNTEyJzpcbiAgICAgICAgY2FzZSAnc2hhMSc6XG4gICAgICAgICAgICByZXR1cm4gZGlnZXN0O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigndW5zdXBwb3J0ZWQgXCJkaWdlc3RcIiB2YWx1ZScpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZVVpbnQ4QXJyYXkoaW5wdXQsIGxhYmVsKSB7XG4gICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3N0cmluZycpXG4gICAgICAgIHJldHVybiBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoaW5wdXQpO1xuICAgIGlmICghKGlucHV0IGluc3RhbmNlb2YgVWludDhBcnJheSkpXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFwiJHtsYWJlbH1cIlwiIG11c3QgYmUgYW4gaW5zdGFuY2Ugb2YgVWludDhBcnJheSBvciBhIHN0cmluZ2ApO1xuICAgIHJldHVybiBpbnB1dDtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZUlrbShpbnB1dCkge1xuICAgIGNvbnN0IGlrbSA9IG5vcm1hbGl6ZVVpbnQ4QXJyYXkoaW5wdXQsICdpa20nKTtcbiAgICBpZiAoIWlrbS5ieXRlTGVuZ3RoKVxuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBcImlrbVwiIG11c3QgYmUgYXQgbGVhc3Qgb25lIGJ5dGUgaW4gbGVuZ3RoYCk7XG4gICAgcmV0dXJuIGlrbTtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZUluZm8oaW5wdXQpIHtcbiAgICBjb25zdCBpbmZvID0gbm9ybWFsaXplVWludDhBcnJheShpbnB1dCwgJ2luZm8nKTtcbiAgICBpZiAoaW5mby5ieXRlTGVuZ3RoID4gMTAyNCkge1xuICAgICAgICB0aHJvdyBUeXBlRXJyb3IoJ1wiaW5mb1wiIG11c3Qgbm90IGNvbnRhaW4gbW9yZSB0aGFuIDEwMjQgYnl0ZXMnKTtcbiAgICB9XG4gICAgcmV0dXJuIGluZm87XG59XG5mdW5jdGlvbiBub3JtYWxpemVLZXlsZW4oaW5wdXQsIGRpZ2VzdCkge1xuICAgIGlmICh0eXBlb2YgaW5wdXQgIT09ICdudW1iZXInIHx8ICFOdW1iZXIuaXNJbnRlZ2VyKGlucHV0KSB8fCBpbnB1dCA8IDEpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJrZXlsZW5cIiBtdXN0IGJlIGEgcG9zaXRpdmUgaW50ZWdlcicpO1xuICAgIH1cbiAgICBjb25zdCBoYXNobGVuID0gcGFyc2VJbnQoZGlnZXN0LnN1YnN0cigzKSwgMTApID4+IDMgfHwgMjA7XG4gICAgaWYgKGlucHV0ID4gMjU1ICogaGFzaGxlbikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImtleWxlblwiIHRvbyBsYXJnZScpO1xuICAgIH1cbiAgICByZXR1cm4gaW5wdXQ7XG59XG5hc3luYyBmdW5jdGlvbiBoa2RmKGRpZ2VzdCwgaWttLCBzYWx0LCBpbmZvLCBrZXlsZW4pIHtcbiAgICByZXR1cm4gZGVyaXZlKG5vcm1hbGl6ZURpZ2VzdChkaWdlc3QpLCBub3JtYWxpemVJa20oaWttKSwgbm9ybWFsaXplVWludDhBcnJheShzYWx0LCAnc2FsdCcpLCBub3JtYWxpemVJbmZvKGluZm8pLCBub3JtYWxpemVLZXlsZW4oa2V5bGVuLCBkaWdlc3QpKTtcbn1cbmV4cG9ydCB7IGhrZGYsIGhrZGYgYXMgZGVmYXVsdCB9O1xuIl0sIm5hbWVzIjpbImRlcml2ZSIsIm5vcm1hbGl6ZURpZ2VzdCIsImRpZ2VzdCIsIlR5cGVFcnJvciIsIm5vcm1hbGl6ZVVpbnQ4QXJyYXkiLCJpbnB1dCIsImxhYmVsIiwiVGV4dEVuY29kZXIiLCJlbmNvZGUiLCJVaW50OEFycmF5Iiwibm9ybWFsaXplSWttIiwiaWttIiwiYnl0ZUxlbmd0aCIsIm5vcm1hbGl6ZUluZm8iLCJpbmZvIiwibm9ybWFsaXplS2V5bGVuIiwiTnVtYmVyIiwiaXNJbnRlZ2VyIiwiaGFzaGxlbiIsInBhcnNlSW50Iiwic3Vic3RyIiwiaGtkZiIsInNhbHQiLCJrZXlsZW4iLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@panva/hkdf/dist/web/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/@panva/hkdf/dist/web/runtime/hkdf.js":
/*!***********************************************************!*\
  !*** ./node_modules/@panva/hkdf/dist/web/runtime/hkdf.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst getGlobal = ()=>{\n    if (typeof globalThis !== \"undefined\") return globalThis;\n    if (typeof self !== \"undefined\") return self;\n    if (false) {}\n    throw new Error(\"unable to locate global object\");\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (async (digest, ikm, salt, info, keylen)=>{\n    const { crypto: { subtle } } = getGlobal();\n    return new Uint8Array(await subtle.deriveBits({\n        name: \"HKDF\",\n        hash: `SHA-${digest.substr(3)}`,\n        salt,\n        info\n    }, await subtle.importKey(\"raw\", ikm, \"HKDF\", false, [\n        \"deriveBits\"\n    ]), keylen << 3));\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL0BwYW52YS9oa2RmL2Rpc3Qvd2ViL3J1bnRpbWUvaGtkZi5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsWUFBWTtJQUNkLElBQUksT0FBT0MsZUFBZSxhQUN0QixPQUFPQTtJQUNYLElBQUksT0FBT0MsU0FBUyxhQUNoQixPQUFPQTtJQUNYLElBQUksS0FBa0IsRUFDbEIsRUFBY0M7SUFDbEIsTUFBTSxJQUFJQyxNQUFNO0FBQ3BCO0FBQ0EsaUVBQWUsT0FBT0MsUUFBUUMsS0FBS0MsTUFBTUMsTUFBTUM7SUFDM0MsTUFBTSxFQUFFQyxRQUFRLEVBQUVDLE1BQU0sRUFBRSxFQUFHLEdBQUdYO0lBQ2hDLE9BQU8sSUFBSVksV0FBVyxNQUFNRCxPQUFPRSxVQUFVLENBQUM7UUFDMUNDLE1BQU07UUFDTkMsTUFBTSxDQUFDLElBQUksRUFBRVYsT0FBT1csTUFBTSxDQUFDLEdBQUcsQ0FBQztRQUMvQlQ7UUFDQUM7SUFDSixHQUFHLE1BQU1HLE9BQU9NLFNBQVMsQ0FBQyxPQUFPWCxLQUFLLFFBQVEsT0FBTztRQUFDO0tBQWEsR0FBR0csVUFBVTtBQUNwRixHQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AcGFudmEvaGtkZi9kaXN0L3dlYi9ydW50aW1lL2hrZGYuanM/Yjg1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBnZXRHbG9iYWwgPSAoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBnbG9iYWxUaGlzICE9PSAndW5kZWZpbmVkJylcbiAgICAgICAgcmV0dXJuIGdsb2JhbFRoaXM7XG4gICAgaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJylcbiAgICAgICAgcmV0dXJuIHNlbGY7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKVxuICAgICAgICByZXR1cm4gd2luZG93O1xuICAgIHRocm93IG5ldyBFcnJvcigndW5hYmxlIHRvIGxvY2F0ZSBnbG9iYWwgb2JqZWN0Jyk7XG59O1xuZXhwb3J0IGRlZmF1bHQgYXN5bmMgKGRpZ2VzdCwgaWttLCBzYWx0LCBpbmZvLCBrZXlsZW4pID0+IHtcbiAgICBjb25zdCB7IGNyeXB0bzogeyBzdWJ0bGUgfSwgfSA9IGdldEdsb2JhbCgpO1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShhd2FpdCBzdWJ0bGUuZGVyaXZlQml0cyh7XG4gICAgICAgIG5hbWU6ICdIS0RGJyxcbiAgICAgICAgaGFzaDogYFNIQS0ke2RpZ2VzdC5zdWJzdHIoMyl9YCxcbiAgICAgICAgc2FsdCxcbiAgICAgICAgaW5mbyxcbiAgICB9LCBhd2FpdCBzdWJ0bGUuaW1wb3J0S2V5KCdyYXcnLCBpa20sICdIS0RGJywgZmFsc2UsIFsnZGVyaXZlQml0cyddKSwga2V5bGVuIDw8IDMpKTtcbn07XG4iXSwibmFtZXMiOlsiZ2V0R2xvYmFsIiwiZ2xvYmFsVGhpcyIsInNlbGYiLCJ3aW5kb3ciLCJFcnJvciIsImRpZ2VzdCIsImlrbSIsInNhbHQiLCJpbmZvIiwia2V5bGVuIiwiY3J5cHRvIiwic3VidGxlIiwiVWludDhBcnJheSIsImRlcml2ZUJpdHMiLCJuYW1lIiwiaGFzaCIsInN1YnN0ciIsImltcG9ydEtleSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/@panva/hkdf/dist/web/runtime/hkdf.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/index.js":
/*!*************************************************!*\
  !*** ./node_modules/jose/dist/browser/index.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompactEncrypt: () => (/* reexport safe */ _jwe_compact_encrypt_js__WEBPACK_IMPORTED_MODULE_9__.CompactEncrypt),\n/* harmony export */   CompactSign: () => (/* reexport safe */ _jws_compact_sign_js__WEBPACK_IMPORTED_MODULE_11__.CompactSign),\n/* harmony export */   EmbeddedJWK: () => (/* reexport safe */ _jwk_embedded_js__WEBPACK_IMPORTED_MODULE_17__.EmbeddedJWK),\n/* harmony export */   EncryptJWT: () => (/* reexport safe */ _jwt_encrypt_js__WEBPACK_IMPORTED_MODULE_15__.EncryptJWT),\n/* harmony export */   FlattenedEncrypt: () => (/* reexport safe */ _jwe_flattened_encrypt_js__WEBPACK_IMPORTED_MODULE_10__.FlattenedEncrypt),\n/* harmony export */   FlattenedSign: () => (/* reexport safe */ _jws_flattened_sign_js__WEBPACK_IMPORTED_MODULE_12__.FlattenedSign),\n/* harmony export */   GeneralEncrypt: () => (/* reexport safe */ _jwe_general_encrypt_js__WEBPACK_IMPORTED_MODULE_3__.GeneralEncrypt),\n/* harmony export */   GeneralSign: () => (/* reexport safe */ _jws_general_sign_js__WEBPACK_IMPORTED_MODULE_13__.GeneralSign),\n/* harmony export */   SignJWT: () => (/* reexport safe */ _jwt_sign_js__WEBPACK_IMPORTED_MODULE_14__.SignJWT),\n/* harmony export */   UnsecuredJWT: () => (/* reexport safe */ _jwt_unsecured_js__WEBPACK_IMPORTED_MODULE_20__.UnsecuredJWT),\n/* harmony export */   base64url: () => (/* reexport module object */ _util_base64url_js__WEBPACK_IMPORTED_MODULE_28__),\n/* harmony export */   calculateJwkThumbprint: () => (/* reexport safe */ _jwk_thumbprint_js__WEBPACK_IMPORTED_MODULE_16__.calculateJwkThumbprint),\n/* harmony export */   calculateJwkThumbprintUri: () => (/* reexport safe */ _jwk_thumbprint_js__WEBPACK_IMPORTED_MODULE_16__.calculateJwkThumbprintUri),\n/* harmony export */   compactDecrypt: () => (/* reexport safe */ _jwe_compact_decrypt_js__WEBPACK_IMPORTED_MODULE_0__.compactDecrypt),\n/* harmony export */   compactVerify: () => (/* reexport safe */ _jws_compact_verify_js__WEBPACK_IMPORTED_MODULE_4__.compactVerify),\n/* harmony export */   createLocalJWKSet: () => (/* reexport safe */ _jwks_local_js__WEBPACK_IMPORTED_MODULE_18__.createLocalJWKSet),\n/* harmony export */   createRemoteJWKSet: () => (/* reexport safe */ _jwks_remote_js__WEBPACK_IMPORTED_MODULE_19__.createRemoteJWKSet),\n/* harmony export */   cryptoRuntime: () => (/* reexport safe */ _util_runtime_js__WEBPACK_IMPORTED_MODULE_29__[\"default\"]),\n/* harmony export */   decodeJwt: () => (/* reexport safe */ _util_decode_jwt_js__WEBPACK_IMPORTED_MODULE_24__.decodeJwt),\n/* harmony export */   decodeProtectedHeader: () => (/* reexport safe */ _util_decode_protected_header_js__WEBPACK_IMPORTED_MODULE_23__.decodeProtectedHeader),\n/* harmony export */   errors: () => (/* reexport module object */ _util_errors_js__WEBPACK_IMPORTED_MODULE_25__),\n/* harmony export */   exportJWK: () => (/* reexport safe */ _key_export_js__WEBPACK_IMPORTED_MODULE_21__.exportJWK),\n/* harmony export */   exportPKCS8: () => (/* reexport safe */ _key_export_js__WEBPACK_IMPORTED_MODULE_21__.exportPKCS8),\n/* harmony export */   exportSPKI: () => (/* reexport safe */ _key_export_js__WEBPACK_IMPORTED_MODULE_21__.exportSPKI),\n/* harmony export */   flattenedDecrypt: () => (/* reexport safe */ _jwe_flattened_decrypt_js__WEBPACK_IMPORTED_MODULE_1__.flattenedDecrypt),\n/* harmony export */   flattenedVerify: () => (/* reexport safe */ _jws_flattened_verify_js__WEBPACK_IMPORTED_MODULE_5__.flattenedVerify),\n/* harmony export */   generalDecrypt: () => (/* reexport safe */ _jwe_general_decrypt_js__WEBPACK_IMPORTED_MODULE_2__.generalDecrypt),\n/* harmony export */   generalVerify: () => (/* reexport safe */ _jws_general_verify_js__WEBPACK_IMPORTED_MODULE_6__.generalVerify),\n/* harmony export */   generateKeyPair: () => (/* reexport safe */ _key_generate_key_pair_js__WEBPACK_IMPORTED_MODULE_26__.generateKeyPair),\n/* harmony export */   generateSecret: () => (/* reexport safe */ _key_generate_secret_js__WEBPACK_IMPORTED_MODULE_27__.generateSecret),\n/* harmony export */   importJWK: () => (/* reexport safe */ _key_import_js__WEBPACK_IMPORTED_MODULE_22__.importJWK),\n/* harmony export */   importPKCS8: () => (/* reexport safe */ _key_import_js__WEBPACK_IMPORTED_MODULE_22__.importPKCS8),\n/* harmony export */   importSPKI: () => (/* reexport safe */ _key_import_js__WEBPACK_IMPORTED_MODULE_22__.importSPKI),\n/* harmony export */   importX509: () => (/* reexport safe */ _key_import_js__WEBPACK_IMPORTED_MODULE_22__.importX509),\n/* harmony export */   jwtDecrypt: () => (/* reexport safe */ _jwt_decrypt_js__WEBPACK_IMPORTED_MODULE_8__.jwtDecrypt),\n/* harmony export */   jwtVerify: () => (/* reexport safe */ _jwt_verify_js__WEBPACK_IMPORTED_MODULE_7__.jwtVerify)\n/* harmony export */ });\n/* harmony import */ var _jwe_compact_decrypt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jwe/compact/decrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/compact/decrypt.js\");\n/* harmony import */ var _jwe_flattened_decrypt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./jwe/flattened/decrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/flattened/decrypt.js\");\n/* harmony import */ var _jwe_general_decrypt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jwe/general/decrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/general/decrypt.js\");\n/* harmony import */ var _jwe_general_encrypt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./jwe/general/encrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/general/encrypt.js\");\n/* harmony import */ var _jws_compact_verify_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jws/compact/verify.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/compact/verify.js\");\n/* harmony import */ var _jws_flattened_verify_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./jws/flattened/verify.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/flattened/verify.js\");\n/* harmony import */ var _jws_general_verify_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./jws/general/verify.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/general/verify.js\");\n/* harmony import */ var _jwt_verify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./jwt/verify.js */ \"(middleware)/./node_modules/jose/dist/browser/jwt/verify.js\");\n/* harmony import */ var _jwt_decrypt_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./jwt/decrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwt/decrypt.js\");\n/* harmony import */ var _jwe_compact_encrypt_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./jwe/compact/encrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/compact/encrypt.js\");\n/* harmony import */ var _jwe_flattened_encrypt_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./jwe/flattened/encrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/flattened/encrypt.js\");\n/* harmony import */ var _jws_compact_sign_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./jws/compact/sign.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/compact/sign.js\");\n/* harmony import */ var _jws_flattened_sign_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./jws/flattened/sign.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/flattened/sign.js\");\n/* harmony import */ var _jws_general_sign_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./jws/general/sign.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/general/sign.js\");\n/* harmony import */ var _jwt_sign_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./jwt/sign.js */ \"(middleware)/./node_modules/jose/dist/browser/jwt/sign.js\");\n/* harmony import */ var _jwt_encrypt_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./jwt/encrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwt/encrypt.js\");\n/* harmony import */ var _jwk_thumbprint_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./jwk/thumbprint.js */ \"(middleware)/./node_modules/jose/dist/browser/jwk/thumbprint.js\");\n/* harmony import */ var _jwk_embedded_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./jwk/embedded.js */ \"(middleware)/./node_modules/jose/dist/browser/jwk/embedded.js\");\n/* harmony import */ var _jwks_local_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./jwks/local.js */ \"(middleware)/./node_modules/jose/dist/browser/jwks/local.js\");\n/* harmony import */ var _jwks_remote_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./jwks/remote.js */ \"(middleware)/./node_modules/jose/dist/browser/jwks/remote.js\");\n/* harmony import */ var _jwt_unsecured_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./jwt/unsecured.js */ \"(middleware)/./node_modules/jose/dist/browser/jwt/unsecured.js\");\n/* harmony import */ var _key_export_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./key/export.js */ \"(middleware)/./node_modules/jose/dist/browser/key/export.js\");\n/* harmony import */ var _key_import_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./key/import.js */ \"(middleware)/./node_modules/jose/dist/browser/key/import.js\");\n/* harmony import */ var _util_decode_protected_header_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./util/decode_protected_header.js */ \"(middleware)/./node_modules/jose/dist/browser/util/decode_protected_header.js\");\n/* harmony import */ var _util_decode_jwt_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./util/decode_jwt.js */ \"(middleware)/./node_modules/jose/dist/browser/util/decode_jwt.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _key_generate_key_pair_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./key/generate_key_pair.js */ \"(middleware)/./node_modules/jose/dist/browser/key/generate_key_pair.js\");\n/* harmony import */ var _key_generate_secret_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./key/generate_secret.js */ \"(middleware)/./node_modules/jose/dist/browser/key/generate_secret.js\");\n/* harmony import */ var _util_base64url_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./util/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/util/base64url.js\");\n/* harmony import */ var _util_runtime_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./util/runtime.js */ \"(middleware)/./node_modules/jose/dist/browser/util/runtime.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUEwRDtBQUNJO0FBQ0o7QUFDQTtBQUNGO0FBQ0k7QUFDSjtBQUNaO0FBQ0U7QUFDWTtBQUNJO0FBQ1Y7QUFDSTtBQUNKO0FBQ1o7QUFDTTtBQUMwQztBQUN4QztBQUNJO0FBQ0U7QUFDSjtBQUNtQjtBQUNZO0FBQ1A7QUFDekI7QUFDSjtBQUNmO0FBQytCO0FBQ0g7QUFDUDtBQUNmO0FBQ3lCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9pbmRleC5qcz83YzEzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGNvbXBhY3REZWNyeXB0IH0gZnJvbSAnLi9qd2UvY29tcGFjdC9kZWNyeXB0LmpzJztcbmV4cG9ydCB7IGZsYXR0ZW5lZERlY3J5cHQgfSBmcm9tICcuL2p3ZS9mbGF0dGVuZWQvZGVjcnlwdC5qcyc7XG5leHBvcnQgeyBnZW5lcmFsRGVjcnlwdCB9IGZyb20gJy4vandlL2dlbmVyYWwvZGVjcnlwdC5qcyc7XG5leHBvcnQgeyBHZW5lcmFsRW5jcnlwdCB9IGZyb20gJy4vandlL2dlbmVyYWwvZW5jcnlwdC5qcyc7XG5leHBvcnQgeyBjb21wYWN0VmVyaWZ5IH0gZnJvbSAnLi9qd3MvY29tcGFjdC92ZXJpZnkuanMnO1xuZXhwb3J0IHsgZmxhdHRlbmVkVmVyaWZ5IH0gZnJvbSAnLi9qd3MvZmxhdHRlbmVkL3ZlcmlmeS5qcyc7XG5leHBvcnQgeyBnZW5lcmFsVmVyaWZ5IH0gZnJvbSAnLi9qd3MvZ2VuZXJhbC92ZXJpZnkuanMnO1xuZXhwb3J0IHsgand0VmVyaWZ5IH0gZnJvbSAnLi9qd3QvdmVyaWZ5LmpzJztcbmV4cG9ydCB7IGp3dERlY3J5cHQgfSBmcm9tICcuL2p3dC9kZWNyeXB0LmpzJztcbmV4cG9ydCB7IENvbXBhY3RFbmNyeXB0IH0gZnJvbSAnLi9qd2UvY29tcGFjdC9lbmNyeXB0LmpzJztcbmV4cG9ydCB7IEZsYXR0ZW5lZEVuY3J5cHQgfSBmcm9tICcuL2p3ZS9mbGF0dGVuZWQvZW5jcnlwdC5qcyc7XG5leHBvcnQgeyBDb21wYWN0U2lnbiB9IGZyb20gJy4vandzL2NvbXBhY3Qvc2lnbi5qcyc7XG5leHBvcnQgeyBGbGF0dGVuZWRTaWduIH0gZnJvbSAnLi9qd3MvZmxhdHRlbmVkL3NpZ24uanMnO1xuZXhwb3J0IHsgR2VuZXJhbFNpZ24gfSBmcm9tICcuL2p3cy9nZW5lcmFsL3NpZ24uanMnO1xuZXhwb3J0IHsgU2lnbkpXVCB9IGZyb20gJy4vand0L3NpZ24uanMnO1xuZXhwb3J0IHsgRW5jcnlwdEpXVCB9IGZyb20gJy4vand0L2VuY3J5cHQuanMnO1xuZXhwb3J0IHsgY2FsY3VsYXRlSndrVGh1bWJwcmludCwgY2FsY3VsYXRlSndrVGh1bWJwcmludFVyaSB9IGZyb20gJy4vandrL3RodW1icHJpbnQuanMnO1xuZXhwb3J0IHsgRW1iZWRkZWRKV0sgfSBmcm9tICcuL2p3ay9lbWJlZGRlZC5qcyc7XG5leHBvcnQgeyBjcmVhdGVMb2NhbEpXS1NldCB9IGZyb20gJy4vandrcy9sb2NhbC5qcyc7XG5leHBvcnQgeyBjcmVhdGVSZW1vdGVKV0tTZXQgfSBmcm9tICcuL2p3a3MvcmVtb3RlLmpzJztcbmV4cG9ydCB7IFVuc2VjdXJlZEpXVCB9IGZyb20gJy4vand0L3Vuc2VjdXJlZC5qcyc7XG5leHBvcnQgeyBleHBvcnRQS0NTOCwgZXhwb3J0U1BLSSwgZXhwb3J0SldLIH0gZnJvbSAnLi9rZXkvZXhwb3J0LmpzJztcbmV4cG9ydCB7IGltcG9ydFNQS0ksIGltcG9ydFBLQ1M4LCBpbXBvcnRYNTA5LCBpbXBvcnRKV0sgfSBmcm9tICcuL2tleS9pbXBvcnQuanMnO1xuZXhwb3J0IHsgZGVjb2RlUHJvdGVjdGVkSGVhZGVyIH0gZnJvbSAnLi91dGlsL2RlY29kZV9wcm90ZWN0ZWRfaGVhZGVyLmpzJztcbmV4cG9ydCB7IGRlY29kZUp3dCB9IGZyb20gJy4vdXRpbC9kZWNvZGVfand0LmpzJztcbmltcG9ydCAqIGFzIGVycm9yc18xIGZyb20gJy4vdXRpbC9lcnJvcnMuanMnO1xuZXhwb3J0IHsgZXJyb3JzXzEgYXMgZXJyb3JzIH07XG5leHBvcnQgeyBnZW5lcmF0ZUtleVBhaXIgfSBmcm9tICcuL2tleS9nZW5lcmF0ZV9rZXlfcGFpci5qcyc7XG5leHBvcnQgeyBnZW5lcmF0ZVNlY3JldCB9IGZyb20gJy4va2V5L2dlbmVyYXRlX3NlY3JldC5qcyc7XG5pbXBvcnQgKiBhcyBiYXNlNjR1cmxfMSBmcm9tICcuL3V0aWwvYmFzZTY0dXJsLmpzJztcbmV4cG9ydCB7IGJhc2U2NHVybF8xIGFzIGJhc2U2NHVybCB9O1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBjcnlwdG9SdW50aW1lIH0gZnJvbSAnLi91dGlsL3J1bnRpbWUuanMnO1xuIl0sIm5hbWVzIjpbImNvbXBhY3REZWNyeXB0IiwiZmxhdHRlbmVkRGVjcnlwdCIsImdlbmVyYWxEZWNyeXB0IiwiR2VuZXJhbEVuY3J5cHQiLCJjb21wYWN0VmVyaWZ5IiwiZmxhdHRlbmVkVmVyaWZ5IiwiZ2VuZXJhbFZlcmlmeSIsImp3dFZlcmlmeSIsImp3dERlY3J5cHQiLCJDb21wYWN0RW5jcnlwdCIsIkZsYXR0ZW5lZEVuY3J5cHQiLCJDb21wYWN0U2lnbiIsIkZsYXR0ZW5lZFNpZ24iLCJHZW5lcmFsU2lnbiIsIlNpZ25KV1QiLCJFbmNyeXB0SldUIiwiY2FsY3VsYXRlSndrVGh1bWJwcmludCIsImNhbGN1bGF0ZUp3a1RodW1icHJpbnRVcmkiLCJFbWJlZGRlZEpXSyIsImNyZWF0ZUxvY2FsSldLU2V0IiwiY3JlYXRlUmVtb3RlSldLU2V0IiwiVW5zZWN1cmVkSldUIiwiZXhwb3J0UEtDUzgiLCJleHBvcnRTUEtJIiwiZXhwb3J0SldLIiwiaW1wb3J0U1BLSSIsImltcG9ydFBLQ1M4IiwiaW1wb3J0WDUwOSIsImltcG9ydEpXSyIsImRlY29kZVByb3RlY3RlZEhlYWRlciIsImRlY29kZUp3dCIsImVycm9yc18xIiwiZXJyb3JzIiwiZ2VuZXJhdGVLZXlQYWlyIiwiZ2VuZXJhdGVTZWNyZXQiLCJiYXNlNjR1cmxfMSIsImJhc2U2NHVybCIsImRlZmF1bHQiLCJjcnlwdG9SdW50aW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwe/compact/decrypt.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwe/compact/decrypt.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compactDecrypt: () => (/* binding */ compactDecrypt)\n/* harmony export */ });\n/* harmony import */ var _flattened_decrypt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flattened/decrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/flattened/decrypt.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n\n\n\nasync function compactDecrypt(jwe, key, options) {\n    if (jwe instanceof Uint8Array) {\n        jwe = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_2__.decoder.decode(jwe);\n    }\n    if (typeof jwe !== \"string\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid(\"Compact JWE must be a string or Uint8Array\");\n    }\n    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length } = jwe.split(\".\");\n    if (length !== 5) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid(\"Invalid Compact JWE\");\n    }\n    const decrypted = await (0,_flattened_decrypt_js__WEBPACK_IMPORTED_MODULE_0__.flattenedDecrypt)({\n        ciphertext,\n        iv: iv || undefined,\n        protected: protectedHeader || undefined,\n        tag: tag || undefined,\n        encrypted_key: encryptedKey || undefined\n    }, key, options);\n    const result = {\n        plaintext: decrypted.plaintext,\n        protectedHeader: decrypted.protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: decrypted.key\n        };\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3ZS9jb21wYWN0L2RlY3J5cHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyRDtBQUNUO0FBQ0U7QUFDN0MsZUFBZUcsZUFBZUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU87SUFDbEQsSUFBSUYsZUFBZUcsWUFBWTtRQUMzQkgsTUFBTUYseURBQU9BLENBQUNNLE1BQU0sQ0FBQ0o7SUFDekI7SUFDQSxJQUFJLE9BQU9BLFFBQVEsVUFBVTtRQUN6QixNQUFNLElBQUlILHVEQUFVQSxDQUFDO0lBQ3pCO0lBQ0EsTUFBTSxFQUFFLEdBQUdRLGVBQWUsRUFBRSxHQUFHQyxZQUFZLEVBQUUsR0FBR0MsRUFBRSxFQUFFLEdBQUdDLFVBQVUsRUFBRSxHQUFHQyxHQUFHLEVBQUVDLE1BQU0sRUFBRyxHQUFHVixJQUFJVyxLQUFLLENBQUM7SUFDakcsSUFBSUQsV0FBVyxHQUFHO1FBQ2QsTUFBTSxJQUFJYix1REFBVUEsQ0FBQztJQUN6QjtJQUNBLE1BQU1lLFlBQVksTUFBTWhCLHVFQUFnQkEsQ0FBQztRQUNyQ1k7UUFDQUQsSUFBS0EsTUFBTU07UUFDWEMsV0FBV1QsbUJBQW1CUTtRQUM5QkosS0FBTUEsT0FBT0k7UUFDYkUsZUFBZVQsZ0JBQWdCTztJQUNuQyxHQUFHWixLQUFLQztJQUNSLE1BQU1jLFNBQVM7UUFBRUMsV0FBV0wsVUFBVUssU0FBUztRQUFFWixpQkFBaUJPLFVBQVVQLGVBQWU7SUFBQztJQUM1RixJQUFJLE9BQU9KLFFBQVEsWUFBWTtRQUMzQixPQUFPO1lBQUUsR0FBR2UsTUFBTTtZQUFFZixLQUFLVyxVQUFVWCxHQUFHO1FBQUM7SUFDM0M7SUFDQSxPQUFPZTtBQUNYIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9qd2UvY29tcGFjdC9kZWNyeXB0LmpzPzA4OTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZmxhdHRlbmVkRGVjcnlwdCB9IGZyb20gJy4uL2ZsYXR0ZW5lZC9kZWNyeXB0LmpzJztcbmltcG9ydCB7IEpXRUludmFsaWQgfSBmcm9tICcuLi8uLi91dGlsL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBkZWNvZGVyIH0gZnJvbSAnLi4vLi4vbGliL2J1ZmZlcl91dGlscy5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29tcGFjdERlY3J5cHQoandlLCBrZXksIG9wdGlvbnMpIHtcbiAgICBpZiAoandlIGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICBqd2UgPSBkZWNvZGVyLmRlY29kZShqd2UpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGp3ZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEpXRUludmFsaWQoJ0NvbXBhY3QgSldFIG11c3QgYmUgYSBzdHJpbmcgb3IgVWludDhBcnJheScpO1xuICAgIH1cbiAgICBjb25zdCB7IDA6IHByb3RlY3RlZEhlYWRlciwgMTogZW5jcnlwdGVkS2V5LCAyOiBpdiwgMzogY2lwaGVydGV4dCwgNDogdGFnLCBsZW5ndGgsIH0gPSBqd2Uuc3BsaXQoJy4nKTtcbiAgICBpZiAobGVuZ3RoICE9PSA1KSB7XG4gICAgICAgIHRocm93IG5ldyBKV0VJbnZhbGlkKCdJbnZhbGlkIENvbXBhY3QgSldFJyk7XG4gICAgfVxuICAgIGNvbnN0IGRlY3J5cHRlZCA9IGF3YWl0IGZsYXR0ZW5lZERlY3J5cHQoe1xuICAgICAgICBjaXBoZXJ0ZXh0LFxuICAgICAgICBpdjogKGl2IHx8IHVuZGVmaW5lZCksXG4gICAgICAgIHByb3RlY3RlZDogcHJvdGVjdGVkSGVhZGVyIHx8IHVuZGVmaW5lZCxcbiAgICAgICAgdGFnOiAodGFnIHx8IHVuZGVmaW5lZCksXG4gICAgICAgIGVuY3J5cHRlZF9rZXk6IGVuY3J5cHRlZEtleSB8fCB1bmRlZmluZWQsXG4gICAgfSwga2V5LCBvcHRpb25zKTtcbiAgICBjb25zdCByZXN1bHQgPSB7IHBsYWludGV4dDogZGVjcnlwdGVkLnBsYWludGV4dCwgcHJvdGVjdGVkSGVhZGVyOiBkZWNyeXB0ZWQucHJvdGVjdGVkSGVhZGVyIH07XG4gICAgaWYgKHR5cGVvZiBrZXkgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIHsgLi4ucmVzdWx0LCBrZXk6IGRlY3J5cHRlZC5rZXkgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6WyJmbGF0dGVuZWREZWNyeXB0IiwiSldFSW52YWxpZCIsImRlY29kZXIiLCJjb21wYWN0RGVjcnlwdCIsImp3ZSIsImtleSIsIm9wdGlvbnMiLCJVaW50OEFycmF5IiwiZGVjb2RlIiwicHJvdGVjdGVkSGVhZGVyIiwiZW5jcnlwdGVkS2V5IiwiaXYiLCJjaXBoZXJ0ZXh0IiwidGFnIiwibGVuZ3RoIiwic3BsaXQiLCJkZWNyeXB0ZWQiLCJ1bmRlZmluZWQiLCJwcm90ZWN0ZWQiLCJlbmNyeXB0ZWRfa2V5IiwicmVzdWx0IiwicGxhaW50ZXh0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwe/compact/decrypt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwe/compact/encrypt.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwe/compact/encrypt.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompactEncrypt: () => (/* binding */ CompactEncrypt)\n/* harmony export */ });\n/* harmony import */ var _flattened_encrypt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flattened/encrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/flattened/encrypt.js\");\n\nclass CompactEncrypt {\n    constructor(plaintext){\n        this._flattened = new _flattened_encrypt_js__WEBPACK_IMPORTED_MODULE_0__.FlattenedEncrypt(plaintext);\n    }\n    setContentEncryptionKey(cek) {\n        this._flattened.setContentEncryptionKey(cek);\n        return this;\n    }\n    setInitializationVector(iv) {\n        this._flattened.setInitializationVector(iv);\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        this._flattened.setKeyManagementParameters(parameters);\n        return this;\n    }\n    async encrypt(key, options) {\n        const jwe = await this._flattened.encrypt(key, options);\n        return [\n            jwe.protected,\n            jwe.encrypted_key,\n            jwe.iv,\n            jwe.ciphertext,\n            jwe.tag\n        ].join(\".\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3ZS9jb21wYWN0L2VuY3J5cHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkQ7QUFDcEQsTUFBTUM7SUFDVEMsWUFBWUMsU0FBUyxDQUFFO1FBQ25CLElBQUksQ0FBQ0MsVUFBVSxHQUFHLElBQUlKLG1FQUFnQkEsQ0FBQ0c7SUFDM0M7SUFDQUUsd0JBQXdCQyxHQUFHLEVBQUU7UUFDekIsSUFBSSxDQUFDRixVQUFVLENBQUNDLHVCQUF1QixDQUFDQztRQUN4QyxPQUFPLElBQUk7SUFDZjtJQUNBQyx3QkFBd0JDLEVBQUUsRUFBRTtRQUN4QixJQUFJLENBQUNKLFVBQVUsQ0FBQ0csdUJBQXVCLENBQUNDO1FBQ3hDLE9BQU8sSUFBSTtJQUNmO0lBQ0FDLG1CQUFtQkMsZUFBZSxFQUFFO1FBQ2hDLElBQUksQ0FBQ04sVUFBVSxDQUFDSyxrQkFBa0IsQ0FBQ0M7UUFDbkMsT0FBTyxJQUFJO0lBQ2Y7SUFDQUMsMkJBQTJCQyxVQUFVLEVBQUU7UUFDbkMsSUFBSSxDQUFDUixVQUFVLENBQUNPLDBCQUEwQixDQUFDQztRQUMzQyxPQUFPLElBQUk7SUFDZjtJQUNBLE1BQU1DLFFBQVFDLEdBQUcsRUFBRUMsT0FBTyxFQUFFO1FBQ3hCLE1BQU1DLE1BQU0sTUFBTSxJQUFJLENBQUNaLFVBQVUsQ0FBQ1MsT0FBTyxDQUFDQyxLQUFLQztRQUMvQyxPQUFPO1lBQUNDLElBQUlDLFNBQVM7WUFBRUQsSUFBSUUsYUFBYTtZQUFFRixJQUFJUixFQUFFO1lBQUVRLElBQUlHLFVBQVU7WUFBRUgsSUFBSUksR0FBRztTQUFDLENBQUNDLElBQUksQ0FBQztJQUNwRjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9qd2UvY29tcGFjdC9lbmNyeXB0LmpzPzVkNzIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmxhdHRlbmVkRW5jcnlwdCB9IGZyb20gJy4uL2ZsYXR0ZW5lZC9lbmNyeXB0LmpzJztcbmV4cG9ydCBjbGFzcyBDb21wYWN0RW5jcnlwdCB7XG4gICAgY29uc3RydWN0b3IocGxhaW50ZXh0KSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZCA9IG5ldyBGbGF0dGVuZWRFbmNyeXB0KHBsYWludGV4dCk7XG4gICAgfVxuICAgIHNldENvbnRlbnRFbmNyeXB0aW9uS2V5KGNlaykge1xuICAgICAgICB0aGlzLl9mbGF0dGVuZWQuc2V0Q29udGVudEVuY3J5cHRpb25LZXkoY2VrKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEluaXRpYWxpemF0aW9uVmVjdG9yKGl2KSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZC5zZXRJbml0aWFsaXphdGlvblZlY3Rvcihpdik7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgIHRoaXMuX2ZsYXR0ZW5lZC5zZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKHBhcmFtZXRlcnMpIHtcbiAgICAgICAgdGhpcy5fZmxhdHRlbmVkLnNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKHBhcmFtZXRlcnMpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgYXN5bmMgZW5jcnlwdChrZXksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgandlID0gYXdhaXQgdGhpcy5fZmxhdHRlbmVkLmVuY3J5cHQoa2V5LCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIFtqd2UucHJvdGVjdGVkLCBqd2UuZW5jcnlwdGVkX2tleSwgandlLml2LCBqd2UuY2lwaGVydGV4dCwgandlLnRhZ10uam9pbignLicpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJGbGF0dGVuZWRFbmNyeXB0IiwiQ29tcGFjdEVuY3J5cHQiLCJjb25zdHJ1Y3RvciIsInBsYWludGV4dCIsIl9mbGF0dGVuZWQiLCJzZXRDb250ZW50RW5jcnlwdGlvbktleSIsImNlayIsInNldEluaXRpYWxpemF0aW9uVmVjdG9yIiwiaXYiLCJzZXRQcm90ZWN0ZWRIZWFkZXIiLCJwcm90ZWN0ZWRIZWFkZXIiLCJzZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyIsInBhcmFtZXRlcnMiLCJlbmNyeXB0Iiwia2V5Iiwib3B0aW9ucyIsImp3ZSIsInByb3RlY3RlZCIsImVuY3J5cHRlZF9rZXkiLCJjaXBoZXJ0ZXh0IiwidGFnIiwiam9pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwe/compact/encrypt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwe/flattened/decrypt.js":
/*!*****************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwe/flattened/decrypt.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flattenedDecrypt: () => (/* binding */ flattenedDecrypt)\n/* harmony export */ });\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _runtime_decrypt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../runtime/decrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/decrypt.js\");\n/* harmony import */ var _runtime_zlib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../runtime/zlib.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/zlib.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_is_disjoint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_disjoint.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n/* harmony import */ var _lib_decrypt_key_management_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../lib/decrypt_key_management.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/decrypt_key_management.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_cek_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../lib/cek.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/cek.js\");\n/* harmony import */ var _lib_validate_crit_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/validate_crit.js\");\n/* harmony import */ var _lib_validate_algorithms_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../lib/validate_algorithms.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/validate_algorithms.js\");\n\n\n\n\n\n\n\n\n\n\n\nasync function flattenedDecrypt(jwe, key, options) {\n    var _a;\n    if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(jwe)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"Flattened JWE must be an object\");\n    }\n    if (jwe.protected === undefined && jwe.header === undefined && jwe.unprotected === undefined) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JOSE Header missing\");\n    }\n    if (typeof jwe.iv !== \"string\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JWE Initialization Vector missing or incorrect type\");\n    }\n    if (typeof jwe.ciphertext !== \"string\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JWE Ciphertext missing or incorrect type\");\n    }\n    if (typeof jwe.tag !== \"string\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JWE Authentication Tag missing or incorrect type\");\n    }\n    if (jwe.protected !== undefined && typeof jwe.protected !== \"string\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JWE Protected Header incorrect type\");\n    }\n    if (jwe.encrypted_key !== undefined && typeof jwe.encrypted_key !== \"string\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JWE Encrypted Key incorrect type\");\n    }\n    if (jwe.aad !== undefined && typeof jwe.aad !== \"string\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JWE AAD incorrect type\");\n    }\n    if (jwe.header !== undefined && !(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(jwe.header)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JWE Shared Unprotected Header incorrect type\");\n    }\n    if (jwe.unprotected !== undefined && !(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(jwe.unprotected)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JWE Per-Recipient Unprotected Header incorrect type\");\n    }\n    let parsedProt;\n    if (jwe.protected) {\n        try {\n            const protectedHeader = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(jwe.protected);\n            parsedProt = JSON.parse(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.decoder.decode(protectedHeader));\n        } catch (_b) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JWE Protected Header is invalid\");\n        }\n    }\n    if (!(0,_lib_is_disjoint_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(parsedProt, jwe.header, jwe.unprotected)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"JWE Protected, JWE Unprotected Header, and JWE Per-Recipient Unprotected Header Parameter names must be disjoint\");\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jwe.header,\n        ...jwe.unprotected\n    };\n    (0,_lib_validate_crit_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(_util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    if (joseHeader.zip !== undefined) {\n        if (!parsedProt || !parsedProt.zip) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n        }\n        if (joseHeader.zip !== \"DEF\") {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n        }\n    }\n    const { alg, enc } = joseHeader;\n    if (typeof alg !== \"string\" || !alg) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"missing JWE Algorithm (alg) in JWE Header\");\n    }\n    if (typeof enc !== \"string\" || !enc) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"missing JWE Encryption Algorithm (enc) in JWE Header\");\n    }\n    const keyManagementAlgorithms = options && (0,_lib_validate_algorithms_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(\"keyManagementAlgorithms\", options.keyManagementAlgorithms);\n    const contentEncryptionAlgorithms = options && (0,_lib_validate_algorithms_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(\"contentEncryptionAlgorithms\", options.contentEncryptionAlgorithms);\n    if (keyManagementAlgorithms && !keyManagementAlgorithms.has(alg)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (contentEncryptionAlgorithms && !contentEncryptionAlgorithms.has(enc)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JOSEAlgNotAllowed('\"enc\" (Encryption Algorithm) Header Parameter not allowed');\n    }\n    let encryptedKey;\n    if (jwe.encrypted_key !== undefined) {\n        try {\n            encryptedKey = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(jwe.encrypted_key);\n        } catch (_c) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"Failed to base64url decode the encrypted_key\");\n        }\n    }\n    let resolvedKey = false;\n    if (typeof key === \"function\") {\n        key = await key(parsedProt, jwe);\n        resolvedKey = true;\n    }\n    let cek;\n    try {\n        cek = await (0,_lib_decrypt_key_management_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(alg, key, encryptedKey, joseHeader, options);\n    } catch (err) {\n        if (err instanceof TypeError || err instanceof _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid || err instanceof _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JOSENotSupported) {\n            throw err;\n        }\n        cek = (0,_lib_cek_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(enc);\n    }\n    let iv;\n    let tag;\n    try {\n        iv = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(jwe.iv);\n    } catch (_d) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"Failed to base64url decode the iv\");\n    }\n    try {\n        tag = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(jwe.tag);\n    } catch (_e) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"Failed to base64url decode the tag\");\n    }\n    const protectedHeader = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.encoder.encode((_a = jwe.protected) !== null && _a !== void 0 ? _a : \"\");\n    let additionalData;\n    if (jwe.aad !== undefined) {\n        additionalData = (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.concat)(protectedHeader, _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.encoder.encode(\".\"), _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.encoder.encode(jwe.aad));\n    } else {\n        additionalData = protectedHeader;\n    }\n    let ciphertext;\n    try {\n        ciphertext = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(jwe.ciphertext);\n    } catch (_f) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"Failed to base64url decode the ciphertext\");\n    }\n    let plaintext = await (0,_runtime_decrypt_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(enc, cek, ciphertext, iv, tag, additionalData);\n    if (joseHeader.zip === \"DEF\") {\n        plaintext = await ((options === null || options === void 0 ? void 0 : options.inflateRaw) || _runtime_zlib_js__WEBPACK_IMPORTED_MODULE_2__.inflate)(plaintext);\n    }\n    const result = {\n        plaintext\n    };\n    if (jwe.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jwe.aad !== undefined) {\n        try {\n            result.additionalAuthenticatedData = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(jwe.aad);\n        } catch (_g) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWEInvalid(\"Failed to base64url decode the aad\");\n        }\n    }\n    if (jwe.unprotected !== undefined) {\n        result.sharedUnprotectedHeader = jwe.unprotected;\n    }\n    if (jwe.header !== undefined) {\n        result.unprotectedHeader = jwe.header;\n    }\n    if (resolvedKey) {\n        return {\n            ...result,\n            key\n        };\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwe/flattened/decrypt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwe/flattened/encrypt.js":
/*!*****************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwe/flattened/encrypt.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlattenedEncrypt: () => (/* binding */ FlattenedEncrypt),\n/* harmony export */   unprotected: () => (/* binding */ unprotected)\n/* harmony export */ });\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _runtime_encrypt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../runtime/encrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/encrypt.js\");\n/* harmony import */ var _runtime_zlib_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../runtime/zlib.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/zlib.js\");\n/* harmony import */ var _lib_iv_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../lib/iv.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/iv.js\");\n/* harmony import */ var _lib_encrypt_key_management_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/encrypt_key_management.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/encrypt_key_management.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_is_disjoint_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_disjoint.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_validate_crit_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/validate_crit.js\");\n\n\n\n\n\n\n\n\n\nconst unprotected = Symbol();\nclass FlattenedEncrypt {\n    constructor(plaintext){\n        if (!(plaintext instanceof Uint8Array)) {\n            throw new TypeError(\"plaintext must be an instance of Uint8Array\");\n        }\n        this._plaintext = plaintext;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError(\"setKeyManagementParameters can only be called once\");\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._sharedUnprotectedHeader) {\n            throw new TypeError(\"setSharedUnprotectedHeader can only be called once\");\n        }\n        this._sharedUnprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError(\"setContentEncryptionKey can only be called once\");\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError(\"setInitializationVector can only be called once\");\n        }\n        this._iv = iv;\n        return this;\n    }\n    async encrypt(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader && !this._sharedUnprotectedHeader) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"either setProtectedHeader, setUnprotectedHeader, or sharedUnprotectedHeader must be called before #encrypt()\");\n        }\n        if (!(0,_lib_is_disjoint_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(this._protectedHeader, this._unprotectedHeader, this._sharedUnprotectedHeader)) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint\");\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader,\n            ...this._sharedUnprotectedHeader\n        };\n        (0,_lib_validate_crit_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(_util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid, new Map(), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        if (joseHeader.zip !== undefined) {\n            if (!this._protectedHeader || !this._protectedHeader.zip) {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n            }\n            if (joseHeader.zip !== \"DEF\") {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JOSENotSupported('Unsupported JWE \"zip\" (Compression Algorithm) Header Parameter value');\n            }\n        }\n        const { alg, enc } = joseHeader;\n        if (typeof alg !== \"string\" || !alg) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        if (typeof enc !== \"string\" || !enc) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n        }\n        let encryptedKey;\n        if (alg === \"dir\") {\n            if (this._cek) {\n                throw new TypeError(\"setContentEncryptionKey cannot be called when using Direct Encryption\");\n            }\n        } else if (alg === \"ECDH-ES\") {\n            if (this._cek) {\n                throw new TypeError(\"setContentEncryptionKey cannot be called when using Direct Key Agreement\");\n            }\n        }\n        let cek;\n        {\n            let parameters;\n            ({ cek, encryptedKey, parameters } = await (0,_lib_encrypt_key_management_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(alg, enc, key, this._cek, this._keyManagementParameters));\n            if (parameters) {\n                if (options && unprotected in options) {\n                    if (!this._unprotectedHeader) {\n                        this.setUnprotectedHeader(parameters);\n                    } else {\n                        this._unprotectedHeader = {\n                            ...this._unprotectedHeader,\n                            ...parameters\n                        };\n                    }\n                } else {\n                    if (!this._protectedHeader) {\n                        this.setProtectedHeader(parameters);\n                    } else {\n                        this._protectedHeader = {\n                            ...this._protectedHeader,\n                            ...parameters\n                        };\n                    }\n                }\n            }\n        }\n        this._iv || (this._iv = (0,_lib_iv_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(enc));\n        let additionalData;\n        let protectedHeader;\n        let aadMember;\n        if (this._protectedHeader) {\n            protectedHeader = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.encoder.encode((0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode)(JSON.stringify(this._protectedHeader)));\n        } else {\n            protectedHeader = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.encoder.encode(\"\");\n        }\n        if (this._aad) {\n            aadMember = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode)(this._aad);\n            additionalData = (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.concat)(protectedHeader, _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.encoder.encode(\".\"), _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.encoder.encode(aadMember));\n        } else {\n            additionalData = protectedHeader;\n        }\n        let ciphertext;\n        let tag;\n        if (joseHeader.zip === \"DEF\") {\n            const deflated = await ((options === null || options === void 0 ? void 0 : options.deflateRaw) || _runtime_zlib_js__WEBPACK_IMPORTED_MODULE_2__.deflate)(this._plaintext);\n            ({ ciphertext, tag } = await (0,_runtime_encrypt_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(enc, deflated, cek, this._iv, additionalData));\n        } else {\n            ;\n            ({ ciphertext, tag } = await (0,_runtime_encrypt_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(enc, this._plaintext, cek, this._iv, additionalData));\n        }\n        const jwe = {\n            ciphertext: (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode)(ciphertext),\n            iv: (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode)(this._iv),\n            tag: (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode)(tag)\n        };\n        if (encryptedKey) {\n            jwe.encrypted_key = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode)(encryptedKey);\n        }\n        if (aadMember) {\n            jwe.aad = aadMember;\n        }\n        if (this._protectedHeader) {\n            jwe.protected = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_7__.decoder.decode(protectedHeader);\n        }\n        if (this._sharedUnprotectedHeader) {\n            jwe.unprotected = this._sharedUnprotectedHeader;\n        }\n        if (this._unprotectedHeader) {\n            jwe.header = this._unprotectedHeader;\n        }\n        return jwe;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3ZS9mbGF0dGVuZWQvZW5jcnlwdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFpRTtBQUNsQjtBQUNDO0FBQ1A7QUFDOEI7QUFDSDtBQUNsQjtBQUNtQjtBQUNmO0FBQy9DLE1BQU1hLGNBQWNDLFNBQVM7QUFDN0IsTUFBTUM7SUFDVEMsWUFBWUMsU0FBUyxDQUFFO1FBQ25CLElBQUksQ0FBRUEsQ0FBQUEscUJBQXFCQyxVQUFTLEdBQUk7WUFDcEMsTUFBTSxJQUFJQyxVQUFVO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDQyxVQUFVLEdBQUdIO0lBQ3RCO0lBQ0FJLDJCQUEyQkMsVUFBVSxFQUFFO1FBQ25DLElBQUksSUFBSSxDQUFDQyx3QkFBd0IsRUFBRTtZQUMvQixNQUFNLElBQUlKLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNJLHdCQUF3QixHQUFHRDtRQUNoQyxPQUFPLElBQUk7SUFDZjtJQUNBRSxtQkFBbUJDLGVBQWUsRUFBRTtRQUNoQyxJQUFJLElBQUksQ0FBQ0MsZ0JBQWdCLEVBQUU7WUFDdkIsTUFBTSxJQUFJUCxVQUFVO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDTyxnQkFBZ0IsR0FBR0Q7UUFDeEIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsMkJBQTJCQyx1QkFBdUIsRUFBRTtRQUNoRCxJQUFJLElBQUksQ0FBQ0Msd0JBQXdCLEVBQUU7WUFDL0IsTUFBTSxJQUFJVixVQUFVO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDVSx3QkFBd0IsR0FBR0Q7UUFDaEMsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUscUJBQXFCQyxpQkFBaUIsRUFBRTtRQUNwQyxJQUFJLElBQUksQ0FBQ0Msa0JBQWtCLEVBQUU7WUFDekIsTUFBTSxJQUFJYixVQUFVO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDYSxrQkFBa0IsR0FBR0Q7UUFDMUIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsK0JBQStCQyxHQUFHLEVBQUU7UUFDaEMsSUFBSSxDQUFDQyxJQUFJLEdBQUdEO1FBQ1osT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsd0JBQXdCQyxHQUFHLEVBQUU7UUFDekIsSUFBSSxJQUFJLENBQUNDLElBQUksRUFBRTtZQUNYLE1BQU0sSUFBSW5CLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNtQixJQUFJLEdBQUdEO1FBQ1osT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsd0JBQXdCQyxFQUFFLEVBQUU7UUFDeEIsSUFBSSxJQUFJLENBQUNDLEdBQUcsRUFBRTtZQUNWLE1BQU0sSUFBSXRCLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNzQixHQUFHLEdBQUdEO1FBQ1gsT0FBTyxJQUFJO0lBQ2Y7SUFDQSxNQUFNdEMsUUFBUXdDLEdBQUcsRUFBRUMsT0FBTyxFQUFFO1FBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUNqQixnQkFBZ0IsSUFBSSxDQUFDLElBQUksQ0FBQ00sa0JBQWtCLElBQUksQ0FBQyxJQUFJLENBQUNILHdCQUF3QixFQUFFO1lBQ3RGLE1BQU0sSUFBSXRCLHVEQUFVQSxDQUFDO1FBQ3pCO1FBQ0EsSUFBSSxDQUFDQywrREFBVUEsQ0FBQyxJQUFJLENBQUNrQixnQkFBZ0IsRUFBRSxJQUFJLENBQUNNLGtCQUFrQixFQUFFLElBQUksQ0FBQ0gsd0JBQXdCLEdBQUc7WUFDNUYsTUFBTSxJQUFJdEIsdURBQVVBLENBQUM7UUFDekI7UUFDQSxNQUFNcUMsYUFBYTtZQUNmLEdBQUcsSUFBSSxDQUFDbEIsZ0JBQWdCO1lBQ3hCLEdBQUcsSUFBSSxDQUFDTSxrQkFBa0I7WUFDMUIsR0FBRyxJQUFJLENBQUNILHdCQUF3QjtRQUNwQztRQUNBakIsaUVBQVlBLENBQUNMLHVEQUFVQSxFQUFFLElBQUlzQyxPQUFPRixZQUFZLFFBQVFBLFlBQVksS0FBSyxJQUFJLEtBQUssSUFBSUEsUUFBUUcsSUFBSSxFQUFFLElBQUksQ0FBQ3BCLGdCQUFnQixFQUFFa0I7UUFDM0gsSUFBSUEsV0FBV0csR0FBRyxLQUFLQyxXQUFXO1lBQzlCLElBQUksQ0FBQyxJQUFJLENBQUN0QixnQkFBZ0IsSUFBSSxDQUFDLElBQUksQ0FBQ0EsZ0JBQWdCLENBQUNxQixHQUFHLEVBQUU7Z0JBQ3RELE1BQU0sSUFBSXhDLHVEQUFVQSxDQUFDO1lBQ3pCO1lBQ0EsSUFBSXFDLFdBQVdHLEdBQUcsS0FBSyxPQUFPO2dCQUMxQixNQUFNLElBQUl6Qyw2REFBZ0JBLENBQUM7WUFDL0I7UUFDSjtRQUNBLE1BQU0sRUFBRTJDLEdBQUcsRUFBRUMsR0FBRyxFQUFFLEdBQUdOO1FBQ3JCLElBQUksT0FBT0ssUUFBUSxZQUFZLENBQUNBLEtBQUs7WUFDakMsTUFBTSxJQUFJMUMsdURBQVVBLENBQUM7UUFDekI7UUFDQSxJQUFJLE9BQU8yQyxRQUFRLFlBQVksQ0FBQ0EsS0FBSztZQUNqQyxNQUFNLElBQUkzQyx1REFBVUEsQ0FBQztRQUN6QjtRQUNBLElBQUk0QztRQUNKLElBQUlGLFFBQVEsT0FBTztZQUNmLElBQUksSUFBSSxDQUFDWCxJQUFJLEVBQUU7Z0JBQ1gsTUFBTSxJQUFJbkIsVUFBVTtZQUN4QjtRQUNKLE9BQ0ssSUFBSThCLFFBQVEsV0FBVztZQUN4QixJQUFJLElBQUksQ0FBQ1gsSUFBSSxFQUFFO2dCQUNYLE1BQU0sSUFBSW5CLFVBQVU7WUFDeEI7UUFDSjtRQUNBLElBQUlrQjtRQUNKO1lBQ0ksSUFBSWY7WUFDSCxHQUFFZSxHQUFHLEVBQUVjLFlBQVksRUFBRTdCLFVBQVUsRUFBRSxHQUFHLE1BQU1qQiwwRUFBb0JBLENBQUM0QyxLQUFLQyxLQUFLUixLQUFLLElBQUksQ0FBQ0osSUFBSSxFQUFFLElBQUksQ0FBQ2Ysd0JBQXdCO1lBQ3ZILElBQUlELFlBQVk7Z0JBQ1osSUFBSXFCLFdBQVc5QixlQUFlOEIsU0FBUztvQkFDbkMsSUFBSSxDQUFDLElBQUksQ0FBQ1gsa0JBQWtCLEVBQUU7d0JBQzFCLElBQUksQ0FBQ0Ysb0JBQW9CLENBQUNSO29CQUM5QixPQUNLO3dCQUNELElBQUksQ0FBQ1Usa0JBQWtCLEdBQUc7NEJBQUUsR0FBRyxJQUFJLENBQUNBLGtCQUFrQjs0QkFBRSxHQUFHVixVQUFVO3dCQUFDO29CQUMxRTtnQkFDSixPQUNLO29CQUNELElBQUksQ0FBQyxJQUFJLENBQUNJLGdCQUFnQixFQUFFO3dCQUN4QixJQUFJLENBQUNGLGtCQUFrQixDQUFDRjtvQkFDNUIsT0FDSzt3QkFDRCxJQUFJLENBQUNJLGdCQUFnQixHQUFHOzRCQUFFLEdBQUcsSUFBSSxDQUFDQSxnQkFBZ0I7NEJBQUUsR0FBR0osVUFBVTt3QkFBQztvQkFDdEU7Z0JBQ0o7WUFDSjtRQUNKO1FBQ0EsSUFBSSxDQUFDbUIsR0FBRyxJQUFLLEtBQUksQ0FBQ0EsR0FBRyxHQUFHckMsc0RBQVVBLENBQUM4QyxJQUFHO1FBQ3RDLElBQUlFO1FBQ0osSUFBSTNCO1FBQ0osSUFBSTRCO1FBQ0osSUFBSSxJQUFJLENBQUMzQixnQkFBZ0IsRUFBRTtZQUN2QkQsa0JBQWtCaEIseURBQU9BLENBQUNULE1BQU0sQ0FBQ0MsNkRBQVNBLENBQUNxRCxLQUFLQyxTQUFTLENBQUMsSUFBSSxDQUFDN0IsZ0JBQWdCO1FBQ25GLE9BQ0s7WUFDREQsa0JBQWtCaEIseURBQU9BLENBQUNULE1BQU0sQ0FBQztRQUNyQztRQUNBLElBQUksSUFBSSxDQUFDbUMsSUFBSSxFQUFFO1lBQ1hrQixZQUFZcEQsNkRBQVNBLENBQUMsSUFBSSxDQUFDa0MsSUFBSTtZQUMvQmlCLGlCQUFpQnpDLDREQUFNQSxDQUFDYyxpQkFBaUJoQix5REFBT0EsQ0FBQ1QsTUFBTSxDQUFDLE1BQU1TLHlEQUFPQSxDQUFDVCxNQUFNLENBQUNxRDtRQUNqRixPQUNLO1lBQ0RELGlCQUFpQjNCO1FBQ3JCO1FBQ0EsSUFBSStCO1FBQ0osSUFBSUM7UUFDSixJQUFJYixXQUFXRyxHQUFHLEtBQUssT0FBTztZQUMxQixNQUFNVyxXQUFXLE1BQU0sQ0FBQyxDQUFDZixZQUFZLFFBQVFBLFlBQVksS0FBSyxJQUFJLEtBQUssSUFBSUEsUUFBUWdCLFVBQVUsS0FBS3hELHFEQUFNLEVBQUcsSUFBSSxDQUFDaUIsVUFBVTtZQUN6SCxHQUFFb0MsVUFBVSxFQUFFQyxHQUFHLEVBQUUsR0FBRyxNQUFNdkQsK0RBQU9BLENBQUNnRCxLQUFLUSxVQUFVckIsS0FBSyxJQUFJLENBQUNJLEdBQUcsRUFBRVcsZUFBYztRQUNyRixPQUNLOztZQUVBLEdBQUVJLFVBQVUsRUFBRUMsR0FBRyxFQUFFLEdBQUcsTUFBTXZELCtEQUFPQSxDQUFDZ0QsS0FBSyxJQUFJLENBQUM5QixVQUFVLEVBQUVpQixLQUFLLElBQUksQ0FBQ0ksR0FBRyxFQUFFVyxlQUFjO1FBQzVGO1FBQ0EsTUFBTVEsTUFBTTtZQUNSSixZQUFZdkQsNkRBQVNBLENBQUN1RDtZQUN0QmhCLElBQUl2Qyw2REFBU0EsQ0FBQyxJQUFJLENBQUN3QyxHQUFHO1lBQ3RCZ0IsS0FBS3hELDZEQUFTQSxDQUFDd0Q7UUFDbkI7UUFDQSxJQUFJTixjQUFjO1lBQ2RTLElBQUlDLGFBQWEsR0FBRzVELDZEQUFTQSxDQUFDa0Q7UUFDbEM7UUFDQSxJQUFJRSxXQUFXO1lBQ1hPLElBQUkxQixHQUFHLEdBQUdtQjtRQUNkO1FBQ0EsSUFBSSxJQUFJLENBQUMzQixnQkFBZ0IsRUFBRTtZQUN2QmtDLElBQUlFLFNBQVMsR0FBR3BELHlEQUFPQSxDQUFDcUQsTUFBTSxDQUFDdEM7UUFDbkM7UUFDQSxJQUFJLElBQUksQ0FBQ0ksd0JBQXdCLEVBQUU7WUFDL0IrQixJQUFJL0MsV0FBVyxHQUFHLElBQUksQ0FBQ2dCLHdCQUF3QjtRQUNuRDtRQUNBLElBQUksSUFBSSxDQUFDRyxrQkFBa0IsRUFBRTtZQUN6QjRCLElBQUlJLE1BQU0sR0FBRyxJQUFJLENBQUNoQyxrQkFBa0I7UUFDeEM7UUFDQSxPQUFPNEI7SUFDWDtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9qd2UvZmxhdHRlbmVkL2VuY3J5cHQuanM/ZDNhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBlbmNvZGUgYXMgYmFzZTY0dXJsIH0gZnJvbSAnLi4vLi4vcnVudGltZS9iYXNlNjR1cmwuanMnO1xuaW1wb3J0IGVuY3J5cHQgZnJvbSAnLi4vLi4vcnVudGltZS9lbmNyeXB0LmpzJztcbmltcG9ydCB7IGRlZmxhdGUgfSBmcm9tICcuLi8uLi9ydW50aW1lL3psaWIuanMnO1xuaW1wb3J0IGdlbmVyYXRlSXYgZnJvbSAnLi4vLi4vbGliL2l2LmpzJztcbmltcG9ydCBlbmNyeXB0S2V5TWFuYWdlbWVudCBmcm9tICcuLi8uLi9saWIvZW5jcnlwdF9rZXlfbWFuYWdlbWVudC5qcyc7XG5pbXBvcnQgeyBKT1NFTm90U3VwcG9ydGVkLCBKV0VJbnZhbGlkIH0gZnJvbSAnLi4vLi4vdXRpbC9lcnJvcnMuanMnO1xuaW1wb3J0IGlzRGlzam9pbnQgZnJvbSAnLi4vLi4vbGliL2lzX2Rpc2pvaW50LmpzJztcbmltcG9ydCB7IGVuY29kZXIsIGRlY29kZXIsIGNvbmNhdCB9IGZyb20gJy4uLy4uL2xpYi9idWZmZXJfdXRpbHMuanMnO1xuaW1wb3J0IHZhbGlkYXRlQ3JpdCBmcm9tICcuLi8uLi9saWIvdmFsaWRhdGVfY3JpdC5qcyc7XG5leHBvcnQgY29uc3QgdW5wcm90ZWN0ZWQgPSBTeW1ib2woKTtcbmV4cG9ydCBjbGFzcyBGbGF0dGVuZWRFbmNyeXB0IHtcbiAgICBjb25zdHJ1Y3RvcihwbGFpbnRleHQpIHtcbiAgICAgICAgaWYgKCEocGxhaW50ZXh0IGluc3RhbmNlb2YgVWludDhBcnJheSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3BsYWludGV4dCBtdXN0IGJlIGFuIGluc3RhbmNlIG9mIFVpbnQ4QXJyYXknKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9wbGFpbnRleHQgPSBwbGFpbnRleHQ7XG4gICAgfVxuICAgIHNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKHBhcmFtZXRlcnMpIHtcbiAgICAgICAgaWYgKHRoaXMuX2tleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2tleU1hbmFnZW1lbnRQYXJhbWV0ZXJzID0gcGFyYW1ldGVycztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldFByb3RlY3RlZEhlYWRlcihwcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuX3Byb3RlY3RlZEhlYWRlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2V0UHJvdGVjdGVkSGVhZGVyIGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fcHJvdGVjdGVkSGVhZGVyID0gcHJvdGVjdGVkSGVhZGVyO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0U2hhcmVkVW5wcm90ZWN0ZWRIZWFkZXIoc2hhcmVkVW5wcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgaWYgKHRoaXMuX3NoYXJlZFVucHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRTaGFyZWRVbnByb3RlY3RlZEhlYWRlciBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3NoYXJlZFVucHJvdGVjdGVkSGVhZGVyID0gc2hhcmVkVW5wcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRVbnByb3RlY3RlZEhlYWRlcih1bnByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICBpZiAodGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3NldFVucHJvdGVjdGVkSGVhZGVyIGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIgPSB1bnByb3RlY3RlZEhlYWRlcjtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEFkZGl0aW9uYWxBdXRoZW50aWNhdGVkRGF0YShhYWQpIHtcbiAgICAgICAgdGhpcy5fYWFkID0gYWFkO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0Q29udGVudEVuY3J5cHRpb25LZXkoY2VrKSB7XG4gICAgICAgIGlmICh0aGlzLl9jZWspIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3NldENvbnRlbnRFbmNyeXB0aW9uS2V5IGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fY2VrID0gY2VrO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0SW5pdGlhbGl6YXRpb25WZWN0b3IoaXYpIHtcbiAgICAgICAgaWYgKHRoaXMuX2l2KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRJbml0aWFsaXphdGlvblZlY3RvciBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2l2ID0gaXY7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhc3luYyBlbmNyeXB0KGtleSwgb3B0aW9ucykge1xuICAgICAgICBpZiAoIXRoaXMuX3Byb3RlY3RlZEhlYWRlciAmJiAhdGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIgJiYgIXRoaXMuX3NoYXJlZFVucHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgSldFSW52YWxpZCgnZWl0aGVyIHNldFByb3RlY3RlZEhlYWRlciwgc2V0VW5wcm90ZWN0ZWRIZWFkZXIsIG9yIHNoYXJlZFVucHJvdGVjdGVkSGVhZGVyIG11c3QgYmUgY2FsbGVkIGJlZm9yZSAjZW5jcnlwdCgpJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc0Rpc2pvaW50KHRoaXMuX3Byb3RlY3RlZEhlYWRlciwgdGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIsIHRoaXMuX3NoYXJlZFVucHJvdGVjdGVkSGVhZGVyKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEpXRUludmFsaWQoJ0pXRSBQcm90ZWN0ZWQsIEpXRSBTaGFyZWQgVW5wcm90ZWN0ZWQgYW5kIEpXRSBQZXItUmVjaXBpZW50IEhlYWRlciBQYXJhbWV0ZXIgbmFtZXMgbXVzdCBiZSBkaXNqb2ludCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGpvc2VIZWFkZXIgPSB7XG4gICAgICAgICAgICAuLi50aGlzLl9wcm90ZWN0ZWRIZWFkZXIsXG4gICAgICAgICAgICAuLi50aGlzLl91bnByb3RlY3RlZEhlYWRlcixcbiAgICAgICAgICAgIC4uLnRoaXMuX3NoYXJlZFVucHJvdGVjdGVkSGVhZGVyLFxuICAgICAgICB9O1xuICAgICAgICB2YWxpZGF0ZUNyaXQoSldFSW52YWxpZCwgbmV3IE1hcCgpLCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuY3JpdCwgdGhpcy5fcHJvdGVjdGVkSGVhZGVyLCBqb3NlSGVhZGVyKTtcbiAgICAgICAgaWYgKGpvc2VIZWFkZXIuemlwICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGlmICghdGhpcy5fcHJvdGVjdGVkSGVhZGVyIHx8ICF0aGlzLl9wcm90ZWN0ZWRIZWFkZXIuemlwKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEpXRUludmFsaWQoJ0pXRSBcInppcFwiIChDb21wcmVzc2lvbiBBbGdvcml0aG0pIEhlYWRlciBNVVNUIGJlIGludGVncml0eSBwcm90ZWN0ZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChqb3NlSGVhZGVyLnppcCAhPT0gJ0RFRicpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgSk9TRU5vdFN1cHBvcnRlZCgnVW5zdXBwb3J0ZWQgSldFIFwiemlwXCIgKENvbXByZXNzaW9uIEFsZ29yaXRobSkgSGVhZGVyIFBhcmFtZXRlciB2YWx1ZScpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgYWxnLCBlbmMgfSA9IGpvc2VIZWFkZXI7XG4gICAgICAgIGlmICh0eXBlb2YgYWxnICE9PSAnc3RyaW5nJyB8fCAhYWxnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgSldFSW52YWxpZCgnSldFIFwiYWxnXCIgKEFsZ29yaXRobSkgSGVhZGVyIFBhcmFtZXRlciBtaXNzaW5nIG9yIGludmFsaWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIGVuYyAhPT0gJ3N0cmluZycgfHwgIWVuYykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEpXRUludmFsaWQoJ0pXRSBcImVuY1wiIChFbmNyeXB0aW9uIEFsZ29yaXRobSkgSGVhZGVyIFBhcmFtZXRlciBtaXNzaW5nIG9yIGludmFsaWQnKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgZW5jcnlwdGVkS2V5O1xuICAgICAgICBpZiAoYWxnID09PSAnZGlyJykge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2Nlaykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3NldENvbnRlbnRFbmNyeXB0aW9uS2V5IGNhbm5vdCBiZSBjYWxsZWQgd2hlbiB1c2luZyBEaXJlY3QgRW5jcnlwdGlvbicpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGFsZyA9PT0gJ0VDREgtRVMnKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fY2VrKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2V0Q29udGVudEVuY3J5cHRpb25LZXkgY2Fubm90IGJlIGNhbGxlZCB3aGVuIHVzaW5nIERpcmVjdCBLZXkgQWdyZWVtZW50Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGNlaztcbiAgICAgICAge1xuICAgICAgICAgICAgbGV0IHBhcmFtZXRlcnM7XG4gICAgICAgICAgICAoeyBjZWssIGVuY3J5cHRlZEtleSwgcGFyYW1ldGVycyB9ID0gYXdhaXQgZW5jcnlwdEtleU1hbmFnZW1lbnQoYWxnLCBlbmMsIGtleSwgdGhpcy5fY2VrLCB0aGlzLl9rZXlNYW5hZ2VtZW50UGFyYW1ldGVycykpO1xuICAgICAgICAgICAgaWYgKHBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgICAgICBpZiAob3B0aW9ucyAmJiB1bnByb3RlY3RlZCBpbiBvcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghdGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0VW5wcm90ZWN0ZWRIZWFkZXIocGFyYW1ldGVycyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl91bnByb3RlY3RlZEhlYWRlciA9IHsgLi4udGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXIsIC4uLnBhcmFtZXRlcnMgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLl9wcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0UHJvdGVjdGVkSGVhZGVyKHBhcmFtZXRlcnMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fcHJvdGVjdGVkSGVhZGVyID0geyAuLi50aGlzLl9wcm90ZWN0ZWRIZWFkZXIsIC4uLnBhcmFtZXRlcnMgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9pdiB8fCAodGhpcy5faXYgPSBnZW5lcmF0ZUl2KGVuYykpO1xuICAgICAgICBsZXQgYWRkaXRpb25hbERhdGE7XG4gICAgICAgIGxldCBwcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIGxldCBhYWRNZW1iZXI7XG4gICAgICAgIGlmICh0aGlzLl9wcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgICAgIHByb3RlY3RlZEhlYWRlciA9IGVuY29kZXIuZW5jb2RlKGJhc2U2NHVybChKU09OLnN0cmluZ2lmeSh0aGlzLl9wcm90ZWN0ZWRIZWFkZXIpKSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwcm90ZWN0ZWRIZWFkZXIgPSBlbmNvZGVyLmVuY29kZSgnJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX2FhZCkge1xuICAgICAgICAgICAgYWFkTWVtYmVyID0gYmFzZTY0dXJsKHRoaXMuX2FhZCk7XG4gICAgICAgICAgICBhZGRpdGlvbmFsRGF0YSA9IGNvbmNhdChwcm90ZWN0ZWRIZWFkZXIsIGVuY29kZXIuZW5jb2RlKCcuJyksIGVuY29kZXIuZW5jb2RlKGFhZE1lbWJlcikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgYWRkaXRpb25hbERhdGEgPSBwcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGNpcGhlcnRleHQ7XG4gICAgICAgIGxldCB0YWc7XG4gICAgICAgIGlmIChqb3NlSGVhZGVyLnppcCA9PT0gJ0RFRicpIHtcbiAgICAgICAgICAgIGNvbnN0IGRlZmxhdGVkID0gYXdhaXQgKChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMuZGVmbGF0ZVJhdykgfHwgZGVmbGF0ZSkodGhpcy5fcGxhaW50ZXh0KTtcbiAgICAgICAgICAgICh7IGNpcGhlcnRleHQsIHRhZyB9ID0gYXdhaXQgZW5jcnlwdChlbmMsIGRlZmxhdGVkLCBjZWssIHRoaXMuX2l2LCBhZGRpdGlvbmFsRGF0YSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgO1xuICAgICAgICAgICAgKHsgY2lwaGVydGV4dCwgdGFnIH0gPSBhd2FpdCBlbmNyeXB0KGVuYywgdGhpcy5fcGxhaW50ZXh0LCBjZWssIHRoaXMuX2l2LCBhZGRpdGlvbmFsRGF0YSkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGp3ZSA9IHtcbiAgICAgICAgICAgIGNpcGhlcnRleHQ6IGJhc2U2NHVybChjaXBoZXJ0ZXh0KSxcbiAgICAgICAgICAgIGl2OiBiYXNlNjR1cmwodGhpcy5faXYpLFxuICAgICAgICAgICAgdGFnOiBiYXNlNjR1cmwodGFnKSxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKGVuY3J5cHRlZEtleSkge1xuICAgICAgICAgICAgandlLmVuY3J5cHRlZF9rZXkgPSBiYXNlNjR1cmwoZW5jcnlwdGVkS2V5KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYWFkTWVtYmVyKSB7XG4gICAgICAgICAgICBqd2UuYWFkID0gYWFkTWVtYmVyO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9wcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgICAgIGp3ZS5wcm90ZWN0ZWQgPSBkZWNvZGVyLmRlY29kZShwcm90ZWN0ZWRIZWFkZXIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9zaGFyZWRVbnByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICAgICAgandlLnVucHJvdGVjdGVkID0gdGhpcy5fc2hhcmVkVW5wcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuX3VucHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgICAgICBqd2UuaGVhZGVyID0gdGhpcy5fdW5wcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGp3ZTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiZW5jb2RlIiwiYmFzZTY0dXJsIiwiZW5jcnlwdCIsImRlZmxhdGUiLCJnZW5lcmF0ZUl2IiwiZW5jcnlwdEtleU1hbmFnZW1lbnQiLCJKT1NFTm90U3VwcG9ydGVkIiwiSldFSW52YWxpZCIsImlzRGlzam9pbnQiLCJlbmNvZGVyIiwiZGVjb2RlciIsImNvbmNhdCIsInZhbGlkYXRlQ3JpdCIsInVucHJvdGVjdGVkIiwiU3ltYm9sIiwiRmxhdHRlbmVkRW5jcnlwdCIsImNvbnN0cnVjdG9yIiwicGxhaW50ZXh0IiwiVWludDhBcnJheSIsIlR5cGVFcnJvciIsIl9wbGFpbnRleHQiLCJzZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyIsInBhcmFtZXRlcnMiLCJfa2V5TWFuYWdlbWVudFBhcmFtZXRlcnMiLCJzZXRQcm90ZWN0ZWRIZWFkZXIiLCJwcm90ZWN0ZWRIZWFkZXIiLCJfcHJvdGVjdGVkSGVhZGVyIiwic2V0U2hhcmVkVW5wcm90ZWN0ZWRIZWFkZXIiLCJzaGFyZWRVbnByb3RlY3RlZEhlYWRlciIsIl9zaGFyZWRVbnByb3RlY3RlZEhlYWRlciIsInNldFVucHJvdGVjdGVkSGVhZGVyIiwidW5wcm90ZWN0ZWRIZWFkZXIiLCJfdW5wcm90ZWN0ZWRIZWFkZXIiLCJzZXRBZGRpdGlvbmFsQXV0aGVudGljYXRlZERhdGEiLCJhYWQiLCJfYWFkIiwic2V0Q29udGVudEVuY3J5cHRpb25LZXkiLCJjZWsiLCJfY2VrIiwic2V0SW5pdGlhbGl6YXRpb25WZWN0b3IiLCJpdiIsIl9pdiIsImtleSIsIm9wdGlvbnMiLCJqb3NlSGVhZGVyIiwiTWFwIiwiY3JpdCIsInppcCIsInVuZGVmaW5lZCIsImFsZyIsImVuYyIsImVuY3J5cHRlZEtleSIsImFkZGl0aW9uYWxEYXRhIiwiYWFkTWVtYmVyIiwiSlNPTiIsInN0cmluZ2lmeSIsImNpcGhlcnRleHQiLCJ0YWciLCJkZWZsYXRlZCIsImRlZmxhdGVSYXciLCJqd2UiLCJlbmNyeXB0ZWRfa2V5IiwicHJvdGVjdGVkIiwiZGVjb2RlIiwiaGVhZGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwe/flattened/encrypt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwe/general/decrypt.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwe/general/decrypt.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generalDecrypt: () => (/* binding */ generalDecrypt)\n/* harmony export */ });\n/* harmony import */ var _flattened_decrypt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flattened/decrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/flattened/decrypt.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n\n\n\nasync function generalDecrypt(jwe, key, options) {\n    if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(jwe)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid(\"General JWE must be an object\");\n    }\n    if (!Array.isArray(jwe.recipients) || !jwe.recipients.every(_lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid(\"JWE Recipients missing or incorrect type\");\n    }\n    if (!jwe.recipients.length) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid(\"JWE Recipients has no members\");\n    }\n    for (const recipient of jwe.recipients){\n        try {\n            return await (0,_flattened_decrypt_js__WEBPACK_IMPORTED_MODULE_0__.flattenedDecrypt)({\n                aad: jwe.aad,\n                ciphertext: jwe.ciphertext,\n                encrypted_key: recipient.encrypted_key,\n                header: recipient.header,\n                iv: jwe.iv,\n                protected: jwe.protected,\n                tag: jwe.tag,\n                unprotected: jwe.unprotected\n            }, key, options);\n        } catch (_a) {}\n    }\n    throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEDecryptionFailed();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3ZS9nZW5lcmFsL2RlY3J5cHQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyRDtBQUNZO0FBQ3pCO0FBQ3ZDLGVBQWVJLGVBQWVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPO0lBQ2xELElBQUksQ0FBQ0osNkRBQVFBLENBQUNFLE1BQU07UUFDaEIsTUFBTSxJQUFJSCx1REFBVUEsQ0FBQztJQUN6QjtJQUNBLElBQUksQ0FBQ00sTUFBTUMsT0FBTyxDQUFDSixJQUFJSyxVQUFVLEtBQUssQ0FBQ0wsSUFBSUssVUFBVSxDQUFDQyxLQUFLLENBQUNSLHlEQUFRQSxHQUFHO1FBQ25FLE1BQU0sSUFBSUQsdURBQVVBLENBQUM7SUFDekI7SUFDQSxJQUFJLENBQUNHLElBQUlLLFVBQVUsQ0FBQ0UsTUFBTSxFQUFFO1FBQ3hCLE1BQU0sSUFBSVYsdURBQVVBLENBQUM7SUFDekI7SUFDQSxLQUFLLE1BQU1XLGFBQWFSLElBQUlLLFVBQVUsQ0FBRTtRQUNwQyxJQUFJO1lBQ0EsT0FBTyxNQUFNVix1RUFBZ0JBLENBQUM7Z0JBQzFCYyxLQUFLVCxJQUFJUyxHQUFHO2dCQUNaQyxZQUFZVixJQUFJVSxVQUFVO2dCQUMxQkMsZUFBZUgsVUFBVUcsYUFBYTtnQkFDdENDLFFBQVFKLFVBQVVJLE1BQU07Z0JBQ3hCQyxJQUFJYixJQUFJYSxFQUFFO2dCQUNWQyxXQUFXZCxJQUFJYyxTQUFTO2dCQUN4QkMsS0FBS2YsSUFBSWUsR0FBRztnQkFDWkMsYUFBYWhCLElBQUlnQixXQUFXO1lBQ2hDLEdBQUdmLEtBQUtDO1FBQ1osRUFDQSxPQUFPZSxJQUFJLENBQ1g7SUFDSjtJQUNBLE1BQU0sSUFBSXJCLGdFQUFtQkE7QUFDakMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3ZS9nZW5lcmFsL2RlY3J5cHQuanM/MTM1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmbGF0dGVuZWREZWNyeXB0IH0gZnJvbSAnLi4vZmxhdHRlbmVkL2RlY3J5cHQuanMnO1xuaW1wb3J0IHsgSldFRGVjcnlwdGlvbkZhaWxlZCwgSldFSW52YWxpZCB9IGZyb20gJy4uLy4uL3V0aWwvZXJyb3JzLmpzJztcbmltcG9ydCBpc09iamVjdCBmcm9tICcuLi8uLi9saWIvaXNfb2JqZWN0LmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW5lcmFsRGVjcnlwdChqd2UsIGtleSwgb3B0aW9ucykge1xuICAgIGlmICghaXNPYmplY3QoandlKSkge1xuICAgICAgICB0aHJvdyBuZXcgSldFSW52YWxpZCgnR2VuZXJhbCBKV0UgbXVzdCBiZSBhbiBvYmplY3QnKTtcbiAgICB9XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGp3ZS5yZWNpcGllbnRzKSB8fCAhandlLnJlY2lwaWVudHMuZXZlcnkoaXNPYmplY3QpKSB7XG4gICAgICAgIHRocm93IG5ldyBKV0VJbnZhbGlkKCdKV0UgUmVjaXBpZW50cyBtaXNzaW5nIG9yIGluY29ycmVjdCB0eXBlJyk7XG4gICAgfVxuICAgIGlmICghandlLnJlY2lwaWVudHMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBKV0VJbnZhbGlkKCdKV0UgUmVjaXBpZW50cyBoYXMgbm8gbWVtYmVycycpO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IHJlY2lwaWVudCBvZiBqd2UucmVjaXBpZW50cykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIGF3YWl0IGZsYXR0ZW5lZERlY3J5cHQoe1xuICAgICAgICAgICAgICAgIGFhZDogandlLmFhZCxcbiAgICAgICAgICAgICAgICBjaXBoZXJ0ZXh0OiBqd2UuY2lwaGVydGV4dCxcbiAgICAgICAgICAgICAgICBlbmNyeXB0ZWRfa2V5OiByZWNpcGllbnQuZW5jcnlwdGVkX2tleSxcbiAgICAgICAgICAgICAgICBoZWFkZXI6IHJlY2lwaWVudC5oZWFkZXIsXG4gICAgICAgICAgICAgICAgaXY6IGp3ZS5pdixcbiAgICAgICAgICAgICAgICBwcm90ZWN0ZWQ6IGp3ZS5wcm90ZWN0ZWQsXG4gICAgICAgICAgICAgICAgdGFnOiBqd2UudGFnLFxuICAgICAgICAgICAgICAgIHVucHJvdGVjdGVkOiBqd2UudW5wcm90ZWN0ZWQsXG4gICAgICAgICAgICB9LCBrZXksIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICB9XG4gICAgfVxuICAgIHRocm93IG5ldyBKV0VEZWNyeXB0aW9uRmFpbGVkKCk7XG59XG4iXSwibmFtZXMiOlsiZmxhdHRlbmVkRGVjcnlwdCIsIkpXRURlY3J5cHRpb25GYWlsZWQiLCJKV0VJbnZhbGlkIiwiaXNPYmplY3QiLCJnZW5lcmFsRGVjcnlwdCIsImp3ZSIsImtleSIsIm9wdGlvbnMiLCJBcnJheSIsImlzQXJyYXkiLCJyZWNpcGllbnRzIiwiZXZlcnkiLCJsZW5ndGgiLCJyZWNpcGllbnQiLCJhYWQiLCJjaXBoZXJ0ZXh0IiwiZW5jcnlwdGVkX2tleSIsImhlYWRlciIsIml2IiwicHJvdGVjdGVkIiwidGFnIiwidW5wcm90ZWN0ZWQiLCJfYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwe/general/decrypt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwe/general/encrypt.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwe/general/encrypt.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GeneralEncrypt: () => (/* binding */ GeneralEncrypt)\n/* harmony export */ });\n/* harmony import */ var _flattened_encrypt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flattened/encrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/flattened/encrypt.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_cek_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/cek.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/cek.js\");\n/* harmony import */ var _lib_is_disjoint_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_disjoint.js\");\n/* harmony import */ var _lib_encrypt_key_management_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/encrypt_key_management.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/encrypt_key_management.js\");\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _lib_validate_crit_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/validate_crit.js\");\n\n\n\n\n\n\n\nclass IndividualRecipient {\n    constructor(enc, key, options){\n        this.parent = enc;\n        this.key = key;\n        this.options = options;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addRecipient(...args) {\n        return this.parent.addRecipient(...args);\n    }\n    encrypt(...args) {\n        return this.parent.encrypt(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nclass GeneralEncrypt {\n    constructor(plaintext){\n        this._recipients = [];\n        this._plaintext = plaintext;\n    }\n    addRecipient(key, options) {\n        const recipient = new IndividualRecipient(this, key, {\n            crit: options === null || options === void 0 ? void 0 : options.crit\n        });\n        this._recipients.push(recipient);\n        return recipient;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setSharedUnprotectedHeader(sharedUnprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError(\"setSharedUnprotectedHeader can only be called once\");\n        }\n        this._unprotectedHeader = sharedUnprotectedHeader;\n        return this;\n    }\n    setAdditionalAuthenticatedData(aad) {\n        this._aad = aad;\n        return this;\n    }\n    async encrypt(options) {\n        var _a, _b, _c;\n        if (!this._recipients.length) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid(\"at least one recipient must be added\");\n        }\n        options = {\n            deflateRaw: options === null || options === void 0 ? void 0 : options.deflateRaw\n        };\n        if (this._recipients.length === 1) {\n            const [recipient] = this._recipients;\n            const flattened = await new _flattened_encrypt_js__WEBPACK_IMPORTED_MODULE_0__.FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).encrypt(recipient.key, {\n                ...recipient.options,\n                ...options\n            });\n            let jwe = {\n                ciphertext: flattened.ciphertext,\n                iv: flattened.iv,\n                recipients: [\n                    {}\n                ],\n                tag: flattened.tag\n            };\n            if (flattened.aad) jwe.aad = flattened.aad;\n            if (flattened.protected) jwe.protected = flattened.protected;\n            if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n            if (flattened.encrypted_key) jwe.recipients[0].encrypted_key = flattened.encrypted_key;\n            if (flattened.header) jwe.recipients[0].header = flattened.header;\n            return jwe;\n        }\n        let enc;\n        for(let i = 0; i < this._recipients.length; i++){\n            const recipient = this._recipients[i];\n            if (!(0,_lib_is_disjoint_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(this._protectedHeader, this._unprotectedHeader, recipient.unprotectedHeader)) {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid(\"JWE Protected, JWE Shared Unprotected and JWE Per-Recipient Header Parameter names must be disjoint\");\n            }\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader\n            };\n            const { alg } = joseHeader;\n            if (typeof alg !== \"string\" || !alg) {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid('JWE \"alg\" (Algorithm) Header Parameter missing or invalid');\n            }\n            if (alg === \"dir\" || alg === \"ECDH-ES\") {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid('\"dir\" and \"ECDH-ES\" alg may only be used with a single recipient');\n            }\n            if (typeof joseHeader.enc !== \"string\" || !joseHeader.enc) {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter missing or invalid');\n            }\n            if (!enc) {\n                enc = joseHeader.enc;\n            } else if (enc !== joseHeader.enc) {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid('JWE \"enc\" (Encryption Algorithm) Header Parameter must be the same for all recipients');\n            }\n            (0,_lib_validate_crit_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid, new Map(), recipient.options.crit, this._protectedHeader, joseHeader);\n            if (joseHeader.zip !== undefined) {\n                if (!this._protectedHeader || !this._protectedHeader.zip) {\n                    throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWEInvalid('JWE \"zip\" (Compression Algorithm) Header MUST be integrity protected');\n                }\n            }\n        }\n        const cek = (0,_lib_cek_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(enc);\n        let jwe = {\n            ciphertext: \"\",\n            iv: \"\",\n            recipients: [],\n            tag: \"\"\n        };\n        for(let i = 0; i < this._recipients.length; i++){\n            const recipient = this._recipients[i];\n            const target = {};\n            jwe.recipients.push(target);\n            const joseHeader = {\n                ...this._protectedHeader,\n                ...this._unprotectedHeader,\n                ...recipient.unprotectedHeader\n            };\n            const p2c = joseHeader.alg.startsWith(\"PBES2\") ? 2048 + i : undefined;\n            if (i === 0) {\n                const flattened = await new _flattened_encrypt_js__WEBPACK_IMPORTED_MODULE_0__.FlattenedEncrypt(this._plaintext).setAdditionalAuthenticatedData(this._aad).setContentEncryptionKey(cek).setProtectedHeader(this._protectedHeader).setSharedUnprotectedHeader(this._unprotectedHeader).setUnprotectedHeader(recipient.unprotectedHeader).setKeyManagementParameters({\n                    p2c\n                }).encrypt(recipient.key, {\n                    ...recipient.options,\n                    ...options,\n                    [_flattened_encrypt_js__WEBPACK_IMPORTED_MODULE_0__.unprotected]: true\n                });\n                jwe.ciphertext = flattened.ciphertext;\n                jwe.iv = flattened.iv;\n                jwe.tag = flattened.tag;\n                if (flattened.aad) jwe.aad = flattened.aad;\n                if (flattened.protected) jwe.protected = flattened.protected;\n                if (flattened.unprotected) jwe.unprotected = flattened.unprotected;\n                target.encrypted_key = flattened.encrypted_key;\n                if (flattened.header) target.header = flattened.header;\n                continue;\n            }\n            const { encryptedKey, parameters } = await (0,_lib_encrypt_key_management_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(((_a = recipient.unprotectedHeader) === null || _a === void 0 ? void 0 : _a.alg) || ((_b = this._protectedHeader) === null || _b === void 0 ? void 0 : _b.alg) || ((_c = this._unprotectedHeader) === null || _c === void 0 ? void 0 : _c.alg), enc, recipient.key, cek, {\n                p2c\n            });\n            target.encrypted_key = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_5__.encode)(encryptedKey);\n            if (recipient.unprotectedHeader || parameters) target.header = {\n                ...recipient.unprotectedHeader,\n                ...parameters\n            };\n        }\n        return jwe;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwe/general/encrypt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwk/embedded.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwk/embedded.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EmbeddedJWK: () => (/* binding */ EmbeddedJWK)\n/* harmony export */ });\n/* harmony import */ var _key_import_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../key/import.js */ \"(middleware)/./node_modules/jose/dist/browser/key/import.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\n\n\nasync function EmbeddedJWK(protectedHeader, token) {\n    const joseHeader = {\n        ...protectedHeader,\n        ...token === null || token === void 0 ? void 0 : token.header\n    };\n    if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(joseHeader.jwk)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a JSON object');\n    }\n    const key = await (0,_key_import_js__WEBPACK_IMPORTED_MODULE_0__.importJWK)({\n        ...joseHeader.jwk,\n        ext: true\n    }, joseHeader.alg, true);\n    if (key instanceof Uint8Array || key.type !== \"public\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid('\"jwk\" (JSON Web Key) Header Parameter must be a public key');\n    }\n    return key;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3ay9lbWJlZGRlZC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZDO0FBQ0Y7QUFDSTtBQUN4QyxlQUFlRyxZQUFZQyxlQUFlLEVBQUVDLEtBQUs7SUFDcEQsTUFBTUMsYUFBYTtRQUNmLEdBQUdGLGVBQWU7UUFDbEIsR0FBR0MsVUFBVSxRQUFRQSxVQUFVLEtBQUssSUFBSSxLQUFLLElBQUlBLE1BQU1FLE1BQU07SUFDakU7SUFDQSxJQUFJLENBQUNOLDZEQUFRQSxDQUFDSyxXQUFXRSxHQUFHLEdBQUc7UUFDM0IsTUFBTSxJQUFJTix1REFBVUEsQ0FBQztJQUN6QjtJQUNBLE1BQU1PLE1BQU0sTUFBTVQseURBQVNBLENBQUM7UUFBRSxHQUFHTSxXQUFXRSxHQUFHO1FBQUVFLEtBQUs7SUFBSyxHQUFHSixXQUFXSyxHQUFHLEVBQUU7SUFDOUUsSUFBSUYsZUFBZUcsY0FBY0gsSUFBSUksSUFBSSxLQUFLLFVBQVU7UUFDcEQsTUFBTSxJQUFJWCx1REFBVUEsQ0FBQztJQUN6QjtJQUNBLE9BQU9PO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3ay9lbWJlZGRlZC5qcz8zYzRkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGltcG9ydEpXSyB9IGZyb20gJy4uL2tleS9pbXBvcnQuanMnO1xuaW1wb3J0IGlzT2JqZWN0IGZyb20gJy4uL2xpYi9pc19vYmplY3QuanMnO1xuaW1wb3J0IHsgSldTSW52YWxpZCB9IGZyb20gJy4uL3V0aWwvZXJyb3JzLmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBFbWJlZGRlZEpXSyhwcm90ZWN0ZWRIZWFkZXIsIHRva2VuKSB7XG4gICAgY29uc3Qgam9zZUhlYWRlciA9IHtcbiAgICAgICAgLi4ucHJvdGVjdGVkSGVhZGVyLFxuICAgICAgICAuLi50b2tlbiA9PT0gbnVsbCB8fCB0b2tlbiA9PT0gdm9pZCAwID8gdm9pZCAwIDogdG9rZW4uaGVhZGVyLFxuICAgIH07XG4gICAgaWYgKCFpc09iamVjdChqb3NlSGVhZGVyLmp3aykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEpXU0ludmFsaWQoJ1wiandrXCIgKEpTT04gV2ViIEtleSkgSGVhZGVyIFBhcmFtZXRlciBtdXN0IGJlIGEgSlNPTiBvYmplY3QnKTtcbiAgICB9XG4gICAgY29uc3Qga2V5ID0gYXdhaXQgaW1wb3J0SldLKHsgLi4uam9zZUhlYWRlci5qd2ssIGV4dDogdHJ1ZSB9LCBqb3NlSGVhZGVyLmFsZywgdHJ1ZSk7XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkgfHwga2V5LnR5cGUgIT09ICdwdWJsaWMnKSB7XG4gICAgICAgIHRocm93IG5ldyBKV1NJbnZhbGlkKCdcImp3a1wiIChKU09OIFdlYiBLZXkpIEhlYWRlciBQYXJhbWV0ZXIgbXVzdCBiZSBhIHB1YmxpYyBrZXknKTtcbiAgICB9XG4gICAgcmV0dXJuIGtleTtcbn1cbiJdLCJuYW1lcyI6WyJpbXBvcnRKV0siLCJpc09iamVjdCIsIkpXU0ludmFsaWQiLCJFbWJlZGRlZEpXSyIsInByb3RlY3RlZEhlYWRlciIsInRva2VuIiwiam9zZUhlYWRlciIsImhlYWRlciIsImp3ayIsImtleSIsImV4dCIsImFsZyIsIlVpbnQ4QXJyYXkiLCJ0eXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwk/embedded.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwk/thumbprint.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwk/thumbprint.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateJwkThumbprint: () => (/* binding */ calculateJwkThumbprint),\n/* harmony export */   calculateJwkThumbprintUri: () => (/* binding */ calculateJwkThumbprintUri)\n/* harmony export */ });\n/* harmony import */ var _runtime_digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/digest.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/digest.js\");\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n\n\n\n\n\nconst check = (value, description)=>{\n    if (typeof value !== \"string\" || !value) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWKInvalid(`${description} missing or invalid`);\n    }\n};\nasync function calculateJwkThumbprint(jwk, digestAlgorithm) {\n    if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(jwk)) {\n        throw new TypeError(\"JWK must be an object\");\n    }\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = \"sha256\";\n    if (digestAlgorithm !== \"sha256\" && digestAlgorithm !== \"sha384\" && digestAlgorithm !== \"sha512\") {\n        throw new TypeError('digestAlgorithm must one of \"sha256\", \"sha384\", or \"sha512\"');\n    }\n    let components;\n    switch(jwk.kty){\n        case \"EC\":\n            check(jwk.crv, '\"crv\" (Curve) Parameter');\n            check(jwk.x, '\"x\" (X Coordinate) Parameter');\n            check(jwk.y, '\"y\" (Y Coordinate) Parameter');\n            components = {\n                crv: jwk.crv,\n                kty: jwk.kty,\n                x: jwk.x,\n                y: jwk.y\n            };\n            break;\n        case \"OKP\":\n            check(jwk.crv, '\"crv\" (Subtype of Key Pair) Parameter');\n            check(jwk.x, '\"x\" (Public Key) Parameter');\n            components = {\n                crv: jwk.crv,\n                kty: jwk.kty,\n                x: jwk.x\n            };\n            break;\n        case \"RSA\":\n            check(jwk.e, '\"e\" (Exponent) Parameter');\n            check(jwk.n, '\"n\" (Modulus) Parameter');\n            components = {\n                e: jwk.e,\n                kty: jwk.kty,\n                n: jwk.n\n            };\n            break;\n        case \"oct\":\n            check(jwk.k, '\"k\" (Key Value) Parameter');\n            components = {\n                k: jwk.k,\n                kty: jwk.kty\n            };\n            break;\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JOSENotSupported('\"kty\" (Key Type) Parameter missing or unsupported');\n    }\n    const data = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_3__.encoder.encode(JSON.stringify(components));\n    return (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_1__.encode)(await (0,_runtime_digest_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(digestAlgorithm, data));\n}\nasync function calculateJwkThumbprintUri(jwk, digestAlgorithm) {\n    digestAlgorithm !== null && digestAlgorithm !== void 0 ? digestAlgorithm : digestAlgorithm = \"sha256\";\n    const thumbprint = await calculateJwkThumbprint(jwk, digestAlgorithm);\n    return `urn:ietf:params:oauth:jwk-thumbprint:sha-${digestAlgorithm.slice(-3)}:${thumbprint}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3ay90aHVtYnByaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMEM7QUFDb0I7QUFDRztBQUNoQjtBQUNOO0FBQzNDLE1BQU1PLFFBQVEsQ0FBQ0MsT0FBT0M7SUFDbEIsSUFBSSxPQUFPRCxVQUFVLFlBQVksQ0FBQ0EsT0FBTztRQUNyQyxNQUFNLElBQUlKLHVEQUFVQSxDQUFDLENBQUMsRUFBRUssWUFBWSxtQkFBbUIsQ0FBQztJQUM1RDtBQUNKO0FBQ08sZUFBZUMsdUJBQXVCQyxHQUFHLEVBQUVDLGVBQWU7SUFDN0QsSUFBSSxDQUFDTiw2REFBUUEsQ0FBQ0ssTUFBTTtRQUNoQixNQUFNLElBQUlFLFVBQVU7SUFDeEI7SUFDQUQsb0JBQW9CLFFBQVFBLG9CQUFvQixLQUFLLElBQUlBLGtCQUFtQkEsa0JBQWtCO0lBQzlGLElBQUlBLG9CQUFvQixZQUNwQkEsb0JBQW9CLFlBQ3BCQSxvQkFBb0IsVUFBVTtRQUM5QixNQUFNLElBQUlDLFVBQVU7SUFDeEI7SUFDQSxJQUFJQztJQUNKLE9BQVFILElBQUlJLEdBQUc7UUFDWCxLQUFLO1lBQ0RSLE1BQU1JLElBQUlLLEdBQUcsRUFBRTtZQUNmVCxNQUFNSSxJQUFJTSxDQUFDLEVBQUU7WUFDYlYsTUFBTUksSUFBSU8sQ0FBQyxFQUFFO1lBQ2JKLGFBQWE7Z0JBQUVFLEtBQUtMLElBQUlLLEdBQUc7Z0JBQUVELEtBQUtKLElBQUlJLEdBQUc7Z0JBQUVFLEdBQUdOLElBQUlNLENBQUM7Z0JBQUVDLEdBQUdQLElBQUlPLENBQUM7WUFBQztZQUM5RDtRQUNKLEtBQUs7WUFDRFgsTUFBTUksSUFBSUssR0FBRyxFQUFFO1lBQ2ZULE1BQU1JLElBQUlNLENBQUMsRUFBRTtZQUNiSCxhQUFhO2dCQUFFRSxLQUFLTCxJQUFJSyxHQUFHO2dCQUFFRCxLQUFLSixJQUFJSSxHQUFHO2dCQUFFRSxHQUFHTixJQUFJTSxDQUFDO1lBQUM7WUFDcEQ7UUFDSixLQUFLO1lBQ0RWLE1BQU1JLElBQUlRLENBQUMsRUFBRTtZQUNiWixNQUFNSSxJQUFJUyxDQUFDLEVBQUU7WUFDYk4sYUFBYTtnQkFBRUssR0FBR1IsSUFBSVEsQ0FBQztnQkFBRUosS0FBS0osSUFBSUksR0FBRztnQkFBRUssR0FBR1QsSUFBSVMsQ0FBQztZQUFDO1lBQ2hEO1FBQ0osS0FBSztZQUNEYixNQUFNSSxJQUFJVSxDQUFDLEVBQUU7WUFDYlAsYUFBYTtnQkFBRU8sR0FBR1YsSUFBSVUsQ0FBQztnQkFBRU4sS0FBS0osSUFBSUksR0FBRztZQUFDO1lBQ3RDO1FBQ0o7WUFDSSxNQUFNLElBQUlaLDZEQUFnQkEsQ0FBQztJQUNuQztJQUNBLE1BQU1tQixPQUFPakIseURBQU9BLENBQUNKLE1BQU0sQ0FBQ3NCLEtBQUtDLFNBQVMsQ0FBQ1Y7SUFDM0MsT0FBT1osNkRBQVNBLENBQUMsTUFBTUYsOERBQU1BLENBQUNZLGlCQUFpQlU7QUFDbkQ7QUFDTyxlQUFlRywwQkFBMEJkLEdBQUcsRUFBRUMsZUFBZTtJQUNoRUEsb0JBQW9CLFFBQVFBLG9CQUFvQixLQUFLLElBQUlBLGtCQUFtQkEsa0JBQWtCO0lBQzlGLE1BQU1jLGFBQWEsTUFBTWhCLHVCQUF1QkMsS0FBS0M7SUFDckQsT0FBTyxDQUFDLHlDQUF5QyxFQUFFQSxnQkFBZ0JlLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxFQUFFRCxXQUFXLENBQUM7QUFDaEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3ay90aHVtYnByaW50LmpzPzExYWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRpZ2VzdCBmcm9tICcuLi9ydW50aW1lL2RpZ2VzdC5qcyc7XG5pbXBvcnQgeyBlbmNvZGUgYXMgYmFzZTY0dXJsIH0gZnJvbSAnLi4vcnVudGltZS9iYXNlNjR1cmwuanMnO1xuaW1wb3J0IHsgSk9TRU5vdFN1cHBvcnRlZCwgSldLSW52YWxpZCB9IGZyb20gJy4uL3V0aWwvZXJyb3JzLmpzJztcbmltcG9ydCB7IGVuY29kZXIgfSBmcm9tICcuLi9saWIvYnVmZmVyX3V0aWxzLmpzJztcbmltcG9ydCBpc09iamVjdCBmcm9tICcuLi9saWIvaXNfb2JqZWN0LmpzJztcbmNvbnN0IGNoZWNrID0gKHZhbHVlLCBkZXNjcmlwdGlvbikgPT4ge1xuICAgIGlmICh0eXBlb2YgdmFsdWUgIT09ICdzdHJpbmcnIHx8ICF2YWx1ZSkge1xuICAgICAgICB0aHJvdyBuZXcgSldLSW52YWxpZChgJHtkZXNjcmlwdGlvbn0gbWlzc2luZyBvciBpbnZhbGlkYCk7XG4gICAgfVxufTtcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjYWxjdWxhdGVKd2tUaHVtYnByaW50KGp3aywgZGlnZXN0QWxnb3JpdGhtKSB7XG4gICAgaWYgKCFpc09iamVjdChqd2spKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0pXSyBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICAgIH1cbiAgICBkaWdlc3RBbGdvcml0aG0gIT09IG51bGwgJiYgZGlnZXN0QWxnb3JpdGhtICE9PSB2b2lkIDAgPyBkaWdlc3RBbGdvcml0aG0gOiAoZGlnZXN0QWxnb3JpdGhtID0gJ3NoYTI1NicpO1xuICAgIGlmIChkaWdlc3RBbGdvcml0aG0gIT09ICdzaGEyNTYnICYmXG4gICAgICAgIGRpZ2VzdEFsZ29yaXRobSAhPT0gJ3NoYTM4NCcgJiZcbiAgICAgICAgZGlnZXN0QWxnb3JpdGhtICE9PSAnc2hhNTEyJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdkaWdlc3RBbGdvcml0aG0gbXVzdCBvbmUgb2YgXCJzaGEyNTZcIiwgXCJzaGEzODRcIiwgb3IgXCJzaGE1MTJcIicpO1xuICAgIH1cbiAgICBsZXQgY29tcG9uZW50cztcbiAgICBzd2l0Y2ggKGp3ay5rdHkpIHtcbiAgICAgICAgY2FzZSAnRUMnOlxuICAgICAgICAgICAgY2hlY2soandrLmNydiwgJ1wiY3J2XCIgKEN1cnZlKSBQYXJhbWV0ZXInKTtcbiAgICAgICAgICAgIGNoZWNrKGp3ay54LCAnXCJ4XCIgKFggQ29vcmRpbmF0ZSkgUGFyYW1ldGVyJyk7XG4gICAgICAgICAgICBjaGVjayhqd2sueSwgJ1wieVwiIChZIENvb3JkaW5hdGUpIFBhcmFtZXRlcicpO1xuICAgICAgICAgICAgY29tcG9uZW50cyA9IHsgY3J2OiBqd2suY3J2LCBrdHk6IGp3ay5rdHksIHg6IGp3ay54LCB5OiBqd2sueSB9O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ09LUCc6XG4gICAgICAgICAgICBjaGVjayhqd2suY3J2LCAnXCJjcnZcIiAoU3VidHlwZSBvZiBLZXkgUGFpcikgUGFyYW1ldGVyJyk7XG4gICAgICAgICAgICBjaGVjayhqd2sueCwgJ1wieFwiIChQdWJsaWMgS2V5KSBQYXJhbWV0ZXInKTtcbiAgICAgICAgICAgIGNvbXBvbmVudHMgPSB7IGNydjogandrLmNydiwga3R5OiBqd2sua3R5LCB4OiBqd2sueCB9O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ1JTQSc6XG4gICAgICAgICAgICBjaGVjayhqd2suZSwgJ1wiZVwiIChFeHBvbmVudCkgUGFyYW1ldGVyJyk7XG4gICAgICAgICAgICBjaGVjayhqd2subiwgJ1wiblwiIChNb2R1bHVzKSBQYXJhbWV0ZXInKTtcbiAgICAgICAgICAgIGNvbXBvbmVudHMgPSB7IGU6IGp3ay5lLCBrdHk6IGp3ay5rdHksIG46IGp3ay5uIH07XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSAnb2N0JzpcbiAgICAgICAgICAgIGNoZWNrKGp3ay5rLCAnXCJrXCIgKEtleSBWYWx1ZSkgUGFyYW1ldGVyJyk7XG4gICAgICAgICAgICBjb21wb25lbnRzID0geyBrOiBqd2suaywga3R5OiBqd2sua3R5IH07XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBKT1NFTm90U3VwcG9ydGVkKCdcImt0eVwiIChLZXkgVHlwZSkgUGFyYW1ldGVyIG1pc3Npbmcgb3IgdW5zdXBwb3J0ZWQnKTtcbiAgICB9XG4gICAgY29uc3QgZGF0YSA9IGVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KGNvbXBvbmVudHMpKTtcbiAgICByZXR1cm4gYmFzZTY0dXJsKGF3YWl0IGRpZ2VzdChkaWdlc3RBbGdvcml0aG0sIGRhdGEpKTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjYWxjdWxhdGVKd2tUaHVtYnByaW50VXJpKGp3aywgZGlnZXN0QWxnb3JpdGhtKSB7XG4gICAgZGlnZXN0QWxnb3JpdGhtICE9PSBudWxsICYmIGRpZ2VzdEFsZ29yaXRobSAhPT0gdm9pZCAwID8gZGlnZXN0QWxnb3JpdGhtIDogKGRpZ2VzdEFsZ29yaXRobSA9ICdzaGEyNTYnKTtcbiAgICBjb25zdCB0aHVtYnByaW50ID0gYXdhaXQgY2FsY3VsYXRlSndrVGh1bWJwcmludChqd2ssIGRpZ2VzdEFsZ29yaXRobSk7XG4gICAgcmV0dXJuIGB1cm46aWV0ZjpwYXJhbXM6b2F1dGg6andrLXRodW1icHJpbnQ6c2hhLSR7ZGlnZXN0QWxnb3JpdGhtLnNsaWNlKC0zKX06JHt0aHVtYnByaW50fWA7XG59XG4iXSwibmFtZXMiOlsiZGlnZXN0IiwiZW5jb2RlIiwiYmFzZTY0dXJsIiwiSk9TRU5vdFN1cHBvcnRlZCIsIkpXS0ludmFsaWQiLCJlbmNvZGVyIiwiaXNPYmplY3QiLCJjaGVjayIsInZhbHVlIiwiZGVzY3JpcHRpb24iLCJjYWxjdWxhdGVKd2tUaHVtYnByaW50IiwiandrIiwiZGlnZXN0QWxnb3JpdGhtIiwiVHlwZUVycm9yIiwiY29tcG9uZW50cyIsImt0eSIsImNydiIsIngiLCJ5IiwiZSIsIm4iLCJrIiwiZGF0YSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjYWxjdWxhdGVKd2tUaHVtYnByaW50VXJpIiwidGh1bWJwcmludCIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwk/thumbprint.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwks/local.js":
/*!******************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwks/local.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalJWKSet: () => (/* binding */ LocalJWKSet),\n/* harmony export */   createLocalJWKSet: () => (/* binding */ createLocalJWKSet),\n/* harmony export */   isJWKSLike: () => (/* binding */ isJWKSLike)\n/* harmony export */ });\n/* harmony import */ var _key_import_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../key/import.js */ \"(middleware)/./node_modules/jose/dist/browser/key/import.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n\n\n\nfunction getKtyFromAlg(alg) {\n    switch(typeof alg === \"string\" && alg.slice(0, 2)){\n        case \"RS\":\n        case \"PS\":\n            return \"RSA\";\n        case \"ES\":\n            return \"EC\";\n        case \"Ed\":\n            return \"OKP\";\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported('Unsupported \"alg\" value for a JSON Web Key Set');\n    }\n}\nfunction isJWKSLike(jwks) {\n    return jwks && typeof jwks === \"object\" && Array.isArray(jwks.keys) && jwks.keys.every(isJWKLike);\n}\nfunction isJWKLike(key) {\n    return (0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(key);\n}\nfunction clone(obj) {\n    if (typeof structuredClone === \"function\") {\n        return structuredClone(obj);\n    }\n    return JSON.parse(JSON.stringify(obj));\n}\nclass LocalJWKSet {\n    constructor(jwks){\n        this._cached = new WeakMap();\n        if (!isJWKSLike(jwks)) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWKSInvalid(\"JSON Web Key Set malformed\");\n        }\n        this._jwks = clone(jwks);\n    }\n    async getKey(protectedHeader, token) {\n        const { alg, kid } = {\n            ...protectedHeader,\n            ...token === null || token === void 0 ? void 0 : token.header\n        };\n        const kty = getKtyFromAlg(alg);\n        const candidates = this._jwks.keys.filter((jwk)=>{\n            let candidate = kty === jwk.kty;\n            if (candidate && typeof kid === \"string\") {\n                candidate = kid === jwk.kid;\n            }\n            if (candidate && typeof jwk.alg === \"string\") {\n                candidate = alg === jwk.alg;\n            }\n            if (candidate && typeof jwk.use === \"string\") {\n                candidate = jwk.use === \"sig\";\n            }\n            if (candidate && Array.isArray(jwk.key_ops)) {\n                candidate = jwk.key_ops.includes(\"verify\");\n            }\n            if (candidate && alg === \"EdDSA\") {\n                candidate = jwk.crv === \"Ed25519\" || jwk.crv === \"Ed448\";\n            }\n            if (candidate) {\n                switch(alg){\n                    case \"ES256\":\n                        candidate = jwk.crv === \"P-256\";\n                        break;\n                    case \"ES256K\":\n                        candidate = jwk.crv === \"secp256k1\";\n                        break;\n                    case \"ES384\":\n                        candidate = jwk.crv === \"P-384\";\n                        break;\n                    case \"ES512\":\n                        candidate = jwk.crv === \"P-521\";\n                        break;\n                }\n            }\n            return candidate;\n        });\n        const { 0: jwk, length } = candidates;\n        if (length === 0) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWKSNoMatchingKey();\n        } else if (length !== 1) {\n            const error = new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWKSMultipleMatchingKeys();\n            const { _cached } = this;\n            error[Symbol.asyncIterator] = async function*() {\n                for (const jwk of candidates){\n                    try {\n                        yield await importWithAlgCache(_cached, jwk, alg);\n                    } catch (_a) {\n                        continue;\n                    }\n                }\n            };\n            throw error;\n        }\n        return importWithAlgCache(this._cached, jwk, alg);\n    }\n}\nasync function importWithAlgCache(cache, jwk, alg) {\n    const cached = cache.get(jwk) || cache.set(jwk, {}).get(jwk);\n    if (cached[alg] === undefined) {\n        const key = await (0,_key_import_js__WEBPACK_IMPORTED_MODULE_0__.importJWK)({\n            ...jwk,\n            ext: true\n        }, alg);\n        if (key instanceof Uint8Array || key.type !== \"public\") {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWKSInvalid(\"JSON Web Key Set members must be public keys\");\n        }\n        cached[alg] = key;\n    }\n    return cached[alg];\n}\nfunction createLocalJWKSet(jwks) {\n    const set = new LocalJWKSet(jwks);\n    return async function(protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwks/local.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwks/remote.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwks/remote.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRemoteJWKSet: () => (/* binding */ createRemoteJWKSet)\n/* harmony export */ });\n/* harmony import */ var _runtime_fetch_jwks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/fetch_jwks.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/fetch_jwks.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _local_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./local.js */ \"(middleware)/./node_modules/jose/dist/browser/jwks/local.js\");\n\n\n\nfunction isCloudflareWorkers() {\n    return typeof WebSocketPair !== \"undefined\" || typeof navigator !== \"undefined\" && navigator.userAgent === \"Cloudflare-Workers\" ||  true && \"edge-runtime\" === \"vercel\";\n}\nclass RemoteJWKSet extends _local_js__WEBPACK_IMPORTED_MODULE_2__.LocalJWKSet {\n    constructor(url, options){\n        super({\n            keys: []\n        });\n        this._jwks = undefined;\n        if (!(url instanceof URL)) {\n            throw new TypeError(\"url must be an instance of URL\");\n        }\n        this._url = new URL(url.href);\n        this._options = {\n            agent: options === null || options === void 0 ? void 0 : options.agent,\n            headers: options === null || options === void 0 ? void 0 : options.headers\n        };\n        this._timeoutDuration = typeof (options === null || options === void 0 ? void 0 : options.timeoutDuration) === \"number\" ? options === null || options === void 0 ? void 0 : options.timeoutDuration : 5000;\n        this._cooldownDuration = typeof (options === null || options === void 0 ? void 0 : options.cooldownDuration) === \"number\" ? options === null || options === void 0 ? void 0 : options.cooldownDuration : 30000;\n        this._cacheMaxAge = typeof (options === null || options === void 0 ? void 0 : options.cacheMaxAge) === \"number\" ? options === null || options === void 0 ? void 0 : options.cacheMaxAge : 600000;\n    }\n    coolingDown() {\n        return typeof this._jwksTimestamp === \"number\" ? Date.now() < this._jwksTimestamp + this._cooldownDuration : false;\n    }\n    fresh() {\n        return typeof this._jwksTimestamp === \"number\" ? Date.now() < this._jwksTimestamp + this._cacheMaxAge : false;\n    }\n    async getKey(protectedHeader, token) {\n        if (!this._jwks || !this.fresh()) {\n            await this.reload();\n        }\n        try {\n            return await super.getKey(protectedHeader, token);\n        } catch (err) {\n            if (err instanceof _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWKSNoMatchingKey) {\n                if (this.coolingDown() === false) {\n                    await this.reload();\n                    return super.getKey(protectedHeader, token);\n                }\n            }\n            throw err;\n        }\n    }\n    async reload() {\n        if (this._pendingFetch && isCloudflareWorkers()) {\n            this._pendingFetch = undefined;\n        }\n        this._pendingFetch || (this._pendingFetch = (0,_runtime_fetch_jwks_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(this._url, this._timeoutDuration, this._options).then((json)=>{\n            if (!(0,_local_js__WEBPACK_IMPORTED_MODULE_2__.isJWKSLike)(json)) {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWKSInvalid(\"JSON Web Key Set malformed\");\n            }\n            this._jwks = {\n                keys: json.keys\n            };\n            this._jwksTimestamp = Date.now();\n            this._pendingFetch = undefined;\n        }).catch((err)=>{\n            this._pendingFetch = undefined;\n            throw err;\n        }));\n        await this._pendingFetch;\n    }\n}\nfunction createRemoteJWKSet(url, options) {\n    const set = new RemoteJWKSet(url, options);\n    return async function(protectedHeader, token) {\n        return set.getKey(protectedHeader, token);\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwks/remote.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jws/compact/sign.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jws/compact/sign.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompactSign: () => (/* binding */ CompactSign)\n/* harmony export */ });\n/* harmony import */ var _flattened_sign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flattened/sign.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/flattened/sign.js\");\n\nclass CompactSign {\n    constructor(payload){\n        this._flattened = new _flattened_sign_js__WEBPACK_IMPORTED_MODULE_0__.FlattenedSign(payload);\n    }\n    setProtectedHeader(protectedHeader) {\n        this._flattened.setProtectedHeader(protectedHeader);\n        return this;\n    }\n    async sign(key, options) {\n        const jws = await this._flattened.sign(key, options);\n        if (jws.payload === undefined) {\n            throw new TypeError(\"use the flattened module for creating JWS with b64: false\");\n        }\n        return `${jws.protected}.${jws.payload}.${jws.signature}`;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3cy9jb21wYWN0L3NpZ24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFDOUMsTUFBTUM7SUFDVEMsWUFBWUMsT0FBTyxDQUFFO1FBQ2pCLElBQUksQ0FBQ0MsVUFBVSxHQUFHLElBQUlKLDZEQUFhQSxDQUFDRztJQUN4QztJQUNBRSxtQkFBbUJDLGVBQWUsRUFBRTtRQUNoQyxJQUFJLENBQUNGLFVBQVUsQ0FBQ0Msa0JBQWtCLENBQUNDO1FBQ25DLE9BQU8sSUFBSTtJQUNmO0lBQ0EsTUFBTUMsS0FBS0MsR0FBRyxFQUFFQyxPQUFPLEVBQUU7UUFDckIsTUFBTUMsTUFBTSxNQUFNLElBQUksQ0FBQ04sVUFBVSxDQUFDRyxJQUFJLENBQUNDLEtBQUtDO1FBQzVDLElBQUlDLElBQUlQLE9BQU8sS0FBS1EsV0FBVztZQUMzQixNQUFNLElBQUlDLFVBQVU7UUFDeEI7UUFDQSxPQUFPLENBQUMsRUFBRUYsSUFBSUcsU0FBUyxDQUFDLENBQUMsRUFBRUgsSUFBSVAsT0FBTyxDQUFDLENBQUMsRUFBRU8sSUFBSUksU0FBUyxDQUFDLENBQUM7SUFDN0Q7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvandzL2NvbXBhY3Qvc2lnbi5qcz85MTBlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZsYXR0ZW5lZFNpZ24gfSBmcm9tICcuLi9mbGF0dGVuZWQvc2lnbi5qcyc7XG5leHBvcnQgY2xhc3MgQ29tcGFjdFNpZ24ge1xuICAgIGNvbnN0cnVjdG9yKHBheWxvYWQpIHtcbiAgICAgICAgdGhpcy5fZmxhdHRlbmVkID0gbmV3IEZsYXR0ZW5lZFNpZ24ocGF5bG9hZCk7XG4gICAgfVxuICAgIHNldFByb3RlY3RlZEhlYWRlcihwcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgdGhpcy5fZmxhdHRlbmVkLnNldFByb3RlY3RlZEhlYWRlcihwcm90ZWN0ZWRIZWFkZXIpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgYXN5bmMgc2lnbihrZXksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgandzID0gYXdhaXQgdGhpcy5fZmxhdHRlbmVkLnNpZ24oa2V5LCBvcHRpb25zKTtcbiAgICAgICAgaWYgKGp3cy5wYXlsb2FkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3VzZSB0aGUgZmxhdHRlbmVkIG1vZHVsZSBmb3IgY3JlYXRpbmcgSldTIHdpdGggYjY0OiBmYWxzZScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBgJHtqd3MucHJvdGVjdGVkfS4ke2p3cy5wYXlsb2FkfS4ke2p3cy5zaWduYXR1cmV9YDtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiRmxhdHRlbmVkU2lnbiIsIkNvbXBhY3RTaWduIiwiY29uc3RydWN0b3IiLCJwYXlsb2FkIiwiX2ZsYXR0ZW5lZCIsInNldFByb3RlY3RlZEhlYWRlciIsInByb3RlY3RlZEhlYWRlciIsInNpZ24iLCJrZXkiLCJvcHRpb25zIiwiandzIiwidW5kZWZpbmVkIiwiVHlwZUVycm9yIiwicHJvdGVjdGVkIiwic2lnbmF0dXJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jws/compact/sign.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jws/compact/verify.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jws/compact/verify.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   compactVerify: () => (/* binding */ compactVerify)\n/* harmony export */ });\n/* harmony import */ var _flattened_verify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flattened/verify.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/flattened/verify.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n\n\n\nasync function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_2__.decoder.decode(jws);\n    }\n    if (typeof jws !== \"string\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWSInvalid(\"Compact JWS must be a string or Uint8Array\");\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split(\".\");\n    if (length !== 3) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWSInvalid(\"Invalid Compact JWS\");\n    }\n    const verified = await (0,_flattened_verify_js__WEBPACK_IMPORTED_MODULE_0__.flattenedVerify)({\n        payload,\n        protected: protectedHeader,\n        signature\n    }, key, options);\n    const result = {\n        payload: verified.payload,\n        protectedHeader: verified.protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: verified.key\n        };\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3cy9jb21wYWN0L3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlEO0FBQ1A7QUFDRTtBQUM3QyxlQUFlRyxjQUFjQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsT0FBTztJQUNqRCxJQUFJRixlQUFlRyxZQUFZO1FBQzNCSCxNQUFNRix5REFBT0EsQ0FBQ00sTUFBTSxDQUFDSjtJQUN6QjtJQUNBLElBQUksT0FBT0EsUUFBUSxVQUFVO1FBQ3pCLE1BQU0sSUFBSUgsdURBQVVBLENBQUM7SUFDekI7SUFDQSxNQUFNLEVBQUUsR0FBR1EsZUFBZSxFQUFFLEdBQUdDLE9BQU8sRUFBRSxHQUFHQyxTQUFTLEVBQUVDLE1BQU0sRUFBRSxHQUFHUixJQUFJUyxLQUFLLENBQUM7SUFDM0UsSUFBSUQsV0FBVyxHQUFHO1FBQ2QsTUFBTSxJQUFJWCx1REFBVUEsQ0FBQztJQUN6QjtJQUNBLE1BQU1hLFdBQVcsTUFBTWQscUVBQWVBLENBQUM7UUFBRVU7UUFBU0ssV0FBV047UUFBaUJFO0lBQVUsR0FBR04sS0FBS0M7SUFDaEcsTUFBTVUsU0FBUztRQUFFTixTQUFTSSxTQUFTSixPQUFPO1FBQUVELGlCQUFpQkssU0FBU0wsZUFBZTtJQUFDO0lBQ3RGLElBQUksT0FBT0osUUFBUSxZQUFZO1FBQzNCLE9BQU87WUFBRSxHQUFHVyxNQUFNO1lBQUVYLEtBQUtTLFNBQVNULEdBQUc7UUFBQztJQUMxQztJQUNBLE9BQU9XO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3cy9jb21wYWN0L3ZlcmlmeS5qcz9jYTgyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZsYXR0ZW5lZFZlcmlmeSB9IGZyb20gJy4uL2ZsYXR0ZW5lZC92ZXJpZnkuanMnO1xuaW1wb3J0IHsgSldTSW52YWxpZCB9IGZyb20gJy4uLy4uL3V0aWwvZXJyb3JzLmpzJztcbmltcG9ydCB7IGRlY29kZXIgfSBmcm9tICcuLi8uLi9saWIvYnVmZmVyX3V0aWxzLmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb21wYWN0VmVyaWZ5KGp3cywga2V5LCBvcHRpb25zKSB7XG4gICAgaWYgKGp3cyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgandzID0gZGVjb2Rlci5kZWNvZGUoandzKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBqd3MgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBKV1NJbnZhbGlkKCdDb21wYWN0IEpXUyBtdXN0IGJlIGEgc3RyaW5nIG9yIFVpbnQ4QXJyYXknKTtcbiAgICB9XG4gICAgY29uc3QgeyAwOiBwcm90ZWN0ZWRIZWFkZXIsIDE6IHBheWxvYWQsIDI6IHNpZ25hdHVyZSwgbGVuZ3RoIH0gPSBqd3Muc3BsaXQoJy4nKTtcbiAgICBpZiAobGVuZ3RoICE9PSAzKSB7XG4gICAgICAgIHRocm93IG5ldyBKV1NJbnZhbGlkKCdJbnZhbGlkIENvbXBhY3QgSldTJyk7XG4gICAgfVxuICAgIGNvbnN0IHZlcmlmaWVkID0gYXdhaXQgZmxhdHRlbmVkVmVyaWZ5KHsgcGF5bG9hZCwgcHJvdGVjdGVkOiBwcm90ZWN0ZWRIZWFkZXIsIHNpZ25hdHVyZSB9LCBrZXksIG9wdGlvbnMpO1xuICAgIGNvbnN0IHJlc3VsdCA9IHsgcGF5bG9hZDogdmVyaWZpZWQucGF5bG9hZCwgcHJvdGVjdGVkSGVhZGVyOiB2ZXJpZmllZC5wcm90ZWN0ZWRIZWFkZXIgfTtcbiAgICBpZiAodHlwZW9mIGtleSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4geyAuLi5yZXN1bHQsIGtleTogdmVyaWZpZWQua2V5IH07XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4iXSwibmFtZXMiOlsiZmxhdHRlbmVkVmVyaWZ5IiwiSldTSW52YWxpZCIsImRlY29kZXIiLCJjb21wYWN0VmVyaWZ5IiwiandzIiwia2V5Iiwib3B0aW9ucyIsIlVpbnQ4QXJyYXkiLCJkZWNvZGUiLCJwcm90ZWN0ZWRIZWFkZXIiLCJwYXlsb2FkIiwic2lnbmF0dXJlIiwibGVuZ3RoIiwic3BsaXQiLCJ2ZXJpZmllZCIsInByb3RlY3RlZCIsInJlc3VsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jws/compact/verify.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jws/flattened/sign.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jws/flattened/sign.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlattenedSign: () => (/* binding */ FlattenedSign)\n/* harmony export */ });\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _runtime_sign_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../runtime/sign.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/sign.js\");\n/* harmony import */ var _lib_is_disjoint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_disjoint.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_check_key_type_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../lib/check_key_type.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/check_key_type.js\");\n/* harmony import */ var _lib_validate_crit_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/validate_crit.js\");\n\n\n\n\n\n\n\nclass FlattenedSign {\n    constructor(payload){\n        if (!(payload instanceof Uint8Array)) {\n            throw new TypeError(\"payload must be an instance of Uint8Array\");\n        }\n        this._payload = payload;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this._unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this._unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        if (!this._protectedHeader && !this._unprotectedHeader) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWSInvalid(\"either setProtectedHeader or setUnprotectedHeader must be called before #sign()\");\n        }\n        if (!(0,_lib_is_disjoint_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(this._protectedHeader, this._unprotectedHeader)) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWSInvalid(\"JWS Protected and JWS Unprotected Header Parameter names must be disjoint\");\n        }\n        const joseHeader = {\n            ...this._protectedHeader,\n            ...this._unprotectedHeader\n        };\n        const extensions = (0,_lib_validate_crit_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(_util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWSInvalid, new Map([\n            [\n                \"b64\",\n                true\n            ]\n        ]), options === null || options === void 0 ? void 0 : options.crit, this._protectedHeader, joseHeader);\n        let b64 = true;\n        if (extensions.has(\"b64\")) {\n            b64 = this._protectedHeader.b64;\n            if (typeof b64 !== \"boolean\") {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n            }\n        }\n        const { alg } = joseHeader;\n        if (typeof alg !== \"string\" || !alg) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n        }\n        (0,_lib_check_key_type_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(alg, key, \"sign\");\n        let payload = this._payload;\n        if (b64) {\n            payload = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_4__.encoder.encode((0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode)(payload));\n        }\n        let protectedHeader;\n        if (this._protectedHeader) {\n            protectedHeader = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_4__.encoder.encode((0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode)(JSON.stringify(this._protectedHeader)));\n        } else {\n            protectedHeader = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_4__.encoder.encode(\"\");\n        }\n        const data = (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_4__.concat)(protectedHeader, _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_4__.encoder.encode(\".\"), payload);\n        const signature = await (0,_runtime_sign_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alg, key, data);\n        const jws = {\n            signature: (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode)(signature),\n            payload: \"\"\n        };\n        if (b64) {\n            jws.payload = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_4__.decoder.decode(payload);\n        }\n        if (this._unprotectedHeader) {\n            jws.header = this._unprotectedHeader;\n        }\n        if (this._protectedHeader) {\n            jws.protected = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_4__.decoder.decode(protectedHeader);\n        }\n        return jws;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jws/flattened/sign.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jws/flattened/verify.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jws/flattened/verify.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flattenedVerify: () => (/* binding */ flattenedVerify)\n/* harmony export */ });\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _runtime_verify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../runtime/verify.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/verify.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_is_disjoint_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../lib/is_disjoint.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_disjoint.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n/* harmony import */ var _lib_check_key_type_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../lib/check_key_type.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/check_key_type.js\");\n/* harmony import */ var _lib_validate_crit_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../lib/validate_crit.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/validate_crit.js\");\n/* harmony import */ var _lib_validate_algorithms_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../lib/validate_algorithms.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/validate_algorithms.js\");\n\n\n\n\n\n\n\n\n\nasync function flattenedVerify(jws, key, options) {\n    var _a;\n    if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(jws)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"Flattened JWS must be an object\");\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== \"string\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"JWS Protected Header incorrect type\");\n    }\n    if (jws.payload === undefined) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"JWS Payload missing\");\n    }\n    if (typeof jws.signature !== \"string\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"JWS Signature missing or incorrect type\");\n    }\n    if (jws.header !== undefined && !(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(jws.header)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"JWS Unprotected Header incorrect type\");\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(jws.protected);\n            parsedProt = JSON.parse(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_3__.decoder.decode(protectedHeader));\n        } catch (_b) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"JWS Protected Header is invalid\");\n        }\n    }\n    if (!(0,_lib_is_disjoint_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(parsedProt, jws.header)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"JWS Protected and JWS Unprotected Header Parameter names must be disjoint\");\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header\n    };\n    const extensions = (0,_lib_validate_crit_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(_util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid, new Map([\n        [\n            \"b64\",\n            true\n        ]\n    ]), options === null || options === void 0 ? void 0 : options.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has(\"b64\")) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== \"boolean\") {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== \"string\" || !alg) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && (0,_lib_validate_algorithms_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(\"algorithms\", options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== \"string\") {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"JWS Payload must be a string\");\n        }\n    } else if (typeof jws.payload !== \"string\" && !(jws.payload instanceof Uint8Array)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"JWS Payload must be a string or an Uint8Array instance\");\n    }\n    let resolvedKey = false;\n    if (typeof key === \"function\") {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    (0,_lib_check_key_type_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(alg, key, \"verify\");\n    const data = (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_3__.concat)(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_3__.encoder.encode((_a = jws.protected) !== null && _a !== void 0 ? _a : \"\"), _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_3__.encoder.encode(\".\"), typeof jws.payload === \"string\" ? _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_3__.encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(jws.signature);\n    } catch (_c) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"Failed to base64url decode the signature\");\n    }\n    const verified = await (0,_runtime_verify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(alg, key, signature, data);\n    if (!verified) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(jws.payload);\n        } catch (_d) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWSInvalid(\"Failed to base64url decode the payload\");\n        }\n    } else if (typeof jws.payload === \"string\") {\n        payload = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_3__.encoder.encode(jws.payload);\n    } else {\n        payload = jws.payload;\n    }\n    const result = {\n        payload\n    };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return {\n            ...result,\n            key\n        };\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jws/flattened/verify.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jws/general/sign.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jws/general/sign.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GeneralSign: () => (/* binding */ GeneralSign)\n/* harmony export */ });\n/* harmony import */ var _flattened_sign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flattened/sign.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/flattened/sign.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\n\nclass IndividualSignature {\n    constructor(sig, key, options){\n        this.parent = sig;\n        this.key = key;\n        this.options = options;\n    }\n    setProtectedHeader(protectedHeader) {\n        if (this.protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this.protectedHeader = protectedHeader;\n        return this;\n    }\n    setUnprotectedHeader(unprotectedHeader) {\n        if (this.unprotectedHeader) {\n            throw new TypeError(\"setUnprotectedHeader can only be called once\");\n        }\n        this.unprotectedHeader = unprotectedHeader;\n        return this;\n    }\n    addSignature(...args) {\n        return this.parent.addSignature(...args);\n    }\n    sign(...args) {\n        return this.parent.sign(...args);\n    }\n    done() {\n        return this.parent;\n    }\n}\nclass GeneralSign {\n    constructor(payload){\n        this._signatures = [];\n        this._payload = payload;\n    }\n    addSignature(key, options) {\n        const signature = new IndividualSignature(this, key, options);\n        this._signatures.push(signature);\n        return signature;\n    }\n    async sign() {\n        if (!this._signatures.length) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWSInvalid(\"at least one signature must be added\");\n        }\n        const jws = {\n            signatures: [],\n            payload: \"\"\n        };\n        for(let i = 0; i < this._signatures.length; i++){\n            const signature = this._signatures[i];\n            const flattened = new _flattened_sign_js__WEBPACK_IMPORTED_MODULE_0__.FlattenedSign(this._payload);\n            flattened.setProtectedHeader(signature.protectedHeader);\n            flattened.setUnprotectedHeader(signature.unprotectedHeader);\n            const { payload, ...rest } = await flattened.sign(signature.key, signature.options);\n            if (i === 0) {\n                jws.payload = payload;\n            } else if (jws.payload !== payload) {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWSInvalid(\"inconsistent use of JWS Unencoded Payload (RFC7797)\");\n            }\n            jws.signatures.push(rest);\n        }\n        return jws;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3cy9nZW5lcmFsL3NpZ24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFEO0FBQ0g7QUFDbEQsTUFBTUU7SUFDRkMsWUFBWUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU8sQ0FBRTtRQUMzQixJQUFJLENBQUNDLE1BQU0sR0FBR0g7UUFDZCxJQUFJLENBQUNDLEdBQUcsR0FBR0E7UUFDWCxJQUFJLENBQUNDLE9BQU8sR0FBR0E7SUFDbkI7SUFDQUUsbUJBQW1CQyxlQUFlLEVBQUU7UUFDaEMsSUFBSSxJQUFJLENBQUNBLGVBQWUsRUFBRTtZQUN0QixNQUFNLElBQUlDLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNELGVBQWUsR0FBR0E7UUFDdkIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUscUJBQXFCQyxpQkFBaUIsRUFBRTtRQUNwQyxJQUFJLElBQUksQ0FBQ0EsaUJBQWlCLEVBQUU7WUFDeEIsTUFBTSxJQUFJRixVQUFVO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDRSxpQkFBaUIsR0FBR0E7UUFDekIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUMsYUFBYSxHQUFHQyxJQUFJLEVBQUU7UUFDbEIsT0FBTyxJQUFJLENBQUNQLE1BQU0sQ0FBQ00sWUFBWSxJQUFJQztJQUN2QztJQUNBQyxLQUFLLEdBQUdELElBQUksRUFBRTtRQUNWLE9BQU8sSUFBSSxDQUFDUCxNQUFNLENBQUNRLElBQUksSUFBSUQ7SUFDL0I7SUFDQUUsT0FBTztRQUNILE9BQU8sSUFBSSxDQUFDVCxNQUFNO0lBQ3RCO0FBQ0o7QUFDTyxNQUFNVTtJQUNUZCxZQUFZZSxPQUFPLENBQUU7UUFDakIsSUFBSSxDQUFDQyxXQUFXLEdBQUcsRUFBRTtRQUNyQixJQUFJLENBQUNDLFFBQVEsR0FBR0Y7SUFDcEI7SUFDQUwsYUFBYVIsR0FBRyxFQUFFQyxPQUFPLEVBQUU7UUFDdkIsTUFBTWUsWUFBWSxJQUFJbkIsb0JBQW9CLElBQUksRUFBRUcsS0FBS0M7UUFDckQsSUFBSSxDQUFDYSxXQUFXLENBQUNHLElBQUksQ0FBQ0Q7UUFDdEIsT0FBT0E7SUFDWDtJQUNBLE1BQU1OLE9BQU87UUFDVCxJQUFJLENBQUMsSUFBSSxDQUFDSSxXQUFXLENBQUNJLE1BQU0sRUFBRTtZQUMxQixNQUFNLElBQUl0Qix1REFBVUEsQ0FBQztRQUN6QjtRQUNBLE1BQU11QixNQUFNO1lBQ1JDLFlBQVksRUFBRTtZQUNkUCxTQUFTO1FBQ2I7UUFDQSxJQUFLLElBQUlRLElBQUksR0FBR0EsSUFBSSxJQUFJLENBQUNQLFdBQVcsQ0FBQ0ksTUFBTSxFQUFFRyxJQUFLO1lBQzlDLE1BQU1MLFlBQVksSUFBSSxDQUFDRixXQUFXLENBQUNPLEVBQUU7WUFDckMsTUFBTUMsWUFBWSxJQUFJM0IsNkRBQWFBLENBQUMsSUFBSSxDQUFDb0IsUUFBUTtZQUNqRE8sVUFBVW5CLGtCQUFrQixDQUFDYSxVQUFVWixlQUFlO1lBQ3REa0IsVUFBVWhCLG9CQUFvQixDQUFDVSxVQUFVVCxpQkFBaUI7WUFDMUQsTUFBTSxFQUFFTSxPQUFPLEVBQUUsR0FBR1UsTUFBTSxHQUFHLE1BQU1ELFVBQVVaLElBQUksQ0FBQ00sVUFBVWhCLEdBQUcsRUFBRWdCLFVBQVVmLE9BQU87WUFDbEYsSUFBSW9CLE1BQU0sR0FBRztnQkFDVEYsSUFBSU4sT0FBTyxHQUFHQTtZQUNsQixPQUNLLElBQUlNLElBQUlOLE9BQU8sS0FBS0EsU0FBUztnQkFDOUIsTUFBTSxJQUFJakIsdURBQVVBLENBQUM7WUFDekI7WUFDQXVCLElBQUlDLFVBQVUsQ0FBQ0gsSUFBSSxDQUFDTTtRQUN4QjtRQUNBLE9BQU9KO0lBQ1g7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvandzL2dlbmVyYWwvc2lnbi5qcz9kMTE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZsYXR0ZW5lZFNpZ24gfSBmcm9tICcuLi9mbGF0dGVuZWQvc2lnbi5qcyc7XG5pbXBvcnQgeyBKV1NJbnZhbGlkIH0gZnJvbSAnLi4vLi4vdXRpbC9lcnJvcnMuanMnO1xuY2xhc3MgSW5kaXZpZHVhbFNpZ25hdHVyZSB7XG4gICAgY29uc3RydWN0b3Ioc2lnLCBrZXksIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBzaWc7XG4gICAgICAgIHRoaXMua2V5ID0ga2V5O1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSBvcHRpb25zO1xuICAgIH1cbiAgICBzZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgIGlmICh0aGlzLnByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2V0UHJvdGVjdGVkSGVhZGVyIGNhbiBvbmx5IGJlIGNhbGxlZCBvbmNlJyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wcm90ZWN0ZWRIZWFkZXIgPSBwcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzZXRVbnByb3RlY3RlZEhlYWRlcih1bnByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICBpZiAodGhpcy51bnByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2V0VW5wcm90ZWN0ZWRIZWFkZXIgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2UnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnVucHJvdGVjdGVkSGVhZGVyID0gdW5wcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhZGRTaWduYXR1cmUoLi4uYXJncykge1xuICAgICAgICByZXR1cm4gdGhpcy5wYXJlbnQuYWRkU2lnbmF0dXJlKC4uLmFyZ3MpO1xuICAgIH1cbiAgICBzaWduKC4uLmFyZ3MpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucGFyZW50LnNpZ24oLi4uYXJncyk7XG4gICAgfVxuICAgIGRvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnBhcmVudDtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgR2VuZXJhbFNpZ24ge1xuICAgIGNvbnN0cnVjdG9yKHBheWxvYWQpIHtcbiAgICAgICAgdGhpcy5fc2lnbmF0dXJlcyA9IFtdO1xuICAgICAgICB0aGlzLl9wYXlsb2FkID0gcGF5bG9hZDtcbiAgICB9XG4gICAgYWRkU2lnbmF0dXJlKGtleSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBuZXcgSW5kaXZpZHVhbFNpZ25hdHVyZSh0aGlzLCBrZXksIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLl9zaWduYXR1cmVzLnB1c2goc2lnbmF0dXJlKTtcbiAgICAgICAgcmV0dXJuIHNpZ25hdHVyZTtcbiAgICB9XG4gICAgYXN5bmMgc2lnbigpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9zaWduYXR1cmVzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEpXU0ludmFsaWQoJ2F0IGxlYXN0IG9uZSBzaWduYXR1cmUgbXVzdCBiZSBhZGRlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGp3cyA9IHtcbiAgICAgICAgICAgIHNpZ25hdHVyZXM6IFtdLFxuICAgICAgICAgICAgcGF5bG9hZDogJycsXG4gICAgICAgIH07XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fc2lnbmF0dXJlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gdGhpcy5fc2lnbmF0dXJlc1tpXTtcbiAgICAgICAgICAgIGNvbnN0IGZsYXR0ZW5lZCA9IG5ldyBGbGF0dGVuZWRTaWduKHRoaXMuX3BheWxvYWQpO1xuICAgICAgICAgICAgZmxhdHRlbmVkLnNldFByb3RlY3RlZEhlYWRlcihzaWduYXR1cmUucHJvdGVjdGVkSGVhZGVyKTtcbiAgICAgICAgICAgIGZsYXR0ZW5lZC5zZXRVbnByb3RlY3RlZEhlYWRlcihzaWduYXR1cmUudW5wcm90ZWN0ZWRIZWFkZXIpO1xuICAgICAgICAgICAgY29uc3QgeyBwYXlsb2FkLCAuLi5yZXN0IH0gPSBhd2FpdCBmbGF0dGVuZWQuc2lnbihzaWduYXR1cmUua2V5LCBzaWduYXR1cmUub3B0aW9ucyk7XG4gICAgICAgICAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIGp3cy5wYXlsb2FkID0gcGF5bG9hZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGp3cy5wYXlsb2FkICE9PSBwYXlsb2FkKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEpXU0ludmFsaWQoJ2luY29uc2lzdGVudCB1c2Ugb2YgSldTIFVuZW5jb2RlZCBQYXlsb2FkIChSRkM3Nzk3KScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgandzLnNpZ25hdHVyZXMucHVzaChyZXN0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gandzO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJGbGF0dGVuZWRTaWduIiwiSldTSW52YWxpZCIsIkluZGl2aWR1YWxTaWduYXR1cmUiLCJjb25zdHJ1Y3RvciIsInNpZyIsImtleSIsIm9wdGlvbnMiLCJwYXJlbnQiLCJzZXRQcm90ZWN0ZWRIZWFkZXIiLCJwcm90ZWN0ZWRIZWFkZXIiLCJUeXBlRXJyb3IiLCJzZXRVbnByb3RlY3RlZEhlYWRlciIsInVucHJvdGVjdGVkSGVhZGVyIiwiYWRkU2lnbmF0dXJlIiwiYXJncyIsInNpZ24iLCJkb25lIiwiR2VuZXJhbFNpZ24iLCJwYXlsb2FkIiwiX3NpZ25hdHVyZXMiLCJfcGF5bG9hZCIsInNpZ25hdHVyZSIsInB1c2giLCJsZW5ndGgiLCJqd3MiLCJzaWduYXR1cmVzIiwiaSIsImZsYXR0ZW5lZCIsInJlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jws/general/sign.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jws/general/verify.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/browser/jws/general/verify.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generalVerify: () => (/* binding */ generalVerify)\n/* harmony export */ });\n/* harmony import */ var _flattened_verify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../flattened/verify.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/flattened/verify.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n\n\n\nasync function generalVerify(jws, key, options) {\n    if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(jws)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWSInvalid(\"General JWS must be an object\");\n    }\n    if (!Array.isArray(jws.signatures) || !jws.signatures.every(_lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWSInvalid(\"JWS Signatures missing or incorrect type\");\n    }\n    for (const signature of jws.signatures){\n        try {\n            return await (0,_flattened_verify_js__WEBPACK_IMPORTED_MODULE_0__.flattenedVerify)({\n                header: signature.header,\n                payload: jws.payload,\n                protected: signature.protected,\n                signature: signature.signature\n            }, key, options);\n        } catch (_a) {}\n    }\n    throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWSSignatureVerificationFailed();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3cy9nZW5lcmFsL3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlEO0FBQ3lCO0FBQ3BDO0FBQ3ZDLGVBQWVJLGNBQWNDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPO0lBQ2pELElBQUksQ0FBQ0osNkRBQVFBLENBQUNFLE1BQU07UUFDaEIsTUFBTSxJQUFJSix1REFBVUEsQ0FBQztJQUN6QjtJQUNBLElBQUksQ0FBQ08sTUFBTUMsT0FBTyxDQUFDSixJQUFJSyxVQUFVLEtBQUssQ0FBQ0wsSUFBSUssVUFBVSxDQUFDQyxLQUFLLENBQUNSLHlEQUFRQSxHQUFHO1FBQ25FLE1BQU0sSUFBSUYsdURBQVVBLENBQUM7SUFDekI7SUFDQSxLQUFLLE1BQU1XLGFBQWFQLElBQUlLLFVBQVUsQ0FBRTtRQUNwQyxJQUFJO1lBQ0EsT0FBTyxNQUFNVixxRUFBZUEsQ0FBQztnQkFDekJhLFFBQVFELFVBQVVDLE1BQU07Z0JBQ3hCQyxTQUFTVCxJQUFJUyxPQUFPO2dCQUNwQkMsV0FBV0gsVUFBVUcsU0FBUztnQkFDOUJILFdBQVdBLFVBQVVBLFNBQVM7WUFDbEMsR0FBR04sS0FBS0M7UUFDWixFQUNBLE9BQU9TLElBQUksQ0FDWDtJQUNKO0lBQ0EsTUFBTSxJQUFJZCwyRUFBOEJBO0FBQzVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9qd3MvZ2VuZXJhbC92ZXJpZnkuanM/NjVmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmbGF0dGVuZWRWZXJpZnkgfSBmcm9tICcuLi9mbGF0dGVuZWQvdmVyaWZ5LmpzJztcbmltcG9ydCB7IEpXU0ludmFsaWQsIEpXU1NpZ25hdHVyZVZlcmlmaWNhdGlvbkZhaWxlZCB9IGZyb20gJy4uLy4uL3V0aWwvZXJyb3JzLmpzJztcbmltcG9ydCBpc09iamVjdCBmcm9tICcuLi8uLi9saWIvaXNfb2JqZWN0LmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW5lcmFsVmVyaWZ5KGp3cywga2V5LCBvcHRpb25zKSB7XG4gICAgaWYgKCFpc09iamVjdChqd3MpKSB7XG4gICAgICAgIHRocm93IG5ldyBKV1NJbnZhbGlkKCdHZW5lcmFsIEpXUyBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICAgIH1cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoandzLnNpZ25hdHVyZXMpIHx8ICFqd3Muc2lnbmF0dXJlcy5ldmVyeShpc09iamVjdCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEpXU0ludmFsaWQoJ0pXUyBTaWduYXR1cmVzIG1pc3Npbmcgb3IgaW5jb3JyZWN0IHR5cGUnKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBzaWduYXR1cmUgb2YgandzLnNpZ25hdHVyZXMpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBmbGF0dGVuZWRWZXJpZnkoe1xuICAgICAgICAgICAgICAgIGhlYWRlcjogc2lnbmF0dXJlLmhlYWRlcixcbiAgICAgICAgICAgICAgICBwYXlsb2FkOiBqd3MucGF5bG9hZCxcbiAgICAgICAgICAgICAgICBwcm90ZWN0ZWQ6IHNpZ25hdHVyZS5wcm90ZWN0ZWQsXG4gICAgICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWduYXR1cmUuc2lnbmF0dXJlLFxuICAgICAgICAgICAgfSwga2V5LCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0aHJvdyBuZXcgSldTU2lnbmF0dXJlVmVyaWZpY2F0aW9uRmFpbGVkKCk7XG59XG4iXSwibmFtZXMiOlsiZmxhdHRlbmVkVmVyaWZ5IiwiSldTSW52YWxpZCIsIkpXU1NpZ25hdHVyZVZlcmlmaWNhdGlvbkZhaWxlZCIsImlzT2JqZWN0IiwiZ2VuZXJhbFZlcmlmeSIsImp3cyIsImtleSIsIm9wdGlvbnMiLCJBcnJheSIsImlzQXJyYXkiLCJzaWduYXR1cmVzIiwiZXZlcnkiLCJzaWduYXR1cmUiLCJoZWFkZXIiLCJwYXlsb2FkIiwicHJvdGVjdGVkIiwiX2EiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jws/general/verify.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwt/decrypt.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwt/decrypt.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jwtDecrypt: () => (/* binding */ jwtDecrypt)\n/* harmony export */ });\n/* harmony import */ var _jwe_compact_decrypt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jwe/compact/decrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/compact/decrypt.js\");\n/* harmony import */ var _lib_jwt_claims_set_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/jwt_claims_set.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\n\n\nasync function jwtDecrypt(jwt, key, options) {\n    const decrypted = await (0,_jwe_compact_decrypt_js__WEBPACK_IMPORTED_MODULE_0__.compactDecrypt)(jwt, key, options);\n    const payload = (0,_lib_jwt_claims_set_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(decrypted.protectedHeader, decrypted.plaintext, options);\n    const { protectedHeader } = decrypted;\n    if (protectedHeader.iss !== undefined && protectedHeader.iss !== payload.iss) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWTClaimValidationFailed('replicated \"iss\" claim header parameter mismatch', \"iss\", \"mismatch\");\n    }\n    if (protectedHeader.sub !== undefined && protectedHeader.sub !== payload.sub) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWTClaimValidationFailed('replicated \"sub\" claim header parameter mismatch', \"sub\", \"mismatch\");\n    }\n    if (protectedHeader.aud !== undefined && JSON.stringify(protectedHeader.aud) !== JSON.stringify(payload.aud)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWTClaimValidationFailed('replicated \"aud\" claim header parameter mismatch', \"aud\", \"mismatch\");\n    }\n    const result = {\n        payload,\n        protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: decrypted.key\n        };\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3dC9kZWNyeXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkQ7QUFDVDtBQUNXO0FBQ3RELGVBQWVHLFdBQVdDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxPQUFPO0lBQzlDLE1BQU1DLFlBQVksTUFBTVAsdUVBQWNBLENBQUNJLEtBQUtDLEtBQUtDO0lBQ2pELE1BQU1FLFVBQVVQLGtFQUFVQSxDQUFDTSxVQUFVRSxlQUFlLEVBQUVGLFVBQVVHLFNBQVMsRUFBRUo7SUFDM0UsTUFBTSxFQUFFRyxlQUFlLEVBQUUsR0FBR0Y7SUFDNUIsSUFBSUUsZ0JBQWdCRSxHQUFHLEtBQUtDLGFBQWFILGdCQUFnQkUsR0FBRyxLQUFLSCxRQUFRRyxHQUFHLEVBQUU7UUFDMUUsTUFBTSxJQUFJVCxxRUFBd0JBLENBQUMsb0RBQW9ELE9BQU87SUFDbEc7SUFDQSxJQUFJTyxnQkFBZ0JJLEdBQUcsS0FBS0QsYUFBYUgsZ0JBQWdCSSxHQUFHLEtBQUtMLFFBQVFLLEdBQUcsRUFBRTtRQUMxRSxNQUFNLElBQUlYLHFFQUF3QkEsQ0FBQyxvREFBb0QsT0FBTztJQUNsRztJQUNBLElBQUlPLGdCQUFnQkssR0FBRyxLQUFLRixhQUN4QkcsS0FBS0MsU0FBUyxDQUFDUCxnQkFBZ0JLLEdBQUcsTUFBTUMsS0FBS0MsU0FBUyxDQUFDUixRQUFRTSxHQUFHLEdBQUc7UUFDckUsTUFBTSxJQUFJWixxRUFBd0JBLENBQUMsb0RBQW9ELE9BQU87SUFDbEc7SUFDQSxNQUFNZSxTQUFTO1FBQUVUO1FBQVNDO0lBQWdCO0lBQzFDLElBQUksT0FBT0osUUFBUSxZQUFZO1FBQzNCLE9BQU87WUFBRSxHQUFHWSxNQUFNO1lBQUVaLEtBQUtFLFVBQVVGLEdBQUc7UUFBQztJQUMzQztJQUNBLE9BQU9ZO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3dC9kZWNyeXB0LmpzP2EzMjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tcGFjdERlY3J5cHQgfSBmcm9tICcuLi9qd2UvY29tcGFjdC9kZWNyeXB0LmpzJztcbmltcG9ydCBqd3RQYXlsb2FkIGZyb20gJy4uL2xpYi9qd3RfY2xhaW1zX3NldC5qcyc7XG5pbXBvcnQgeyBKV1RDbGFpbVZhbGlkYXRpb25GYWlsZWQgfSBmcm9tICcuLi91dGlsL2Vycm9ycy5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gand0RGVjcnlwdChqd3QsIGtleSwgb3B0aW9ucykge1xuICAgIGNvbnN0IGRlY3J5cHRlZCA9IGF3YWl0IGNvbXBhY3REZWNyeXB0KGp3dCwga2V5LCBvcHRpb25zKTtcbiAgICBjb25zdCBwYXlsb2FkID0gand0UGF5bG9hZChkZWNyeXB0ZWQucHJvdGVjdGVkSGVhZGVyLCBkZWNyeXB0ZWQucGxhaW50ZXh0LCBvcHRpb25zKTtcbiAgICBjb25zdCB7IHByb3RlY3RlZEhlYWRlciB9ID0gZGVjcnlwdGVkO1xuICAgIGlmIChwcm90ZWN0ZWRIZWFkZXIuaXNzICE9PSB1bmRlZmluZWQgJiYgcHJvdGVjdGVkSGVhZGVyLmlzcyAhPT0gcGF5bG9hZC5pc3MpIHtcbiAgICAgICAgdGhyb3cgbmV3IEpXVENsYWltVmFsaWRhdGlvbkZhaWxlZCgncmVwbGljYXRlZCBcImlzc1wiIGNsYWltIGhlYWRlciBwYXJhbWV0ZXIgbWlzbWF0Y2gnLCAnaXNzJywgJ21pc21hdGNoJyk7XG4gICAgfVxuICAgIGlmIChwcm90ZWN0ZWRIZWFkZXIuc3ViICE9PSB1bmRlZmluZWQgJiYgcHJvdGVjdGVkSGVhZGVyLnN1YiAhPT0gcGF5bG9hZC5zdWIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEpXVENsYWltVmFsaWRhdGlvbkZhaWxlZCgncmVwbGljYXRlZCBcInN1YlwiIGNsYWltIGhlYWRlciBwYXJhbWV0ZXIgbWlzbWF0Y2gnLCAnc3ViJywgJ21pc21hdGNoJyk7XG4gICAgfVxuICAgIGlmIChwcm90ZWN0ZWRIZWFkZXIuYXVkICE9PSB1bmRlZmluZWQgJiZcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkocHJvdGVjdGVkSGVhZGVyLmF1ZCkgIT09IEpTT04uc3RyaW5naWZ5KHBheWxvYWQuYXVkKSkge1xuICAgICAgICB0aHJvdyBuZXcgSldUQ2xhaW1WYWxpZGF0aW9uRmFpbGVkKCdyZXBsaWNhdGVkIFwiYXVkXCIgY2xhaW0gaGVhZGVyIHBhcmFtZXRlciBtaXNtYXRjaCcsICdhdWQnLCAnbWlzbWF0Y2gnKTtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0geyBwYXlsb2FkLCBwcm90ZWN0ZWRIZWFkZXIgfTtcbiAgICBpZiAodHlwZW9mIGtleSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4geyAuLi5yZXN1bHQsIGtleTogZGVjcnlwdGVkLmtleSB9O1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbImNvbXBhY3REZWNyeXB0Iiwiand0UGF5bG9hZCIsIkpXVENsYWltVmFsaWRhdGlvbkZhaWxlZCIsImp3dERlY3J5cHQiLCJqd3QiLCJrZXkiLCJvcHRpb25zIiwiZGVjcnlwdGVkIiwicGF5bG9hZCIsInByb3RlY3RlZEhlYWRlciIsInBsYWludGV4dCIsImlzcyIsInVuZGVmaW5lZCIsInN1YiIsImF1ZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXN1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwt/decrypt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwt/encrypt.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwt/encrypt.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EncryptJWT: () => (/* binding */ EncryptJWT)\n/* harmony export */ });\n/* harmony import */ var _jwe_compact_encrypt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jwe/compact/encrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/jwe/compact/encrypt.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _produce_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./produce.js */ \"(middleware)/./node_modules/jose/dist/browser/jwt/produce.js\");\n\n\n\nclass EncryptJWT extends _produce_js__WEBPACK_IMPORTED_MODULE_2__.ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        if (this._protectedHeader) {\n            throw new TypeError(\"setProtectedHeader can only be called once\");\n        }\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    setKeyManagementParameters(parameters) {\n        if (this._keyManagementParameters) {\n            throw new TypeError(\"setKeyManagementParameters can only be called once\");\n        }\n        this._keyManagementParameters = parameters;\n        return this;\n    }\n    setContentEncryptionKey(cek) {\n        if (this._cek) {\n            throw new TypeError(\"setContentEncryptionKey can only be called once\");\n        }\n        this._cek = cek;\n        return this;\n    }\n    setInitializationVector(iv) {\n        if (this._iv) {\n            throw new TypeError(\"setInitializationVector can only be called once\");\n        }\n        this._iv = iv;\n        return this;\n    }\n    replicateIssuerAsHeader() {\n        this._replicateIssuerAsHeader = true;\n        return this;\n    }\n    replicateSubjectAsHeader() {\n        this._replicateSubjectAsHeader = true;\n        return this;\n    }\n    replicateAudienceAsHeader() {\n        this._replicateAudienceAsHeader = true;\n        return this;\n    }\n    async encrypt(key, options) {\n        const enc = new _jwe_compact_encrypt_js__WEBPACK_IMPORTED_MODULE_0__.CompactEncrypt(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__.encoder.encode(JSON.stringify(this._payload)));\n        if (this._replicateIssuerAsHeader) {\n            this._protectedHeader = {\n                ...this._protectedHeader,\n                iss: this._payload.iss\n            };\n        }\n        if (this._replicateSubjectAsHeader) {\n            this._protectedHeader = {\n                ...this._protectedHeader,\n                sub: this._payload.sub\n            };\n        }\n        if (this._replicateAudienceAsHeader) {\n            this._protectedHeader = {\n                ...this._protectedHeader,\n                aud: this._payload.aud\n            };\n        }\n        enc.setProtectedHeader(this._protectedHeader);\n        if (this._iv) {\n            enc.setInitializationVector(this._iv);\n        }\n        if (this._cek) {\n            enc.setContentEncryptionKey(this._cek);\n        }\n        if (this._keyManagementParameters) {\n            enc.setKeyManagementParameters(this._keyManagementParameters);\n        }\n        return enc.encrypt(key, options);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3dC9lbmNyeXB0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkQ7QUFDVjtBQUNQO0FBQ25DLE1BQU1HLG1CQUFtQkQsbURBQVVBO0lBQ3RDRSxtQkFBbUJDLGVBQWUsRUFBRTtRQUNoQyxJQUFJLElBQUksQ0FBQ0MsZ0JBQWdCLEVBQUU7WUFDdkIsTUFBTSxJQUFJQyxVQUFVO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDRCxnQkFBZ0IsR0FBR0Q7UUFDeEIsT0FBTyxJQUFJO0lBQ2Y7SUFDQUcsMkJBQTJCQyxVQUFVLEVBQUU7UUFDbkMsSUFBSSxJQUFJLENBQUNDLHdCQUF3QixFQUFFO1lBQy9CLE1BQU0sSUFBSUgsVUFBVTtRQUN4QjtRQUNBLElBQUksQ0FBQ0csd0JBQXdCLEdBQUdEO1FBQ2hDLE9BQU8sSUFBSTtJQUNmO0lBQ0FFLHdCQUF3QkMsR0FBRyxFQUFFO1FBQ3pCLElBQUksSUFBSSxDQUFDQyxJQUFJLEVBQUU7WUFDWCxNQUFNLElBQUlOLFVBQVU7UUFDeEI7UUFDQSxJQUFJLENBQUNNLElBQUksR0FBR0Q7UUFDWixPQUFPLElBQUk7SUFDZjtJQUNBRSx3QkFBd0JDLEVBQUUsRUFBRTtRQUN4QixJQUFJLElBQUksQ0FBQ0MsR0FBRyxFQUFFO1lBQ1YsTUFBTSxJQUFJVCxVQUFVO1FBQ3hCO1FBQ0EsSUFBSSxDQUFDUyxHQUFHLEdBQUdEO1FBQ1gsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsMEJBQTBCO1FBQ3RCLElBQUksQ0FBQ0Msd0JBQXdCLEdBQUc7UUFDaEMsT0FBTyxJQUFJO0lBQ2Y7SUFDQUMsMkJBQTJCO1FBQ3ZCLElBQUksQ0FBQ0MseUJBQXlCLEdBQUc7UUFDakMsT0FBTyxJQUFJO0lBQ2Y7SUFDQUMsNEJBQTRCO1FBQ3hCLElBQUksQ0FBQ0MsMEJBQTBCLEdBQUc7UUFDbEMsT0FBTyxJQUFJO0lBQ2Y7SUFDQSxNQUFNQyxRQUFRQyxHQUFHLEVBQUVDLE9BQU8sRUFBRTtRQUN4QixNQUFNQyxNQUFNLElBQUkxQixtRUFBY0EsQ0FBQ0MseURBQU9BLENBQUMwQixNQUFNLENBQUNDLEtBQUtDLFNBQVMsQ0FBQyxJQUFJLENBQUNDLFFBQVE7UUFDMUUsSUFBSSxJQUFJLENBQUNaLHdCQUF3QixFQUFFO1lBQy9CLElBQUksQ0FBQ1osZ0JBQWdCLEdBQUc7Z0JBQUUsR0FBRyxJQUFJLENBQUNBLGdCQUFnQjtnQkFBRXlCLEtBQUssSUFBSSxDQUFDRCxRQUFRLENBQUNDLEdBQUc7WUFBQztRQUMvRTtRQUNBLElBQUksSUFBSSxDQUFDWCx5QkFBeUIsRUFBRTtZQUNoQyxJQUFJLENBQUNkLGdCQUFnQixHQUFHO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxnQkFBZ0I7Z0JBQUUwQixLQUFLLElBQUksQ0FBQ0YsUUFBUSxDQUFDRSxHQUFHO1lBQUM7UUFDL0U7UUFDQSxJQUFJLElBQUksQ0FBQ1YsMEJBQTBCLEVBQUU7WUFDakMsSUFBSSxDQUFDaEIsZ0JBQWdCLEdBQUc7Z0JBQUUsR0FBRyxJQUFJLENBQUNBLGdCQUFnQjtnQkFBRTJCLEtBQUssSUFBSSxDQUFDSCxRQUFRLENBQUNHLEdBQUc7WUFBQztRQUMvRTtRQUNBUCxJQUFJdEIsa0JBQWtCLENBQUMsSUFBSSxDQUFDRSxnQkFBZ0I7UUFDNUMsSUFBSSxJQUFJLENBQUNVLEdBQUcsRUFBRTtZQUNWVSxJQUFJWix1QkFBdUIsQ0FBQyxJQUFJLENBQUNFLEdBQUc7UUFDeEM7UUFDQSxJQUFJLElBQUksQ0FBQ0gsSUFBSSxFQUFFO1lBQ1hhLElBQUlmLHVCQUF1QixDQUFDLElBQUksQ0FBQ0UsSUFBSTtRQUN6QztRQUNBLElBQUksSUFBSSxDQUFDSCx3QkFBd0IsRUFBRTtZQUMvQmdCLElBQUlsQiwwQkFBMEIsQ0FBQyxJQUFJLENBQUNFLHdCQUF3QjtRQUNoRTtRQUNBLE9BQU9nQixJQUFJSCxPQUFPLENBQUNDLEtBQUtDO0lBQzVCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3dC9lbmNyeXB0LmpzP2NkMTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcGFjdEVuY3J5cHQgfSBmcm9tICcuLi9qd2UvY29tcGFjdC9lbmNyeXB0LmpzJztcbmltcG9ydCB7IGVuY29kZXIgfSBmcm9tICcuLi9saWIvYnVmZmVyX3V0aWxzLmpzJztcbmltcG9ydCB7IFByb2R1Y2VKV1QgfSBmcm9tICcuL3Byb2R1Y2UuanMnO1xuZXhwb3J0IGNsYXNzIEVuY3J5cHRKV1QgZXh0ZW5kcyBQcm9kdWNlSldUIHtcbiAgICBzZXRQcm90ZWN0ZWRIZWFkZXIocHJvdGVjdGVkSGVhZGVyKSB7XG4gICAgICAgIGlmICh0aGlzLl9wcm90ZWN0ZWRIZWFkZXIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ3NldFByb3RlY3RlZEhlYWRlciBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX3Byb3RlY3RlZEhlYWRlciA9IHByb3RlY3RlZEhlYWRlcjtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKHBhcmFtZXRlcnMpIHtcbiAgICAgICAgaWYgKHRoaXMuX2tleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRLZXlNYW5hZ2VtZW50UGFyYW1ldGVycyBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2tleU1hbmFnZW1lbnRQYXJhbWV0ZXJzID0gcGFyYW1ldGVycztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldENvbnRlbnRFbmNyeXB0aW9uS2V5KGNlaykge1xuICAgICAgICBpZiAodGhpcy5fY2VrKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdzZXRDb250ZW50RW5jcnlwdGlvbktleSBjYW4gb25seSBiZSBjYWxsZWQgb25jZScpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2NlayA9IGNlaztcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEluaXRpYWxpemF0aW9uVmVjdG9yKGl2KSB7XG4gICAgICAgIGlmICh0aGlzLl9pdikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignc2V0SW5pdGlhbGl6YXRpb25WZWN0b3IgY2FuIG9ubHkgYmUgY2FsbGVkIG9uY2UnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9pdiA9IGl2O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgcmVwbGljYXRlSXNzdWVyQXNIZWFkZXIoKSB7XG4gICAgICAgIHRoaXMuX3JlcGxpY2F0ZUlzc3VlckFzSGVhZGVyID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJlcGxpY2F0ZVN1YmplY3RBc0hlYWRlcigpIHtcbiAgICAgICAgdGhpcy5fcmVwbGljYXRlU3ViamVjdEFzSGVhZGVyID0gdHJ1ZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHJlcGxpY2F0ZUF1ZGllbmNlQXNIZWFkZXIoKSB7XG4gICAgICAgIHRoaXMuX3JlcGxpY2F0ZUF1ZGllbmNlQXNIZWFkZXIgPSB0cnVlO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgYXN5bmMgZW5jcnlwdChrZXksIG9wdGlvbnMpIHtcbiAgICAgICAgY29uc3QgZW5jID0gbmV3IENvbXBhY3RFbmNyeXB0KGVuY29kZXIuZW5jb2RlKEpTT04uc3RyaW5naWZ5KHRoaXMuX3BheWxvYWQpKSk7XG4gICAgICAgIGlmICh0aGlzLl9yZXBsaWNhdGVJc3N1ZXJBc0hlYWRlcikge1xuICAgICAgICAgICAgdGhpcy5fcHJvdGVjdGVkSGVhZGVyID0geyAuLi50aGlzLl9wcm90ZWN0ZWRIZWFkZXIsIGlzczogdGhpcy5fcGF5bG9hZC5pc3MgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5fcmVwbGljYXRlU3ViamVjdEFzSGVhZGVyKSB7XG4gICAgICAgICAgICB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIgPSB7IC4uLnRoaXMuX3Byb3RlY3RlZEhlYWRlciwgc3ViOiB0aGlzLl9wYXlsb2FkLnN1YiB9O1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9yZXBsaWNhdGVBdWRpZW5jZUFzSGVhZGVyKSB7XG4gICAgICAgICAgICB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIgPSB7IC4uLnRoaXMuX3Byb3RlY3RlZEhlYWRlciwgYXVkOiB0aGlzLl9wYXlsb2FkLmF1ZCB9O1xuICAgICAgICB9XG4gICAgICAgIGVuYy5zZXRQcm90ZWN0ZWRIZWFkZXIodGhpcy5fcHJvdGVjdGVkSGVhZGVyKTtcbiAgICAgICAgaWYgKHRoaXMuX2l2KSB7XG4gICAgICAgICAgICBlbmMuc2V0SW5pdGlhbGl6YXRpb25WZWN0b3IodGhpcy5faXYpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9jZWspIHtcbiAgICAgICAgICAgIGVuYy5zZXRDb250ZW50RW5jcnlwdGlvbktleSh0aGlzLl9jZWspO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLl9rZXlNYW5hZ2VtZW50UGFyYW1ldGVycykge1xuICAgICAgICAgICAgZW5jLnNldEtleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKHRoaXMuX2tleU1hbmFnZW1lbnRQYXJhbWV0ZXJzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZW5jLmVuY3J5cHQoa2V5LCBvcHRpb25zKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiQ29tcGFjdEVuY3J5cHQiLCJlbmNvZGVyIiwiUHJvZHVjZUpXVCIsIkVuY3J5cHRKV1QiLCJzZXRQcm90ZWN0ZWRIZWFkZXIiLCJwcm90ZWN0ZWRIZWFkZXIiLCJfcHJvdGVjdGVkSGVhZGVyIiwiVHlwZUVycm9yIiwic2V0S2V5TWFuYWdlbWVudFBhcmFtZXRlcnMiLCJwYXJhbWV0ZXJzIiwiX2tleU1hbmFnZW1lbnRQYXJhbWV0ZXJzIiwic2V0Q29udGVudEVuY3J5cHRpb25LZXkiLCJjZWsiLCJfY2VrIiwic2V0SW5pdGlhbGl6YXRpb25WZWN0b3IiLCJpdiIsIl9pdiIsInJlcGxpY2F0ZUlzc3VlckFzSGVhZGVyIiwiX3JlcGxpY2F0ZUlzc3VlckFzSGVhZGVyIiwicmVwbGljYXRlU3ViamVjdEFzSGVhZGVyIiwiX3JlcGxpY2F0ZVN1YmplY3RBc0hlYWRlciIsInJlcGxpY2F0ZUF1ZGllbmNlQXNIZWFkZXIiLCJfcmVwbGljYXRlQXVkaWVuY2VBc0hlYWRlciIsImVuY3J5cHQiLCJrZXkiLCJvcHRpb25zIiwiZW5jIiwiZW5jb2RlIiwiSlNPTiIsInN0cmluZ2lmeSIsIl9wYXlsb2FkIiwiaXNzIiwic3ViIiwiYXVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwt/encrypt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwt/produce.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwt/produce.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ProduceJWT: () => (/* binding */ ProduceJWT)\n/* harmony export */ });\n/* harmony import */ var _lib_epoch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/epoch.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/epoch.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n/* harmony import */ var _lib_secs_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/secs.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/secs.js\");\n\n\n\nclass ProduceJWT {\n    constructor(payload){\n        if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(payload)) {\n            throw new TypeError(\"JWT Claims Set MUST be an object\");\n        }\n        this._payload = payload;\n    }\n    setIssuer(issuer) {\n        this._payload = {\n            ...this._payload,\n            iss: issuer\n        };\n        return this;\n    }\n    setSubject(subject) {\n        this._payload = {\n            ...this._payload,\n            sub: subject\n        };\n        return this;\n    }\n    setAudience(audience) {\n        this._payload = {\n            ...this._payload,\n            aud: audience\n        };\n        return this;\n    }\n    setJti(jwtId) {\n        this._payload = {\n            ...this._payload,\n            jti: jwtId\n        };\n        return this;\n    }\n    setNotBefore(input) {\n        if (typeof input === \"number\") {\n            this._payload = {\n                ...this._payload,\n                nbf: input\n            };\n        } else {\n            this._payload = {\n                ...this._payload,\n                nbf: (0,_lib_epoch_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(new Date()) + (0,_lib_secs_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input)\n            };\n        }\n        return this;\n    }\n    setExpirationTime(input) {\n        if (typeof input === \"number\") {\n            this._payload = {\n                ...this._payload,\n                exp: input\n            };\n        } else {\n            this._payload = {\n                ...this._payload,\n                exp: (0,_lib_epoch_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(new Date()) + (0,_lib_secs_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(input)\n            };\n        }\n        return this;\n    }\n    setIssuedAt(input) {\n        if (typeof input === \"undefined\") {\n            this._payload = {\n                ...this._payload,\n                iat: (0,_lib_epoch_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(new Date())\n            };\n        } else {\n            this._payload = {\n                ...this._payload,\n                iat: input\n            };\n        }\n        return this;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3dC9wcm9kdWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0M7QUFDTztBQUNUO0FBQzNCLE1BQU1HO0lBQ1RDLFlBQVlDLE9BQU8sQ0FBRTtRQUNqQixJQUFJLENBQUNKLDZEQUFRQSxDQUFDSSxVQUFVO1lBQ3BCLE1BQU0sSUFBSUMsVUFBVTtRQUN4QjtRQUNBLElBQUksQ0FBQ0MsUUFBUSxHQUFHRjtJQUNwQjtJQUNBRyxVQUFVQyxNQUFNLEVBQUU7UUFDZCxJQUFJLENBQUNGLFFBQVEsR0FBRztZQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO1lBQUVHLEtBQUtEO1FBQU87UUFDaEQsT0FBTyxJQUFJO0lBQ2Y7SUFDQUUsV0FBV0MsT0FBTyxFQUFFO1FBQ2hCLElBQUksQ0FBQ0wsUUFBUSxHQUFHO1lBQUUsR0FBRyxJQUFJLENBQUNBLFFBQVE7WUFBRU0sS0FBS0Q7UUFBUTtRQUNqRCxPQUFPLElBQUk7SUFDZjtJQUNBRSxZQUFZQyxRQUFRLEVBQUU7UUFDbEIsSUFBSSxDQUFDUixRQUFRLEdBQUc7WUFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtZQUFFUyxLQUFLRDtRQUFTO1FBQ2xELE9BQU8sSUFBSTtJQUNmO0lBQ0FFLE9BQU9DLEtBQUssRUFBRTtRQUNWLElBQUksQ0FBQ1gsUUFBUSxHQUFHO1lBQUUsR0FBRyxJQUFJLENBQUNBLFFBQVE7WUFBRVksS0FBS0Q7UUFBTTtRQUMvQyxPQUFPLElBQUk7SUFDZjtJQUNBRSxhQUFhQyxLQUFLLEVBQUU7UUFDaEIsSUFBSSxPQUFPQSxVQUFVLFVBQVU7WUFDM0IsSUFBSSxDQUFDZCxRQUFRLEdBQUc7Z0JBQUUsR0FBRyxJQUFJLENBQUNBLFFBQVE7Z0JBQUVlLEtBQUtEO1lBQU07UUFDbkQsT0FDSztZQUNELElBQUksQ0FBQ2QsUUFBUSxHQUFHO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO2dCQUFFZSxLQUFLdEIseURBQUtBLENBQUMsSUFBSXVCLFVBQVVyQix3REFBSUEsQ0FBQ21CO1lBQU87UUFDN0U7UUFDQSxPQUFPLElBQUk7SUFDZjtJQUNBRyxrQkFBa0JILEtBQUssRUFBRTtRQUNyQixJQUFJLE9BQU9BLFVBQVUsVUFBVTtZQUMzQixJQUFJLENBQUNkLFFBQVEsR0FBRztnQkFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtnQkFBRWtCLEtBQUtKO1lBQU07UUFDbkQsT0FDSztZQUNELElBQUksQ0FBQ2QsUUFBUSxHQUFHO2dCQUFFLEdBQUcsSUFBSSxDQUFDQSxRQUFRO2dCQUFFa0IsS0FBS3pCLHlEQUFLQSxDQUFDLElBQUl1QixVQUFVckIsd0RBQUlBLENBQUNtQjtZQUFPO1FBQzdFO1FBQ0EsT0FBTyxJQUFJO0lBQ2Y7SUFDQUssWUFBWUwsS0FBSyxFQUFFO1FBQ2YsSUFBSSxPQUFPQSxVQUFVLGFBQWE7WUFDOUIsSUFBSSxDQUFDZCxRQUFRLEdBQUc7Z0JBQUUsR0FBRyxJQUFJLENBQUNBLFFBQVE7Z0JBQUVvQixLQUFLM0IseURBQUtBLENBQUMsSUFBSXVCO1lBQVE7UUFDL0QsT0FDSztZQUNELElBQUksQ0FBQ2hCLFFBQVEsR0FBRztnQkFBRSxHQUFHLElBQUksQ0FBQ0EsUUFBUTtnQkFBRW9CLEtBQUtOO1lBQU07UUFDbkQ7UUFDQSxPQUFPLElBQUk7SUFDZjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9qd3QvcHJvZHVjZS5qcz84MjgwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlcG9jaCBmcm9tICcuLi9saWIvZXBvY2guanMnO1xuaW1wb3J0IGlzT2JqZWN0IGZyb20gJy4uL2xpYi9pc19vYmplY3QuanMnO1xuaW1wb3J0IHNlY3MgZnJvbSAnLi4vbGliL3NlY3MuanMnO1xuZXhwb3J0IGNsYXNzIFByb2R1Y2VKV1Qge1xuICAgIGNvbnN0cnVjdG9yKHBheWxvYWQpIHtcbiAgICAgICAgaWYgKCFpc09iamVjdChwYXlsb2FkKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSldUIENsYWltcyBTZXQgTVVTVCBiZSBhbiBvYmplY3QnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9wYXlsb2FkID0gcGF5bG9hZDtcbiAgICB9XG4gICAgc2V0SXNzdWVyKGlzc3Vlcikge1xuICAgICAgICB0aGlzLl9wYXlsb2FkID0geyAuLi50aGlzLl9wYXlsb2FkLCBpc3M6IGlzc3VlciB9O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0U3ViamVjdChzdWJqZWN0KSB7XG4gICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIHN1Yjogc3ViamVjdCB9O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0QXVkaWVuY2UoYXVkaWVuY2UpIHtcbiAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHsgLi4udGhpcy5fcGF5bG9hZCwgYXVkOiBhdWRpZW5jZSB9O1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0SnRpKGp3dElkKSB7XG4gICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIGp0aTogand0SWQgfTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldE5vdEJlZm9yZShpbnB1dCkge1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHsgLi4udGhpcy5fcGF5bG9hZCwgbmJmOiBpbnB1dCB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fcGF5bG9hZCA9IHsgLi4udGhpcy5fcGF5bG9hZCwgbmJmOiBlcG9jaChuZXcgRGF0ZSgpKSArIHNlY3MoaW5wdXQpIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHNldEV4cGlyYXRpb25UaW1lKGlucHV0KSB7XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICB0aGlzLl9wYXlsb2FkID0geyAuLi50aGlzLl9wYXlsb2FkLCBleHA6IGlucHV0IH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9wYXlsb2FkID0geyAuLi50aGlzLl9wYXlsb2FkLCBleHA6IGVwb2NoKG5ldyBEYXRlKCkpICsgc2VjcyhpbnB1dCkgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc2V0SXNzdWVkQXQoaW5wdXQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpbnB1dCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIGlhdDogZXBvY2gobmV3IERhdGUoKSkgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuX3BheWxvYWQgPSB7IC4uLnRoaXMuX3BheWxvYWQsIGlhdDogaW5wdXQgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiZXBvY2giLCJpc09iamVjdCIsInNlY3MiLCJQcm9kdWNlSldUIiwiY29uc3RydWN0b3IiLCJwYXlsb2FkIiwiVHlwZUVycm9yIiwiX3BheWxvYWQiLCJzZXRJc3N1ZXIiLCJpc3N1ZXIiLCJpc3MiLCJzZXRTdWJqZWN0Iiwic3ViamVjdCIsInN1YiIsInNldEF1ZGllbmNlIiwiYXVkaWVuY2UiLCJhdWQiLCJzZXRKdGkiLCJqd3RJZCIsImp0aSIsInNldE5vdEJlZm9yZSIsImlucHV0IiwibmJmIiwiRGF0ZSIsInNldEV4cGlyYXRpb25UaW1lIiwiZXhwIiwic2V0SXNzdWVkQXQiLCJpYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwt/produce.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwt/sign.js":
/*!****************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwt/sign.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignJWT: () => (/* binding */ SignJWT)\n/* harmony export */ });\n/* harmony import */ var _jws_compact_sign_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jws/compact/sign.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/compact/sign.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _produce_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./produce.js */ \"(middleware)/./node_modules/jose/dist/browser/jwt/produce.js\");\n\n\n\n\nclass SignJWT extends _produce_js__WEBPACK_IMPORTED_MODULE_3__.ProduceJWT {\n    setProtectedHeader(protectedHeader) {\n        this._protectedHeader = protectedHeader;\n        return this;\n    }\n    async sign(key, options) {\n        var _a;\n        const sig = new _jws_compact_sign_js__WEBPACK_IMPORTED_MODULE_0__.CompactSign(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_2__.encoder.encode(JSON.stringify(this._payload)));\n        sig.setProtectedHeader(this._protectedHeader);\n        if (Array.isArray((_a = this._protectedHeader) === null || _a === void 0 ? void 0 : _a.crit) && this._protectedHeader.crit.includes(\"b64\") && this._protectedHeader.b64 === false) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JWTInvalid(\"JWTs MUST NOT use unencoded payload\");\n        }\n        return sig.sign(key, options);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3dC9zaWduLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFEO0FBQ047QUFDRTtBQUNQO0FBQ25DLE1BQU1JLGdCQUFnQkQsbURBQVVBO0lBQ25DRSxtQkFBbUJDLGVBQWUsRUFBRTtRQUNoQyxJQUFJLENBQUNDLGdCQUFnQixHQUFHRDtRQUN4QixPQUFPLElBQUk7SUFDZjtJQUNBLE1BQU1FLEtBQUtDLEdBQUcsRUFBRUMsT0FBTyxFQUFFO1FBQ3JCLElBQUlDO1FBQ0osTUFBTUMsTUFBTSxJQUFJWiw2REFBV0EsQ0FBQ0UseURBQU9BLENBQUNXLE1BQU0sQ0FBQ0MsS0FBS0MsU0FBUyxDQUFDLElBQUksQ0FBQ0MsUUFBUTtRQUN2RUosSUFBSVAsa0JBQWtCLENBQUMsSUFBSSxDQUFDRSxnQkFBZ0I7UUFDNUMsSUFBSVUsTUFBTUMsT0FBTyxDQUFDLENBQUNQLEtBQUssSUFBSSxDQUFDSixnQkFBZ0IsTUFBTSxRQUFRSSxPQUFPLEtBQUssSUFBSSxLQUFLLElBQUlBLEdBQUdRLElBQUksS0FDdkYsSUFBSSxDQUFDWixnQkFBZ0IsQ0FBQ1ksSUFBSSxDQUFDQyxRQUFRLENBQUMsVUFDcEMsSUFBSSxDQUFDYixnQkFBZ0IsQ0FBQ2MsR0FBRyxLQUFLLE9BQU87WUFDckMsTUFBTSxJQUFJcEIsdURBQVVBLENBQUM7UUFDekI7UUFDQSxPQUFPVyxJQUFJSixJQUFJLENBQUNDLEtBQUtDO0lBQ3pCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3dC9zaWduLmpzP2NmZDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcGFjdFNpZ24gfSBmcm9tICcuLi9qd3MvY29tcGFjdC9zaWduLmpzJztcbmltcG9ydCB7IEpXVEludmFsaWQgfSBmcm9tICcuLi91dGlsL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBlbmNvZGVyIH0gZnJvbSAnLi4vbGliL2J1ZmZlcl91dGlscy5qcyc7XG5pbXBvcnQgeyBQcm9kdWNlSldUIH0gZnJvbSAnLi9wcm9kdWNlLmpzJztcbmV4cG9ydCBjbGFzcyBTaWduSldUIGV4dGVuZHMgUHJvZHVjZUpXVCB7XG4gICAgc2V0UHJvdGVjdGVkSGVhZGVyKHByb3RlY3RlZEhlYWRlcikge1xuICAgICAgICB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIgPSBwcm90ZWN0ZWRIZWFkZXI7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBhc3luYyBzaWduKGtleSwgb3B0aW9ucykge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGNvbnN0IHNpZyA9IG5ldyBDb21wYWN0U2lnbihlbmNvZGVyLmVuY29kZShKU09OLnN0cmluZ2lmeSh0aGlzLl9wYXlsb2FkKSkpO1xuICAgICAgICBzaWcuc2V0UHJvdGVjdGVkSGVhZGVyKHRoaXMuX3Byb3RlY3RlZEhlYWRlcik7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KChfYSA9IHRoaXMuX3Byb3RlY3RlZEhlYWRlcikgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNyaXQpICYmXG4gICAgICAgICAgICB0aGlzLl9wcm90ZWN0ZWRIZWFkZXIuY3JpdC5pbmNsdWRlcygnYjY0JykgJiZcbiAgICAgICAgICAgIHRoaXMuX3Byb3RlY3RlZEhlYWRlci5iNjQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgSldUSW52YWxpZCgnSldUcyBNVVNUIE5PVCB1c2UgdW5lbmNvZGVkIHBheWxvYWQnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc2lnLnNpZ24oa2V5LCBvcHRpb25zKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiQ29tcGFjdFNpZ24iLCJKV1RJbnZhbGlkIiwiZW5jb2RlciIsIlByb2R1Y2VKV1QiLCJTaWduSldUIiwic2V0UHJvdGVjdGVkSGVhZGVyIiwicHJvdGVjdGVkSGVhZGVyIiwiX3Byb3RlY3RlZEhlYWRlciIsInNpZ24iLCJrZXkiLCJvcHRpb25zIiwiX2EiLCJzaWciLCJlbmNvZGUiLCJKU09OIiwic3RyaW5naWZ5IiwiX3BheWxvYWQiLCJBcnJheSIsImlzQXJyYXkiLCJjcml0IiwiaW5jbHVkZXMiLCJiNjQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwt/sign.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwt/unsecured.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwt/unsecured.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UnsecuredJWT: () => (/* binding */ UnsecuredJWT)\n/* harmony export */ });\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_jwt_claims_set_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/jwt_claims_set.js\");\n/* harmony import */ var _produce_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./produce.js */ \"(middleware)/./node_modules/jose/dist/browser/jwt/produce.js\");\n\n\n\n\n\nclass UnsecuredJWT extends _produce_js__WEBPACK_IMPORTED_MODULE_4__.ProduceJWT {\n    encode() {\n        const header = _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode(JSON.stringify({\n            alg: \"none\"\n        }));\n        const payload = _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode(JSON.stringify(this._payload));\n        return `${header}.${payload}.`;\n    }\n    static decode(jwt, options) {\n        if (typeof jwt !== \"string\") {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWTInvalid(\"Unsecured JWT must be a string\");\n        }\n        const { 0: encodedHeader, 1: encodedPayload, 2: signature, length } = jwt.split(\".\");\n        if (length !== 3 || signature !== \"\") {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWTInvalid(\"Invalid Unsecured JWT\");\n        }\n        let header;\n        try {\n            header = JSON.parse(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__.decoder.decode(_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode(encodedHeader)));\n            if (header.alg !== \"none\") throw new Error();\n        } catch (_a) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWTInvalid(\"Invalid Unsecured JWT\");\n        }\n        const payload = (0,_lib_jwt_claims_set_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(header, _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode(encodedPayload), options);\n        return {\n            payload,\n            header\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3dC91bnNlY3VyZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXFEO0FBQ0o7QUFDRjtBQUNHO0FBQ1I7QUFDbkMsTUFBTUsscUJBQXFCRCxtREFBVUE7SUFDeENFLFNBQVM7UUFDTCxNQUFNQyxTQUFTUCx5REFBZ0IsQ0FBQ1EsS0FBS0MsU0FBUyxDQUFDO1lBQUVDLEtBQUs7UUFBTztRQUM3RCxNQUFNQyxVQUFVWCx5REFBZ0IsQ0FBQ1EsS0FBS0MsU0FBUyxDQUFDLElBQUksQ0FBQ0csUUFBUTtRQUM3RCxPQUFPLENBQUMsRUFBRUwsT0FBTyxDQUFDLEVBQUVJLFFBQVEsQ0FBQyxDQUFDO0lBQ2xDO0lBQ0EsT0FBT0UsT0FBT0MsR0FBRyxFQUFFQyxPQUFPLEVBQUU7UUFDeEIsSUFBSSxPQUFPRCxRQUFRLFVBQVU7WUFDekIsTUFBTSxJQUFJWix1REFBVUEsQ0FBQztRQUN6QjtRQUNBLE1BQU0sRUFBRSxHQUFHYyxhQUFhLEVBQUUsR0FBR0MsY0FBYyxFQUFFLEdBQUdDLFNBQVMsRUFBRUMsTUFBTSxFQUFFLEdBQUdMLElBQUlNLEtBQUssQ0FBQztRQUNoRixJQUFJRCxXQUFXLEtBQUtELGNBQWMsSUFBSTtZQUNsQyxNQUFNLElBQUloQix1REFBVUEsQ0FBQztRQUN6QjtRQUNBLElBQUlLO1FBQ0osSUFBSTtZQUNBQSxTQUFTQyxLQUFLYSxLQUFLLENBQUNwQix5REFBT0EsQ0FBQ1ksTUFBTSxDQUFDYix5REFBZ0IsQ0FBQ2dCO1lBQ3BELElBQUlULE9BQU9HLEdBQUcsS0FBSyxRQUNmLE1BQU0sSUFBSVk7UUFDbEIsRUFDQSxPQUFPQyxJQUFJO1lBQ1AsTUFBTSxJQUFJckIsdURBQVVBLENBQUM7UUFDekI7UUFDQSxNQUFNUyxVQUFVUixrRUFBVUEsQ0FBQ0ksUUFBUVAseURBQWdCLENBQUNpQixpQkFBaUJGO1FBQ3JFLE9BQU87WUFBRUo7WUFBU0o7UUFBTztJQUM3QjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9qd3QvdW5zZWN1cmVkLmpzP2E1MTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgYmFzZTY0dXJsIGZyb20gJy4uL3J1bnRpbWUvYmFzZTY0dXJsLmpzJztcbmltcG9ydCB7IGRlY29kZXIgfSBmcm9tICcuLi9saWIvYnVmZmVyX3V0aWxzLmpzJztcbmltcG9ydCB7IEpXVEludmFsaWQgfSBmcm9tICcuLi91dGlsL2Vycm9ycy5qcyc7XG5pbXBvcnQgand0UGF5bG9hZCBmcm9tICcuLi9saWIvand0X2NsYWltc19zZXQuanMnO1xuaW1wb3J0IHsgUHJvZHVjZUpXVCB9IGZyb20gJy4vcHJvZHVjZS5qcyc7XG5leHBvcnQgY2xhc3MgVW5zZWN1cmVkSldUIGV4dGVuZHMgUHJvZHVjZUpXVCB7XG4gICAgZW5jb2RlKCkge1xuICAgICAgICBjb25zdCBoZWFkZXIgPSBiYXNlNjR1cmwuZW5jb2RlKEpTT04uc3RyaW5naWZ5KHsgYWxnOiAnbm9uZScgfSkpO1xuICAgICAgICBjb25zdCBwYXlsb2FkID0gYmFzZTY0dXJsLmVuY29kZShKU09OLnN0cmluZ2lmeSh0aGlzLl9wYXlsb2FkKSk7XG4gICAgICAgIHJldHVybiBgJHtoZWFkZXJ9LiR7cGF5bG9hZH0uYDtcbiAgICB9XG4gICAgc3RhdGljIGRlY29kZShqd3QsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBqd3QgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgSldUSW52YWxpZCgnVW5zZWN1cmVkIEpXVCBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgeyAwOiBlbmNvZGVkSGVhZGVyLCAxOiBlbmNvZGVkUGF5bG9hZCwgMjogc2lnbmF0dXJlLCBsZW5ndGggfSA9IGp3dC5zcGxpdCgnLicpO1xuICAgICAgICBpZiAobGVuZ3RoICE9PSAzIHx8IHNpZ25hdHVyZSAhPT0gJycpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdJbnZhbGlkIFVuc2VjdXJlZCBKV1QnKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgaGVhZGVyO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgaGVhZGVyID0gSlNPTi5wYXJzZShkZWNvZGVyLmRlY29kZShiYXNlNjR1cmwuZGVjb2RlKGVuY29kZWRIZWFkZXIpKSk7XG4gICAgICAgICAgICBpZiAoaGVhZGVyLmFsZyAhPT0gJ25vbmUnKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEpXVEludmFsaWQoJ0ludmFsaWQgVW5zZWN1cmVkIEpXVCcpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSBqd3RQYXlsb2FkKGhlYWRlciwgYmFzZTY0dXJsLmRlY29kZShlbmNvZGVkUGF5bG9hZCksIG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4geyBwYXlsb2FkLCBoZWFkZXIgfTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiYmFzZTY0dXJsIiwiZGVjb2RlciIsIkpXVEludmFsaWQiLCJqd3RQYXlsb2FkIiwiUHJvZHVjZUpXVCIsIlVuc2VjdXJlZEpXVCIsImVuY29kZSIsImhlYWRlciIsIkpTT04iLCJzdHJpbmdpZnkiLCJhbGciLCJwYXlsb2FkIiwiX3BheWxvYWQiLCJkZWNvZGUiLCJqd3QiLCJvcHRpb25zIiwiZW5jb2RlZEhlYWRlciIsImVuY29kZWRQYXlsb2FkIiwic2lnbmF0dXJlIiwibGVuZ3RoIiwic3BsaXQiLCJwYXJzZSIsIkVycm9yIiwiX2EiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwt/unsecured.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/jwt/verify.js":
/*!******************************************************!*\
  !*** ./node_modules/jose/dist/browser/jwt/verify.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   jwtVerify: () => (/* binding */ jwtVerify)\n/* harmony export */ });\n/* harmony import */ var _jws_compact_verify_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../jws/compact/verify.js */ \"(middleware)/./node_modules/jose/dist/browser/jws/compact/verify.js\");\n/* harmony import */ var _lib_jwt_claims_set_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/jwt_claims_set.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/jwt_claims_set.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\n\n\nasync function jwtVerify(jwt, key, options) {\n    var _a;\n    const verified = await (0,_jws_compact_verify_js__WEBPACK_IMPORTED_MODULE_0__.compactVerify)(jwt, key, options);\n    if (((_a = verified.protectedHeader.crit) === null || _a === void 0 ? void 0 : _a.includes(\"b64\")) && verified.protectedHeader.b64 === false) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_2__.JWTInvalid(\"JWTs MUST NOT use unencoded payload\");\n    }\n    const payload = (0,_lib_jwt_claims_set_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(verified.protectedHeader, verified.payload, options);\n    const result = {\n        payload,\n        protectedHeader: verified.protectedHeader\n    };\n    if (typeof key === \"function\") {\n        return {\n            ...result,\n            key: verified.key\n        };\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2p3dC92ZXJpZnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF5RDtBQUNQO0FBQ0g7QUFDeEMsZUFBZUcsVUFBVUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLE9BQU87SUFDN0MsSUFBSUM7SUFDSixNQUFNQyxXQUFXLE1BQU1SLHFFQUFhQSxDQUFDSSxLQUFLQyxLQUFLQztJQUMvQyxJQUFJLENBQUMsQ0FBQ0MsS0FBS0MsU0FBU0MsZUFBZSxDQUFDQyxJQUFJLE1BQU0sUUFBUUgsT0FBTyxLQUFLLElBQUksS0FBSyxJQUFJQSxHQUFHSSxRQUFRLENBQUMsTUFBSyxLQUFNSCxTQUFTQyxlQUFlLENBQUNHLEdBQUcsS0FBSyxPQUFPO1FBQzFJLE1BQU0sSUFBSVYsdURBQVVBLENBQUM7SUFDekI7SUFDQSxNQUFNVyxVQUFVWixrRUFBVUEsQ0FBQ08sU0FBU0MsZUFBZSxFQUFFRCxTQUFTSyxPQUFPLEVBQUVQO0lBQ3ZFLE1BQU1RLFNBQVM7UUFBRUQ7UUFBU0osaUJBQWlCRCxTQUFTQyxlQUFlO0lBQUM7SUFDcEUsSUFBSSxPQUFPSixRQUFRLFlBQVk7UUFDM0IsT0FBTztZQUFFLEdBQUdTLE1BQU07WUFBRVQsS0FBS0csU0FBU0gsR0FBRztRQUFDO0lBQzFDO0lBQ0EsT0FBT1M7QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvand0L3ZlcmlmeS5qcz81N2E4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbXBhY3RWZXJpZnkgfSBmcm9tICcuLi9qd3MvY29tcGFjdC92ZXJpZnkuanMnO1xuaW1wb3J0IGp3dFBheWxvYWQgZnJvbSAnLi4vbGliL2p3dF9jbGFpbXNfc2V0LmpzJztcbmltcG9ydCB7IEpXVEludmFsaWQgfSBmcm9tICcuLi91dGlsL2Vycm9ycy5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gand0VmVyaWZ5KGp3dCwga2V5LCBvcHRpb25zKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHZlcmlmaWVkID0gYXdhaXQgY29tcGFjdFZlcmlmeShqd3QsIGtleSwgb3B0aW9ucyk7XG4gICAgaWYgKCgoX2EgPSB2ZXJpZmllZC5wcm90ZWN0ZWRIZWFkZXIuY3JpdCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmluY2x1ZGVzKCdiNjQnKSkgJiYgdmVyaWZpZWQucHJvdGVjdGVkSGVhZGVyLmI2NCA9PT0gZmFsc2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IEpXVEludmFsaWQoJ0pXVHMgTVVTVCBOT1QgdXNlIHVuZW5jb2RlZCBwYXlsb2FkJyk7XG4gICAgfVxuICAgIGNvbnN0IHBheWxvYWQgPSBqd3RQYXlsb2FkKHZlcmlmaWVkLnByb3RlY3RlZEhlYWRlciwgdmVyaWZpZWQucGF5bG9hZCwgb3B0aW9ucyk7XG4gICAgY29uc3QgcmVzdWx0ID0geyBwYXlsb2FkLCBwcm90ZWN0ZWRIZWFkZXI6IHZlcmlmaWVkLnByb3RlY3RlZEhlYWRlciB9O1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiB7IC4uLnJlc3VsdCwga2V5OiB2ZXJpZmllZC5rZXkgfTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6WyJjb21wYWN0VmVyaWZ5Iiwiand0UGF5bG9hZCIsIkpXVEludmFsaWQiLCJqd3RWZXJpZnkiLCJqd3QiLCJrZXkiLCJvcHRpb25zIiwiX2EiLCJ2ZXJpZmllZCIsInByb3RlY3RlZEhlYWRlciIsImNyaXQiLCJpbmNsdWRlcyIsImI2NCIsInBheWxvYWQiLCJyZXN1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/jwt/verify.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/key/export.js":
/*!******************************************************!*\
  !*** ./node_modules/jose/dist/browser/key/export.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportJWK: () => (/* binding */ exportJWK),\n/* harmony export */   exportPKCS8: () => (/* binding */ exportPKCS8),\n/* harmony export */   exportSPKI: () => (/* binding */ exportSPKI)\n/* harmony export */ });\n/* harmony import */ var _runtime_asn1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/asn1.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/asn1.js\");\n/* harmony import */ var _runtime_key_to_jwk_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runtime/key_to_jwk.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/key_to_jwk.js\");\n\n\n\nasync function exportSPKI(key) {\n    return (0,_runtime_asn1_js__WEBPACK_IMPORTED_MODULE_0__.toSPKI)(key);\n}\nasync function exportPKCS8(key) {\n    return (0,_runtime_asn1_js__WEBPACK_IMPORTED_MODULE_0__.toPKCS8)(key);\n}\nasync function exportJWK(key) {\n    return (0,_runtime_key_to_jwk_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(key);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2tleS9leHBvcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEQ7QUFDRTtBQUNkO0FBQ3pDLGVBQWVLLFdBQVdDLEdBQUc7SUFDaEMsT0FBT0wsd0RBQVlBLENBQUNLO0FBQ3hCO0FBQ08sZUFBZUMsWUFBWUQsR0FBRztJQUNqQyxPQUFPSCx5REFBYUEsQ0FBQ0c7QUFDekI7QUFDTyxlQUFlRSxVQUFVRixHQUFHO0lBQy9CLE9BQU9GLGtFQUFRQSxDQUFDRTtBQUNwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIva2V5L2V4cG9ydC5qcz82NzI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRvU1BLSSBhcyBleHBvcnRQdWJsaWMgfSBmcm9tICcuLi9ydW50aW1lL2FzbjEuanMnO1xuaW1wb3J0IHsgdG9QS0NTOCBhcyBleHBvcnRQcml2YXRlIH0gZnJvbSAnLi4vcnVudGltZS9hc24xLmpzJztcbmltcG9ydCBrZXlUb0pXSyBmcm9tICcuLi9ydW50aW1lL2tleV90b19qd2suanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGV4cG9ydFNQS0koa2V5KSB7XG4gICAgcmV0dXJuIGV4cG9ydFB1YmxpYyhrZXkpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGV4cG9ydFBLQ1M4KGtleSkge1xuICAgIHJldHVybiBleHBvcnRQcml2YXRlKGtleSk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXhwb3J0SldLKGtleSkge1xuICAgIHJldHVybiBrZXlUb0pXSyhrZXkpO1xufVxuIl0sIm5hbWVzIjpbInRvU1BLSSIsImV4cG9ydFB1YmxpYyIsInRvUEtDUzgiLCJleHBvcnRQcml2YXRlIiwia2V5VG9KV0siLCJleHBvcnRTUEtJIiwia2V5IiwiZXhwb3J0UEtDUzgiLCJleHBvcnRKV0siXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/key/export.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/key/generate_key_pair.js":
/*!*****************************************************************!*\
  !*** ./node_modules/jose/dist/browser/key/generate_key_pair.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair)\n/* harmony export */ });\n/* harmony import */ var _runtime_generate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/generate.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/generate.js\");\n\nasync function generateKeyPair(alg, options) {\n    return (0,_runtime_generate_js__WEBPACK_IMPORTED_MODULE_0__.generateKeyPair)(alg, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2tleS9nZW5lcmF0ZV9rZXlfcGFpci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRTtBQUM5RCxlQUFlQSxnQkFBZ0JFLEdBQUcsRUFBRUMsT0FBTztJQUM5QyxPQUFPRixxRUFBUUEsQ0FBQ0MsS0FBS0M7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2tleS9nZW5lcmF0ZV9rZXlfcGFpci5qcz9hOTg3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdlbmVyYXRlS2V5UGFpciBhcyBnZW5lcmF0ZSB9IGZyb20gJy4uL3J1bnRpbWUvZ2VuZXJhdGUuanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlS2V5UGFpcihhbGcsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4gZ2VuZXJhdGUoYWxnLCBvcHRpb25zKTtcbn1cbiJdLCJuYW1lcyI6WyJnZW5lcmF0ZUtleVBhaXIiLCJnZW5lcmF0ZSIsImFsZyIsIm9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/key/generate_key_pair.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/key/generate_secret.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/browser/key/generate_secret.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateSecret: () => (/* binding */ generateSecret)\n/* harmony export */ });\n/* harmony import */ var _runtime_generate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/generate.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/generate.js\");\n\nasync function generateSecret(alg, options) {\n    return (0,_runtime_generate_js__WEBPACK_IMPORTED_MODULE_0__.generateSecret)(alg, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2tleS9nZW5lcmF0ZV9zZWNyZXQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0U7QUFDN0QsZUFBZUEsZUFBZUUsR0FBRyxFQUFFQyxPQUFPO0lBQzdDLE9BQU9GLG9FQUFRQSxDQUFDQyxLQUFLQztBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIva2V5L2dlbmVyYXRlX3NlY3JldC5qcz84YTg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdlbmVyYXRlU2VjcmV0IGFzIGdlbmVyYXRlIH0gZnJvbSAnLi4vcnVudGltZS9nZW5lcmF0ZS5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVTZWNyZXQoYWxnLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGdlbmVyYXRlKGFsZywgb3B0aW9ucyk7XG59XG4iXSwibmFtZXMiOlsiZ2VuZXJhdGVTZWNyZXQiLCJnZW5lcmF0ZSIsImFsZyIsIm9wdGlvbnMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/key/generate_secret.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/key/import.js":
/*!******************************************************!*\
  !*** ./node_modules/jose/dist/browser/key/import.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   importJWK: () => (/* binding */ importJWK),\n/* harmony export */   importPKCS8: () => (/* binding */ importPKCS8),\n/* harmony export */   importSPKI: () => (/* binding */ importSPKI),\n/* harmony export */   importX509: () => (/* binding */ importX509)\n/* harmony export */ });\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _runtime_asn1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runtime/asn1.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/asn1.js\");\n/* harmony import */ var _runtime_jwk_to_key_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../runtime/jwk_to_key.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/jwk_to_key.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n\n\n\n\n\nasync function importSPKI(spki, alg, options) {\n    if (typeof spki !== \"string\" || spki.indexOf(\"-----BEGIN PUBLIC KEY-----\") !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return (0,_runtime_asn1_js__WEBPACK_IMPORTED_MODULE_1__.fromSPKI)(spki, alg, options);\n}\nasync function importX509(x509, alg, options) {\n    if (typeof x509 !== \"string\" || x509.indexOf(\"-----BEGIN CERTIFICATE-----\") !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return (0,_runtime_asn1_js__WEBPACK_IMPORTED_MODULE_1__.fromX509)(x509, alg, options);\n}\nasync function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== \"string\" || pkcs8.indexOf(\"-----BEGIN PRIVATE KEY-----\") !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return (0,_runtime_asn1_js__WEBPACK_IMPORTED_MODULE_1__.fromPKCS8)(pkcs8, alg, options);\n}\nasync function importJWK(jwk, alg, octAsKeyObject) {\n    var _a;\n    if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(jwk)) {\n        throw new TypeError(\"JWK must be an object\");\n    }\n    alg || (alg = jwk.alg);\n    switch(jwk.kty){\n        case \"oct\":\n            if (typeof jwk.k !== \"string\" || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            octAsKeyObject !== null && octAsKeyObject !== void 0 ? octAsKeyObject : octAsKeyObject = jwk.ext !== true;\n            if (octAsKeyObject) {\n                return (0,_runtime_jwk_to_key_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n                    ...jwk,\n                    alg,\n                    ext: (_a = jwk.ext) !== null && _a !== void 0 ? _a : false\n                });\n            }\n            return (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(jwk.k);\n        case \"RSA\":\n            if (jwk.oth !== undefined) {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case \"EC\":\n        case \"OKP\":\n            return (0,_runtime_jwk_to_key_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])({\n                ...jwk,\n                alg\n            });\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_3__.JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2tleS9pbXBvcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQW9FO0FBQ0Q7QUFDaEI7QUFDRTtBQUNWO0FBQ3BDLGVBQWVRLFdBQVdDLElBQUksRUFBRUMsR0FBRyxFQUFFQyxPQUFPO0lBQy9DLElBQUksT0FBT0YsU0FBUyxZQUFZQSxLQUFLRyxPQUFPLENBQUMsa0NBQWtDLEdBQUc7UUFDOUUsTUFBTSxJQUFJQyxVQUFVO0lBQ3hCO0lBQ0EsT0FBT1gsMERBQVFBLENBQUNPLE1BQU1DLEtBQUtDO0FBQy9CO0FBQ08sZUFBZUcsV0FBV0MsSUFBSSxFQUFFTCxHQUFHLEVBQUVDLE9BQU87SUFDL0MsSUFBSSxPQUFPSSxTQUFTLFlBQVlBLEtBQUtILE9BQU8sQ0FBQyxtQ0FBbUMsR0FBRztRQUMvRSxNQUFNLElBQUlDLFVBQVU7SUFDeEI7SUFDQSxPQUFPVCwwREFBUUEsQ0FBQ1csTUFBTUwsS0FBS0M7QUFDL0I7QUFDTyxlQUFlSyxZQUFZQyxLQUFLLEVBQUVQLEdBQUcsRUFBRUMsT0FBTztJQUNqRCxJQUFJLE9BQU9NLFVBQVUsWUFBWUEsTUFBTUwsT0FBTyxDQUFDLG1DQUFtQyxHQUFHO1FBQ2pGLE1BQU0sSUFBSUMsVUFBVTtJQUN4QjtJQUNBLE9BQU9WLDJEQUFTQSxDQUFDYyxPQUFPUCxLQUFLQztBQUNqQztBQUNPLGVBQWVPLFVBQVVDLEdBQUcsRUFBRVQsR0FBRyxFQUFFVSxjQUFjO0lBQ3BELElBQUlDO0lBQ0osSUFBSSxDQUFDZCw2REFBUUEsQ0FBQ1ksTUFBTTtRQUNoQixNQUFNLElBQUlOLFVBQVU7SUFDeEI7SUFDQUgsT0FBUUEsQ0FBQUEsTUFBTVMsSUFBSVQsR0FBRztJQUNyQixPQUFRUyxJQUFJRyxHQUFHO1FBQ1gsS0FBSztZQUNELElBQUksT0FBT0gsSUFBSUksQ0FBQyxLQUFLLFlBQVksQ0FBQ0osSUFBSUksQ0FBQyxFQUFFO2dCQUNyQyxNQUFNLElBQUlWLFVBQVU7WUFDeEI7WUFDQU8sbUJBQW1CLFFBQVFBLG1CQUFtQixLQUFLLElBQUlBLGlCQUFrQkEsaUJBQWlCRCxJQUFJSyxHQUFHLEtBQUs7WUFDdEcsSUFBSUosZ0JBQWdCO2dCQUNoQixPQUFPZixrRUFBV0EsQ0FBQztvQkFBRSxHQUFHYyxHQUFHO29CQUFFVDtvQkFBS2MsS0FBSyxDQUFDSCxLQUFLRixJQUFJSyxHQUFHLE1BQU0sUUFBUUgsT0FBTyxLQUFLLElBQUlBLEtBQUs7Z0JBQU07WUFDakc7WUFDQSxPQUFPcEIsNkRBQWVBLENBQUNrQixJQUFJSSxDQUFDO1FBQ2hDLEtBQUs7WUFDRCxJQUFJSixJQUFJTSxHQUFHLEtBQUtDLFdBQVc7Z0JBQ3ZCLE1BQU0sSUFBSXBCLDZEQUFnQkEsQ0FBQztZQUMvQjtRQUNKLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBT0Qsa0VBQVdBLENBQUM7Z0JBQUUsR0FBR2MsR0FBRztnQkFBRVQ7WUFBSTtRQUNyQztZQUNJLE1BQU0sSUFBSUosNkRBQWdCQSxDQUFDO0lBQ25DO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2tleS9pbXBvcnQuanM/M2I1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGUgYXMgZGVjb2RlQmFzZTY0VVJMIH0gZnJvbSAnLi4vcnVudGltZS9iYXNlNjR1cmwuanMnO1xuaW1wb3J0IHsgZnJvbVNQS0ksIGZyb21QS0NTOCwgZnJvbVg1MDkgfSBmcm9tICcuLi9ydW50aW1lL2FzbjEuanMnO1xuaW1wb3J0IGFzS2V5T2JqZWN0IGZyb20gJy4uL3J1bnRpbWUvandrX3RvX2tleS5qcyc7XG5pbXBvcnQgeyBKT1NFTm90U3VwcG9ydGVkIH0gZnJvbSAnLi4vdXRpbC9lcnJvcnMuanMnO1xuaW1wb3J0IGlzT2JqZWN0IGZyb20gJy4uL2xpYi9pc19vYmplY3QuanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGltcG9ydFNQS0koc3BraSwgYWxnLCBvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBzcGtpICE9PSAnc3RyaW5nJyB8fCBzcGtpLmluZGV4T2YoJy0tLS0tQkVHSU4gUFVCTElDIEtFWS0tLS0tJykgIT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJzcGtpXCIgbXVzdCBiZSBTUEtJIGZvcm1hdHRlZCBzdHJpbmcnKTtcbiAgICB9XG4gICAgcmV0dXJuIGZyb21TUEtJKHNwa2ksIGFsZywgb3B0aW9ucyk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW1wb3J0WDUwOSh4NTA5LCBhbGcsIG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIHg1MDkgIT09ICdzdHJpbmcnIHx8IHg1MDkuaW5kZXhPZignLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tJykgIT09IDApIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignXCJ4NTA5XCIgbXVzdCBiZSBYLjUwOSBmb3JtYXR0ZWQgc3RyaW5nJyk7XG4gICAgfVxuICAgIHJldHVybiBmcm9tWDUwOSh4NTA5LCBhbGcsIG9wdGlvbnMpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGltcG9ydFBLQ1M4KHBrY3M4LCBhbGcsIG9wdGlvbnMpIHtcbiAgICBpZiAodHlwZW9mIHBrY3M4ICE9PSAnc3RyaW5nJyB8fCBwa2NzOC5pbmRleE9mKCctLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS0nKSAhPT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdcInBrY3M4XCIgbXVzdCBiZSBQS0NTIzggZm9ybWF0dGVkIHN0cmluZycpO1xuICAgIH1cbiAgICByZXR1cm4gZnJvbVBLQ1M4KHBrY3M4LCBhbGcsIG9wdGlvbnMpO1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGltcG9ydEpXSyhqd2ssIGFsZywgb2N0QXNLZXlPYmplY3QpIHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKCFpc09iamVjdChqd2spKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0pXSyBtdXN0IGJlIGFuIG9iamVjdCcpO1xuICAgIH1cbiAgICBhbGcgfHwgKGFsZyA9IGp3ay5hbGcpO1xuICAgIHN3aXRjaCAoandrLmt0eSkge1xuICAgICAgICBjYXNlICdvY3QnOlxuICAgICAgICAgICAgaWYgKHR5cGVvZiBqd2suayAhPT0gJ3N0cmluZycgfHwgIWp3ay5rKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignbWlzc2luZyBcImtcIiAoS2V5IFZhbHVlKSBQYXJhbWV0ZXIgdmFsdWUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9jdEFzS2V5T2JqZWN0ICE9PSBudWxsICYmIG9jdEFzS2V5T2JqZWN0ICE9PSB2b2lkIDAgPyBvY3RBc0tleU9iamVjdCA6IChvY3RBc0tleU9iamVjdCA9IGp3ay5leHQgIT09IHRydWUpO1xuICAgICAgICAgICAgaWYgKG9jdEFzS2V5T2JqZWN0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFzS2V5T2JqZWN0KHsgLi4uandrLCBhbGcsIGV4dDogKF9hID0gandrLmV4dCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogZmFsc2UgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGVjb2RlQmFzZTY0VVJMKGp3ay5rKTtcbiAgICAgICAgY2FzZSAnUlNBJzpcbiAgICAgICAgICAgIGlmIChqd2sub3RoICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgSk9TRU5vdFN1cHBvcnRlZCgnUlNBIEpXSyBcIm90aFwiIChPdGhlciBQcmltZXMgSW5mbykgUGFyYW1ldGVyIHZhbHVlIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgY2FzZSAnRUMnOlxuICAgICAgICBjYXNlICdPS1AnOlxuICAgICAgICAgICAgcmV0dXJuIGFzS2V5T2JqZWN0KHsgLi4uandrLCBhbGcgfSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgSk9TRU5vdFN1cHBvcnRlZCgnVW5zdXBwb3J0ZWQgXCJrdHlcIiAoS2V5IFR5cGUpIFBhcmFtZXRlciB2YWx1ZScpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJkZWNvZGUiLCJkZWNvZGVCYXNlNjRVUkwiLCJmcm9tU1BLSSIsImZyb21QS0NTOCIsImZyb21YNTA5IiwiYXNLZXlPYmplY3QiLCJKT1NFTm90U3VwcG9ydGVkIiwiaXNPYmplY3QiLCJpbXBvcnRTUEtJIiwic3BraSIsImFsZyIsIm9wdGlvbnMiLCJpbmRleE9mIiwiVHlwZUVycm9yIiwiaW1wb3J0WDUwOSIsIng1MDkiLCJpbXBvcnRQS0NTOCIsInBrY3M4IiwiaW1wb3J0SldLIiwiandrIiwib2N0QXNLZXlPYmplY3QiLCJfYSIsImt0eSIsImsiLCJleHQiLCJvdGgiLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/key/import.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/aesgcmkw.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/aesgcmkw.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unwrap: () => (/* binding */ unwrap),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n/* harmony import */ var _runtime_encrypt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/encrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/encrypt.js\");\n/* harmony import */ var _runtime_decrypt_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runtime/decrypt.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/decrypt.js\");\n/* harmony import */ var _iv_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./iv.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/iv.js\");\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n\n\n\n\nasync function wrap(alg, key, cek, iv) {\n    const jweAlgorithm = alg.slice(0, 7);\n    iv || (iv = (0,_iv_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(jweAlgorithm));\n    const { ciphertext: encryptedKey, tag } = await (0,_runtime_encrypt_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(jweAlgorithm, cek, key, iv, new Uint8Array(0));\n    return {\n        encryptedKey,\n        iv: (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_3__.encode)(iv),\n        tag: (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_3__.encode)(tag)\n    };\n}\nasync function unwrap(alg, key, encryptedKey, iv, tag) {\n    const jweAlgorithm = alg.slice(0, 7);\n    return (0,_runtime_decrypt_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(jweAlgorithm, key, encryptedKey, iv, tag, new Uint8Array(0));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9hZXNnY21rdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBNEM7QUFDQTtBQUNYO0FBQzZCO0FBQ3ZELGVBQWVLLEtBQUtDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEVBQUU7SUFDeEMsTUFBTUMsZUFBZUosSUFBSUssS0FBSyxDQUFDLEdBQUc7SUFDbENGLE1BQU9BLENBQUFBLEtBQUtQLGtEQUFVQSxDQUFDUSxhQUFZO0lBQ25DLE1BQU0sRUFBRUUsWUFBWUMsWUFBWSxFQUFFQyxHQUFHLEVBQUUsR0FBRyxNQUFNZCwrREFBT0EsQ0FBQ1UsY0FBY0YsS0FBS0QsS0FBS0UsSUFBSSxJQUFJTSxXQUFXO0lBQ25HLE9BQU87UUFBRUY7UUFBY0osSUFBSUwsNkRBQVNBLENBQUNLO1FBQUtLLEtBQUtWLDZEQUFTQSxDQUFDVTtJQUFLO0FBQ2xFO0FBQ08sZUFBZUUsT0FBT1YsR0FBRyxFQUFFQyxHQUFHLEVBQUVNLFlBQVksRUFBRUosRUFBRSxFQUFFSyxHQUFHO0lBQ3hELE1BQU1KLGVBQWVKLElBQUlLLEtBQUssQ0FBQyxHQUFHO0lBQ2xDLE9BQU9WLCtEQUFPQSxDQUFDUyxjQUFjSCxLQUFLTSxjQUFjSixJQUFJSyxLQUFLLElBQUlDLFdBQVc7QUFDNUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9hZXNnY21rdy5qcz84N2M2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBlbmNyeXB0IGZyb20gJy4uL3J1bnRpbWUvZW5jcnlwdC5qcyc7XG5pbXBvcnQgZGVjcnlwdCBmcm9tICcuLi9ydW50aW1lL2RlY3J5cHQuanMnO1xuaW1wb3J0IGdlbmVyYXRlSXYgZnJvbSAnLi9pdi5qcyc7XG5pbXBvcnQgeyBlbmNvZGUgYXMgYmFzZTY0dXJsIH0gZnJvbSAnLi4vcnVudGltZS9iYXNlNjR1cmwuanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHdyYXAoYWxnLCBrZXksIGNlaywgaXYpIHtcbiAgICBjb25zdCBqd2VBbGdvcml0aG0gPSBhbGcuc2xpY2UoMCwgNyk7XG4gICAgaXYgfHwgKGl2ID0gZ2VuZXJhdGVJdihqd2VBbGdvcml0aG0pKTtcbiAgICBjb25zdCB7IGNpcGhlcnRleHQ6IGVuY3J5cHRlZEtleSwgdGFnIH0gPSBhd2FpdCBlbmNyeXB0KGp3ZUFsZ29yaXRobSwgY2VrLCBrZXksIGl2LCBuZXcgVWludDhBcnJheSgwKSk7XG4gICAgcmV0dXJuIHsgZW5jcnlwdGVkS2V5LCBpdjogYmFzZTY0dXJsKGl2KSwgdGFnOiBiYXNlNjR1cmwodGFnKSB9O1xufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVud3JhcChhbGcsIGtleSwgZW5jcnlwdGVkS2V5LCBpdiwgdGFnKSB7XG4gICAgY29uc3QgandlQWxnb3JpdGhtID0gYWxnLnNsaWNlKDAsIDcpO1xuICAgIHJldHVybiBkZWNyeXB0KGp3ZUFsZ29yaXRobSwga2V5LCBlbmNyeXB0ZWRLZXksIGl2LCB0YWcsIG5ldyBVaW50OEFycmF5KDApKTtcbn1cbiJdLCJuYW1lcyI6WyJlbmNyeXB0IiwiZGVjcnlwdCIsImdlbmVyYXRlSXYiLCJlbmNvZGUiLCJiYXNlNjR1cmwiLCJ3cmFwIiwiYWxnIiwia2V5IiwiY2VrIiwiaXYiLCJqd2VBbGdvcml0aG0iLCJzbGljZSIsImNpcGhlcnRleHQiLCJlbmNyeXB0ZWRLZXkiLCJ0YWciLCJVaW50OEFycmF5IiwidW53cmFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/aesgcmkw.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/buffer_utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   concatKdf: () => (/* binding */ concatKdf),\n/* harmony export */   decoder: () => (/* binding */ decoder),\n/* harmony export */   encoder: () => (/* binding */ encoder),\n/* harmony export */   lengthAndInput: () => (/* binding */ lengthAndInput),\n/* harmony export */   p2s: () => (/* binding */ p2s),\n/* harmony export */   uint32be: () => (/* binding */ uint32be),\n/* harmony export */   uint64be: () => (/* binding */ uint64be)\n/* harmony export */ });\n/* harmony import */ var _runtime_digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/digest.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/digest.js\");\n\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nfunction concat(...buffers) {\n    const size = buffers.reduce((acc, { length })=>acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer)=>{\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nfunction p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([\n        0\n    ]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([\n        value >>> 24,\n        value >>> 16,\n        value >>> 8,\n        value & 0xff\n    ], offset);\n}\nfunction uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nfunction uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nfunction lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nasync function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for(let iter = 0; iter < iterations; iter++){\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await (0,_runtime_digest_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"sha256\", buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9idWZmZXJfdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTBDO0FBQ25DLE1BQU1DLFVBQVUsSUFBSUMsY0FBYztBQUNsQyxNQUFNQyxVQUFVLElBQUlDLGNBQWM7QUFDekMsTUFBTUMsWUFBWSxLQUFLO0FBQ2hCLFNBQVNDLE9BQU8sR0FBR0MsT0FBTztJQUM3QixNQUFNQyxPQUFPRCxRQUFRRSxNQUFNLENBQUMsQ0FBQ0MsS0FBSyxFQUFFQyxNQUFNLEVBQUUsR0FBS0QsTUFBTUMsUUFBUTtJQUMvRCxNQUFNQyxNQUFNLElBQUlDLFdBQVdMO0lBQzNCLElBQUlNLElBQUk7SUFDUlAsUUFBUVEsT0FBTyxDQUFDLENBQUNDO1FBQ2JKLElBQUlLLEdBQUcsQ0FBQ0QsUUFBUUY7UUFDaEJBLEtBQUtFLE9BQU9MLE1BQU07SUFDdEI7SUFDQSxPQUFPQztBQUNYO0FBQ08sU0FBU00sSUFBSUMsR0FBRyxFQUFFQyxRQUFRO0lBQzdCLE9BQU9kLE9BQU9MLFFBQVFvQixNQUFNLENBQUNGLE1BQU0sSUFBSU4sV0FBVztRQUFDO0tBQUUsR0FBR087QUFDNUQ7QUFDQSxTQUFTRSxjQUFjVixHQUFHLEVBQUVXLEtBQUssRUFBRUMsTUFBTTtJQUNyQyxJQUFJRCxRQUFRLEtBQUtBLFNBQVNsQixXQUFXO1FBQ2pDLE1BQU0sSUFBSW9CLFdBQVcsQ0FBQywwQkFBMEIsRUFBRXBCLFlBQVksRUFBRSxXQUFXLEVBQUVrQixNQUFNLENBQUM7SUFDeEY7SUFDQVgsSUFBSUssR0FBRyxDQUFDO1FBQUNNLFVBQVU7UUFBSUEsVUFBVTtRQUFJQSxVQUFVO1FBQUdBLFFBQVE7S0FBSyxFQUFFQztBQUNyRTtBQUNPLFNBQVNFLFNBQVNILEtBQUs7SUFDMUIsTUFBTUksT0FBT0MsS0FBS0MsS0FBSyxDQUFDTixRQUFRbEI7SUFDaEMsTUFBTXlCLE1BQU1QLFFBQVFsQjtJQUNwQixNQUFNTyxNQUFNLElBQUlDLFdBQVc7SUFDM0JTLGNBQWNWLEtBQUtlLE1BQU07SUFDekJMLGNBQWNWLEtBQUtrQixLQUFLO0lBQ3hCLE9BQU9sQjtBQUNYO0FBQ08sU0FBU21CLFNBQVNSLEtBQUs7SUFDMUIsTUFBTVgsTUFBTSxJQUFJQyxXQUFXO0lBQzNCUyxjQUFjVixLQUFLVztJQUNuQixPQUFPWDtBQUNYO0FBQ08sU0FBU29CLGVBQWVDLEtBQUs7SUFDaEMsT0FBTzNCLE9BQU95QixTQUFTRSxNQUFNdEIsTUFBTSxHQUFHc0I7QUFDMUM7QUFDTyxlQUFlQyxVQUFVQyxNQUFNLEVBQUVDLElBQUksRUFBRWIsS0FBSztJQUMvQyxNQUFNYyxhQUFhVCxLQUFLVSxJQUFJLENBQUMsQ0FBQ0YsUUFBUSxLQUFLO0lBQzNDLE1BQU1HLE1BQU0sSUFBSTFCLFdBQVd3QixhQUFhO0lBQ3hDLElBQUssSUFBSUcsT0FBTyxHQUFHQSxPQUFPSCxZQUFZRyxPQUFRO1FBQzFDLE1BQU01QixNQUFNLElBQUlDLFdBQVcsSUFBSXNCLE9BQU94QixNQUFNLEdBQUdZLE1BQU1aLE1BQU07UUFDM0RDLElBQUlLLEdBQUcsQ0FBQ2MsU0FBU1MsT0FBTztRQUN4QjVCLElBQUlLLEdBQUcsQ0FBQ2tCLFFBQVE7UUFDaEJ2QixJQUFJSyxHQUFHLENBQUNNLE9BQU8sSUFBSVksT0FBT3hCLE1BQU07UUFDaEM0QixJQUFJdEIsR0FBRyxDQUFDLE1BQU1qQiw4REFBTUEsQ0FBQyxVQUFVWSxNQUFNNEIsT0FBTztJQUNoRDtJQUNBLE9BQU9ELElBQUlFLEtBQUssQ0FBQyxHQUFHTCxRQUFRO0FBQ2hDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9saWIvYnVmZmVyX3V0aWxzLmpzP2YzZDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRpZ2VzdCBmcm9tICcuLi9ydW50aW1lL2RpZ2VzdC5qcyc7XG5leHBvcnQgY29uc3QgZW5jb2RlciA9IG5ldyBUZXh0RW5jb2RlcigpO1xuZXhwb3J0IGNvbnN0IGRlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbmNvbnN0IE1BWF9JTlQzMiA9IDIgKiogMzI7XG5leHBvcnQgZnVuY3Rpb24gY29uY2F0KC4uLmJ1ZmZlcnMpIHtcbiAgICBjb25zdCBzaXplID0gYnVmZmVycy5yZWR1Y2UoKGFjYywgeyBsZW5ndGggfSkgPT4gYWNjICsgbGVuZ3RoLCAwKTtcbiAgICBjb25zdCBidWYgPSBuZXcgVWludDhBcnJheShzaXplKTtcbiAgICBsZXQgaSA9IDA7XG4gICAgYnVmZmVycy5mb3JFYWNoKChidWZmZXIpID0+IHtcbiAgICAgICAgYnVmLnNldChidWZmZXIsIGkpO1xuICAgICAgICBpICs9IGJ1ZmZlci5sZW5ndGg7XG4gICAgfSk7XG4gICAgcmV0dXJuIGJ1Zjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwMnMoYWxnLCBwMnNJbnB1dCkge1xuICAgIHJldHVybiBjb25jYXQoZW5jb2Rlci5lbmNvZGUoYWxnKSwgbmV3IFVpbnQ4QXJyYXkoWzBdKSwgcDJzSW5wdXQpO1xufVxuZnVuY3Rpb24gd3JpdGVVSW50MzJCRShidWYsIHZhbHVlLCBvZmZzZXQpIHtcbiAgICBpZiAodmFsdWUgPCAwIHx8IHZhbHVlID49IE1BWF9JTlQzMikge1xuICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcihgdmFsdWUgbXVzdCBiZSA+PSAwIGFuZCA8PSAke01BWF9JTlQzMiAtIDF9LiBSZWNlaXZlZCAke3ZhbHVlfWApO1xuICAgIH1cbiAgICBidWYuc2V0KFt2YWx1ZSA+Pj4gMjQsIHZhbHVlID4+PiAxNiwgdmFsdWUgPj4+IDgsIHZhbHVlICYgMHhmZl0sIG9mZnNldCk7XG59XG5leHBvcnQgZnVuY3Rpb24gdWludDY0YmUodmFsdWUpIHtcbiAgICBjb25zdCBoaWdoID0gTWF0aC5mbG9vcih2YWx1ZSAvIE1BWF9JTlQzMik7XG4gICAgY29uc3QgbG93ID0gdmFsdWUgJSBNQVhfSU5UMzI7XG4gICAgY29uc3QgYnVmID0gbmV3IFVpbnQ4QXJyYXkoOCk7XG4gICAgd3JpdGVVSW50MzJCRShidWYsIGhpZ2gsIDApO1xuICAgIHdyaXRlVUludDMyQkUoYnVmLCBsb3csIDQpO1xuICAgIHJldHVybiBidWY7XG59XG5leHBvcnQgZnVuY3Rpb24gdWludDMyYmUodmFsdWUpIHtcbiAgICBjb25zdCBidWYgPSBuZXcgVWludDhBcnJheSg0KTtcbiAgICB3cml0ZVVJbnQzMkJFKGJ1ZiwgdmFsdWUpO1xuICAgIHJldHVybiBidWY7XG59XG5leHBvcnQgZnVuY3Rpb24gbGVuZ3RoQW5kSW5wdXQoaW5wdXQpIHtcbiAgICByZXR1cm4gY29uY2F0KHVpbnQzMmJlKGlucHV0Lmxlbmd0aCksIGlucHV0KTtcbn1cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb25jYXRLZGYoc2VjcmV0LCBiaXRzLCB2YWx1ZSkge1xuICAgIGNvbnN0IGl0ZXJhdGlvbnMgPSBNYXRoLmNlaWwoKGJpdHMgPj4gMykgLyAzMik7XG4gICAgY29uc3QgcmVzID0gbmV3IFVpbnQ4QXJyYXkoaXRlcmF0aW9ucyAqIDMyKTtcbiAgICBmb3IgKGxldCBpdGVyID0gMDsgaXRlciA8IGl0ZXJhdGlvbnM7IGl0ZXIrKykge1xuICAgICAgICBjb25zdCBidWYgPSBuZXcgVWludDhBcnJheSg0ICsgc2VjcmV0Lmxlbmd0aCArIHZhbHVlLmxlbmd0aCk7XG4gICAgICAgIGJ1Zi5zZXQodWludDMyYmUoaXRlciArIDEpKTtcbiAgICAgICAgYnVmLnNldChzZWNyZXQsIDQpO1xuICAgICAgICBidWYuc2V0KHZhbHVlLCA0ICsgc2VjcmV0Lmxlbmd0aCk7XG4gICAgICAgIHJlcy5zZXQoYXdhaXQgZGlnZXN0KCdzaGEyNTYnLCBidWYpLCBpdGVyICogMzIpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzLnNsaWNlKDAsIGJpdHMgPj4gMyk7XG59XG4iXSwibmFtZXMiOlsiZGlnZXN0IiwiZW5jb2RlciIsIlRleHRFbmNvZGVyIiwiZGVjb2RlciIsIlRleHREZWNvZGVyIiwiTUFYX0lOVDMyIiwiY29uY2F0IiwiYnVmZmVycyIsInNpemUiLCJyZWR1Y2UiLCJhY2MiLCJsZW5ndGgiLCJidWYiLCJVaW50OEFycmF5IiwiaSIsImZvckVhY2giLCJidWZmZXIiLCJzZXQiLCJwMnMiLCJhbGciLCJwMnNJbnB1dCIsImVuY29kZSIsIndyaXRlVUludDMyQkUiLCJ2YWx1ZSIsIm9mZnNldCIsIlJhbmdlRXJyb3IiLCJ1aW50NjRiZSIsImhpZ2giLCJNYXRoIiwiZmxvb3IiLCJsb3ciLCJ1aW50MzJiZSIsImxlbmd0aEFuZElucHV0IiwiaW5wdXQiLCJjb25jYXRLZGYiLCJzZWNyZXQiLCJiaXRzIiwiaXRlcmF0aW9ucyIsImNlaWwiLCJyZXMiLCJpdGVyIiwic2xpY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/cek.js":
/*!***************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/cek.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bitLength: () => (/* binding */ bitLength),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _runtime_random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runtime/random.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/random.js\");\n\n\nfunction bitLength(alg) {\n    switch(alg){\n        case \"A128GCM\":\n            return 128;\n        case \"A192GCM\":\n            return 192;\n        case \"A256GCM\":\n        case \"A128CBC-HS256\":\n            return 256;\n        case \"A192CBC-HS384\":\n            return 384;\n        case \"A256CBC-HS512\":\n            return 512;\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((alg)=>(0,_runtime_random_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(new Uint8Array(bitLength(alg) >> 3)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9jZWsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRDtBQUNYO0FBQ25DLFNBQVNFLFVBQVVDLEdBQUc7SUFDekIsT0FBUUE7UUFDSixLQUFLO1lBQ0QsT0FBTztRQUNYLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPO1FBQ1gsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1lBQ0QsT0FBTztRQUNYO1lBQ0ksTUFBTSxJQUFJSCw2REFBZ0JBLENBQUMsQ0FBQywyQkFBMkIsRUFBRUcsSUFBSSxDQUFDO0lBQ3RFO0FBQ0o7QUFDQSxpRUFBZSxDQUFDQSxNQUFRRiw4REFBTUEsQ0FBQyxJQUFJRyxXQUFXRixVQUFVQyxRQUFRLEdBQUUsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvbGliL2Nlay5qcz8wNjAwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpPU0VOb3RTdXBwb3J0ZWQgfSBmcm9tICcuLi91dGlsL2Vycm9ycy5qcyc7XG5pbXBvcnQgcmFuZG9tIGZyb20gJy4uL3J1bnRpbWUvcmFuZG9tLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBiaXRMZW5ndGgoYWxnKSB7XG4gICAgc3dpdGNoIChhbGcpIHtcbiAgICAgICAgY2FzZSAnQTEyOEdDTSc6XG4gICAgICAgICAgICByZXR1cm4gMTI4O1xuICAgICAgICBjYXNlICdBMTkyR0NNJzpcbiAgICAgICAgICAgIHJldHVybiAxOTI7XG4gICAgICAgIGNhc2UgJ0EyNTZHQ00nOlxuICAgICAgICBjYXNlICdBMTI4Q0JDLUhTMjU2JzpcbiAgICAgICAgICAgIHJldHVybiAyNTY7XG4gICAgICAgIGNhc2UgJ0ExOTJDQkMtSFMzODQnOlxuICAgICAgICAgICAgcmV0dXJuIDM4NDtcbiAgICAgICAgY2FzZSAnQTI1NkNCQy1IUzUxMic6XG4gICAgICAgICAgICByZXR1cm4gNTEyO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEpPU0VOb3RTdXBwb3J0ZWQoYFVuc3VwcG9ydGVkIEpXRSBBbGdvcml0aG06ICR7YWxnfWApO1xuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IChhbGcpID0+IHJhbmRvbShuZXcgVWludDhBcnJheShiaXRMZW5ndGgoYWxnKSA+PiAzKSk7XG4iXSwibmFtZXMiOlsiSk9TRU5vdFN1cHBvcnRlZCIsInJhbmRvbSIsImJpdExlbmd0aCIsImFsZyIsIlVpbnQ4QXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/cek.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/check_iv_length.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/check_iv_length.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _iv_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iv.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/iv.js\");\n\n\nconst checkIvLength = (enc, iv)=>{\n    if (iv.length << 3 !== (0,_iv_js__WEBPACK_IMPORTED_MODULE_1__.bitLength)(enc)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWEInvalid(\"Invalid Initialization Vector length\");\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (checkIvLength);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9jaGVja19pdl9sZW5ndGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQStDO0FBQ1g7QUFDcEMsTUFBTUUsZ0JBQWdCLENBQUNDLEtBQUtDO0lBQ3hCLElBQUlBLEdBQUdDLE1BQU0sSUFBSSxNQUFNSixpREFBU0EsQ0FBQ0UsTUFBTTtRQUNuQyxNQUFNLElBQUlILHVEQUFVQSxDQUFDO0lBQ3pCO0FBQ0o7QUFDQSxpRUFBZUUsYUFBYUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvbGliL2NoZWNrX2l2X2xlbmd0aC5qcz9iZDdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpXRUludmFsaWQgfSBmcm9tICcuLi91dGlsL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBiaXRMZW5ndGggfSBmcm9tICcuL2l2LmpzJztcbmNvbnN0IGNoZWNrSXZMZW5ndGggPSAoZW5jLCBpdikgPT4ge1xuICAgIGlmIChpdi5sZW5ndGggPDwgMyAhPT0gYml0TGVuZ3RoKGVuYykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEpXRUludmFsaWQoJ0ludmFsaWQgSW5pdGlhbGl6YXRpb24gVmVjdG9yIGxlbmd0aCcpO1xuICAgIH1cbn07XG5leHBvcnQgZGVmYXVsdCBjaGVja0l2TGVuZ3RoO1xuIl0sIm5hbWVzIjpbIkpXRUludmFsaWQiLCJiaXRMZW5ndGgiLCJjaGVja0l2TGVuZ3RoIiwiZW5jIiwiaXYiLCJsZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/check_iv_length.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/check_key_type.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/check_key_type.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _invalid_key_input_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./invalid_key_input.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\");\n/* harmony import */ var _runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runtime/is_key_like.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\");\n\n\nconst symmetricTypeCheck = (alg, key)=>{\n    if (key instanceof Uint8Array) return;\n    if (!(0,_runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(key)) {\n        throw new TypeError((0,_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_0__.withAlg)(alg, key, ..._runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__.types, \"Uint8Array\"));\n    }\n    if (key.type !== \"secret\") {\n        throw new TypeError(`${_runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__.types.join(\" or \")} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage)=>{\n    if (!(0,_runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(key)) {\n        throw new TypeError((0,_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_0__.withAlg)(alg, key, ..._runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__.types));\n    }\n    if (key.type === \"secret\") {\n        throw new TypeError(`${_runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__.types.join(\" or \")} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === \"sign\" && key.type === \"public\") {\n        throw new TypeError(`${_runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__.types.join(\" or \")} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === \"decrypt\" && key.type === \"public\") {\n        throw new TypeError(`${_runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__.types.join(\" or \")} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === \"verify\" && key.type === \"private\") {\n        throw new TypeError(`${_runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__.types.join(\" or \")} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === \"encrypt\" && key.type === \"private\") {\n        throw new TypeError(`${_runtime_is_key_like_js__WEBPACK_IMPORTED_MODULE_1__.types.join(\" or \")} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage)=>{\n    const symmetric = alg.startsWith(\"HS\") || alg === \"dir\" || alg.startsWith(\"PBES2\") || /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    } else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (checkKeyType);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9jaGVja19rZXlfdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0U7QUFDUDtBQUM3RCxNQUFNSSxxQkFBcUIsQ0FBQ0MsS0FBS0M7SUFDN0IsSUFBSUEsZUFBZUMsWUFDZjtJQUNKLElBQUksQ0FBQ0wsbUVBQVNBLENBQUNJLE1BQU07UUFDakIsTUFBTSxJQUFJRSxVQUFVUCw4REFBZUEsQ0FBQ0ksS0FBS0MsUUFBUUgsMERBQUtBLEVBQUU7SUFDNUQ7SUFDQSxJQUFJRyxJQUFJRyxJQUFJLEtBQUssVUFBVTtRQUN2QixNQUFNLElBQUlELFVBQVUsQ0FBQyxFQUFFTCwwREFBS0EsQ0FBQ08sSUFBSSxDQUFDLFFBQVEsNERBQTRELENBQUM7SUFDM0c7QUFDSjtBQUNBLE1BQU1DLHNCQUFzQixDQUFDTixLQUFLQyxLQUFLTTtJQUNuQyxJQUFJLENBQUNWLG1FQUFTQSxDQUFDSSxNQUFNO1FBQ2pCLE1BQU0sSUFBSUUsVUFBVVAsOERBQWVBLENBQUNJLEtBQUtDLFFBQVFILDBEQUFLQTtJQUMxRDtJQUNBLElBQUlHLElBQUlHLElBQUksS0FBSyxVQUFVO1FBQ3ZCLE1BQU0sSUFBSUQsVUFBVSxDQUFDLEVBQUVMLDBEQUFLQSxDQUFDTyxJQUFJLENBQUMsUUFBUSxpRUFBaUUsQ0FBQztJQUNoSDtJQUNBLElBQUlFLFVBQVUsVUFBVU4sSUFBSUcsSUFBSSxLQUFLLFVBQVU7UUFDM0MsTUFBTSxJQUFJRCxVQUFVLENBQUMsRUFBRUwsMERBQUtBLENBQUNPLElBQUksQ0FBQyxRQUFRLHFFQUFxRSxDQUFDO0lBQ3BIO0lBQ0EsSUFBSUUsVUFBVSxhQUFhTixJQUFJRyxJQUFJLEtBQUssVUFBVTtRQUM5QyxNQUFNLElBQUlELFVBQVUsQ0FBQyxFQUFFTCwwREFBS0EsQ0FBQ08sSUFBSSxDQUFDLFFBQVEsd0VBQXdFLENBQUM7SUFDdkg7SUFDQSxJQUFJSixJQUFJTyxTQUFTLElBQUlELFVBQVUsWUFBWU4sSUFBSUcsSUFBSSxLQUFLLFdBQVc7UUFDL0QsTUFBTSxJQUFJRCxVQUFVLENBQUMsRUFBRUwsMERBQUtBLENBQUNPLElBQUksQ0FBQyxRQUFRLHNFQUFzRSxDQUFDO0lBQ3JIO0lBQ0EsSUFBSUosSUFBSU8sU0FBUyxJQUFJRCxVQUFVLGFBQWFOLElBQUlHLElBQUksS0FBSyxXQUFXO1FBQ2hFLE1BQU0sSUFBSUQsVUFBVSxDQUFDLEVBQUVMLDBEQUFLQSxDQUFDTyxJQUFJLENBQUMsUUFBUSx1RUFBdUUsQ0FBQztJQUN0SDtBQUNKO0FBQ0EsTUFBTUksZUFBZSxDQUFDVCxLQUFLQyxLQUFLTTtJQUM1QixNQUFNRyxZQUFZVixJQUFJVyxVQUFVLENBQUMsU0FDN0JYLFFBQVEsU0FDUkEsSUFBSVcsVUFBVSxDQUFDLFlBQ2YscUJBQXFCQyxJQUFJLENBQUNaO0lBQzlCLElBQUlVLFdBQVc7UUFDWFgsbUJBQW1CQyxLQUFLQztJQUM1QixPQUNLO1FBQ0RLLG9CQUFvQk4sS0FBS0MsS0FBS007SUFDbEM7QUFDSjtBQUNBLGlFQUFlRSxZQUFZQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9saWIvY2hlY2tfa2V5X3R5cGUuanM/N2IwNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB3aXRoQWxnIGFzIGludmFsaWRLZXlJbnB1dCB9IGZyb20gJy4vaW52YWxpZF9rZXlfaW5wdXQuanMnO1xuaW1wb3J0IGlzS2V5TGlrZSwgeyB0eXBlcyB9IGZyb20gJy4uL3J1bnRpbWUvaXNfa2V5X2xpa2UuanMnO1xuY29uc3Qgc3ltbWV0cmljVHlwZUNoZWNrID0gKGFsZywga2V5KSA9PiB7XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpXG4gICAgICAgIHJldHVybjtcbiAgICBpZiAoIWlzS2V5TGlrZShrZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoaW52YWxpZEtleUlucHV0KGFsZywga2V5LCAuLi50eXBlcywgJ1VpbnQ4QXJyYXknKSk7XG4gICAgfVxuICAgIGlmIChrZXkudHlwZSAhPT0gJ3NlY3JldCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgJHt0eXBlcy5qb2luKCcgb3IgJyl9IGluc3RhbmNlcyBmb3Igc3ltbWV0cmljIGFsZ29yaXRobXMgbXVzdCBiZSBvZiB0eXBlIFwic2VjcmV0XCJgKTtcbiAgICB9XG59O1xuY29uc3QgYXN5bW1ldHJpY1R5cGVDaGVjayA9IChhbGcsIGtleSwgdXNhZ2UpID0+IHtcbiAgICBpZiAoIWlzS2V5TGlrZShrZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoaW52YWxpZEtleUlucHV0KGFsZywga2V5LCAuLi50eXBlcykpO1xuICAgIH1cbiAgICBpZiAoa2V5LnR5cGUgPT09ICdzZWNyZXQnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7dHlwZXMuam9pbignIG9yICcpfSBpbnN0YW5jZXMgZm9yIGFzeW1tZXRyaWMgYWxnb3JpdGhtcyBtdXN0IG5vdCBiZSBvZiB0eXBlIFwic2VjcmV0XCJgKTtcbiAgICB9XG4gICAgaWYgKHVzYWdlID09PSAnc2lnbicgJiYga2V5LnR5cGUgPT09ICdwdWJsaWMnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7dHlwZXMuam9pbignIG9yICcpfSBpbnN0YW5jZXMgZm9yIGFzeW1tZXRyaWMgYWxnb3JpdGhtIHNpZ25pbmcgbXVzdCBiZSBvZiB0eXBlIFwicHJpdmF0ZVwiYCk7XG4gICAgfVxuICAgIGlmICh1c2FnZSA9PT0gJ2RlY3J5cHQnICYmIGtleS50eXBlID09PSAncHVibGljJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGAke3R5cGVzLmpvaW4oJyBvciAnKX0gaW5zdGFuY2VzIGZvciBhc3ltbWV0cmljIGFsZ29yaXRobSBkZWNyeXB0aW9uIG11c3QgYmUgb2YgdHlwZSBcInByaXZhdGVcImApO1xuICAgIH1cbiAgICBpZiAoa2V5LmFsZ29yaXRobSAmJiB1c2FnZSA9PT0gJ3ZlcmlmeScgJiYga2V5LnR5cGUgPT09ICdwcml2YXRlJykge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGAke3R5cGVzLmpvaW4oJyBvciAnKX0gaW5zdGFuY2VzIGZvciBhc3ltbWV0cmljIGFsZ29yaXRobSB2ZXJpZnlpbmcgbXVzdCBiZSBvZiB0eXBlIFwicHVibGljXCJgKTtcbiAgICB9XG4gICAgaWYgKGtleS5hbGdvcml0aG0gJiYgdXNhZ2UgPT09ICdlbmNyeXB0JyAmJiBrZXkudHlwZSA9PT0gJ3ByaXZhdGUnKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYCR7dHlwZXMuam9pbignIG9yICcpfSBpbnN0YW5jZXMgZm9yIGFzeW1tZXRyaWMgYWxnb3JpdGhtIGVuY3J5cHRpb24gbXVzdCBiZSBvZiB0eXBlIFwicHVibGljXCJgKTtcbiAgICB9XG59O1xuY29uc3QgY2hlY2tLZXlUeXBlID0gKGFsZywga2V5LCB1c2FnZSkgPT4ge1xuICAgIGNvbnN0IHN5bW1ldHJpYyA9IGFsZy5zdGFydHNXaXRoKCdIUycpIHx8XG4gICAgICAgIGFsZyA9PT0gJ2RpcicgfHxcbiAgICAgICAgYWxnLnN0YXJ0c1dpdGgoJ1BCRVMyJykgfHxcbiAgICAgICAgL15BXFxkezN9KD86R0NNKT9LVyQvLnRlc3QoYWxnKTtcbiAgICBpZiAoc3ltbWV0cmljKSB7XG4gICAgICAgIHN5bW1ldHJpY1R5cGVDaGVjayhhbGcsIGtleSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBhc3ltbWV0cmljVHlwZUNoZWNrKGFsZywga2V5LCB1c2FnZSk7XG4gICAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IGNoZWNrS2V5VHlwZTtcbiJdLCJuYW1lcyI6WyJ3aXRoQWxnIiwiaW52YWxpZEtleUlucHV0IiwiaXNLZXlMaWtlIiwidHlwZXMiLCJzeW1tZXRyaWNUeXBlQ2hlY2siLCJhbGciLCJrZXkiLCJVaW50OEFycmF5IiwiVHlwZUVycm9yIiwidHlwZSIsImpvaW4iLCJhc3ltbWV0cmljVHlwZUNoZWNrIiwidXNhZ2UiLCJhbGdvcml0aG0iLCJjaGVja0tleVR5cGUiLCJzeW1tZXRyaWMiLCJzdGFydHNXaXRoIiwidGVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/check_key_type.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/check_p2s.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/check_p2s.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ checkP2s)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\nfunction checkP2s(p2s) {\n    if (!(p2s instanceof Uint8Array) || p2s.length < 8) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWEInvalid(\"PBES2 Salt Input must be 8 or more octets\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9jaGVja19wMnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDaEMsU0FBU0MsU0FBU0MsR0FBRztJQUNoQyxJQUFJLENBQUVBLENBQUFBLGVBQWVDLFVBQVMsS0FBTUQsSUFBSUUsTUFBTSxHQUFHLEdBQUc7UUFDaEQsTUFBTSxJQUFJSix1REFBVUEsQ0FBQztJQUN6QjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9saWIvY2hlY2tfcDJzLmpzPzViNWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSldFSW52YWxpZCB9IGZyb20gJy4uL3V0aWwvZXJyb3JzLmpzJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNoZWNrUDJzKHAycykge1xuICAgIGlmICghKHAycyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHx8IHAycy5sZW5ndGggPCA4KSB7XG4gICAgICAgIHRocm93IG5ldyBKV0VJbnZhbGlkKCdQQkVTMiBTYWx0IElucHV0IG11c3QgYmUgOCBvciBtb3JlIG9jdGV0cycpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJKV0VJbnZhbGlkIiwiY2hlY2tQMnMiLCJwMnMiLCJVaW50OEFycmF5IiwibGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/check_p2s.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/crypto_key.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/crypto_key.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkEncCryptoKey: () => (/* binding */ checkEncCryptoKey),\n/* harmony export */   checkSigCryptoKey: () => (/* binding */ checkSigCryptoKey)\n/* harmony export */ });\nfunction unusable(name, prop = \"algorithm.name\") {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch(alg){\n        case \"ES256\":\n            return \"P-256\";\n        case \"ES384\":\n            return \"P-384\";\n        case \"ES512\":\n            return \"P-521\";\n        default:\n            throw new Error(\"unreachable\");\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected)=>key.usages.includes(expected))) {\n        let msg = \"CryptoKey does not support this operation, its usages must include \";\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(\", \")}, or ${last}.`;\n        } else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        } else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nfunction checkSigCryptoKey(key, alg, ...usages) {\n    switch(alg){\n        case \"HS256\":\n        case \"HS384\":\n        case \"HS512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"HMAC\")) throw unusable(\"HMAC\");\n                const expected = parseInt(alg.slice(2), 10);\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"RSASSA-PKCS1-v1_5\")) throw unusable(\"RSASSA-PKCS1-v1_5\");\n                const expected = parseInt(alg.slice(2), 10);\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        case \"PS256\":\n        case \"PS384\":\n        case \"PS512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"RSA-PSS\")) throw unusable(\"RSA-PSS\");\n                const expected = parseInt(alg.slice(2), 10);\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        case \"EdDSA\":\n            {\n                if (key.algorithm.name !== \"Ed25519\" && key.algorithm.name !== \"Ed448\") {\n                    throw unusable(\"Ed25519 or Ed448\");\n                }\n                break;\n            }\n        case \"ES256\":\n        case \"ES384\":\n        case \"ES512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"ECDSA\")) throw unusable(\"ECDSA\");\n                const expected = getNamedCurve(alg);\n                const actual = key.algorithm.namedCurve;\n                if (actual !== expected) throw unusable(expected, \"algorithm.namedCurve\");\n                break;\n            }\n        default:\n            throw new TypeError(\"CryptoKey does not support this operation\");\n    }\n    checkUsage(key, usages);\n}\nfunction checkEncCryptoKey(key, alg, ...usages) {\n    switch(alg){\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            {\n                if (!isAlgorithm(key.algorithm, \"AES-GCM\")) throw unusable(\"AES-GCM\");\n                const expected = parseInt(alg.slice(1, 4), 10);\n                const actual = key.algorithm.length;\n                if (actual !== expected) throw unusable(expected, \"algorithm.length\");\n                break;\n            }\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n            {\n                if (!isAlgorithm(key.algorithm, \"AES-KW\")) throw unusable(\"AES-KW\");\n                const expected = parseInt(alg.slice(1, 4), 10);\n                const actual = key.algorithm.length;\n                if (actual !== expected) throw unusable(expected, \"algorithm.length\");\n                break;\n            }\n        case \"ECDH\":\n            {\n                switch(key.algorithm.name){\n                    case \"ECDH\":\n                    case \"X25519\":\n                    case \"X448\":\n                        break;\n                    default:\n                        throw unusable(\"ECDH, X25519, or X448\");\n                }\n                break;\n            }\n        case \"PBES2-HS256+A128KW\":\n        case \"PBES2-HS384+A192KW\":\n        case \"PBES2-HS512+A256KW\":\n            if (!isAlgorithm(key.algorithm, \"PBKDF2\")) throw unusable(\"PBKDF2\");\n            break;\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            {\n                if (!isAlgorithm(key.algorithm, \"RSA-OAEP\")) throw unusable(\"RSA-OAEP\");\n                const expected = parseInt(alg.slice(9), 10) || 1;\n                const actual = getHashLength(key.algorithm.hash);\n                if (actual !== expected) throw unusable(`SHA-${expected}`, \"algorithm.hash\");\n                break;\n            }\n        default:\n            throw new TypeError(\"CryptoKey does not support this operation\");\n    }\n    checkUsage(key, usages);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/crypto_key.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/decrypt_key_management.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/decrypt_key_management.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _runtime_aeskw_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/aeskw.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/aeskw.js\");\n/* harmony import */ var _runtime_ecdhes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runtime/ecdhes.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/ecdhes.js\");\n/* harmony import */ var _runtime_pbes2kw_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../runtime/pbes2kw.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/pbes2kw.js\");\n/* harmony import */ var _runtime_rsaes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../runtime/rsaes.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/rsaes.js\");\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _lib_cek_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lib/cek.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/cek.js\");\n/* harmony import */ var _key_import_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../key/import.js */ \"(middleware)/./node_modules/jose/dist/browser/key/import.js\");\n/* harmony import */ var _check_key_type_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./check_key_type.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/check_key_type.js\");\n/* harmony import */ var _is_object_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n/* harmony import */ var _aesgcmkw_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./aesgcmkw.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/aesgcmkw.js\");\n\n\n\n\n\n\n\n\n\n\n\nasync function decryptKeyManagement(alg, key, encryptedKey, joseHeader, options) {\n    (0,_check_key_type_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(alg, key, \"decrypt\");\n    switch(alg){\n        case \"dir\":\n            {\n                if (encryptedKey !== undefined) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"Encountered unexpected JWE Encrypted Key\");\n                return key;\n            }\n        case \"ECDH-ES\":\n            if (encryptedKey !== undefined) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"Encountered unexpected JWE Encrypted Key\");\n        case \"ECDH-ES+A128KW\":\n        case \"ECDH-ES+A192KW\":\n        case \"ECDH-ES+A256KW\":\n            {\n                if (!(0,_is_object_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(joseHeader.epk)) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(`JOSE Header \"epk\" (Ephemeral Public Key) missing or invalid`);\n                if (!_runtime_ecdhes_js__WEBPACK_IMPORTED_MODULE_1__.ecdhAllowed(key)) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JOSENotSupported(\"ECDH with the provided key is not allowed or not supported by your javascript runtime\");\n                const epk = await (0,_key_import_js__WEBPACK_IMPORTED_MODULE_7__.importJWK)(joseHeader.epk, alg);\n                let partyUInfo;\n                let partyVInfo;\n                if (joseHeader.apu !== undefined) {\n                    if (typeof joseHeader.apu !== \"string\") throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(`JOSE Header \"apu\" (Agreement PartyUInfo) invalid`);\n                    try {\n                        partyUInfo = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_4__.decode)(joseHeader.apu);\n                    } catch (_a) {\n                        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"Failed to base64url decode the apu\");\n                    }\n                }\n                if (joseHeader.apv !== undefined) {\n                    if (typeof joseHeader.apv !== \"string\") throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(`JOSE Header \"apv\" (Agreement PartyVInfo) invalid`);\n                    try {\n                        partyVInfo = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_4__.decode)(joseHeader.apv);\n                    } catch (_b) {\n                        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"Failed to base64url decode the apv\");\n                    }\n                }\n                const sharedSecret = await _runtime_ecdhes_js__WEBPACK_IMPORTED_MODULE_1__.deriveKey(epk, key, alg === \"ECDH-ES\" ? joseHeader.enc : alg, alg === \"ECDH-ES\" ? (0,_lib_cek_js__WEBPACK_IMPORTED_MODULE_6__.bitLength)(joseHeader.enc) : parseInt(alg.slice(-5, -2), 10), partyUInfo, partyVInfo);\n                if (alg === \"ECDH-ES\") return sharedSecret;\n                if (encryptedKey === undefined) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"JWE Encrypted Key missing\");\n                return (0,_runtime_aeskw_js__WEBPACK_IMPORTED_MODULE_0__.unwrap)(alg.slice(-6), sharedSecret, encryptedKey);\n            }\n        case \"RSA1_5\":\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            {\n                if (encryptedKey === undefined) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"JWE Encrypted Key missing\");\n                return (0,_runtime_rsaes_js__WEBPACK_IMPORTED_MODULE_3__.decrypt)(alg, key, encryptedKey);\n            }\n        case \"PBES2-HS256+A128KW\":\n        case \"PBES2-HS384+A192KW\":\n        case \"PBES2-HS512+A256KW\":\n            {\n                if (encryptedKey === undefined) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"JWE Encrypted Key missing\");\n                if (typeof joseHeader.p2c !== \"number\") throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) missing or invalid`);\n                const p2cLimit = (options === null || options === void 0 ? void 0 : options.maxPBES2Count) || 10000;\n                if (joseHeader.p2c > p2cLimit) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(`JOSE Header \"p2c\" (PBES2 Count) out is of acceptable bounds`);\n                if (typeof joseHeader.p2s !== \"string\") throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(`JOSE Header \"p2s\" (PBES2 Salt) missing or invalid`);\n                let p2s;\n                try {\n                    p2s = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_4__.decode)(joseHeader.p2s);\n                } catch (_c) {\n                    throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"Failed to base64url decode the p2s\");\n                }\n                return (0,_runtime_pbes2kw_js__WEBPACK_IMPORTED_MODULE_2__.decrypt)(alg, key, encryptedKey, joseHeader.p2c, p2s);\n            }\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n            {\n                if (encryptedKey === undefined) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"JWE Encrypted Key missing\");\n                return (0,_runtime_aeskw_js__WEBPACK_IMPORTED_MODULE_0__.unwrap)(alg, key, encryptedKey);\n            }\n        case \"A128GCMKW\":\n        case \"A192GCMKW\":\n        case \"A256GCMKW\":\n            {\n                if (encryptedKey === undefined) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"JWE Encrypted Key missing\");\n                if (typeof joseHeader.iv !== \"string\") throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(`JOSE Header \"iv\" (Initialization Vector) missing or invalid`);\n                if (typeof joseHeader.tag !== \"string\") throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(`JOSE Header \"tag\" (Authentication Tag) missing or invalid`);\n                let iv;\n                try {\n                    iv = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_4__.decode)(joseHeader.iv);\n                } catch (_d) {\n                    throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"Failed to base64url decode the iv\");\n                }\n                let tag;\n                try {\n                    tag = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_4__.decode)(joseHeader.tag);\n                } catch (_e) {\n                    throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JWEInvalid(\"Failed to base64url decode the tag\");\n                }\n                return (0,_aesgcmkw_js__WEBPACK_IMPORTED_MODULE_10__.unwrap)(alg, key, encryptedKey, iv, tag);\n            }\n        default:\n            {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_5__.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n            }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (decryptKeyManagement);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/decrypt_key_management.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/encrypt_key_management.js":
/*!**********************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/encrypt_key_management.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _runtime_aeskw_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/aeskw.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/aeskw.js\");\n/* harmony import */ var _runtime_ecdhes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runtime/ecdhes.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/ecdhes.js\");\n/* harmony import */ var _runtime_pbes2kw_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../runtime/pbes2kw.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/pbes2kw.js\");\n/* harmony import */ var _runtime_rsaes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../runtime/rsaes.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/rsaes.js\");\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _lib_cek_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/cek.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/cek.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _key_export_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../key/export.js */ \"(middleware)/./node_modules/jose/dist/browser/key/export.js\");\n/* harmony import */ var _check_key_type_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./check_key_type.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/check_key_type.js\");\n/* harmony import */ var _aesgcmkw_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./aesgcmkw.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/aesgcmkw.js\");\n\n\n\n\n\n\n\n\n\n\nasync function encryptKeyManagement(alg, enc, key, providedCek, providedParameters = {}) {\n    let encryptedKey;\n    let parameters;\n    let cek;\n    (0,_check_key_type_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(alg, key, \"encrypt\");\n    switch(alg){\n        case \"dir\":\n            {\n                cek = key;\n                break;\n            }\n        case \"ECDH-ES\":\n        case \"ECDH-ES+A128KW\":\n        case \"ECDH-ES+A192KW\":\n        case \"ECDH-ES+A256KW\":\n            {\n                if (!_runtime_ecdhes_js__WEBPACK_IMPORTED_MODULE_1__.ecdhAllowed(key)) {\n                    throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_6__.JOSENotSupported(\"ECDH with the provided key is not allowed or not supported by your javascript runtime\");\n                }\n                const { apu, apv } = providedParameters;\n                let { epk: ephemeralKey } = providedParameters;\n                ephemeralKey || (ephemeralKey = (await _runtime_ecdhes_js__WEBPACK_IMPORTED_MODULE_1__.generateEpk(key)).privateKey);\n                const { x, y, crv, kty } = await (0,_key_export_js__WEBPACK_IMPORTED_MODULE_7__.exportJWK)(ephemeralKey);\n                const sharedSecret = await _runtime_ecdhes_js__WEBPACK_IMPORTED_MODULE_1__.deriveKey(key, ephemeralKey, alg === \"ECDH-ES\" ? enc : alg, alg === \"ECDH-ES\" ? (0,_lib_cek_js__WEBPACK_IMPORTED_MODULE_5__.bitLength)(enc) : parseInt(alg.slice(-5, -2), 10), apu, apv);\n                parameters = {\n                    epk: {\n                        x,\n                        crv,\n                        kty\n                    }\n                };\n                if (kty === \"EC\") parameters.epk.y = y;\n                if (apu) parameters.apu = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_4__.encode)(apu);\n                if (apv) parameters.apv = (0,_runtime_base64url_js__WEBPACK_IMPORTED_MODULE_4__.encode)(apv);\n                if (alg === \"ECDH-ES\") {\n                    cek = sharedSecret;\n                    break;\n                }\n                cek = providedCek || (0,_lib_cek_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(enc);\n                const kwAlg = alg.slice(-6);\n                encryptedKey = await (0,_runtime_aeskw_js__WEBPACK_IMPORTED_MODULE_0__.wrap)(kwAlg, sharedSecret, cek);\n                break;\n            }\n        case \"RSA1_5\":\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            {\n                cek = providedCek || (0,_lib_cek_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(enc);\n                encryptedKey = await (0,_runtime_rsaes_js__WEBPACK_IMPORTED_MODULE_3__.encrypt)(alg, key, cek);\n                break;\n            }\n        case \"PBES2-HS256+A128KW\":\n        case \"PBES2-HS384+A192KW\":\n        case \"PBES2-HS512+A256KW\":\n            {\n                cek = providedCek || (0,_lib_cek_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(enc);\n                const { p2c, p2s } = providedParameters;\n                ({ encryptedKey, ...parameters } = await (0,_runtime_pbes2kw_js__WEBPACK_IMPORTED_MODULE_2__.encrypt)(alg, key, cek, p2c, p2s));\n                break;\n            }\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n            {\n                cek = providedCek || (0,_lib_cek_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(enc);\n                encryptedKey = await (0,_runtime_aeskw_js__WEBPACK_IMPORTED_MODULE_0__.wrap)(alg, key, cek);\n                break;\n            }\n        case \"A128GCMKW\":\n        case \"A192GCMKW\":\n        case \"A256GCMKW\":\n            {\n                cek = providedCek || (0,_lib_cek_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(enc);\n                const { iv } = providedParameters;\n                ({ encryptedKey, ...parameters } = await (0,_aesgcmkw_js__WEBPACK_IMPORTED_MODULE_9__.wrap)(alg, key, cek, iv));\n                break;\n            }\n        default:\n            {\n                throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_6__.JOSENotSupported('Invalid or unsupported \"alg\" (JWE Algorithm) header value');\n            }\n    }\n    return {\n        cek,\n        encryptedKey,\n        parameters\n    };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (encryptKeyManagement);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/encrypt_key_management.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/epoch.js":
/*!*****************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/epoch.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((date)=>Math.floor(date.getTime() / 1000));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9lcG9jaC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FBQ0EsT0FBU0MsS0FBS0MsS0FBSyxDQUFDRixLQUFLRyxPQUFPLEtBQUssS0FBSSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9saWIvZXBvY2guanM/YmEwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoZGF0ZSkgPT4gTWF0aC5mbG9vcihkYXRlLmdldFRpbWUoKSAvIDEwMDApO1xuIl0sIm5hbWVzIjpbImRhdGUiLCJNYXRoIiwiZmxvb3IiLCJnZXRUaW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/epoch.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/format_pem.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/format_pem.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((b64, descriptor)=>{\n    const newlined = (b64.match(/.{1,64}/g) || []).join(\"\\n\");\n    return `-----BEGIN ${descriptor}-----\\n${newlined}\\n-----END ${descriptor}-----`;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9mb3JtYXRfcGVtLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxDQUFDQSxLQUFLQztJQUNqQixNQUFNQyxXQUFXLENBQUNGLElBQUlHLEtBQUssQ0FBQyxlQUFlLEVBQUUsRUFBRUMsSUFBSSxDQUFDO0lBQ3BELE9BQU8sQ0FBQyxXQUFXLEVBQUVILFdBQVcsT0FBTyxFQUFFQyxTQUFTLFdBQVcsRUFBRUQsV0FBVyxLQUFLLENBQUM7QUFDcEYsR0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvbGliL2Zvcm1hdF9wZW0uanM/NzU4YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAoYjY0LCBkZXNjcmlwdG9yKSA9PiB7XG4gICAgY29uc3QgbmV3bGluZWQgPSAoYjY0Lm1hdGNoKC8uezEsNjR9L2cpIHx8IFtdKS5qb2luKCdcXG4nKTtcbiAgICByZXR1cm4gYC0tLS0tQkVHSU4gJHtkZXNjcmlwdG9yfS0tLS0tXFxuJHtuZXdsaW5lZH1cXG4tLS0tLUVORCAke2Rlc2NyaXB0b3J9LS0tLS1gO1xufTtcbiJdLCJuYW1lcyI6WyJiNjQiLCJkZXNjcmlwdG9yIiwibmV3bGluZWQiLCJtYXRjaCIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/format_pem.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js":
/*!*****************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/invalid_key_input.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   withAlg: () => (/* binding */ withAlg)\n/* harmony export */ });\nfunction message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(\", \")}, or ${last}.`;\n    } else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    } else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    } else if (typeof actual === \"function\" && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    } else if (typeof actual === \"object\" && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((actual, ...types)=>{\n    return message(\"Key must be \", actual, ...types);\n});\nfunction withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9pbnZhbGlkX2tleV9pbnB1dC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLFNBQVNBLFFBQVFDLEdBQUcsRUFBRUMsTUFBTSxFQUFFLEdBQUdDLEtBQUs7SUFDbEMsSUFBSUEsTUFBTUMsTUFBTSxHQUFHLEdBQUc7UUFDbEIsTUFBTUMsT0FBT0YsTUFBTUcsR0FBRztRQUN0QkwsT0FBTyxDQUFDLFlBQVksRUFBRUUsTUFBTUksSUFBSSxDQUFDLE1BQU0sS0FBSyxFQUFFRixLQUFLLENBQUMsQ0FBQztJQUN6RCxPQUNLLElBQUlGLE1BQU1DLE1BQU0sS0FBSyxHQUFHO1FBQ3pCSCxPQUFPLENBQUMsWUFBWSxFQUFFRSxLQUFLLENBQUMsRUFBRSxDQUFDLElBQUksRUFBRUEsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDcEQsT0FDSztRQUNERixPQUFPLENBQUMsUUFBUSxFQUFFRSxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztJQUNqQztJQUNBLElBQUlELFVBQVUsTUFBTTtRQUNoQkQsT0FBTyxDQUFDLFVBQVUsRUFBRUMsT0FBTyxDQUFDO0lBQ2hDLE9BQ0ssSUFBSSxPQUFPQSxXQUFXLGNBQWNBLE9BQU9NLElBQUksRUFBRTtRQUNsRFAsT0FBTyxDQUFDLG1CQUFtQixFQUFFQyxPQUFPTSxJQUFJLENBQUMsQ0FBQztJQUM5QyxPQUNLLElBQUksT0FBT04sV0FBVyxZQUFZQSxVQUFVLE1BQU07UUFDbkQsSUFBSUEsT0FBT08sV0FBVyxJQUFJUCxPQUFPTyxXQUFXLENBQUNELElBQUksRUFBRTtZQUMvQ1AsT0FBTyxDQUFDLHlCQUF5QixFQUFFQyxPQUFPTyxXQUFXLENBQUNELElBQUksQ0FBQyxDQUFDO1FBQ2hFO0lBQ0o7SUFDQSxPQUFPUDtBQUNYO0FBQ0EsaUVBQWUsQ0FBQ0MsUUFBUSxHQUFHQztJQUN2QixPQUFPSCxRQUFRLGdCQUFnQkUsV0FBV0M7QUFDOUMsR0FBRTtBQUNLLFNBQVNPLFFBQVFDLEdBQUcsRUFBRVQsTUFBTSxFQUFFLEdBQUdDLEtBQUs7SUFDekMsT0FBT0gsUUFBUSxDQUFDLFlBQVksRUFBRVcsSUFBSSxtQkFBbUIsQ0FBQyxFQUFFVCxXQUFXQztBQUN2RSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvbGliL2ludmFsaWRfa2V5X2lucHV0LmpzP2U4MGMiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gbWVzc2FnZShtc2csIGFjdHVhbCwgLi4udHlwZXMpIHtcbiAgICBpZiAodHlwZXMubGVuZ3RoID4gMikge1xuICAgICAgICBjb25zdCBsYXN0ID0gdHlwZXMucG9wKCk7XG4gICAgICAgIG1zZyArPSBgb25lIG9mIHR5cGUgJHt0eXBlcy5qb2luKCcsICcpfSwgb3IgJHtsYXN0fS5gO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlcy5sZW5ndGggPT09IDIpIHtcbiAgICAgICAgbXNnICs9IGBvbmUgb2YgdHlwZSAke3R5cGVzWzBdfSBvciAke3R5cGVzWzFdfS5gO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbXNnICs9IGBvZiB0eXBlICR7dHlwZXNbMF19LmA7XG4gICAgfVxuICAgIGlmIChhY3R1YWwgPT0gbnVsbCkge1xuICAgICAgICBtc2cgKz0gYCBSZWNlaXZlZCAke2FjdHVhbH1gO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlb2YgYWN0dWFsID09PSAnZnVuY3Rpb24nICYmIGFjdHVhbC5uYW1lKSB7XG4gICAgICAgIG1zZyArPSBgIFJlY2VpdmVkIGZ1bmN0aW9uICR7YWN0dWFsLm5hbWV9YDtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIGFjdHVhbCA9PT0gJ29iamVjdCcgJiYgYWN0dWFsICE9IG51bGwpIHtcbiAgICAgICAgaWYgKGFjdHVhbC5jb25zdHJ1Y3RvciAmJiBhY3R1YWwuY29uc3RydWN0b3IubmFtZSkge1xuICAgICAgICAgICAgbXNnICs9IGAgUmVjZWl2ZWQgYW4gaW5zdGFuY2Ugb2YgJHthY3R1YWwuY29uc3RydWN0b3IubmFtZX1gO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtc2c7XG59XG5leHBvcnQgZGVmYXVsdCAoYWN0dWFsLCAuLi50eXBlcykgPT4ge1xuICAgIHJldHVybiBtZXNzYWdlKCdLZXkgbXVzdCBiZSAnLCBhY3R1YWwsIC4uLnR5cGVzKTtcbn07XG5leHBvcnQgZnVuY3Rpb24gd2l0aEFsZyhhbGcsIGFjdHVhbCwgLi4udHlwZXMpIHtcbiAgICByZXR1cm4gbWVzc2FnZShgS2V5IGZvciB0aGUgJHthbGd9IGFsZ29yaXRobSBtdXN0IGJlIGAsIGFjdHVhbCwgLi4udHlwZXMpO1xufVxuIl0sIm5hbWVzIjpbIm1lc3NhZ2UiLCJtc2ciLCJhY3R1YWwiLCJ0eXBlcyIsImxlbmd0aCIsImxhc3QiLCJwb3AiLCJqb2luIiwibmFtZSIsImNvbnN0cnVjdG9yIiwid2l0aEFsZyIsImFsZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/is_disjoint.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/is_disjoint.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst isDisjoint = (...headers)=>{\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources){\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters){\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (isDisjoint);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9pc19kaXNqb2ludC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsYUFBYSxDQUFDLEdBQUdDO0lBQ25CLE1BQU1DLFVBQVVELFFBQVFFLE1BQU0sQ0FBQ0M7SUFDL0IsSUFBSUYsUUFBUUcsTUFBTSxLQUFLLEtBQUtILFFBQVFHLE1BQU0sS0FBSyxHQUFHO1FBQzlDLE9BQU87SUFDWDtJQUNBLElBQUlDO0lBQ0osS0FBSyxNQUFNQyxVQUFVTCxRQUFTO1FBQzFCLE1BQU1NLGFBQWFDLE9BQU9DLElBQUksQ0FBQ0g7UUFDL0IsSUFBSSxDQUFDRCxPQUFPQSxJQUFJSyxJQUFJLEtBQUssR0FBRztZQUN4QkwsTUFBTSxJQUFJTSxJQUFJSjtZQUNkO1FBQ0o7UUFDQSxLQUFLLE1BQU1LLGFBQWFMLFdBQVk7WUFDaEMsSUFBSUYsSUFBSVEsR0FBRyxDQUFDRCxZQUFZO2dCQUNwQixPQUFPO1lBQ1g7WUFDQVAsSUFBSVMsR0FBRyxDQUFDRjtRQUNaO0lBQ0o7SUFDQSxPQUFPO0FBQ1g7QUFDQSxpRUFBZWIsVUFBVUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvbGliL2lzX2Rpc2pvaW50LmpzP2RmMDAiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaXNEaXNqb2ludCA9ICguLi5oZWFkZXJzKSA9PiB7XG4gICAgY29uc3Qgc291cmNlcyA9IGhlYWRlcnMuZmlsdGVyKEJvb2xlYW4pO1xuICAgIGlmIChzb3VyY2VzLmxlbmd0aCA9PT0gMCB8fCBzb3VyY2VzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgbGV0IGFjYztcbiAgICBmb3IgKGNvbnN0IGhlYWRlciBvZiBzb3VyY2VzKSB7XG4gICAgICAgIGNvbnN0IHBhcmFtZXRlcnMgPSBPYmplY3Qua2V5cyhoZWFkZXIpO1xuICAgICAgICBpZiAoIWFjYyB8fCBhY2Muc2l6ZSA9PT0gMCkge1xuICAgICAgICAgICAgYWNjID0gbmV3IFNldChwYXJhbWV0ZXJzKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgcGFyYW1ldGVyIG9mIHBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIGlmIChhY2MuaGFzKHBhcmFtZXRlcikpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBhY2MuYWRkKHBhcmFtZXRlcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuZXhwb3J0IGRlZmF1bHQgaXNEaXNqb2ludDtcbiJdLCJuYW1lcyI6WyJpc0Rpc2pvaW50IiwiaGVhZGVycyIsInNvdXJjZXMiLCJmaWx0ZXIiLCJCb29sZWFuIiwibGVuZ3RoIiwiYWNjIiwiaGVhZGVyIiwicGFyYW1ldGVycyIsIk9iamVjdCIsImtleXMiLCJzaXplIiwiU2V0IiwicGFyYW1ldGVyIiwiaGFzIiwiYWRkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/is_disjoint.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/is_object.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/is_object.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isObject)\n/* harmony export */ });\nfunction isObjectLike(value) {\n    return typeof value === \"object\" && value !== null;\n}\nfunction isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== \"[object Object]\") {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while(Object.getPrototypeOf(proto) !== null){\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9pc19vYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLGFBQWFDLEtBQUs7SUFDdkIsT0FBTyxPQUFPQSxVQUFVLFlBQVlBLFVBQVU7QUFDbEQ7QUFDZSxTQUFTQyxTQUFTQyxLQUFLO0lBQ2xDLElBQUksQ0FBQ0gsYUFBYUcsVUFBVUMsT0FBT0MsU0FBUyxDQUFDQyxRQUFRLENBQUNDLElBQUksQ0FBQ0osV0FBVyxtQkFBbUI7UUFDckYsT0FBTztJQUNYO0lBQ0EsSUFBSUMsT0FBT0ksY0FBYyxDQUFDTCxXQUFXLE1BQU07UUFDdkMsT0FBTztJQUNYO0lBQ0EsSUFBSU0sUUFBUU47SUFDWixNQUFPQyxPQUFPSSxjQUFjLENBQUNDLFdBQVcsS0FBTTtRQUMxQ0EsUUFBUUwsT0FBT0ksY0FBYyxDQUFDQztJQUNsQztJQUNBLE9BQU9MLE9BQU9JLGNBQWMsQ0FBQ0wsV0FBV007QUFDNUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9pc19vYmplY3QuanM/ZDkyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbDtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzT2JqZWN0KGlucHV0KSB7XG4gICAgaWYgKCFpc09iamVjdExpa2UoaW5wdXQpIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChpbnB1dCkgIT09ICdbb2JqZWN0IE9iamVjdF0nKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKE9iamVjdC5nZXRQcm90b3R5cGVPZihpbnB1dCkgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGxldCBwcm90byA9IGlucHV0O1xuICAgIHdoaWxlIChPYmplY3QuZ2V0UHJvdG90eXBlT2YocHJvdG8pICE9PSBudWxsKSB7XG4gICAgICAgIHByb3RvID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHByb3RvKTtcbiAgICB9XG4gICAgcmV0dXJuIE9iamVjdC5nZXRQcm90b3R5cGVPZihpbnB1dCkgPT09IHByb3RvO1xufVxuIl0sIm5hbWVzIjpbImlzT2JqZWN0TGlrZSIsInZhbHVlIiwiaXNPYmplY3QiLCJpbnB1dCIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsImdldFByb3RvdHlwZU9mIiwicHJvdG8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/iv.js":
/*!**************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/iv.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bitLength: () => (/* binding */ bitLength),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _runtime_random_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../runtime/random.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/random.js\");\n\n\nfunction bitLength(alg) {\n    switch(alg){\n        case \"A128GCM\":\n        case \"A128GCMKW\":\n        case \"A192GCM\":\n        case \"A192GCMKW\":\n        case \"A256GCM\":\n        case \"A256GCMKW\":\n            return 96;\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            return 128;\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JOSENotSupported(`Unsupported JWE Algorithm: ${alg}`);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((alg)=>(0,_runtime_random_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(new Uint8Array(bitLength(alg) >> 3)));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9pdi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXFEO0FBQ1g7QUFDbkMsU0FBU0UsVUFBVUMsR0FBRztJQUN6QixPQUFRQTtRQUNKLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU87UUFDWCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPO1FBQ1g7WUFDSSxNQUFNLElBQUlILDZEQUFnQkEsQ0FBQyxDQUFDLDJCQUEyQixFQUFFRyxJQUFJLENBQUM7SUFDdEU7QUFDSjtBQUNBLGlFQUFlLENBQUNBLE1BQVFGLDhEQUFNQSxDQUFDLElBQUlHLFdBQVdGLFVBQVVDLFFBQVEsR0FBRSxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9saWIvaXYuanM/YWYwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBKT1NFTm90U3VwcG9ydGVkIH0gZnJvbSAnLi4vdXRpbC9lcnJvcnMuanMnO1xuaW1wb3J0IHJhbmRvbSBmcm9tICcuLi9ydW50aW1lL3JhbmRvbS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gYml0TGVuZ3RoKGFsZykge1xuICAgIHN3aXRjaCAoYWxnKSB7XG4gICAgICAgIGNhc2UgJ0ExMjhHQ00nOlxuICAgICAgICBjYXNlICdBMTI4R0NNS1cnOlxuICAgICAgICBjYXNlICdBMTkyR0NNJzpcbiAgICAgICAgY2FzZSAnQTE5MkdDTUtXJzpcbiAgICAgICAgY2FzZSAnQTI1NkdDTSc6XG4gICAgICAgIGNhc2UgJ0EyNTZHQ01LVyc6XG4gICAgICAgICAgICByZXR1cm4gOTY7XG4gICAgICAgIGNhc2UgJ0ExMjhDQkMtSFMyNTYnOlxuICAgICAgICBjYXNlICdBMTkyQ0JDLUhTMzg0JzpcbiAgICAgICAgY2FzZSAnQTI1NkNCQy1IUzUxMic6XG4gICAgICAgICAgICByZXR1cm4gMTI4O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEpPU0VOb3RTdXBwb3J0ZWQoYFVuc3VwcG9ydGVkIEpXRSBBbGdvcml0aG06ICR7YWxnfWApO1xuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IChhbGcpID0+IHJhbmRvbShuZXcgVWludDhBcnJheShiaXRMZW5ndGgoYWxnKSA+PiAzKSk7XG4iXSwibmFtZXMiOlsiSk9TRU5vdFN1cHBvcnRlZCIsInJhbmRvbSIsImJpdExlbmd0aCIsImFsZyIsIlVpbnQ4QXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/iv.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/jwt_claims_set.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/jwt_claims_set.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _epoch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./epoch.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/epoch.js\");\n/* harmony import */ var _secs_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./secs.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/secs.js\");\n/* harmony import */ var _is_object_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n\n\n\n\n\nconst normalizeTyp = (value)=>value.toLowerCase().replace(/^application\\//, \"\");\nconst checkAudiencePresence = (audPayload, audOption)=>{\n    if (typeof audPayload === \"string\") {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((protectedHeader, encodedPayload, options = {})=>{\n    const { typ } = options;\n    if (typ && (typeof protectedHeader.typ !== \"string\" || normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTClaimValidationFailed('unexpected \"typ\" JWT header value', \"typ\", \"check_failed\");\n    }\n    let payload;\n    try {\n        payload = JSON.parse(_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__.decoder.decode(encodedPayload));\n    } catch (_a) {}\n    if (!(0,_is_object_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(payload)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTInvalid(\"JWT Claims Set must be a top-level JSON object\");\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    if (maxTokenAge !== undefined) requiredClaims.push(\"iat\");\n    if (audience !== undefined) requiredClaims.push(\"aud\");\n    if (subject !== undefined) requiredClaims.push(\"sub\");\n    if (issuer !== undefined) requiredClaims.push(\"iss\");\n    for (const claim of new Set(requiredClaims.reverse())){\n        if (!(claim in payload)) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, \"missing\");\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [\n        issuer\n    ]).includes(payload.iss)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTClaimValidationFailed('unexpected \"iss\" claim value', \"iss\", \"check_failed\");\n    }\n    if (subject && payload.sub !== subject) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTClaimValidationFailed('unexpected \"sub\" claim value', \"sub\", \"check_failed\");\n    }\n    if (audience && !checkAudiencePresence(payload.aud, typeof audience === \"string\" ? [\n        audience\n    ] : audience)) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTClaimValidationFailed('unexpected \"aud\" claim value', \"aud\", \"check_failed\");\n    }\n    let tolerance;\n    switch(typeof options.clockTolerance){\n        case \"string\":\n            tolerance = (0,_secs_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(options.clockTolerance);\n            break;\n        case \"number\":\n            tolerance = options.clockTolerance;\n            break;\n        case \"undefined\":\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError(\"Invalid clockTolerance option type\");\n    }\n    const { currentDate } = options;\n    const now = (0,_epoch_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== \"number\") {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTClaimValidationFailed('\"iat\" claim must be a number', \"iat\", \"invalid\");\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== \"number\") {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTClaimValidationFailed('\"nbf\" claim must be a number', \"nbf\", \"invalid\");\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', \"nbf\", \"check_failed\");\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== \"number\") {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTClaimValidationFailed('\"exp\" claim must be a number', \"exp\", \"invalid\");\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTExpired('\"exp\" claim timestamp check failed', \"exp\", \"check_failed\");\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === \"number\" ? maxTokenAge : (0,_secs_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', \"iat\", \"check_failed\");\n        }\n        if (age < 0 - tolerance) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', \"iat\", \"check_failed\");\n        }\n    }\n    return payload;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/jwt_claims_set.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/secs.js":
/*!****************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/secs.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)$/i;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((str)=>{\n    const matched = REGEX.exec(str);\n    if (!matched) {\n        throw new TypeError(\"Invalid time period format\");\n    }\n    const value = parseFloat(matched[1]);\n    const unit = matched[2].toLowerCase();\n    switch(unit){\n        case \"sec\":\n        case \"secs\":\n        case \"second\":\n        case \"seconds\":\n        case \"s\":\n            return Math.round(value);\n        case \"minute\":\n        case \"minutes\":\n        case \"min\":\n        case \"mins\":\n        case \"m\":\n            return Math.round(value * minute);\n        case \"hour\":\n        case \"hours\":\n        case \"hr\":\n        case \"hrs\":\n        case \"h\":\n            return Math.round(value * hour);\n        case \"day\":\n        case \"days\":\n        case \"d\":\n            return Math.round(value * day);\n        case \"week\":\n        case \"weeks\":\n        case \"w\":\n            return Math.round(value * week);\n        default:\n            return Math.round(value * year);\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi9zZWNzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxTQUFTO0FBQ2YsTUFBTUMsT0FBT0QsU0FBUztBQUN0QixNQUFNRSxNQUFNRCxPQUFPO0FBQ25CLE1BQU1FLE9BQU9ELE1BQU07QUFDbkIsTUFBTUUsT0FBT0YsTUFBTTtBQUNuQixNQUFNRyxRQUFRO0FBQ2QsaUVBQWUsQ0FBQ0M7SUFDWixNQUFNQyxVQUFVRixNQUFNRyxJQUFJLENBQUNGO0lBQzNCLElBQUksQ0FBQ0MsU0FBUztRQUNWLE1BQU0sSUFBSUUsVUFBVTtJQUN4QjtJQUNBLE1BQU1DLFFBQVFDLFdBQVdKLE9BQU8sQ0FBQyxFQUFFO0lBQ25DLE1BQU1LLE9BQU9MLE9BQU8sQ0FBQyxFQUFFLENBQUNNLFdBQVc7SUFDbkMsT0FBUUQ7UUFDSixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU9FLEtBQUtDLEtBQUssQ0FBQ0w7UUFDdEIsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPSSxLQUFLQyxLQUFLLENBQUNMLFFBQVFWO1FBQzlCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBT2MsS0FBS0MsS0FBSyxDQUFDTCxRQUFRVDtRQUM5QixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPYSxLQUFLQyxLQUFLLENBQUNMLFFBQVFSO1FBQzlCLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU9ZLEtBQUtDLEtBQUssQ0FBQ0wsUUFBUVA7UUFDOUI7WUFDSSxPQUFPVyxLQUFLQyxLQUFLLENBQUNMLFFBQVFOO0lBQ2xDO0FBQ0osR0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvbGliL3NlY3MuanM/MWQxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtaW51dGUgPSA2MDtcbmNvbnN0IGhvdXIgPSBtaW51dGUgKiA2MDtcbmNvbnN0IGRheSA9IGhvdXIgKiAyNDtcbmNvbnN0IHdlZWsgPSBkYXkgKiA3O1xuY29uc3QgeWVhciA9IGRheSAqIDM2NS4yNTtcbmNvbnN0IFJFR0VYID0gL14oXFxkK3xcXGQrXFwuXFxkKykgPyhzZWNvbmRzP3xzZWNzP3xzfG1pbnV0ZXM/fG1pbnM/fG18aG91cnM/fGhycz98aHxkYXlzP3xkfHdlZWtzP3x3fHllYXJzP3x5cnM/fHkpJC9pO1xuZXhwb3J0IGRlZmF1bHQgKHN0cikgPT4ge1xuICAgIGNvbnN0IG1hdGNoZWQgPSBSRUdFWC5leGVjKHN0cik7XG4gICAgaWYgKCFtYXRjaGVkKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgdGltZSBwZXJpb2QgZm9ybWF0Jyk7XG4gICAgfVxuICAgIGNvbnN0IHZhbHVlID0gcGFyc2VGbG9hdChtYXRjaGVkWzFdKTtcbiAgICBjb25zdCB1bml0ID0gbWF0Y2hlZFsyXS50b0xvd2VyQ2FzZSgpO1xuICAgIHN3aXRjaCAodW5pdCkge1xuICAgICAgICBjYXNlICdzZWMnOlxuICAgICAgICBjYXNlICdzZWNzJzpcbiAgICAgICAgY2FzZSAnc2Vjb25kJzpcbiAgICAgICAgY2FzZSAnc2Vjb25kcyc6XG4gICAgICAgIGNhc2UgJ3MnOlxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUpO1xuICAgICAgICBjYXNlICdtaW51dGUnOlxuICAgICAgICBjYXNlICdtaW51dGVzJzpcbiAgICAgICAgY2FzZSAnbWluJzpcbiAgICAgICAgY2FzZSAnbWlucyc6XG4gICAgICAgIGNhc2UgJ20nOlxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUgKiBtaW51dGUpO1xuICAgICAgICBjYXNlICdob3VyJzpcbiAgICAgICAgY2FzZSAnaG91cnMnOlxuICAgICAgICBjYXNlICdocic6XG4gICAgICAgIGNhc2UgJ2hycyc6XG4gICAgICAgIGNhc2UgJ2gnOlxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUgKiBob3VyKTtcbiAgICAgICAgY2FzZSAnZGF5JzpcbiAgICAgICAgY2FzZSAnZGF5cyc6XG4gICAgICAgIGNhc2UgJ2QnOlxuICAgICAgICAgICAgcmV0dXJuIE1hdGgucm91bmQodmFsdWUgKiBkYXkpO1xuICAgICAgICBjYXNlICd3ZWVrJzpcbiAgICAgICAgY2FzZSAnd2Vla3MnOlxuICAgICAgICBjYXNlICd3JzpcbiAgICAgICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHZhbHVlICogd2Vlayk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIHllYXIpO1xuICAgIH1cbn07XG4iXSwibmFtZXMiOlsibWludXRlIiwiaG91ciIsImRheSIsIndlZWsiLCJ5ZWFyIiwiUkVHRVgiLCJzdHIiLCJtYXRjaGVkIiwiZXhlYyIsIlR5cGVFcnJvciIsInZhbHVlIiwicGFyc2VGbG9hdCIsInVuaXQiLCJ0b0xvd2VyQ2FzZSIsIk1hdGgiLCJyb3VuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/secs.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/validate_algorithms.js":
/*!*******************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/validate_algorithms.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst validateAlgorithms = (option, algorithms)=>{\n    if (algorithms !== undefined && (!Array.isArray(algorithms) || algorithms.some((s)=>typeof s !== \"string\"))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validateAlgorithms);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi92YWxpZGF0ZV9hbGdvcml0aG1zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxNQUFNQSxxQkFBcUIsQ0FBQ0MsUUFBUUM7SUFDaEMsSUFBSUEsZUFBZUMsYUFDZCxFQUFDQyxNQUFNQyxPQUFPLENBQUNILGVBQWVBLFdBQVdJLElBQUksQ0FBQyxDQUFDQyxJQUFNLE9BQU9BLE1BQU0sU0FBUSxHQUFJO1FBQy9FLE1BQU0sSUFBSUMsVUFBVSxDQUFDLENBQUMsRUFBRVAsT0FBTyxvQ0FBb0MsQ0FBQztJQUN4RTtJQUNBLElBQUksQ0FBQ0MsWUFBWTtRQUNiLE9BQU9DO0lBQ1g7SUFDQSxPQUFPLElBQUlNLElBQUlQO0FBQ25CO0FBQ0EsaUVBQWVGLGtCQUFrQkEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvbGliL3ZhbGlkYXRlX2FsZ29yaXRobXMuanM/NWNlNiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB2YWxpZGF0ZUFsZ29yaXRobXMgPSAob3B0aW9uLCBhbGdvcml0aG1zKSA9PiB7XG4gICAgaWYgKGFsZ29yaXRobXMgIT09IHVuZGVmaW5lZCAmJlxuICAgICAgICAoIUFycmF5LmlzQXJyYXkoYWxnb3JpdGhtcykgfHwgYWxnb3JpdGhtcy5zb21lKChzKSA9PiB0eXBlb2YgcyAhPT0gJ3N0cmluZycpKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBcIiR7b3B0aW9ufVwiIG9wdGlvbiBtdXN0IGJlIGFuIGFycmF5IG9mIHN0cmluZ3NgKTtcbiAgICB9XG4gICAgaWYgKCFhbGdvcml0aG1zKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIHJldHVybiBuZXcgU2V0KGFsZ29yaXRobXMpO1xufTtcbmV4cG9ydCBkZWZhdWx0IHZhbGlkYXRlQWxnb3JpdGhtcztcbiJdLCJuYW1lcyI6WyJ2YWxpZGF0ZUFsZ29yaXRobXMiLCJvcHRpb24iLCJhbGdvcml0aG1zIiwidW5kZWZpbmVkIiwiQXJyYXkiLCJpc0FycmF5Iiwic29tZSIsInMiLCJUeXBlRXJyb3IiLCJTZXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/validate_algorithms.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/lib/validate_crit.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/browser/lib/validate_crit.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) || protectedHeader.crit.length === 0 || protectedHeader.crit.some((input)=>typeof input !== \"string\" || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([\n            ...Object.entries(recognizedOption),\n            ...recognizedDefault.entries()\n        ]);\n    } else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit){\n        if (!recognized.has(parameter)) {\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        } else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validateCrit);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL2xpYi92YWxpZGF0ZV9jcml0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBQ3JELFNBQVNDLGFBQWFDLEdBQUcsRUFBRUMsaUJBQWlCLEVBQUVDLGdCQUFnQixFQUFFQyxlQUFlLEVBQUVDLFVBQVU7SUFDdkYsSUFBSUEsV0FBV0MsSUFBSSxLQUFLQyxhQUFhSCxnQkFBZ0JFLElBQUksS0FBS0MsV0FBVztRQUNyRSxNQUFNLElBQUlOLElBQUk7SUFDbEI7SUFDQSxJQUFJLENBQUNHLG1CQUFtQkEsZ0JBQWdCRSxJQUFJLEtBQUtDLFdBQVc7UUFDeEQsT0FBTyxJQUFJQztJQUNmO0lBQ0EsSUFBSSxDQUFDQyxNQUFNQyxPQUFPLENBQUNOLGdCQUFnQkUsSUFBSSxLQUNuQ0YsZ0JBQWdCRSxJQUFJLENBQUNLLE1BQU0sS0FBSyxLQUNoQ1AsZ0JBQWdCRSxJQUFJLENBQUNNLElBQUksQ0FBQyxDQUFDQyxRQUFVLE9BQU9BLFVBQVUsWUFBWUEsTUFBTUYsTUFBTSxLQUFLLElBQUk7UUFDdkYsTUFBTSxJQUFJVixJQUFJO0lBQ2xCO0lBQ0EsSUFBSWE7SUFDSixJQUFJWCxxQkFBcUJJLFdBQVc7UUFDaENPLGFBQWEsSUFBSUMsSUFBSTtlQUFJQyxPQUFPQyxPQUFPLENBQUNkO2VBQXNCRCxrQkFBa0JlLE9BQU87U0FBRztJQUM5RixPQUNLO1FBQ0RILGFBQWFaO0lBQ2pCO0lBQ0EsS0FBSyxNQUFNZ0IsYUFBYWQsZ0JBQWdCRSxJQUFJLENBQUU7UUFDMUMsSUFBSSxDQUFDUSxXQUFXSyxHQUFHLENBQUNELFlBQVk7WUFDNUIsTUFBTSxJQUFJbkIsNkRBQWdCQSxDQUFDLENBQUMsNEJBQTRCLEVBQUVtQixVQUFVLG1CQUFtQixDQUFDO1FBQzVGO1FBQ0EsSUFBSWIsVUFBVSxDQUFDYSxVQUFVLEtBQUtYLFdBQVc7WUFDckMsTUFBTSxJQUFJTixJQUFJLENBQUMsNEJBQTRCLEVBQUVpQixVQUFVLFlBQVksQ0FBQztRQUN4RSxPQUNLLElBQUlKLFdBQVdNLEdBQUcsQ0FBQ0YsY0FBY2QsZUFBZSxDQUFDYyxVQUFVLEtBQUtYLFdBQVc7WUFDNUUsTUFBTSxJQUFJTixJQUFJLENBQUMsNEJBQTRCLEVBQUVpQixVQUFVLDZCQUE2QixDQUFDO1FBQ3pGO0lBQ0o7SUFDQSxPQUFPLElBQUlWLElBQUlKLGdCQUFnQkUsSUFBSTtBQUN2QztBQUNBLGlFQUFlTixZQUFZQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9saWIvdmFsaWRhdGVfY3JpdC5qcz9iMWQ2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpPU0VOb3RTdXBwb3J0ZWQgfSBmcm9tICcuLi91dGlsL2Vycm9ycy5qcyc7XG5mdW5jdGlvbiB2YWxpZGF0ZUNyaXQoRXJyLCByZWNvZ25pemVkRGVmYXVsdCwgcmVjb2duaXplZE9wdGlvbiwgcHJvdGVjdGVkSGVhZGVyLCBqb3NlSGVhZGVyKSB7XG4gICAgaWYgKGpvc2VIZWFkZXIuY3JpdCAhPT0gdW5kZWZpbmVkICYmIHByb3RlY3RlZEhlYWRlci5jcml0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycignXCJjcml0XCIgKENyaXRpY2FsKSBIZWFkZXIgUGFyYW1ldGVyIE1VU1QgYmUgaW50ZWdyaXR5IHByb3RlY3RlZCcpO1xuICAgIH1cbiAgICBpZiAoIXByb3RlY3RlZEhlYWRlciB8fCBwcm90ZWN0ZWRIZWFkZXIuY3JpdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBuZXcgU2V0KCk7XG4gICAgfVxuICAgIGlmICghQXJyYXkuaXNBcnJheShwcm90ZWN0ZWRIZWFkZXIuY3JpdCkgfHxcbiAgICAgICAgcHJvdGVjdGVkSGVhZGVyLmNyaXQubGVuZ3RoID09PSAwIHx8XG4gICAgICAgIHByb3RlY3RlZEhlYWRlci5jcml0LnNvbWUoKGlucHV0KSA9PiB0eXBlb2YgaW5wdXQgIT09ICdzdHJpbmcnIHx8IGlucHV0Lmxlbmd0aCA9PT0gMCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycignXCJjcml0XCIgKENyaXRpY2FsKSBIZWFkZXIgUGFyYW1ldGVyIE1VU1QgYmUgYW4gYXJyYXkgb2Ygbm9uLWVtcHR5IHN0cmluZ3Mgd2hlbiBwcmVzZW50Jyk7XG4gICAgfVxuICAgIGxldCByZWNvZ25pemVkO1xuICAgIGlmIChyZWNvZ25pemVkT3B0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmVjb2duaXplZCA9IG5ldyBNYXAoWy4uLk9iamVjdC5lbnRyaWVzKHJlY29nbml6ZWRPcHRpb24pLCAuLi5yZWNvZ25pemVkRGVmYXVsdC5lbnRyaWVzKCldKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlY29nbml6ZWQgPSByZWNvZ25pemVkRGVmYXVsdDtcbiAgICB9XG4gICAgZm9yIChjb25zdCBwYXJhbWV0ZXIgb2YgcHJvdGVjdGVkSGVhZGVyLmNyaXQpIHtcbiAgICAgICAgaWYgKCFyZWNvZ25pemVkLmhhcyhwYXJhbWV0ZXIpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgSk9TRU5vdFN1cHBvcnRlZChgRXh0ZW5zaW9uIEhlYWRlciBQYXJhbWV0ZXIgXCIke3BhcmFtZXRlcn1cIiBpcyBub3QgcmVjb2duaXplZGApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChqb3NlSGVhZGVyW3BhcmFtZXRlcl0gPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycihgRXh0ZW5zaW9uIEhlYWRlciBQYXJhbWV0ZXIgXCIke3BhcmFtZXRlcn1cIiBpcyBtaXNzaW5nYCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocmVjb2duaXplZC5nZXQocGFyYW1ldGVyKSAmJiBwcm90ZWN0ZWRIZWFkZXJbcGFyYW1ldGVyXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyKGBFeHRlbnNpb24gSGVhZGVyIFBhcmFtZXRlciBcIiR7cGFyYW1ldGVyfVwiIE1VU1QgYmUgaW50ZWdyaXR5IHByb3RlY3RlZGApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXcgU2V0KHByb3RlY3RlZEhlYWRlci5jcml0KTtcbn1cbmV4cG9ydCBkZWZhdWx0IHZhbGlkYXRlQ3JpdDtcbiJdLCJuYW1lcyI6WyJKT1NFTm90U3VwcG9ydGVkIiwidmFsaWRhdGVDcml0IiwiRXJyIiwicmVjb2duaXplZERlZmF1bHQiLCJyZWNvZ25pemVkT3B0aW9uIiwicHJvdGVjdGVkSGVhZGVyIiwiam9zZUhlYWRlciIsImNyaXQiLCJ1bmRlZmluZWQiLCJTZXQiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJzb21lIiwiaW5wdXQiLCJyZWNvZ25pemVkIiwiTWFwIiwiT2JqZWN0IiwiZW50cmllcyIsInBhcmFtZXRlciIsImhhcyIsImdldCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/lib/validate_crit.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/aeskw.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/aeskw.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unwrap: () => (/* binding */ unwrap),\n/* harmony export */   wrap: () => (/* binding */ wrap)\n/* harmony export */ });\n/* harmony import */ var _bogus_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bogus.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/bogus.js\");\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/crypto_key.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/crypto_key.js\");\n/* harmony import */ var _lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\");\n/* harmony import */ var _is_key_like_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./is_key_like.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\");\n\n\n\n\n\nfunction checkKeySize(key, alg) {\n    if (key.algorithm.length !== parseInt(alg.slice(1, 4), 10)) {\n        throw new TypeError(`Invalid key size for alg: ${alg}`);\n    }\n}\nfunction getCryptoKey(key, alg, usage) {\n    if ((0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_1__.isCryptoKey)(key)) {\n        (0,_lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_2__.checkEncCryptoKey)(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        return _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtle.importKey(\"raw\", key, \"AES-KW\", true, [\n            usage\n        ]);\n    }\n    throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(key, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_4__.types, \"Uint8Array\"));\n}\nconst wrap = async (alg, key, cek)=>{\n    const cryptoKey = await getCryptoKey(key, alg, \"wrapKey\");\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtle.importKey(\"raw\", cek, ..._bogus_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtle.wrapKey(\"raw\", cryptoKeyCek, cryptoKey, \"AES-KW\"));\n};\nconst unwrap = async (alg, key, encryptedKey)=>{\n    const cryptoKey = await getCryptoKey(key, alg, \"unwrapKey\");\n    checkKeySize(cryptoKey, alg);\n    const cryptoKeyCek = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtle.unwrapKey(\"raw\", encryptedKey, cryptoKey, \"AES-KW\", ..._bogus_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n    return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtle.exportKey(\"raw\", cryptoKeyCek));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvYWVza3cuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF3QztBQUNhO0FBQ0k7QUFDQztBQUNqQjtBQUN6QyxTQUFTTSxhQUFhQyxHQUFHLEVBQUVDLEdBQUc7SUFDMUIsSUFBSUQsSUFBSUUsU0FBUyxDQUFDQyxNQUFNLEtBQUtDLFNBQVNILElBQUlJLEtBQUssQ0FBQyxHQUFHLElBQUksS0FBSztRQUN4RCxNQUFNLElBQUlDLFVBQVUsQ0FBQywwQkFBMEIsRUFBRUwsSUFBSSxDQUFDO0lBQzFEO0FBQ0o7QUFDQSxTQUFTTSxhQUFhUCxHQUFHLEVBQUVDLEdBQUcsRUFBRU8sS0FBSztJQUNqQyxJQUFJYiwwREFBV0EsQ0FBQ0ssTUFBTTtRQUNsQkoscUVBQWlCQSxDQUFDSSxLQUFLQyxLQUFLTztRQUM1QixPQUFPUjtJQUNYO0lBQ0EsSUFBSUEsZUFBZVMsWUFBWTtRQUMzQixPQUFPZixxREFBTUEsQ0FBQ2dCLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDLE9BQU9YLEtBQUssVUFBVSxNQUFNO1lBQUNRO1NBQU07SUFDdEU7SUFDQSxNQUFNLElBQUlGLFVBQVVULHFFQUFlQSxDQUFDRyxRQUFRRixrREFBS0EsRUFBRTtBQUN2RDtBQUNPLE1BQU1jLE9BQU8sT0FBT1gsS0FBS0QsS0FBS2E7SUFDakMsTUFBTUMsWUFBWSxNQUFNUCxhQUFhUCxLQUFLQyxLQUFLO0lBQy9DRixhQUFhZSxXQUFXYjtJQUN4QixNQUFNYyxlQUFlLE1BQU1yQixxREFBTUEsQ0FBQ2dCLE1BQU0sQ0FBQ0MsU0FBUyxDQUFDLE9BQU9FLFFBQVFwQixpREFBY0E7SUFDaEYsT0FBTyxJQUFJZ0IsV0FBVyxNQUFNZixxREFBTUEsQ0FBQ2dCLE1BQU0sQ0FBQ00sT0FBTyxDQUFDLE9BQU9ELGNBQWNELFdBQVc7QUFDdEYsRUFBRTtBQUNLLE1BQU1HLFNBQVMsT0FBT2hCLEtBQUtELEtBQUtrQjtJQUNuQyxNQUFNSixZQUFZLE1BQU1QLGFBQWFQLEtBQUtDLEtBQUs7SUFDL0NGLGFBQWFlLFdBQVdiO0lBQ3hCLE1BQU1jLGVBQWUsTUFBTXJCLHFEQUFNQSxDQUFDZ0IsTUFBTSxDQUFDUyxTQUFTLENBQUMsT0FBT0QsY0FBY0osV0FBVyxhQUFhckIsaURBQWNBO0lBQzlHLE9BQU8sSUFBSWdCLFdBQVcsTUFBTWYscURBQU1BLENBQUNnQixNQUFNLENBQUNVLFNBQVMsQ0FBQyxPQUFPTDtBQUMvRCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL2Flc2t3LmpzP2NjOGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGJvZ3VzV2ViQ3J5cHRvIGZyb20gJy4vYm9ndXMuanMnO1xuaW1wb3J0IGNyeXB0bywgeyBpc0NyeXB0b0tleSB9IGZyb20gJy4vd2ViY3J5cHRvLmpzJztcbmltcG9ydCB7IGNoZWNrRW5jQ3J5cHRvS2V5IH0gZnJvbSAnLi4vbGliL2NyeXB0b19rZXkuanMnO1xuaW1wb3J0IGludmFsaWRLZXlJbnB1dCBmcm9tICcuLi9saWIvaW52YWxpZF9rZXlfaW5wdXQuanMnO1xuaW1wb3J0IHsgdHlwZXMgfSBmcm9tICcuL2lzX2tleV9saWtlLmpzJztcbmZ1bmN0aW9uIGNoZWNrS2V5U2l6ZShrZXksIGFsZykge1xuICAgIGlmIChrZXkuYWxnb3JpdGhtLmxlbmd0aCAhPT0gcGFyc2VJbnQoYWxnLnNsaWNlKDEsIDQpLCAxMCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgSW52YWxpZCBrZXkgc2l6ZSBmb3IgYWxnOiAke2FsZ31gKTtcbiAgICB9XG59XG5mdW5jdGlvbiBnZXRDcnlwdG9LZXkoa2V5LCBhbGcsIHVzYWdlKSB7XG4gICAgaWYgKGlzQ3J5cHRvS2V5KGtleSkpIHtcbiAgICAgICAgY2hlY2tFbmNDcnlwdG9LZXkoa2V5LCBhbGcsIHVzYWdlKTtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgcmV0dXJuIGNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KCdyYXcnLCBrZXksICdBRVMtS1cnLCB0cnVlLCBbdXNhZ2VdKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihpbnZhbGlkS2V5SW5wdXQoa2V5LCAuLi50eXBlcywgJ1VpbnQ4QXJyYXknKSk7XG59XG5leHBvcnQgY29uc3Qgd3JhcCA9IGFzeW5jIChhbGcsIGtleSwgY2VrKSA9PiB7XG4gICAgY29uc3QgY3J5cHRvS2V5ID0gYXdhaXQgZ2V0Q3J5cHRvS2V5KGtleSwgYWxnLCAnd3JhcEtleScpO1xuICAgIGNoZWNrS2V5U2l6ZShjcnlwdG9LZXksIGFsZyk7XG4gICAgY29uc3QgY3J5cHRvS2V5Q2VrID0gYXdhaXQgY3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkoJ3JhdycsIGNlaywgLi4uYm9ndXNXZWJDcnlwdG8pO1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShhd2FpdCBjcnlwdG8uc3VidGxlLndyYXBLZXkoJ3JhdycsIGNyeXB0b0tleUNlaywgY3J5cHRvS2V5LCAnQUVTLUtXJykpO1xufTtcbmV4cG9ydCBjb25zdCB1bndyYXAgPSBhc3luYyAoYWxnLCBrZXksIGVuY3J5cHRlZEtleSkgPT4ge1xuICAgIGNvbnN0IGNyeXB0b0tleSA9IGF3YWl0IGdldENyeXB0b0tleShrZXksIGFsZywgJ3Vud3JhcEtleScpO1xuICAgIGNoZWNrS2V5U2l6ZShjcnlwdG9LZXksIGFsZyk7XG4gICAgY29uc3QgY3J5cHRvS2V5Q2VrID0gYXdhaXQgY3J5cHRvLnN1YnRsZS51bndyYXBLZXkoJ3JhdycsIGVuY3J5cHRlZEtleSwgY3J5cHRvS2V5LCAnQUVTLUtXJywgLi4uYm9ndXNXZWJDcnlwdG8pO1xuICAgIHJldHVybiBuZXcgVWludDhBcnJheShhd2FpdCBjcnlwdG8uc3VidGxlLmV4cG9ydEtleSgncmF3JywgY3J5cHRvS2V5Q2VrKSk7XG59O1xuIl0sIm5hbWVzIjpbImJvZ3VzV2ViQ3J5cHRvIiwiY3J5cHRvIiwiaXNDcnlwdG9LZXkiLCJjaGVja0VuY0NyeXB0b0tleSIsImludmFsaWRLZXlJbnB1dCIsInR5cGVzIiwiY2hlY2tLZXlTaXplIiwia2V5IiwiYWxnIiwiYWxnb3JpdGhtIiwibGVuZ3RoIiwicGFyc2VJbnQiLCJzbGljZSIsIlR5cGVFcnJvciIsImdldENyeXB0b0tleSIsInVzYWdlIiwiVWludDhBcnJheSIsInN1YnRsZSIsImltcG9ydEtleSIsIndyYXAiLCJjZWsiLCJjcnlwdG9LZXkiLCJjcnlwdG9LZXlDZWsiLCJ3cmFwS2V5IiwidW53cmFwIiwiZW5jcnlwdGVkS2V5IiwidW53cmFwS2V5IiwiZXhwb3J0S2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/aeskw.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/asn1.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/asn1.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromPKCS8: () => (/* binding */ fromPKCS8),\n/* harmony export */   fromSPKI: () => (/* binding */ fromSPKI),\n/* harmony export */   fromX509: () => (/* binding */ fromX509),\n/* harmony export */   toPKCS8: () => (/* binding */ toPKCS8),\n/* harmony export */   toSPKI: () => (/* binding */ toSPKI)\n/* harmony export */ });\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\");\n/* harmony import */ var _base64url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _lib_format_pem_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/format_pem.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/format_pem.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _is_key_like_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./is_key_like.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\");\n\n\n\n\n\n\nconst genericExport = async (keyType, keyFormat, key)=>{\n    if (!(0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_0__.isCryptoKey)(key)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(key, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_5__.types));\n    }\n    if (!key.extractable) {\n        throw new TypeError(\"CryptoKey is not extractable\");\n    }\n    if (key.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return (0,_lib_format_pem_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])((0,_base64url_js__WEBPACK_IMPORTED_MODULE_2__.encodeBase64)(new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.exportKey(keyFormat, key))), `${keyType.toUpperCase()} KEY`);\n};\nconst toSPKI = (key)=>{\n    return genericExport(\"public\", \"spki\", key);\n};\nconst toPKCS8 = (key)=>{\n    return genericExport(\"private\", \"pkcs8\", key);\n};\nconst findOid = (keyData, oid, from = 0)=>{\n    if (from === 0) {\n        oid.unshift(oid.length);\n        oid.unshift(0x06);\n    }\n    let i = keyData.indexOf(oid[0], from);\n    if (i === -1) return false;\n    const sub = keyData.subarray(i, i + oid.length);\n    if (sub.length !== oid.length) return false;\n    return sub.every((value, index)=>value === oid[index]) || findOid(keyData, oid, i + 1);\n};\nconst getNamedCurve = (keyData)=>{\n    switch(true){\n        case findOid(keyData, [\n            0x2a,\n            0x86,\n            0x48,\n            0xce,\n            0x3d,\n            0x03,\n            0x01,\n            0x07\n        ]):\n            return \"P-256\";\n        case findOid(keyData, [\n            0x2b,\n            0x81,\n            0x04,\n            0x00,\n            0x22\n        ]):\n            return \"P-384\";\n        case findOid(keyData, [\n            0x2b,\n            0x81,\n            0x04,\n            0x00,\n            0x23\n        ]):\n            return \"P-521\";\n        case findOid(keyData, [\n            0x2b,\n            0x65,\n            0x6e\n        ]):\n            return \"X25519\";\n        case findOid(keyData, [\n            0x2b,\n            0x65,\n            0x6f\n        ]):\n            return \"X448\";\n        case findOid(keyData, [\n            0x2b,\n            0x65,\n            0x70\n        ]):\n            return \"Ed25519\";\n        case findOid(keyData, [\n            0x2b,\n            0x65,\n            0x71\n        ]):\n            return \"Ed448\";\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_4__.JOSENotSupported(\"Invalid or unsupported EC Key Curve or OKP Key Sub Type\");\n    }\n};\nconst genericImport = async (replace, keyFormat, pem, alg, options)=>{\n    var _a;\n    let algorithm;\n    let keyUsages;\n    const keyData = new Uint8Array(atob(pem.replace(replace, \"\")).split(\"\").map((c)=>c.charCodeAt(0)));\n    const isPublic = keyFormat === \"spki\";\n    switch(alg){\n        case \"PS256\":\n        case \"PS384\":\n        case \"PS512\":\n            algorithm = {\n                name: \"RSA-PSS\",\n                hash: `SHA-${alg.slice(-3)}`\n            };\n            keyUsages = isPublic ? [\n                \"verify\"\n            ] : [\n                \"sign\"\n            ];\n            break;\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n            algorithm = {\n                name: \"RSASSA-PKCS1-v1_5\",\n                hash: `SHA-${alg.slice(-3)}`\n            };\n            keyUsages = isPublic ? [\n                \"verify\"\n            ] : [\n                \"sign\"\n            ];\n            break;\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            algorithm = {\n                name: \"RSA-OAEP\",\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`\n            };\n            keyUsages = isPublic ? [\n                \"encrypt\",\n                \"wrapKey\"\n            ] : [\n                \"decrypt\",\n                \"unwrapKey\"\n            ];\n            break;\n        case \"ES256\":\n            algorithm = {\n                name: \"ECDSA\",\n                namedCurve: \"P-256\"\n            };\n            keyUsages = isPublic ? [\n                \"verify\"\n            ] : [\n                \"sign\"\n            ];\n            break;\n        case \"ES384\":\n            algorithm = {\n                name: \"ECDSA\",\n                namedCurve: \"P-384\"\n            };\n            keyUsages = isPublic ? [\n                \"verify\"\n            ] : [\n                \"sign\"\n            ];\n            break;\n        case \"ES512\":\n            algorithm = {\n                name: \"ECDSA\",\n                namedCurve: \"P-521\"\n            };\n            keyUsages = isPublic ? [\n                \"verify\"\n            ] : [\n                \"sign\"\n            ];\n            break;\n        case \"ECDH-ES\":\n        case \"ECDH-ES+A128KW\":\n        case \"ECDH-ES+A192KW\":\n        case \"ECDH-ES+A256KW\":\n            {\n                const namedCurve = getNamedCurve(keyData);\n                algorithm = namedCurve.startsWith(\"P-\") ? {\n                    name: \"ECDH\",\n                    namedCurve\n                } : {\n                    name: namedCurve\n                };\n                keyUsages = isPublic ? [] : [\n                    \"deriveBits\"\n                ];\n                break;\n            }\n        case \"EdDSA\":\n            algorithm = {\n                name: getNamedCurve(keyData)\n            };\n            keyUsages = isPublic ? [\n                \"verify\"\n            ] : [\n                \"sign\"\n            ];\n            break;\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_4__.JOSENotSupported('Invalid or unsupported \"alg\" (Algorithm) value');\n    }\n    return _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.importKey(keyFormat, keyData, algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n};\nconst fromPKCS8 = (pem, alg, options)=>{\n    return genericImport(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, \"pkcs8\", pem, alg, options);\n};\nconst fromSPKI = (pem, alg, options)=>{\n    return genericImport(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, \"spki\", pem, alg, options);\n};\nfunction getElement(seq) {\n    let result = [];\n    let next = 0;\n    while(next < seq.length){\n        let nextPart = parseElement(seq.subarray(next));\n        result.push(nextPart);\n        next += nextPart.byteLength;\n    }\n    return result;\n}\nfunction parseElement(bytes) {\n    let position = 0;\n    let tag = bytes[0] & 0x1f;\n    position++;\n    if (tag === 0x1f) {\n        tag = 0;\n        while(bytes[position] >= 0x80){\n            tag = tag * 128 + bytes[position] - 0x80;\n            position++;\n        }\n        tag = tag * 128 + bytes[position] - 0x80;\n        position++;\n    }\n    let length = 0;\n    if (bytes[position] < 0x80) {\n        length = bytes[position];\n        position++;\n    } else if (length === 0x80) {\n        length = 0;\n        while(bytes[position + length] !== 0 || bytes[position + length + 1] !== 0){\n            if (length > bytes.byteLength) {\n                throw new TypeError(\"invalid indefinite form length\");\n            }\n            length++;\n        }\n        const byteLength = position + length + 2;\n        return {\n            byteLength,\n            contents: bytes.subarray(position, position + length),\n            raw: bytes.subarray(0, byteLength)\n        };\n    } else {\n        let numberOfDigits = bytes[position] & 0x7f;\n        position++;\n        length = 0;\n        for(let i = 0; i < numberOfDigits; i++){\n            length = length * 256 + bytes[position];\n            position++;\n        }\n    }\n    const byteLength = position + length;\n    return {\n        byteLength,\n        contents: bytes.subarray(position, byteLength),\n        raw: bytes.subarray(0, byteLength)\n    };\n}\nfunction spkiFromX509(buf) {\n    const tbsCertificate = getElement(getElement(parseElement(buf).contents)[0].contents);\n    return (0,_base64url_js__WEBPACK_IMPORTED_MODULE_2__.encodeBase64)(tbsCertificate[tbsCertificate[0].raw[0] === 0xa0 ? 6 : 5].raw);\n}\nfunction getSPKI(x509) {\n    const pem = x509.replace(/(?:-----(?:BEGIN|END) CERTIFICATE-----|\\s)/g, \"\");\n    const raw = (0,_base64url_js__WEBPACK_IMPORTED_MODULE_2__.decodeBase64)(pem);\n    return (0,_lib_format_pem_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(spkiFromX509(raw), \"PUBLIC KEY\");\n}\nconst fromX509 = (pem, alg, options)=>{\n    let spki;\n    try {\n        spki = getSPKI(pem);\n    } catch (cause) {\n        throw new TypeError(\"Failed to parse the X.509 certificate\", {\n            cause\n        });\n    }\n    return fromSPKI(spki, alg, options);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/asn1.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/base64url.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   decodeBase64: () => (/* binding */ decodeBase64),\n/* harmony export */   encode: () => (/* binding */ encode),\n/* harmony export */   encodeBase64: () => (/* binding */ encodeBase64)\n/* harmony export */ });\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n\nconst encodeBase64 = (input)=>{\n    let unencoded = input;\n    if (typeof unencoded === \"string\") {\n        unencoded = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for(let i = 0; i < unencoded.length; i += CHUNK_SIZE){\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(\"\"));\n};\nconst encode = (input)=>{\n    return encodeBase64(input).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n};\nconst decodeBase64 = (encoded)=>{\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for(let i = 0; i < binary.length; i++){\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nconst decode = (input)=>{\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, \"+\").replace(/_/g, \"/\").replace(/\\s/g, \"\");\n    try {\n        return decodeBase64(encoded);\n    } catch (_a) {\n        throw new TypeError(\"The input to be decoded is not correctly encoded.\");\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvYmFzZTY0dXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTBEO0FBQ25ELE1BQU1FLGVBQWUsQ0FBQ0M7SUFDekIsSUFBSUMsWUFBWUQ7SUFDaEIsSUFBSSxPQUFPQyxjQUFjLFVBQVU7UUFDL0JBLFlBQVlKLHlEQUFPQSxDQUFDSyxNQUFNLENBQUNEO0lBQy9CO0lBQ0EsTUFBTUUsYUFBYTtJQUNuQixNQUFNQyxNQUFNLEVBQUU7SUFDZCxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUosVUFBVUssTUFBTSxFQUFFRCxLQUFLRixXQUFZO1FBQ25EQyxJQUFJRyxJQUFJLENBQUNDLE9BQU9DLFlBQVksQ0FBQ0MsS0FBSyxDQUFDLE1BQU1ULFVBQVVVLFFBQVEsQ0FBQ04sR0FBR0EsSUFBSUY7SUFDdkU7SUFDQSxPQUFPUyxLQUFLUixJQUFJUyxJQUFJLENBQUM7QUFDekIsRUFBRTtBQUNLLE1BQU1YLFNBQVMsQ0FBQ0Y7SUFDbkIsT0FBT0QsYUFBYUMsT0FBT2MsT0FBTyxDQUFDLE1BQU0sSUFBSUEsT0FBTyxDQUFDLE9BQU8sS0FBS0EsT0FBTyxDQUFDLE9BQU87QUFDcEYsRUFBRTtBQUNLLE1BQU1DLGVBQWUsQ0FBQ0M7SUFDekIsTUFBTUMsU0FBU0MsS0FBS0Y7SUFDcEIsTUFBTUcsUUFBUSxJQUFJQyxXQUFXSCxPQUFPWCxNQUFNO0lBQzFDLElBQUssSUFBSUQsSUFBSSxHQUFHQSxJQUFJWSxPQUFPWCxNQUFNLEVBQUVELElBQUs7UUFDcENjLEtBQUssQ0FBQ2QsRUFBRSxHQUFHWSxPQUFPSSxVQUFVLENBQUNoQjtJQUNqQztJQUNBLE9BQU9jO0FBQ1gsRUFBRTtBQUNLLE1BQU1HLFNBQVMsQ0FBQ3RCO0lBQ25CLElBQUlnQixVQUFVaEI7SUFDZCxJQUFJZ0IsbUJBQW1CSSxZQUFZO1FBQy9CSixVQUFVbEIseURBQU9BLENBQUN3QixNQUFNLENBQUNOO0lBQzdCO0lBQ0FBLFVBQVVBLFFBQVFGLE9BQU8sQ0FBQyxNQUFNLEtBQUtBLE9BQU8sQ0FBQyxNQUFNLEtBQUtBLE9BQU8sQ0FBQyxPQUFPO0lBQ3ZFLElBQUk7UUFDQSxPQUFPQyxhQUFhQztJQUN4QixFQUNBLE9BQU9PLElBQUk7UUFDUCxNQUFNLElBQUlDLFVBQVU7SUFDeEI7QUFDSixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL2Jhc2U2NHVybC5qcz8yZDhjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVuY29kZXIsIGRlY29kZXIgfSBmcm9tICcuLi9saWIvYnVmZmVyX3V0aWxzLmpzJztcbmV4cG9ydCBjb25zdCBlbmNvZGVCYXNlNjQgPSAoaW5wdXQpID0+IHtcbiAgICBsZXQgdW5lbmNvZGVkID0gaW5wdXQ7XG4gICAgaWYgKHR5cGVvZiB1bmVuY29kZWQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHVuZW5jb2RlZCA9IGVuY29kZXIuZW5jb2RlKHVuZW5jb2RlZCk7XG4gICAgfVxuICAgIGNvbnN0IENIVU5LX1NJWkUgPSAweDgwMDA7XG4gICAgY29uc3QgYXJyID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB1bmVuY29kZWQubGVuZ3RoOyBpICs9IENIVU5LX1NJWkUpIHtcbiAgICAgICAgYXJyLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShudWxsLCB1bmVuY29kZWQuc3ViYXJyYXkoaSwgaSArIENIVU5LX1NJWkUpKSk7XG4gICAgfVxuICAgIHJldHVybiBidG9hKGFyci5qb2luKCcnKSk7XG59O1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IChpbnB1dCkgPT4ge1xuICAgIHJldHVybiBlbmNvZGVCYXNlNjQoaW5wdXQpLnJlcGxhY2UoLz0vZywgJycpLnJlcGxhY2UoL1xcKy9nLCAnLScpLnJlcGxhY2UoL1xcLy9nLCAnXycpO1xufTtcbmV4cG9ydCBjb25zdCBkZWNvZGVCYXNlNjQgPSAoZW5jb2RlZCkgPT4ge1xuICAgIGNvbnN0IGJpbmFyeSA9IGF0b2IoZW5jb2RlZCk7XG4gICAgY29uc3QgYnl0ZXMgPSBuZXcgVWludDhBcnJheShiaW5hcnkubGVuZ3RoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGJpbmFyeS5sZW5ndGg7IGkrKykge1xuICAgICAgICBieXRlc1tpXSA9IGJpbmFyeS5jaGFyQ29kZUF0KGkpO1xuICAgIH1cbiAgICByZXR1cm4gYnl0ZXM7XG59O1xuZXhwb3J0IGNvbnN0IGRlY29kZSA9IChpbnB1dCkgPT4ge1xuICAgIGxldCBlbmNvZGVkID0gaW5wdXQ7XG4gICAgaWYgKGVuY29kZWQgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIGVuY29kZWQgPSBkZWNvZGVyLmRlY29kZShlbmNvZGVkKTtcbiAgICB9XG4gICAgZW5jb2RlZCA9IGVuY29kZWQucmVwbGFjZSgvLS9nLCAnKycpLnJlcGxhY2UoL18vZywgJy8nKS5yZXBsYWNlKC9cXHMvZywgJycpO1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBkZWNvZGVCYXNlNjQoZW5jb2RlZCk7XG4gICAgfVxuICAgIGNhdGNoIChfYSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgaW5wdXQgdG8gYmUgZGVjb2RlZCBpcyBub3QgY29ycmVjdGx5IGVuY29kZWQuJyk7XG4gICAgfVxufTtcbiJdLCJuYW1lcyI6WyJlbmNvZGVyIiwiZGVjb2RlciIsImVuY29kZUJhc2U2NCIsImlucHV0IiwidW5lbmNvZGVkIiwiZW5jb2RlIiwiQ0hVTktfU0laRSIsImFyciIsImkiLCJsZW5ndGgiLCJwdXNoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiYXBwbHkiLCJzdWJhcnJheSIsImJ0b2EiLCJqb2luIiwicmVwbGFjZSIsImRlY29kZUJhc2U2NCIsImVuY29kZWQiLCJiaW5hcnkiLCJhdG9iIiwiYnl0ZXMiLCJVaW50OEFycmF5IiwiY2hhckNvZGVBdCIsImRlY29kZSIsIl9hIiwiVHlwZUVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/bogus.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/bogus.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst bogusWebCrypto = [\n    {\n        hash: \"SHA-256\",\n        name: \"HMAC\"\n    },\n    true,\n    [\n        \"sign\"\n    ]\n];\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (bogusWebCrypto);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvYm9ndXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLGlCQUFpQjtJQUNuQjtRQUFFQyxNQUFNO1FBQVdDLE1BQU07SUFBTztJQUNoQztJQUNBO1FBQUM7S0FBTztDQUNYO0FBQ0QsaUVBQWVGLGNBQWNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvYm9ndXMuanM/NWM3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBib2d1c1dlYkNyeXB0byA9IFtcbiAgICB7IGhhc2g6ICdTSEEtMjU2JywgbmFtZTogJ0hNQUMnIH0sXG4gICAgdHJ1ZSxcbiAgICBbJ3NpZ24nXSxcbl07XG5leHBvcnQgZGVmYXVsdCBib2d1c1dlYkNyeXB0bztcbiJdLCJuYW1lcyI6WyJib2d1c1dlYkNyeXB0byIsImhhc2giLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/bogus.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/check_cek_length.js":
/*!********************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/check_cek_length.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\nconst checkCekLength = (cek, expected)=>{\n    const actual = cek.byteLength << 3;\n    if (actual !== expected) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWEInvalid(`Invalid Content Encryption Key length. Expected ${expected} bits, got ${actual} bits`);\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (checkCekLength);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvY2hlY2tfY2VrX2xlbmd0aC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQztBQUMvQyxNQUFNQyxpQkFBaUIsQ0FBQ0MsS0FBS0M7SUFDekIsTUFBTUMsU0FBU0YsSUFBSUcsVUFBVSxJQUFJO0lBQ2pDLElBQUlELFdBQVdELFVBQVU7UUFDckIsTUFBTSxJQUFJSCx1REFBVUEsQ0FBQyxDQUFDLGdEQUFnRCxFQUFFRyxTQUFTLFdBQVcsRUFBRUMsT0FBTyxLQUFLLENBQUM7SUFDL0c7QUFDSjtBQUNBLGlFQUFlSCxjQUFjQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL2NoZWNrX2Nla19sZW5ndGguanM/Y2Q3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBKV0VJbnZhbGlkIH0gZnJvbSAnLi4vdXRpbC9lcnJvcnMuanMnO1xuY29uc3QgY2hlY2tDZWtMZW5ndGggPSAoY2VrLCBleHBlY3RlZCkgPT4ge1xuICAgIGNvbnN0IGFjdHVhbCA9IGNlay5ieXRlTGVuZ3RoIDw8IDM7XG4gICAgaWYgKGFjdHVhbCAhPT0gZXhwZWN0ZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEpXRUludmFsaWQoYEludmFsaWQgQ29udGVudCBFbmNyeXB0aW9uIEtleSBsZW5ndGguIEV4cGVjdGVkICR7ZXhwZWN0ZWR9IGJpdHMsIGdvdCAke2FjdHVhbH0gYml0c2ApO1xuICAgIH1cbn07XG5leHBvcnQgZGVmYXVsdCBjaGVja0Nla0xlbmd0aDtcbiJdLCJuYW1lcyI6WyJKV0VJbnZhbGlkIiwiY2hlY2tDZWtMZW5ndGgiLCJjZWsiLCJleHBlY3RlZCIsImFjdHVhbCIsImJ5dGVMZW5ndGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/check_cek_length.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/check_key_length.js":
/*!********************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/check_key_length.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((alg, key)=>{\n    if (alg.startsWith(\"RS\") || alg.startsWith(\"PS\")) {\n        const { modulusLength } = key.algorithm;\n        if (typeof modulusLength !== \"number\" || modulusLength < 2048) {\n            throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n        }\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvY2hlY2tfa2V5X2xlbmd0aC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsQ0FBQ0EsS0FBS0M7SUFDakIsSUFBSUQsSUFBSUUsVUFBVSxDQUFDLFNBQVNGLElBQUlFLFVBQVUsQ0FBQyxPQUFPO1FBQzlDLE1BQU0sRUFBRUMsYUFBYSxFQUFFLEdBQUdGLElBQUlHLFNBQVM7UUFDdkMsSUFBSSxPQUFPRCxrQkFBa0IsWUFBWUEsZ0JBQWdCLE1BQU07WUFDM0QsTUFBTSxJQUFJRSxVQUFVLENBQUMsRUFBRUwsSUFBSSxxREFBcUQsQ0FBQztRQUNyRjtJQUNKO0FBQ0osR0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvcnVudGltZS9jaGVja19rZXlfbGVuZ3RoLmpzPzc2NzgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgKGFsZywga2V5KSA9PiB7XG4gICAgaWYgKGFsZy5zdGFydHNXaXRoKCdSUycpIHx8IGFsZy5zdGFydHNXaXRoKCdQUycpKSB7XG4gICAgICAgIGNvbnN0IHsgbW9kdWx1c0xlbmd0aCB9ID0ga2V5LmFsZ29yaXRobTtcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bHVzTGVuZ3RoICE9PSAnbnVtYmVyJyB8fCBtb2R1bHVzTGVuZ3RoIDwgMjA0OCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgJHthbGd9IHJlcXVpcmVzIGtleSBtb2R1bHVzTGVuZ3RoIHRvIGJlIDIwNDggYml0cyBvciBsYXJnZXJgKTtcbiAgICAgICAgfVxuICAgIH1cbn07XG4iXSwibmFtZXMiOlsiYWxnIiwia2V5Iiwic3RhcnRzV2l0aCIsIm1vZHVsdXNMZW5ndGgiLCJhbGdvcml0aG0iLCJUeXBlRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/check_key_length.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/decrypt.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/decrypt.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_check_iv_length_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/check_iv_length.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/check_iv_length.js\");\n/* harmony import */ var _check_cek_length_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./check_cek_length.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/check_cek_length.js\");\n/* harmony import */ var _timing_safe_equal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./timing_safe_equal.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/timing_safe_equal.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lib/crypto_key.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/crypto_key.js\");\n/* harmony import */ var _lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\");\n/* harmony import */ var _is_key_like_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./is_key_like.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\");\n\n\n\n\n\n\n\n\n\nasync function cbcDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(cek, \"Uint8Array\"));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].subtle.importKey(\"raw\", cek.subarray(keySize >> 3), \"AES-CBC\", false, [\n        \"decrypt\"\n    ]);\n    const macKey = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].subtle.importKey(\"raw\", cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: \"HMAC\"\n    }, false, [\n        \"sign\"\n    ]);\n    const macData = (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(aad, iv, ciphertext, (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.uint64be)(aad.length << 3));\n    const expectedTag = new Uint8Array((await _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].subtle.sign(\"HMAC\", macKey, macData)).slice(0, keySize >> 3));\n    let macCheckPassed;\n    try {\n        macCheckPassed = (0,_timing_safe_equal_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(tag, expectedTag);\n    } catch (_a) {}\n    if (!macCheckPassed) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_4__.JWEDecryptionFailed();\n    }\n    let plaintext;\n    try {\n        plaintext = new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].subtle.decrypt({\n            iv,\n            name: \"AES-CBC\"\n        }, encKey, ciphertext));\n    } catch (_b) {}\n    if (!plaintext) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_4__.JWEDecryptionFailed();\n    }\n    return plaintext;\n}\nasync function gcmDecrypt(enc, cek, ciphertext, iv, tag, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].subtle.importKey(\"raw\", cek, \"AES-GCM\", false, [\n            \"decrypt\"\n        ]);\n    } else {\n        (0,_lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_6__.checkEncCryptoKey)(cek, enc, \"decrypt\");\n        encKey = cek;\n    }\n    try {\n        return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].subtle.decrypt({\n            additionalData: aad,\n            iv,\n            name: \"AES-GCM\",\n            tagLength: 128\n        }, encKey, (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(ciphertext, tag)));\n    } catch (_a) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_4__.JWEDecryptionFailed();\n    }\n}\nconst decrypt = async (enc, cek, ciphertext, iv, tag, aad)=>{\n    if (!(0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_5__.isCryptoKey)(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(cek, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_8__.types, \"Uint8Array\"));\n    }\n    (0,_lib_check_iv_length_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(enc, iv);\n    switch(enc){\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            if (cek instanceof Uint8Array) (0,_check_cek_length_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cek, parseInt(enc.slice(-3), 10));\n            return cbcDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            if (cek instanceof Uint8Array) (0,_check_cek_length_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmDecrypt(enc, cek, ciphertext, iv, tag, aad);\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_4__.JOSENotSupported(\"Unsupported JWE Content Encryption Algorithm\");\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (decrypt);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/decrypt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/digest.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/digest.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n\nconst digest = async (algorithm, data)=>{\n    const subtleDigest = `SHA-${algorithm.slice(-3)}`;\n    return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.digest(subtleDigest, data));\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (digest);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvZGlnZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQ3BDLE1BQU1DLFNBQVMsT0FBT0MsV0FBV0M7SUFDN0IsTUFBTUMsZUFBZSxDQUFDLElBQUksRUFBRUYsVUFBVUcsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQ2pELE9BQU8sSUFBSUMsV0FBVyxNQUFNTixxREFBTUEsQ0FBQ08sTUFBTSxDQUFDTixNQUFNLENBQUNHLGNBQWNEO0FBQ25FO0FBQ0EsaUVBQWVGLE1BQU1BLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvZGlnZXN0LmpzPzhmZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICcuL3dlYmNyeXB0by5qcyc7XG5jb25zdCBkaWdlc3QgPSBhc3luYyAoYWxnb3JpdGhtLCBkYXRhKSA9PiB7XG4gICAgY29uc3Qgc3VidGxlRGlnZXN0ID0gYFNIQS0ke2FsZ29yaXRobS5zbGljZSgtMyl9YDtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYXdhaXQgY3J5cHRvLnN1YnRsZS5kaWdlc3Qoc3VidGxlRGlnZXN0LCBkYXRhKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgZGlnZXN0O1xuIl0sIm5hbWVzIjpbImNyeXB0byIsImRpZ2VzdCIsImFsZ29yaXRobSIsImRhdGEiLCJzdWJ0bGVEaWdlc3QiLCJzbGljZSIsIlVpbnQ4QXJyYXkiLCJzdWJ0bGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/digest.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/ecdhes.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/ecdhes.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deriveKey: () => (/* binding */ deriveKey),\n/* harmony export */   ecdhAllowed: () => (/* binding */ ecdhAllowed),\n/* harmony export */   generateEpk: () => (/* binding */ generateEpk)\n/* harmony export */ });\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/crypto_key.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/crypto_key.js\");\n/* harmony import */ var _lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\");\n/* harmony import */ var _is_key_like_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./is_key_like.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\");\n\n\n\n\n\nasync function deriveKey(publicKey, privateKey, algorithm, keyLength, apu = new Uint8Array(0), apv = new Uint8Array(0)) {\n    if (!(0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_1__.isCryptoKey)(publicKey)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(publicKey, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_4__.types));\n    }\n    (0,_lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_2__.checkEncCryptoKey)(publicKey, \"ECDH\");\n    if (!(0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_1__.isCryptoKey)(privateKey)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(privateKey, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_4__.types));\n    }\n    (0,_lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_2__.checkEncCryptoKey)(privateKey, \"ECDH\", \"deriveBits\");\n    const value = (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)((0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.lengthAndInput)(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.encoder.encode(algorithm)), (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.lengthAndInput)(apu), (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.lengthAndInput)(apv), (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.uint32be)(keyLength));\n    let length;\n    if (publicKey.algorithm.name === \"X25519\") {\n        length = 256;\n    } else if (publicKey.algorithm.name === \"X448\") {\n        length = 448;\n    } else {\n        length = Math.ceil(parseInt(publicKey.algorithm.namedCurve.substr(-3), 10) / 8) << 3;\n    }\n    const sharedSecret = new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtle.deriveBits({\n        name: publicKey.algorithm.name,\n        public: publicKey\n    }, privateKey, length));\n    return (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.concatKdf)(sharedSecret, keyLength, value);\n}\nasync function generateEpk(key) {\n    if (!(0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_1__.isCryptoKey)(key)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(key, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_4__.types));\n    }\n    return _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtle.generateKey(key.algorithm, true, [\n        \"deriveBits\"\n    ]);\n}\nfunction ecdhAllowed(key) {\n    if (!(0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_1__.isCryptoKey)(key)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(key, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_4__.types));\n    }\n    return [\n        \"P-256\",\n        \"P-384\",\n        \"P-521\"\n    ].includes(key.algorithm.namedCurve) || key.algorithm.name === \"X25519\" || key.algorithm.name === \"X448\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvZWNkaGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQThGO0FBQ3pDO0FBQ0k7QUFDQztBQUNqQjtBQUNsQyxlQUFlVSxVQUFVQyxTQUFTLEVBQUVDLFVBQVUsRUFBRUMsU0FBUyxFQUFFQyxTQUFTLEVBQUVDLE1BQU0sSUFBSUMsV0FBVyxFQUFFLEVBQUVDLE1BQU0sSUFBSUQsV0FBVyxFQUFFO0lBQ3pILElBQUksQ0FBQ1YsMERBQVdBLENBQUNLLFlBQVk7UUFDekIsTUFBTSxJQUFJTyxVQUFVVixxRUFBZUEsQ0FBQ0csY0FBY0Ysa0RBQUtBO0lBQzNEO0lBQ0FGLHFFQUFpQkEsQ0FBQ0ksV0FBVztJQUM3QixJQUFJLENBQUNMLDBEQUFXQSxDQUFDTSxhQUFhO1FBQzFCLE1BQU0sSUFBSU0sVUFBVVYscUVBQWVBLENBQUNJLGVBQWVILGtEQUFLQTtJQUM1RDtJQUNBRixxRUFBaUJBLENBQUNLLFlBQVksUUFBUTtJQUN0QyxNQUFNTyxRQUFRbEIsNERBQU1BLENBQUNFLG9FQUFjQSxDQUFDSCx5REFBT0EsQ0FBQ29CLE1BQU0sQ0FBQ1AsYUFBYVYsb0VBQWNBLENBQUNZLE1BQU1aLG9FQUFjQSxDQUFDYyxNQUFNZiw4REFBUUEsQ0FBQ1k7SUFDbkgsSUFBSU87SUFDSixJQUFJVixVQUFVRSxTQUFTLENBQUNTLElBQUksS0FBSyxVQUFVO1FBQ3ZDRCxTQUFTO0lBQ2IsT0FDSyxJQUFJVixVQUFVRSxTQUFTLENBQUNTLElBQUksS0FBSyxRQUFRO1FBQzFDRCxTQUFTO0lBQ2IsT0FDSztRQUNEQSxTQUNJRSxLQUFLQyxJQUFJLENBQUNDLFNBQVNkLFVBQVVFLFNBQVMsQ0FBQ2EsVUFBVSxDQUFDQyxNQUFNLENBQUMsQ0FBQyxJQUFJLE1BQU0sTUFBTTtJQUNsRjtJQUNBLE1BQU1DLGVBQWUsSUFBSVosV0FBVyxNQUFNWCxxREFBTUEsQ0FBQ3dCLE1BQU0sQ0FBQ0MsVUFBVSxDQUFDO1FBQy9EUixNQUFNWCxVQUFVRSxTQUFTLENBQUNTLElBQUk7UUFDOUJTLFFBQVFwQjtJQUNaLEdBQUdDLFlBQVlTO0lBQ2YsT0FBT2pCLCtEQUFTQSxDQUFDd0IsY0FBY2QsV0FBV0s7QUFDOUM7QUFDTyxlQUFlYSxZQUFZQyxHQUFHO0lBQ2pDLElBQUksQ0FBQzNCLDBEQUFXQSxDQUFDMkIsTUFBTTtRQUNuQixNQUFNLElBQUlmLFVBQVVWLHFFQUFlQSxDQUFDeUIsUUFBUXhCLGtEQUFLQTtJQUNyRDtJQUNBLE9BQU9KLHFEQUFNQSxDQUFDd0IsTUFBTSxDQUFDSyxXQUFXLENBQUNELElBQUlwQixTQUFTLEVBQUUsTUFBTTtRQUFDO0tBQWE7QUFDeEU7QUFDTyxTQUFTc0IsWUFBWUYsR0FBRztJQUMzQixJQUFJLENBQUMzQiwwREFBV0EsQ0FBQzJCLE1BQU07UUFDbkIsTUFBTSxJQUFJZixVQUFVVixxRUFBZUEsQ0FBQ3lCLFFBQVF4QixrREFBS0E7SUFDckQ7SUFDQSxPQUFRO1FBQUM7UUFBUztRQUFTO0tBQVEsQ0FBQzJCLFFBQVEsQ0FBQ0gsSUFBSXBCLFNBQVMsQ0FBQ2EsVUFBVSxLQUNqRU8sSUFBSXBCLFNBQVMsQ0FBQ1MsSUFBSSxLQUFLLFlBQ3ZCVyxJQUFJcEIsU0FBUyxDQUFDUyxJQUFJLEtBQUs7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvZWNkaGVzLmpzP2RiZTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW5jb2RlciwgY29uY2F0LCB1aW50MzJiZSwgbGVuZ3RoQW5kSW5wdXQsIGNvbmNhdEtkZiB9IGZyb20gJy4uL2xpYi9idWZmZXJfdXRpbHMuanMnO1xuaW1wb3J0IGNyeXB0bywgeyBpc0NyeXB0b0tleSB9IGZyb20gJy4vd2ViY3J5cHRvLmpzJztcbmltcG9ydCB7IGNoZWNrRW5jQ3J5cHRvS2V5IH0gZnJvbSAnLi4vbGliL2NyeXB0b19rZXkuanMnO1xuaW1wb3J0IGludmFsaWRLZXlJbnB1dCBmcm9tICcuLi9saWIvaW52YWxpZF9rZXlfaW5wdXQuanMnO1xuaW1wb3J0IHsgdHlwZXMgfSBmcm9tICcuL2lzX2tleV9saWtlLmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZXJpdmVLZXkocHVibGljS2V5LCBwcml2YXRlS2V5LCBhbGdvcml0aG0sIGtleUxlbmd0aCwgYXB1ID0gbmV3IFVpbnQ4QXJyYXkoMCksIGFwdiA9IG5ldyBVaW50OEFycmF5KDApKSB7XG4gICAgaWYgKCFpc0NyeXB0b0tleShwdWJsaWNLZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoaW52YWxpZEtleUlucHV0KHB1YmxpY0tleSwgLi4udHlwZXMpKTtcbiAgICB9XG4gICAgY2hlY2tFbmNDcnlwdG9LZXkocHVibGljS2V5LCAnRUNESCcpO1xuICAgIGlmICghaXNDcnlwdG9LZXkocHJpdmF0ZUtleSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihpbnZhbGlkS2V5SW5wdXQocHJpdmF0ZUtleSwgLi4udHlwZXMpKTtcbiAgICB9XG4gICAgY2hlY2tFbmNDcnlwdG9LZXkocHJpdmF0ZUtleSwgJ0VDREgnLCAnZGVyaXZlQml0cycpO1xuICAgIGNvbnN0IHZhbHVlID0gY29uY2F0KGxlbmd0aEFuZElucHV0KGVuY29kZXIuZW5jb2RlKGFsZ29yaXRobSkpLCBsZW5ndGhBbmRJbnB1dChhcHUpLCBsZW5ndGhBbmRJbnB1dChhcHYpLCB1aW50MzJiZShrZXlMZW5ndGgpKTtcbiAgICBsZXQgbGVuZ3RoO1xuICAgIGlmIChwdWJsaWNLZXkuYWxnb3JpdGhtLm5hbWUgPT09ICdYMjU1MTknKSB7XG4gICAgICAgIGxlbmd0aCA9IDI1NjtcbiAgICB9XG4gICAgZWxzZSBpZiAocHVibGljS2V5LmFsZ29yaXRobS5uYW1lID09PSAnWDQ0OCcpIHtcbiAgICAgICAgbGVuZ3RoID0gNDQ4O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbGVuZ3RoID1cbiAgICAgICAgICAgIE1hdGguY2VpbChwYXJzZUludChwdWJsaWNLZXkuYWxnb3JpdGhtLm5hbWVkQ3VydmUuc3Vic3RyKC0zKSwgMTApIC8gOCkgPDwgMztcbiAgICB9XG4gICAgY29uc3Qgc2hhcmVkU2VjcmV0ID0gbmV3IFVpbnQ4QXJyYXkoYXdhaXQgY3J5cHRvLnN1YnRsZS5kZXJpdmVCaXRzKHtcbiAgICAgICAgbmFtZTogcHVibGljS2V5LmFsZ29yaXRobS5uYW1lLFxuICAgICAgICBwdWJsaWM6IHB1YmxpY0tleSxcbiAgICB9LCBwcml2YXRlS2V5LCBsZW5ndGgpKTtcbiAgICByZXR1cm4gY29uY2F0S2RmKHNoYXJlZFNlY3JldCwga2V5TGVuZ3RoLCB2YWx1ZSk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVFcGsoa2V5KSB7XG4gICAgaWYgKCFpc0NyeXB0b0tleShrZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoaW52YWxpZEtleUlucHV0KGtleSwgLi4udHlwZXMpKTtcbiAgICB9XG4gICAgcmV0dXJuIGNyeXB0by5zdWJ0bGUuZ2VuZXJhdGVLZXkoa2V5LmFsZ29yaXRobSwgdHJ1ZSwgWydkZXJpdmVCaXRzJ10pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVjZGhBbGxvd2VkKGtleSkge1xuICAgIGlmICghaXNDcnlwdG9LZXkoa2V5KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGludmFsaWRLZXlJbnB1dChrZXksIC4uLnR5cGVzKSk7XG4gICAgfVxuICAgIHJldHVybiAoWydQLTI1NicsICdQLTM4NCcsICdQLTUyMSddLmluY2x1ZGVzKGtleS5hbGdvcml0aG0ubmFtZWRDdXJ2ZSkgfHxcbiAgICAgICAga2V5LmFsZ29yaXRobS5uYW1lID09PSAnWDI1NTE5JyB8fFxuICAgICAgICBrZXkuYWxnb3JpdGhtLm5hbWUgPT09ICdYNDQ4Jyk7XG59XG4iXSwibmFtZXMiOlsiZW5jb2RlciIsImNvbmNhdCIsInVpbnQzMmJlIiwibGVuZ3RoQW5kSW5wdXQiLCJjb25jYXRLZGYiLCJjcnlwdG8iLCJpc0NyeXB0b0tleSIsImNoZWNrRW5jQ3J5cHRvS2V5IiwiaW52YWxpZEtleUlucHV0IiwidHlwZXMiLCJkZXJpdmVLZXkiLCJwdWJsaWNLZXkiLCJwcml2YXRlS2V5IiwiYWxnb3JpdGhtIiwia2V5TGVuZ3RoIiwiYXB1IiwiVWludDhBcnJheSIsImFwdiIsIlR5cGVFcnJvciIsInZhbHVlIiwiZW5jb2RlIiwibGVuZ3RoIiwibmFtZSIsIk1hdGgiLCJjZWlsIiwicGFyc2VJbnQiLCJuYW1lZEN1cnZlIiwic3Vic3RyIiwic2hhcmVkU2VjcmV0Iiwic3VidGxlIiwiZGVyaXZlQml0cyIsInB1YmxpYyIsImdlbmVyYXRlRXBrIiwia2V5IiwiZ2VuZXJhdGVLZXkiLCJlY2RoQWxsb3dlZCIsImluY2x1ZGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/ecdhes.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/encrypt.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/encrypt.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_check_iv_length_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/check_iv_length.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/check_iv_length.js\");\n/* harmony import */ var _check_cek_length_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./check_cek_length.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/check_cek_length.js\");\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/crypto_key.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/crypto_key.js\");\n/* harmony import */ var _lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _is_key_like_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./is_key_like.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\");\n\n\n\n\n\n\n\n\nasync function cbcEncrypt(enc, plaintext, cek, iv, aad) {\n    if (!(cek instanceof Uint8Array)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(cek, \"Uint8Array\"));\n    }\n    const keySize = parseInt(enc.slice(1, 4), 10);\n    const encKey = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].subtle.importKey(\"raw\", cek.subarray(keySize >> 3), \"AES-CBC\", false, [\n        \"encrypt\"\n    ]);\n    const macKey = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].subtle.importKey(\"raw\", cek.subarray(0, keySize >> 3), {\n        hash: `SHA-${keySize << 1}`,\n        name: \"HMAC\"\n    }, false, [\n        \"sign\"\n    ]);\n    const ciphertext = new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].subtle.encrypt({\n        iv,\n        name: \"AES-CBC\"\n    }, encKey, plaintext));\n    const macData = (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.concat)(aad, iv, ciphertext, (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_0__.uint64be)(aad.length << 3));\n    const tag = new Uint8Array((await _webcrypto_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].subtle.sign(\"HMAC\", macKey, macData)).slice(0, keySize >> 3));\n    return {\n        ciphertext,\n        tag\n    };\n}\nasync function gcmEncrypt(enc, plaintext, cek, iv, aad) {\n    let encKey;\n    if (cek instanceof Uint8Array) {\n        encKey = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].subtle.importKey(\"raw\", cek, \"AES-GCM\", false, [\n            \"encrypt\"\n        ]);\n    } else {\n        (0,_lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_4__.checkEncCryptoKey)(cek, enc, \"encrypt\");\n        encKey = cek;\n    }\n    const encrypted = new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].subtle.encrypt({\n        additionalData: aad,\n        iv,\n        name: \"AES-GCM\",\n        tagLength: 128\n    }, encKey, plaintext));\n    const tag = encrypted.slice(-16);\n    const ciphertext = encrypted.slice(0, -16);\n    return {\n        ciphertext,\n        tag\n    };\n}\nconst encrypt = async (enc, plaintext, cek, iv, aad)=>{\n    if (!(0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_3__.isCryptoKey)(cek) && !(cek instanceof Uint8Array)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(cek, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_7__.types, \"Uint8Array\"));\n    }\n    (0,_lib_check_iv_length_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(enc, iv);\n    switch(enc){\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            if (cek instanceof Uint8Array) (0,_check_cek_length_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cek, parseInt(enc.slice(-3), 10));\n            return cbcEncrypt(enc, plaintext, cek, iv, aad);\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            if (cek instanceof Uint8Array) (0,_check_cek_length_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cek, parseInt(enc.slice(1, 4), 10));\n            return gcmEncrypt(enc, plaintext, cek, iv, aad);\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_6__.JOSENotSupported(\"Unsupported JWE Content Encryption Algorithm\");\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (encrypt);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvZW5jcnlwdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBMEQ7QUFDSjtBQUNIO0FBQ0U7QUFDSTtBQUNDO0FBQ0w7QUFDWjtBQUN6QyxlQUFlVSxXQUFXQyxHQUFHLEVBQUVDLFNBQVMsRUFBRUMsR0FBRyxFQUFFQyxFQUFFLEVBQUVDLEdBQUc7SUFDbEQsSUFBSSxDQUFFRixDQUFBQSxlQUFlRyxVQUFTLEdBQUk7UUFDOUIsTUFBTSxJQUFJQyxVQUFVVixxRUFBZUEsQ0FBQ00sS0FBSztJQUM3QztJQUNBLE1BQU1LLFVBQVVDLFNBQVNSLElBQUlTLEtBQUssQ0FBQyxHQUFHLElBQUk7SUFDMUMsTUFBTUMsU0FBUyxNQUFNakIscURBQU1BLENBQUNrQixNQUFNLENBQUNDLFNBQVMsQ0FBQyxPQUFPVixJQUFJVyxRQUFRLENBQUNOLFdBQVcsSUFBSSxXQUFXLE9BQU87UUFBQztLQUFVO0lBQzdHLE1BQU1PLFNBQVMsTUFBTXJCLHFEQUFNQSxDQUFDa0IsTUFBTSxDQUFDQyxTQUFTLENBQUMsT0FBT1YsSUFBSVcsUUFBUSxDQUFDLEdBQUdOLFdBQVcsSUFBSTtRQUMvRVEsTUFBTSxDQUFDLElBQUksRUFBRVIsV0FBVyxFQUFFLENBQUM7UUFDM0JTLE1BQU07SUFDVixHQUFHLE9BQU87UUFBQztLQUFPO0lBQ2xCLE1BQU1DLGFBQWEsSUFBSVosV0FBVyxNQUFNWixxREFBTUEsQ0FBQ2tCLE1BQU0sQ0FBQ08sT0FBTyxDQUFDO1FBQzFEZjtRQUNBYSxNQUFNO0lBQ1YsR0FBR04sUUFBUVQ7SUFDWCxNQUFNa0IsVUFBVTlCLDREQUFNQSxDQUFDZSxLQUFLRCxJQUFJYyxZQUFZM0IsOERBQVFBLENBQUNjLElBQUlnQixNQUFNLElBQUk7SUFDbkUsTUFBTUMsTUFBTSxJQUFJaEIsV0FBVyxDQUFDLE1BQU1aLHFEQUFNQSxDQUFDa0IsTUFBTSxDQUFDVyxJQUFJLENBQUMsUUFBUVIsUUFBUUssUUFBTyxFQUFHVixLQUFLLENBQUMsR0FBR0YsV0FBVztJQUNuRyxPQUFPO1FBQUVVO1FBQVlJO0lBQUk7QUFDN0I7QUFDQSxlQUFlRSxXQUFXdkIsR0FBRyxFQUFFQyxTQUFTLEVBQUVDLEdBQUcsRUFBRUMsRUFBRSxFQUFFQyxHQUFHO0lBQ2xELElBQUlNO0lBQ0osSUFBSVIsZUFBZUcsWUFBWTtRQUMzQkssU0FBUyxNQUFNakIscURBQU1BLENBQUNrQixNQUFNLENBQUNDLFNBQVMsQ0FBQyxPQUFPVixLQUFLLFdBQVcsT0FBTztZQUFDO1NBQVU7SUFDcEYsT0FDSztRQUNEUCxxRUFBaUJBLENBQUNPLEtBQUtGLEtBQUs7UUFDNUJVLFNBQVNSO0lBQ2I7SUFDQSxNQUFNc0IsWUFBWSxJQUFJbkIsV0FBVyxNQUFNWixxREFBTUEsQ0FBQ2tCLE1BQU0sQ0FBQ08sT0FBTyxDQUFDO1FBQ3pETyxnQkFBZ0JyQjtRQUNoQkQ7UUFDQWEsTUFBTTtRQUNOVSxXQUFXO0lBQ2YsR0FBR2hCLFFBQVFUO0lBQ1gsTUFBTW9CLE1BQU1HLFVBQVVmLEtBQUssQ0FBQyxDQUFDO0lBQzdCLE1BQU1RLGFBQWFPLFVBQVVmLEtBQUssQ0FBQyxHQUFHLENBQUM7SUFDdkMsT0FBTztRQUFFUTtRQUFZSTtJQUFJO0FBQzdCO0FBQ0EsTUFBTUgsVUFBVSxPQUFPbEIsS0FBS0MsV0FBV0MsS0FBS0MsSUFBSUM7SUFDNUMsSUFBSSxDQUFDViwwREFBV0EsQ0FBQ1EsUUFBUSxDQUFFQSxDQUFBQSxlQUFlRyxVQUFTLEdBQUk7UUFDbkQsTUFBTSxJQUFJQyxVQUFVVixxRUFBZUEsQ0FBQ00sUUFBUUosa0RBQUtBLEVBQUU7SUFDdkQ7SUFDQVAsbUVBQWFBLENBQUNTLEtBQUtHO0lBQ25CLE9BQVFIO1FBQ0osS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsSUFBSUUsZUFBZUcsWUFDZmIsZ0VBQWNBLENBQUNVLEtBQUtNLFNBQVNSLElBQUlTLEtBQUssQ0FBQyxDQUFDLElBQUk7WUFDaEQsT0FBT1YsV0FBV0MsS0FBS0MsV0FBV0MsS0FBS0MsSUFBSUM7UUFDL0MsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsSUFBSUYsZUFBZUcsWUFDZmIsZ0VBQWNBLENBQUNVLEtBQUtNLFNBQVNSLElBQUlTLEtBQUssQ0FBQyxHQUFHLElBQUk7WUFDbEQsT0FBT2MsV0FBV3ZCLEtBQUtDLFdBQVdDLEtBQUtDLElBQUlDO1FBQy9DO1lBQ0ksTUFBTSxJQUFJUCw2REFBZ0JBLENBQUM7SUFDbkM7QUFDSjtBQUNBLGlFQUFlcUIsT0FBT0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvcnVudGltZS9lbmNyeXB0LmpzPzdjYWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uY2F0LCB1aW50NjRiZSB9IGZyb20gJy4uL2xpYi9idWZmZXJfdXRpbHMuanMnO1xuaW1wb3J0IGNoZWNrSXZMZW5ndGggZnJvbSAnLi4vbGliL2NoZWNrX2l2X2xlbmd0aC5qcyc7XG5pbXBvcnQgY2hlY2tDZWtMZW5ndGggZnJvbSAnLi9jaGVja19jZWtfbGVuZ3RoLmpzJztcbmltcG9ydCBjcnlwdG8sIHsgaXNDcnlwdG9LZXkgfSBmcm9tICcuL3dlYmNyeXB0by5qcyc7XG5pbXBvcnQgeyBjaGVja0VuY0NyeXB0b0tleSB9IGZyb20gJy4uL2xpYi9jcnlwdG9fa2V5LmpzJztcbmltcG9ydCBpbnZhbGlkS2V5SW5wdXQgZnJvbSAnLi4vbGliL2ludmFsaWRfa2V5X2lucHV0LmpzJztcbmltcG9ydCB7IEpPU0VOb3RTdXBwb3J0ZWQgfSBmcm9tICcuLi91dGlsL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyB0eXBlcyB9IGZyb20gJy4vaXNfa2V5X2xpa2UuanMnO1xuYXN5bmMgZnVuY3Rpb24gY2JjRW5jcnlwdChlbmMsIHBsYWludGV4dCwgY2VrLCBpdiwgYWFkKSB7XG4gICAgaWYgKCEoY2VrIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihpbnZhbGlkS2V5SW5wdXQoY2VrLCAnVWludDhBcnJheScpKTtcbiAgICB9XG4gICAgY29uc3Qga2V5U2l6ZSA9IHBhcnNlSW50KGVuYy5zbGljZSgxLCA0KSwgMTApO1xuICAgIGNvbnN0IGVuY0tleSA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KCdyYXcnLCBjZWsuc3ViYXJyYXkoa2V5U2l6ZSA+PiAzKSwgJ0FFUy1DQkMnLCBmYWxzZSwgWydlbmNyeXB0J10pO1xuICAgIGNvbnN0IG1hY0tleSA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KCdyYXcnLCBjZWsuc3ViYXJyYXkoMCwga2V5U2l6ZSA+PiAzKSwge1xuICAgICAgICBoYXNoOiBgU0hBLSR7a2V5U2l6ZSA8PCAxfWAsXG4gICAgICAgIG5hbWU6ICdITUFDJyxcbiAgICB9LCBmYWxzZSwgWydzaWduJ10pO1xuICAgIGNvbnN0IGNpcGhlcnRleHQgPSBuZXcgVWludDhBcnJheShhd2FpdCBjcnlwdG8uc3VidGxlLmVuY3J5cHQoe1xuICAgICAgICBpdixcbiAgICAgICAgbmFtZTogJ0FFUy1DQkMnLFxuICAgIH0sIGVuY0tleSwgcGxhaW50ZXh0KSk7XG4gICAgY29uc3QgbWFjRGF0YSA9IGNvbmNhdChhYWQsIGl2LCBjaXBoZXJ0ZXh0LCB1aW50NjRiZShhYWQubGVuZ3RoIDw8IDMpKTtcbiAgICBjb25zdCB0YWcgPSBuZXcgVWludDhBcnJheSgoYXdhaXQgY3J5cHRvLnN1YnRsZS5zaWduKCdITUFDJywgbWFjS2V5LCBtYWNEYXRhKSkuc2xpY2UoMCwga2V5U2l6ZSA+PiAzKSk7XG4gICAgcmV0dXJuIHsgY2lwaGVydGV4dCwgdGFnIH07XG59XG5hc3luYyBmdW5jdGlvbiBnY21FbmNyeXB0KGVuYywgcGxhaW50ZXh0LCBjZWssIGl2LCBhYWQpIHtcbiAgICBsZXQgZW5jS2V5O1xuICAgIGlmIChjZWsgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIGVuY0tleSA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KCdyYXcnLCBjZWssICdBRVMtR0NNJywgZmFsc2UsIFsnZW5jcnlwdCddKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNoZWNrRW5jQ3J5cHRvS2V5KGNlaywgZW5jLCAnZW5jcnlwdCcpO1xuICAgICAgICBlbmNLZXkgPSBjZWs7XG4gICAgfVxuICAgIGNvbnN0IGVuY3J5cHRlZCA9IG5ldyBVaW50OEFycmF5KGF3YWl0IGNyeXB0by5zdWJ0bGUuZW5jcnlwdCh7XG4gICAgICAgIGFkZGl0aW9uYWxEYXRhOiBhYWQsXG4gICAgICAgIGl2LFxuICAgICAgICBuYW1lOiAnQUVTLUdDTScsXG4gICAgICAgIHRhZ0xlbmd0aDogMTI4LFxuICAgIH0sIGVuY0tleSwgcGxhaW50ZXh0KSk7XG4gICAgY29uc3QgdGFnID0gZW5jcnlwdGVkLnNsaWNlKC0xNik7XG4gICAgY29uc3QgY2lwaGVydGV4dCA9IGVuY3J5cHRlZC5zbGljZSgwLCAtMTYpO1xuICAgIHJldHVybiB7IGNpcGhlcnRleHQsIHRhZyB9O1xufVxuY29uc3QgZW5jcnlwdCA9IGFzeW5jIChlbmMsIHBsYWludGV4dCwgY2VrLCBpdiwgYWFkKSA9PiB7XG4gICAgaWYgKCFpc0NyeXB0b0tleShjZWspICYmICEoY2VrIGluc3RhbmNlb2YgVWludDhBcnJheSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihpbnZhbGlkS2V5SW5wdXQoY2VrLCAuLi50eXBlcywgJ1VpbnQ4QXJyYXknKSk7XG4gICAgfVxuICAgIGNoZWNrSXZMZW5ndGgoZW5jLCBpdik7XG4gICAgc3dpdGNoIChlbmMpIHtcbiAgICAgICAgY2FzZSAnQTEyOENCQy1IUzI1Nic6XG4gICAgICAgIGNhc2UgJ0ExOTJDQkMtSFMzODQnOlxuICAgICAgICBjYXNlICdBMjU2Q0JDLUhTNTEyJzpcbiAgICAgICAgICAgIGlmIChjZWsgaW5zdGFuY2VvZiBVaW50OEFycmF5KVxuICAgICAgICAgICAgICAgIGNoZWNrQ2VrTGVuZ3RoKGNlaywgcGFyc2VJbnQoZW5jLnNsaWNlKC0zKSwgMTApKTtcbiAgICAgICAgICAgIHJldHVybiBjYmNFbmNyeXB0KGVuYywgcGxhaW50ZXh0LCBjZWssIGl2LCBhYWQpO1xuICAgICAgICBjYXNlICdBMTI4R0NNJzpcbiAgICAgICAgY2FzZSAnQTE5MkdDTSc6XG4gICAgICAgIGNhc2UgJ0EyNTZHQ00nOlxuICAgICAgICAgICAgaWYgKGNlayBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpXG4gICAgICAgICAgICAgICAgY2hlY2tDZWtMZW5ndGgoY2VrLCBwYXJzZUludChlbmMuc2xpY2UoMSwgNCksIDEwKSk7XG4gICAgICAgICAgICByZXR1cm4gZ2NtRW5jcnlwdChlbmMsIHBsYWludGV4dCwgY2VrLCBpdiwgYWFkKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBKT1NFTm90U3VwcG9ydGVkKCdVbnN1cHBvcnRlZCBKV0UgQ29udGVudCBFbmNyeXB0aW9uIEFsZ29yaXRobScpO1xuICAgIH1cbn07XG5leHBvcnQgZGVmYXVsdCBlbmNyeXB0O1xuIl0sIm5hbWVzIjpbImNvbmNhdCIsInVpbnQ2NGJlIiwiY2hlY2tJdkxlbmd0aCIsImNoZWNrQ2VrTGVuZ3RoIiwiY3J5cHRvIiwiaXNDcnlwdG9LZXkiLCJjaGVja0VuY0NyeXB0b0tleSIsImludmFsaWRLZXlJbnB1dCIsIkpPU0VOb3RTdXBwb3J0ZWQiLCJ0eXBlcyIsImNiY0VuY3J5cHQiLCJlbmMiLCJwbGFpbnRleHQiLCJjZWsiLCJpdiIsImFhZCIsIlVpbnQ4QXJyYXkiLCJUeXBlRXJyb3IiLCJrZXlTaXplIiwicGFyc2VJbnQiLCJzbGljZSIsImVuY0tleSIsInN1YnRsZSIsImltcG9ydEtleSIsInN1YmFycmF5IiwibWFjS2V5IiwiaGFzaCIsIm5hbWUiLCJjaXBoZXJ0ZXh0IiwiZW5jcnlwdCIsIm1hY0RhdGEiLCJsZW5ndGgiLCJ0YWciLCJzaWduIiwiZ2NtRW5jcnlwdCIsImVuY3J5cHRlZCIsImFkZGl0aW9uYWxEYXRhIiwidGFnTGVuZ3RoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/encrypt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/fetch_jwks.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/fetch_jwks.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\nconst fetchJwks = async (url, timeout, options)=>{\n    let controller;\n    let id;\n    let timedOut = false;\n    if (typeof AbortController === \"function\") {\n        controller = new AbortController();\n        id = setTimeout(()=>{\n            timedOut = true;\n            controller.abort();\n        }, timeout);\n    }\n    const response = await fetch(url.href, {\n        signal: controller ? controller.signal : undefined,\n        redirect: \"manual\",\n        headers: options.headers\n    }).catch((err)=>{\n        if (timedOut) throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JWKSTimeout();\n        throw err;\n    });\n    if (id !== undefined) clearTimeout(id);\n    if (response.status !== 200) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JOSEError(\"Expected 200 OK from the JSON Web Key Set HTTP response\");\n    }\n    try {\n        return await response.json();\n    } catch (_a) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JOSEError(\"Failed to parse the JSON Web Key Set HTTP response as JSON\");\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (fetchJwks);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvZmV0Y2hfandrcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyRDtBQUMzRCxNQUFNRSxZQUFZLE9BQU9DLEtBQUtDLFNBQVNDO0lBQ25DLElBQUlDO0lBQ0osSUFBSUM7SUFDSixJQUFJQyxXQUFXO0lBQ2YsSUFBSSxPQUFPQyxvQkFBb0IsWUFBWTtRQUN2Q0gsYUFBYSxJQUFJRztRQUNqQkYsS0FBS0csV0FBVztZQUNaRixXQUFXO1lBQ1hGLFdBQVdLLEtBQUs7UUFDcEIsR0FBR1A7SUFDUDtJQUNBLE1BQU1RLFdBQVcsTUFBTUMsTUFBTVYsSUFBSVcsSUFBSSxFQUFFO1FBQ25DQyxRQUFRVCxhQUFhQSxXQUFXUyxNQUFNLEdBQUdDO1FBQ3pDQyxVQUFVO1FBQ1ZDLFNBQVNiLFFBQVFhLE9BQU87SUFDNUIsR0FBR0MsS0FBSyxDQUFDLENBQUNDO1FBQ04sSUFBSVosVUFDQSxNQUFNLElBQUlQLHdEQUFXQTtRQUN6QixNQUFNbUI7SUFDVjtJQUNBLElBQUliLE9BQU9TLFdBQ1BLLGFBQWFkO0lBQ2pCLElBQUlLLFNBQVNVLE1BQU0sS0FBSyxLQUFLO1FBQ3pCLE1BQU0sSUFBSXRCLHNEQUFTQSxDQUFDO0lBQ3hCO0lBQ0EsSUFBSTtRQUNBLE9BQU8sTUFBTVksU0FBU1csSUFBSTtJQUM5QixFQUNBLE9BQU9DLElBQUk7UUFDUCxNQUFNLElBQUl4QixzREFBU0EsQ0FBQztJQUN4QjtBQUNKO0FBQ0EsaUVBQWVFLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvZmV0Y2hfandrcy5qcz9hZmVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpPU0VFcnJvciwgSldLU1RpbWVvdXQgfSBmcm9tICcuLi91dGlsL2Vycm9ycy5qcyc7XG5jb25zdCBmZXRjaEp3a3MgPSBhc3luYyAodXJsLCB0aW1lb3V0LCBvcHRpb25zKSA9PiB7XG4gICAgbGV0IGNvbnRyb2xsZXI7XG4gICAgbGV0IGlkO1xuICAgIGxldCB0aW1lZE91dCA9IGZhbHNlO1xuICAgIGlmICh0eXBlb2YgQWJvcnRDb250cm9sbGVyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGNvbnRyb2xsZXIgPSBuZXcgQWJvcnRDb250cm9sbGVyKCk7XG4gICAgICAgIGlkID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICB0aW1lZE91dCA9IHRydWU7XG4gICAgICAgICAgICBjb250cm9sbGVyLmFib3J0KCk7XG4gICAgICAgIH0sIHRpbWVvdXQpO1xuICAgIH1cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybC5ocmVmLCB7XG4gICAgICAgIHNpZ25hbDogY29udHJvbGxlciA/IGNvbnRyb2xsZXIuc2lnbmFsIDogdW5kZWZpbmVkLFxuICAgICAgICByZWRpcmVjdDogJ21hbnVhbCcsXG4gICAgICAgIGhlYWRlcnM6IG9wdGlvbnMuaGVhZGVycyxcbiAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGlmICh0aW1lZE91dClcbiAgICAgICAgICAgIHRocm93IG5ldyBKV0tTVGltZW91dCgpO1xuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfSk7XG4gICAgaWYgKGlkICE9PSB1bmRlZmluZWQpXG4gICAgICAgIGNsZWFyVGltZW91dChpZCk7XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB7XG4gICAgICAgIHRocm93IG5ldyBKT1NFRXJyb3IoJ0V4cGVjdGVkIDIwMCBPSyBmcm9tIHRoZSBKU09OIFdlYiBLZXkgU2V0IEhUVFAgcmVzcG9uc2UnKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICB9XG4gICAgY2F0Y2ggKF9hKSB7XG4gICAgICAgIHRocm93IG5ldyBKT1NFRXJyb3IoJ0ZhaWxlZCB0byBwYXJzZSB0aGUgSlNPTiBXZWIgS2V5IFNldCBIVFRQIHJlc3BvbnNlIGFzIEpTT04nKTtcbiAgICB9XG59O1xuZXhwb3J0IGRlZmF1bHQgZmV0Y2hKd2tzO1xuIl0sIm5hbWVzIjpbIkpPU0VFcnJvciIsIkpXS1NUaW1lb3V0IiwiZmV0Y2hKd2tzIiwidXJsIiwidGltZW91dCIsIm9wdGlvbnMiLCJjb250cm9sbGVyIiwiaWQiLCJ0aW1lZE91dCIsIkFib3J0Q29udHJvbGxlciIsInNldFRpbWVvdXQiLCJhYm9ydCIsInJlc3BvbnNlIiwiZmV0Y2giLCJocmVmIiwic2lnbmFsIiwidW5kZWZpbmVkIiwicmVkaXJlY3QiLCJoZWFkZXJzIiwiY2F0Y2giLCJlcnIiLCJjbGVhclRpbWVvdXQiLCJzdGF0dXMiLCJqc29uIiwiX2EiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/fetch_jwks.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/generate.js":
/*!************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/generate.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   generateSecret: () => (/* binding */ generateSecret)\n/* harmony export */ });\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./random.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/random.js\");\n\n\n\nasync function generateSecret(alg, options) {\n    var _a;\n    let length;\n    let algorithm;\n    let keyUsages;\n    switch(alg){\n        case \"HS256\":\n        case \"HS384\":\n        case \"HS512\":\n            length = parseInt(alg.slice(-3), 10);\n            algorithm = {\n                name: \"HMAC\",\n                hash: `SHA-${length}`,\n                length\n            };\n            keyUsages = [\n                \"sign\",\n                \"verify\"\n            ];\n            break;\n        case \"A128CBC-HS256\":\n        case \"A192CBC-HS384\":\n        case \"A256CBC-HS512\":\n            length = parseInt(alg.slice(-3), 10);\n            return (0,_random_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(new Uint8Array(length >> 3));\n        case \"A128KW\":\n        case \"A192KW\":\n        case \"A256KW\":\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = {\n                name: \"AES-KW\",\n                length\n            };\n            keyUsages = [\n                \"wrapKey\",\n                \"unwrapKey\"\n            ];\n            break;\n        case \"A128GCMKW\":\n        case \"A192GCMKW\":\n        case \"A256GCMKW\":\n        case \"A128GCM\":\n        case \"A192GCM\":\n        case \"A256GCM\":\n            length = parseInt(alg.slice(1, 4), 10);\n            algorithm = {\n                name: \"AES-GCM\",\n                length\n            };\n            keyUsages = [\n                \"encrypt\",\n                \"decrypt\"\n            ];\n            break;\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.generateKey(algorithm, (_a = options === null || options === void 0 ? void 0 : options.extractable) !== null && _a !== void 0 ? _a : false, keyUsages);\n}\nfunction getModulusLengthOption(options) {\n    var _a;\n    const modulusLength = (_a = options === null || options === void 0 ? void 0 : options.modulusLength) !== null && _a !== void 0 ? _a : 2048;\n    if (typeof modulusLength !== \"number\" || modulusLength < 2048) {\n        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported(\"Invalid or unsupported modulusLength option provided, 2048 bits or larger keys must be used\");\n    }\n    return modulusLength;\n}\nasync function generateKeyPair(alg, options) {\n    var _a, _b, _c;\n    let algorithm;\n    let keyUsages;\n    switch(alg){\n        case \"PS256\":\n        case \"PS384\":\n        case \"PS512\":\n            algorithm = {\n                name: \"RSA-PSS\",\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([\n                    0x01,\n                    0x00,\n                    0x01\n                ]),\n                modulusLength: getModulusLengthOption(options)\n            };\n            keyUsages = [\n                \"sign\",\n                \"verify\"\n            ];\n            break;\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n            algorithm = {\n                name: \"RSASSA-PKCS1-v1_5\",\n                hash: `SHA-${alg.slice(-3)}`,\n                publicExponent: new Uint8Array([\n                    0x01,\n                    0x00,\n                    0x01\n                ]),\n                modulusLength: getModulusLengthOption(options)\n            };\n            keyUsages = [\n                \"sign\",\n                \"verify\"\n            ];\n            break;\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            algorithm = {\n                name: \"RSA-OAEP\",\n                hash: `SHA-${parseInt(alg.slice(-3), 10) || 1}`,\n                publicExponent: new Uint8Array([\n                    0x01,\n                    0x00,\n                    0x01\n                ]),\n                modulusLength: getModulusLengthOption(options)\n            };\n            keyUsages = [\n                \"decrypt\",\n                \"unwrapKey\",\n                \"encrypt\",\n                \"wrapKey\"\n            ];\n            break;\n        case \"ES256\":\n            algorithm = {\n                name: \"ECDSA\",\n                namedCurve: \"P-256\"\n            };\n            keyUsages = [\n                \"sign\",\n                \"verify\"\n            ];\n            break;\n        case \"ES384\":\n            algorithm = {\n                name: \"ECDSA\",\n                namedCurve: \"P-384\"\n            };\n            keyUsages = [\n                \"sign\",\n                \"verify\"\n            ];\n            break;\n        case \"ES512\":\n            algorithm = {\n                name: \"ECDSA\",\n                namedCurve: \"P-521\"\n            };\n            keyUsages = [\n                \"sign\",\n                \"verify\"\n            ];\n            break;\n        case \"EdDSA\":\n            keyUsages = [\n                \"sign\",\n                \"verify\"\n            ];\n            const crv = (_a = options === null || options === void 0 ? void 0 : options.crv) !== null && _a !== void 0 ? _a : \"Ed25519\";\n            switch(crv){\n                case \"Ed25519\":\n                case \"Ed448\":\n                    algorithm = {\n                        name: crv\n                    };\n                    break;\n                default:\n                    throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported(\"Invalid or unsupported crv option provided\");\n            }\n            break;\n        case \"ECDH-ES\":\n        case \"ECDH-ES+A128KW\":\n        case \"ECDH-ES+A192KW\":\n        case \"ECDH-ES+A256KW\":\n            {\n                keyUsages = [\n                    \"deriveKey\",\n                    \"deriveBits\"\n                ];\n                const crv = (_b = options === null || options === void 0 ? void 0 : options.crv) !== null && _b !== void 0 ? _b : \"P-256\";\n                switch(crv){\n                    case \"P-256\":\n                    case \"P-384\":\n                    case \"P-521\":\n                        {\n                            algorithm = {\n                                name: \"ECDH\",\n                                namedCurve: crv\n                            };\n                            break;\n                        }\n                    case \"X25519\":\n                    case \"X448\":\n                        algorithm = {\n                            name: crv\n                        };\n                        break;\n                    default:\n                        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported(\"Invalid or unsupported crv option provided, supported values are P-256, P-384, P-521, X25519, and X448\");\n                }\n                break;\n            }\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n    }\n    return _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.generateKey(algorithm, (_c = options === null || options === void 0 ? void 0 : options.extractable) !== null && _c !== void 0 ? _c : false, keyUsages);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/generate.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/get_sign_verify_key.js":
/*!***********************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/get_sign_verify_key.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getCryptoKey)\n/* harmony export */ });\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/crypto_key.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/crypto_key.js\");\n/* harmony import */ var _lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\");\n/* harmony import */ var _is_key_like_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is_key_like.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\");\n\n\n\n\nfunction getCryptoKey(alg, key, usage) {\n    if ((0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_0__.isCryptoKey)(key)) {\n        (0,_lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_1__.checkSigCryptoKey)(key, alg, usage);\n        return key;\n    }\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith(\"HS\")) {\n            throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(key, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_3__.types));\n        }\n        return _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.importKey(\"raw\", key, {\n            hash: `SHA-${alg.slice(-3)}`,\n            name: \"HMAC\"\n        }, false, [\n            usage\n        ]);\n    }\n    throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(key, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_3__.types, \"Uint8Array\"));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvZ2V0X3NpZ25fdmVyaWZ5X2tleS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRDtBQUNJO0FBQ0M7QUFDakI7QUFDMUIsU0FBU0ssYUFBYUMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEtBQUs7SUFDaEQsSUFBSVAsMERBQVdBLENBQUNNLE1BQU07UUFDbEJMLHFFQUFpQkEsQ0FBQ0ssS0FBS0QsS0FBS0U7UUFDNUIsT0FBT0Q7SUFDWDtJQUNBLElBQUlBLGVBQWVFLFlBQVk7UUFDM0IsSUFBSSxDQUFDSCxJQUFJSSxVQUFVLENBQUMsT0FBTztZQUN2QixNQUFNLElBQUlDLFVBQVVSLHFFQUFlQSxDQUFDSSxRQUFRSCxrREFBS0E7UUFDckQ7UUFDQSxPQUFPSixxREFBTUEsQ0FBQ1ksTUFBTSxDQUFDQyxTQUFTLENBQUMsT0FBT04sS0FBSztZQUFFTyxNQUFNLENBQUMsSUFBSSxFQUFFUixJQUFJUyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUM7WUFBRUMsTUFBTTtRQUFPLEdBQUcsT0FBTztZQUFDUjtTQUFNO0lBQzdHO0lBQ0EsTUFBTSxJQUFJRyxVQUFVUixxRUFBZUEsQ0FBQ0ksUUFBUUgsa0RBQUtBLEVBQUU7QUFDdkQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvZ2V0X3NpZ25fdmVyaWZ5X2tleS5qcz9jZDUxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8sIHsgaXNDcnlwdG9LZXkgfSBmcm9tICcuL3dlYmNyeXB0by5qcyc7XG5pbXBvcnQgeyBjaGVja1NpZ0NyeXB0b0tleSB9IGZyb20gJy4uL2xpYi9jcnlwdG9fa2V5LmpzJztcbmltcG9ydCBpbnZhbGlkS2V5SW5wdXQgZnJvbSAnLi4vbGliL2ludmFsaWRfa2V5X2lucHV0LmpzJztcbmltcG9ydCB7IHR5cGVzIH0gZnJvbSAnLi9pc19rZXlfbGlrZS5qcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRDcnlwdG9LZXkoYWxnLCBrZXksIHVzYWdlKSB7XG4gICAgaWYgKGlzQ3J5cHRvS2V5KGtleSkpIHtcbiAgICAgICAgY2hlY2tTaWdDcnlwdG9LZXkoa2V5LCBhbGcsIHVzYWdlKTtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gICAgaWYgKGtleSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpIHtcbiAgICAgICAgaWYgKCFhbGcuc3RhcnRzV2l0aCgnSFMnKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihpbnZhbGlkS2V5SW5wdXQoa2V5LCAuLi50eXBlcykpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjcnlwdG8uc3VidGxlLmltcG9ydEtleSgncmF3Jywga2V5LCB7IGhhc2g6IGBTSEEtJHthbGcuc2xpY2UoLTMpfWAsIG5hbWU6ICdITUFDJyB9LCBmYWxzZSwgW3VzYWdlXSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoaW52YWxpZEtleUlucHV0KGtleSwgLi4udHlwZXMsICdVaW50OEFycmF5JykpO1xufVxuIl0sIm5hbWVzIjpbImNyeXB0byIsImlzQ3J5cHRvS2V5IiwiY2hlY2tTaWdDcnlwdG9LZXkiLCJpbnZhbGlkS2V5SW5wdXQiLCJ0eXBlcyIsImdldENyeXB0b0tleSIsImFsZyIsImtleSIsInVzYWdlIiwiVWludDhBcnJheSIsInN0YXJ0c1dpdGgiLCJUeXBlRXJyb3IiLCJzdWJ0bGUiLCJpbXBvcnRLZXkiLCJoYXNoIiwic2xpY2UiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/get_sign_verify_key.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js":
/*!***************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/is_key_like.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   types: () => (/* binding */ types)\n/* harmony export */ });\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((key)=>{\n    return (0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_0__.isCryptoKey)(key);\n});\nconst types = [\n    \"CryptoKey\"\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvaXNfa2V5X2xpa2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBQzdDLGlFQUFlLENBQUNDO0lBQ1osT0FBT0QsMERBQVdBLENBQUNDO0FBQ3ZCLEdBQUU7QUFDSyxNQUFNQyxRQUFRO0lBQUM7Q0FBWSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL2lzX2tleV9saWtlLmpzPzkyMjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNDcnlwdG9LZXkgfSBmcm9tICcuL3dlYmNyeXB0by5qcyc7XG5leHBvcnQgZGVmYXVsdCAoa2V5KSA9PiB7XG4gICAgcmV0dXJuIGlzQ3J5cHRvS2V5KGtleSk7XG59O1xuZXhwb3J0IGNvbnN0IHR5cGVzID0gWydDcnlwdG9LZXknXTtcbiJdLCJuYW1lcyI6WyJpc0NyeXB0b0tleSIsImtleSIsInR5cGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/jwk_to_key.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/jwk_to_key.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n/* harmony import */ var _base64url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n\n\n\nfunction subtleMapping(jwk) {\n    let algorithm;\n    let keyUsages;\n    switch(jwk.kty){\n        case \"oct\":\n            {\n                switch(jwk.alg){\n                    case \"HS256\":\n                    case \"HS384\":\n                    case \"HS512\":\n                        algorithm = {\n                            name: \"HMAC\",\n                            hash: `SHA-${jwk.alg.slice(-3)}`\n                        };\n                        keyUsages = [\n                            \"sign\",\n                            \"verify\"\n                        ];\n                        break;\n                    case \"A128CBC-HS256\":\n                    case \"A192CBC-HS384\":\n                    case \"A256CBC-HS512\":\n                        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported(`${jwk.alg} keys cannot be imported as CryptoKey instances`);\n                    case \"A128GCM\":\n                    case \"A192GCM\":\n                    case \"A256GCM\":\n                    case \"A128GCMKW\":\n                    case \"A192GCMKW\":\n                    case \"A256GCMKW\":\n                        algorithm = {\n                            name: \"AES-GCM\"\n                        };\n                        keyUsages = [\n                            \"encrypt\",\n                            \"decrypt\"\n                        ];\n                        break;\n                    case \"A128KW\":\n                    case \"A192KW\":\n                    case \"A256KW\":\n                        algorithm = {\n                            name: \"AES-KW\"\n                        };\n                        keyUsages = [\n                            \"wrapKey\",\n                            \"unwrapKey\"\n                        ];\n                        break;\n                    case \"PBES2-HS256+A128KW\":\n                    case \"PBES2-HS384+A192KW\":\n                    case \"PBES2-HS512+A256KW\":\n                        algorithm = {\n                            name: \"PBKDF2\"\n                        };\n                        keyUsages = [\n                            \"deriveBits\"\n                        ];\n                        break;\n                    default:\n                        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n                }\n                break;\n            }\n        case \"RSA\":\n            {\n                switch(jwk.alg){\n                    case \"PS256\":\n                    case \"PS384\":\n                    case \"PS512\":\n                        algorithm = {\n                            name: \"RSA-PSS\",\n                            hash: `SHA-${jwk.alg.slice(-3)}`\n                        };\n                        keyUsages = jwk.d ? [\n                            \"sign\"\n                        ] : [\n                            \"verify\"\n                        ];\n                        break;\n                    case \"RS256\":\n                    case \"RS384\":\n                    case \"RS512\":\n                        algorithm = {\n                            name: \"RSASSA-PKCS1-v1_5\",\n                            hash: `SHA-${jwk.alg.slice(-3)}`\n                        };\n                        keyUsages = jwk.d ? [\n                            \"sign\"\n                        ] : [\n                            \"verify\"\n                        ];\n                        break;\n                    case \"RSA-OAEP\":\n                    case \"RSA-OAEP-256\":\n                    case \"RSA-OAEP-384\":\n                    case \"RSA-OAEP-512\":\n                        algorithm = {\n                            name: \"RSA-OAEP\",\n                            hash: `SHA-${parseInt(jwk.alg.slice(-3), 10) || 1}`\n                        };\n                        keyUsages = jwk.d ? [\n                            \"decrypt\",\n                            \"unwrapKey\"\n                        ] : [\n                            \"encrypt\",\n                            \"wrapKey\"\n                        ];\n                        break;\n                    default:\n                        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n                }\n                break;\n            }\n        case \"EC\":\n            {\n                switch(jwk.alg){\n                    case \"ES256\":\n                        algorithm = {\n                            name: \"ECDSA\",\n                            namedCurve: \"P-256\"\n                        };\n                        keyUsages = jwk.d ? [\n                            \"sign\"\n                        ] : [\n                            \"verify\"\n                        ];\n                        break;\n                    case \"ES384\":\n                        algorithm = {\n                            name: \"ECDSA\",\n                            namedCurve: \"P-384\"\n                        };\n                        keyUsages = jwk.d ? [\n                            \"sign\"\n                        ] : [\n                            \"verify\"\n                        ];\n                        break;\n                    case \"ES512\":\n                        algorithm = {\n                            name: \"ECDSA\",\n                            namedCurve: \"P-521\"\n                        };\n                        keyUsages = jwk.d ? [\n                            \"sign\"\n                        ] : [\n                            \"verify\"\n                        ];\n                        break;\n                    case \"ECDH-ES\":\n                    case \"ECDH-ES+A128KW\":\n                    case \"ECDH-ES+A192KW\":\n                    case \"ECDH-ES+A256KW\":\n                        algorithm = {\n                            name: \"ECDH\",\n                            namedCurve: jwk.crv\n                        };\n                        keyUsages = jwk.d ? [\n                            \"deriveBits\"\n                        ] : [];\n                        break;\n                    default:\n                        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n                }\n                break;\n            }\n        case \"OKP\":\n            {\n                switch(jwk.alg){\n                    case \"EdDSA\":\n                        algorithm = {\n                            name: jwk.crv\n                        };\n                        keyUsages = jwk.d ? [\n                            \"sign\"\n                        ] : [\n                            \"verify\"\n                        ];\n                        break;\n                    case \"ECDH-ES\":\n                    case \"ECDH-ES+A128KW\":\n                    case \"ECDH-ES+A192KW\":\n                    case \"ECDH-ES+A256KW\":\n                        algorithm = {\n                            name: jwk.crv\n                        };\n                        keyUsages = jwk.d ? [\n                            \"deriveBits\"\n                        ] : [];\n                        break;\n                    default:\n                        throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported('Invalid or unsupported JWK \"alg\" (Algorithm) Parameter value');\n                }\n                break;\n            }\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_1__.JOSENotSupported('Invalid or unsupported JWK \"kty\" (Key Type) Parameter value');\n    }\n    return {\n        algorithm,\n        keyUsages\n    };\n}\nconst parse = async (jwk)=>{\n    var _a, _b;\n    if (!jwk.alg) {\n        throw new TypeError('\"alg\" argument is required when \"jwk.alg\" is not present');\n    }\n    const { algorithm, keyUsages } = subtleMapping(jwk);\n    const rest = [\n        algorithm,\n        (_a = jwk.ext) !== null && _a !== void 0 ? _a : false,\n        (_b = jwk.key_ops) !== null && _b !== void 0 ? _b : keyUsages\n    ];\n    if (algorithm.name === \"PBKDF2\") {\n        return _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.importKey(\"raw\", (0,_base64url_js__WEBPACK_IMPORTED_MODULE_2__.decode)(jwk.k), ...rest);\n    }\n    const keyData = {\n        ...jwk\n    };\n    delete keyData.alg;\n    delete keyData.use;\n    return _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.importKey(\"jwk\", keyData, ...rest);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/jwk_to_key.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/key_to_jwk.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/key_to_jwk.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\");\n/* harmony import */ var _base64url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _is_key_like_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./is_key_like.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\");\n\n\n\n\nconst keyToJWK = async (key)=>{\n    if (key instanceof Uint8Array) {\n        return {\n            kty: \"oct\",\n            k: (0,_base64url_js__WEBPACK_IMPORTED_MODULE_2__.encode)(key)\n        };\n    }\n    if (!(0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_0__.isCryptoKey)(key)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(key, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_3__.types, \"Uint8Array\"));\n    }\n    if (!key.extractable) {\n        throw new TypeError(\"non-extractable CryptoKey cannot be exported as a JWK\");\n    }\n    const { ext, key_ops, alg, use, ...jwk } = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].subtle.exportKey(\"jwk\", key);\n    return jwk;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (keyToJWK);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUva2V5X3RvX2p3ay5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRDtBQUNLO0FBQ0w7QUFDWjtBQUN6QyxNQUFNTSxXQUFXLE9BQU9DO0lBQ3BCLElBQUlBLGVBQWVDLFlBQVk7UUFDM0IsT0FBTztZQUNIQyxLQUFLO1lBQ0xDLEdBQUdOLHFEQUFTQSxDQUFDRztRQUNqQjtJQUNKO0lBQ0EsSUFBSSxDQUFDTiwwREFBV0EsQ0FBQ00sTUFBTTtRQUNuQixNQUFNLElBQUlJLFVBQVVULHFFQUFlQSxDQUFDSyxRQUFRRixrREFBS0EsRUFBRTtJQUN2RDtJQUNBLElBQUksQ0FBQ0UsSUFBSUssV0FBVyxFQUFFO1FBQ2xCLE1BQU0sSUFBSUQsVUFBVTtJQUN4QjtJQUNBLE1BQU0sRUFBRUUsR0FBRyxFQUFFQyxPQUFPLEVBQUVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFLEdBQUdDLEtBQUssR0FBRyxNQUFNakIscURBQU1BLENBQUNrQixNQUFNLENBQUNDLFNBQVMsQ0FBQyxPQUFPWjtJQUNoRixPQUFPVTtBQUNYO0FBQ0EsaUVBQWVYLFFBQVFBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUva2V5X3RvX2p3ay5qcz81NGJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8sIHsgaXNDcnlwdG9LZXkgfSBmcm9tICcuL3dlYmNyeXB0by5qcyc7XG5pbXBvcnQgaW52YWxpZEtleUlucHV0IGZyb20gJy4uL2xpYi9pbnZhbGlkX2tleV9pbnB1dC5qcyc7XG5pbXBvcnQgeyBlbmNvZGUgYXMgYmFzZTY0dXJsIH0gZnJvbSAnLi9iYXNlNjR1cmwuanMnO1xuaW1wb3J0IHsgdHlwZXMgfSBmcm9tICcuL2lzX2tleV9saWtlLmpzJztcbmNvbnN0IGtleVRvSldLID0gYXN5bmMgKGtleSkgPT4ge1xuICAgIGlmIChrZXkgaW5zdGFuY2VvZiBVaW50OEFycmF5KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBrdHk6ICdvY3QnLFxuICAgICAgICAgICAgazogYmFzZTY0dXJsKGtleSksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmICghaXNDcnlwdG9LZXkoa2V5KSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGludmFsaWRLZXlJbnB1dChrZXksIC4uLnR5cGVzLCAnVWludDhBcnJheScpKTtcbiAgICB9XG4gICAgaWYgKCFrZXkuZXh0cmFjdGFibGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignbm9uLWV4dHJhY3RhYmxlIENyeXB0b0tleSBjYW5ub3QgYmUgZXhwb3J0ZWQgYXMgYSBKV0snKTtcbiAgICB9XG4gICAgY29uc3QgeyBleHQsIGtleV9vcHMsIGFsZywgdXNlLCAuLi5qd2sgfSA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuZXhwb3J0S2V5KCdqd2snLCBrZXkpO1xuICAgIHJldHVybiBqd2s7XG59O1xuZXhwb3J0IGRlZmF1bHQga2V5VG9KV0s7XG4iXSwibmFtZXMiOlsiY3J5cHRvIiwiaXNDcnlwdG9LZXkiLCJpbnZhbGlkS2V5SW5wdXQiLCJlbmNvZGUiLCJiYXNlNjR1cmwiLCJ0eXBlcyIsImtleVRvSldLIiwia2V5IiwiVWludDhBcnJheSIsImt0eSIsImsiLCJUeXBlRXJyb3IiLCJleHRyYWN0YWJsZSIsImV4dCIsImtleV9vcHMiLCJhbGciLCJ1c2UiLCJqd2siLCJzdWJ0bGUiLCJleHBvcnRLZXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/key_to_jwk.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/pbes2kw.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/pbes2kw.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   encrypt: () => (/* binding */ encrypt)\n/* harmony export */ });\n/* harmony import */ var _random_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/random.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _base64url_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n/* harmony import */ var _aeskw_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aeskw.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/aeskw.js\");\n/* harmony import */ var _lib_check_p2s_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/check_p2s.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/check_p2s.js\");\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../lib/crypto_key.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/crypto_key.js\");\n/* harmony import */ var _lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\");\n/* harmony import */ var _is_key_like_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./is_key_like.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\");\n\n\n\n\n\n\n\n\n\nfunction getCryptoKey(key, alg) {\n    if (key instanceof Uint8Array) {\n        return _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].subtle.importKey(\"raw\", key, \"PBKDF2\", false, [\n            \"deriveBits\"\n        ]);\n    }\n    if ((0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_5__.isCryptoKey)(key)) {\n        (0,_lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_6__.checkEncCryptoKey)(key, alg, \"deriveBits\", \"deriveKey\");\n        return key;\n    }\n    throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(key, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_8__.types, \"Uint8Array\"));\n}\nasync function deriveKey(p2s, alg, p2c, key) {\n    (0,_lib_check_p2s_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(p2s);\n    const salt = (0,_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__.p2s)(alg, p2s);\n    const keylen = parseInt(alg.slice(13, 16), 10);\n    const subtleAlg = {\n        hash: `SHA-${alg.slice(8, 11)}`,\n        iterations: p2c,\n        name: \"PBKDF2\",\n        salt\n    };\n    const wrapAlg = {\n        length: keylen,\n        name: \"AES-KW\"\n    };\n    const cryptoKey = await getCryptoKey(key, alg);\n    if (cryptoKey.usages.includes(\"deriveBits\")) {\n        return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].subtle.deriveBits(subtleAlg, cryptoKey, keylen));\n    }\n    if (cryptoKey.usages.includes(\"deriveKey\")) {\n        return _webcrypto_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"].subtle.deriveKey(subtleAlg, cryptoKey, wrapAlg, false, [\n            \"wrapKey\",\n            \"unwrapKey\"\n        ]);\n    }\n    throw new TypeError('PBKDF2 key \"usages\" must include \"deriveBits\" or \"deriveKey\"');\n}\nconst encrypt = async (alg, key, cek, p2c = 2048, p2s = (0,_random_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(new Uint8Array(16)))=>{\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    const encryptedKey = await (0,_aeskw_js__WEBPACK_IMPORTED_MODULE_3__.wrap)(alg.slice(-6), derived, cek);\n    return {\n        encryptedKey,\n        p2c,\n        p2s: (0,_base64url_js__WEBPACK_IMPORTED_MODULE_2__.encode)(p2s)\n    };\n};\nconst decrypt = async (alg, key, encryptedKey, p2c, p2s)=>{\n    const derived = await deriveKey(p2s, alg, p2c, key);\n    return (0,_aeskw_js__WEBPACK_IMPORTED_MODULE_3__.unwrap)(alg.slice(-6), derived, encryptedKey);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvcGJlczJrdy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFpQztBQUMwQjtBQUNOO0FBQ1g7QUFDQztBQUNVO0FBQ0k7QUFDQztBQUNqQjtBQUN6QyxTQUFTYSxhQUFhQyxHQUFHLEVBQUVDLEdBQUc7SUFDMUIsSUFBSUQsZUFBZUUsWUFBWTtRQUMzQixPQUFPUixxREFBTUEsQ0FBQ1MsTUFBTSxDQUFDQyxTQUFTLENBQUMsT0FBT0osS0FBSyxVQUFVLE9BQU87WUFBQztTQUFhO0lBQzlFO0lBQ0EsSUFBSUwsMERBQVdBLENBQUNLLE1BQU07UUFDbEJKLHFFQUFpQkEsQ0FBQ0ksS0FBS0MsS0FBSyxjQUFjO1FBQzFDLE9BQU9EO0lBQ1g7SUFDQSxNQUFNLElBQUlLLFVBQVVSLHFFQUFlQSxDQUFDRyxRQUFRRixrREFBS0EsRUFBRTtBQUN2RDtBQUNBLGVBQWVRLFVBQVVuQixHQUFHLEVBQUVjLEdBQUcsRUFBRU0sR0FBRyxFQUFFUCxHQUFHO0lBQ3ZDUCw2REFBUUEsQ0FBQ047SUFDVCxNQUFNcUIsT0FBT3BCLHlEQUFVQSxDQUFDYSxLQUFLZDtJQUM3QixNQUFNc0IsU0FBU0MsU0FBU1QsSUFBSVUsS0FBSyxDQUFDLElBQUksS0FBSztJQUMzQyxNQUFNQyxZQUFZO1FBQ2RDLE1BQU0sQ0FBQyxJQUFJLEVBQUVaLElBQUlVLEtBQUssQ0FBQyxHQUFHLElBQUksQ0FBQztRQUMvQkcsWUFBWVA7UUFDWlEsTUFBTTtRQUNOUDtJQUNKO0lBQ0EsTUFBTVEsVUFBVTtRQUNaQyxRQUFRUjtRQUNSTSxNQUFNO0lBQ1Y7SUFDQSxNQUFNRyxZQUFZLE1BQU1uQixhQUFhQyxLQUFLQztJQUMxQyxJQUFJaUIsVUFBVUMsTUFBTSxDQUFDQyxRQUFRLENBQUMsZUFBZTtRQUN6QyxPQUFPLElBQUlsQixXQUFXLE1BQU1SLHFEQUFNQSxDQUFDUyxNQUFNLENBQUNrQixVQUFVLENBQUNULFdBQVdNLFdBQVdUO0lBQy9FO0lBQ0EsSUFBSVMsVUFBVUMsTUFBTSxDQUFDQyxRQUFRLENBQUMsY0FBYztRQUN4QyxPQUFPMUIscURBQU1BLENBQUNTLE1BQU0sQ0FBQ0csU0FBUyxDQUFDTSxXQUFXTSxXQUFXRixTQUFTLE9BQU87WUFBQztZQUFXO1NBQVk7SUFDakc7SUFDQSxNQUFNLElBQUlYLFVBQVU7QUFDeEI7QUFDTyxNQUFNaUIsVUFBVSxPQUFPckIsS0FBS0QsS0FBS3VCLEtBQUtoQixNQUFNLElBQUksRUFBRXBCLE1BQU1ELHNEQUFNQSxDQUFDLElBQUlnQixXQUFXLElBQUk7SUFDckYsTUFBTXNCLFVBQVUsTUFBTWxCLFVBQVVuQixLQUFLYyxLQUFLTSxLQUFLUDtJQUMvQyxNQUFNeUIsZUFBZSxNQUFNbEMsK0NBQUlBLENBQUNVLElBQUlVLEtBQUssQ0FBQyxDQUFDLElBQUlhLFNBQVNEO0lBQ3hELE9BQU87UUFBRUU7UUFBY2xCO1FBQUtwQixLQUFLRyxxREFBU0EsQ0FBQ0g7SUFBSztBQUNwRCxFQUFFO0FBQ0ssTUFBTXVDLFVBQVUsT0FBT3pCLEtBQUtELEtBQUt5QixjQUFjbEIsS0FBS3BCO0lBQ3ZELE1BQU1xQyxVQUFVLE1BQU1sQixVQUFVbkIsS0FBS2MsS0FBS00sS0FBS1A7SUFDL0MsT0FBT1IsaURBQU1BLENBQUNTLElBQUlVLEtBQUssQ0FBQyxDQUFDLElBQUlhLFNBQVNDO0FBQzFDLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvcGJlczJrdy5qcz80YmU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCByYW5kb20gZnJvbSAnLi9yYW5kb20uanMnO1xuaW1wb3J0IHsgcDJzIGFzIGNvbmNhdFNhbHQgfSBmcm9tICcuLi9saWIvYnVmZmVyX3V0aWxzLmpzJztcbmltcG9ydCB7IGVuY29kZSBhcyBiYXNlNjR1cmwgfSBmcm9tICcuL2Jhc2U2NHVybC5qcyc7XG5pbXBvcnQgeyB3cmFwLCB1bndyYXAgfSBmcm9tICcuL2Flc2t3LmpzJztcbmltcG9ydCBjaGVja1AycyBmcm9tICcuLi9saWIvY2hlY2tfcDJzLmpzJztcbmltcG9ydCBjcnlwdG8sIHsgaXNDcnlwdG9LZXkgfSBmcm9tICcuL3dlYmNyeXB0by5qcyc7XG5pbXBvcnQgeyBjaGVja0VuY0NyeXB0b0tleSB9IGZyb20gJy4uL2xpYi9jcnlwdG9fa2V5LmpzJztcbmltcG9ydCBpbnZhbGlkS2V5SW5wdXQgZnJvbSAnLi4vbGliL2ludmFsaWRfa2V5X2lucHV0LmpzJztcbmltcG9ydCB7IHR5cGVzIH0gZnJvbSAnLi9pc19rZXlfbGlrZS5qcyc7XG5mdW5jdGlvbiBnZXRDcnlwdG9LZXkoa2V5LCBhbGcpIHtcbiAgICBpZiAoa2V5IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICByZXR1cm4gY3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkoJ3JhdycsIGtleSwgJ1BCS0RGMicsIGZhbHNlLCBbJ2Rlcml2ZUJpdHMnXSk7XG4gICAgfVxuICAgIGlmIChpc0NyeXB0b0tleShrZXkpKSB7XG4gICAgICAgIGNoZWNrRW5jQ3J5cHRvS2V5KGtleSwgYWxnLCAnZGVyaXZlQml0cycsICdkZXJpdmVLZXknKTtcbiAgICAgICAgcmV0dXJuIGtleTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihpbnZhbGlkS2V5SW5wdXQoa2V5LCAuLi50eXBlcywgJ1VpbnQ4QXJyYXknKSk7XG59XG5hc3luYyBmdW5jdGlvbiBkZXJpdmVLZXkocDJzLCBhbGcsIHAyYywga2V5KSB7XG4gICAgY2hlY2tQMnMocDJzKTtcbiAgICBjb25zdCBzYWx0ID0gY29uY2F0U2FsdChhbGcsIHAycyk7XG4gICAgY29uc3Qga2V5bGVuID0gcGFyc2VJbnQoYWxnLnNsaWNlKDEzLCAxNiksIDEwKTtcbiAgICBjb25zdCBzdWJ0bGVBbGcgPSB7XG4gICAgICAgIGhhc2g6IGBTSEEtJHthbGcuc2xpY2UoOCwgMTEpfWAsXG4gICAgICAgIGl0ZXJhdGlvbnM6IHAyYyxcbiAgICAgICAgbmFtZTogJ1BCS0RGMicsXG4gICAgICAgIHNhbHQsXG4gICAgfTtcbiAgICBjb25zdCB3cmFwQWxnID0ge1xuICAgICAgICBsZW5ndGg6IGtleWxlbixcbiAgICAgICAgbmFtZTogJ0FFUy1LVycsXG4gICAgfTtcbiAgICBjb25zdCBjcnlwdG9LZXkgPSBhd2FpdCBnZXRDcnlwdG9LZXkoa2V5LCBhbGcpO1xuICAgIGlmIChjcnlwdG9LZXkudXNhZ2VzLmluY2x1ZGVzKCdkZXJpdmVCaXRzJykpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGF3YWl0IGNyeXB0by5zdWJ0bGUuZGVyaXZlQml0cyhzdWJ0bGVBbGcsIGNyeXB0b0tleSwga2V5bGVuKSk7XG4gICAgfVxuICAgIGlmIChjcnlwdG9LZXkudXNhZ2VzLmluY2x1ZGVzKCdkZXJpdmVLZXknKSkge1xuICAgICAgICByZXR1cm4gY3J5cHRvLnN1YnRsZS5kZXJpdmVLZXkoc3VidGxlQWxnLCBjcnlwdG9LZXksIHdyYXBBbGcsIGZhbHNlLCBbJ3dyYXBLZXknLCAndW53cmFwS2V5J10pO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdQQktERjIga2V5IFwidXNhZ2VzXCIgbXVzdCBpbmNsdWRlIFwiZGVyaXZlQml0c1wiIG9yIFwiZGVyaXZlS2V5XCInKTtcbn1cbmV4cG9ydCBjb25zdCBlbmNyeXB0ID0gYXN5bmMgKGFsZywga2V5LCBjZWssIHAyYyA9IDIwNDgsIHAycyA9IHJhbmRvbShuZXcgVWludDhBcnJheSgxNikpKSA9PiB7XG4gICAgY29uc3QgZGVyaXZlZCA9IGF3YWl0IGRlcml2ZUtleShwMnMsIGFsZywgcDJjLCBrZXkpO1xuICAgIGNvbnN0IGVuY3J5cHRlZEtleSA9IGF3YWl0IHdyYXAoYWxnLnNsaWNlKC02KSwgZGVyaXZlZCwgY2VrKTtcbiAgICByZXR1cm4geyBlbmNyeXB0ZWRLZXksIHAyYywgcDJzOiBiYXNlNjR1cmwocDJzKSB9O1xufTtcbmV4cG9ydCBjb25zdCBkZWNyeXB0ID0gYXN5bmMgKGFsZywga2V5LCBlbmNyeXB0ZWRLZXksIHAyYywgcDJzKSA9PiB7XG4gICAgY29uc3QgZGVyaXZlZCA9IGF3YWl0IGRlcml2ZUtleShwMnMsIGFsZywgcDJjLCBrZXkpO1xuICAgIHJldHVybiB1bndyYXAoYWxnLnNsaWNlKC02KSwgZGVyaXZlZCwgZW5jcnlwdGVkS2V5KTtcbn07XG4iXSwibmFtZXMiOlsicmFuZG9tIiwicDJzIiwiY29uY2F0U2FsdCIsImVuY29kZSIsImJhc2U2NHVybCIsIndyYXAiLCJ1bndyYXAiLCJjaGVja1AycyIsImNyeXB0byIsImlzQ3J5cHRvS2V5IiwiY2hlY2tFbmNDcnlwdG9LZXkiLCJpbnZhbGlkS2V5SW5wdXQiLCJ0eXBlcyIsImdldENyeXB0b0tleSIsImtleSIsImFsZyIsIlVpbnQ4QXJyYXkiLCJzdWJ0bGUiLCJpbXBvcnRLZXkiLCJUeXBlRXJyb3IiLCJkZXJpdmVLZXkiLCJwMmMiLCJzYWx0Iiwia2V5bGVuIiwicGFyc2VJbnQiLCJzbGljZSIsInN1YnRsZUFsZyIsImhhc2giLCJpdGVyYXRpb25zIiwibmFtZSIsIndyYXBBbGciLCJsZW5ndGgiLCJjcnlwdG9LZXkiLCJ1c2FnZXMiLCJpbmNsdWRlcyIsImRlcml2ZUJpdHMiLCJlbmNyeXB0IiwiY2VrIiwiZGVyaXZlZCIsImVuY3J5cHRlZEtleSIsImRlY3J5cHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/pbes2kw.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/random.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/random.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRandomValues.bind(_webcrypto_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvcmFuZG9tLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQ3BDLGlFQUFlQSxxREFBTUEsQ0FBQ0MsZUFBZSxDQUFDQyxJQUFJLENBQUNGLHFEQUFNQSxDQUFDQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL3JhbmRvbS5qcz9lZjE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnLi93ZWJjcnlwdG8uanMnO1xuZXhwb3J0IGRlZmF1bHQgY3J5cHRvLmdldFJhbmRvbVZhbHVlcy5iaW5kKGNyeXB0byk7XG4iXSwibmFtZXMiOlsiY3J5cHRvIiwiZ2V0UmFuZG9tVmFsdWVzIiwiYmluZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/random.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/rsaes.js":
/*!*********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/rsaes.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decrypt: () => (/* binding */ decrypt),\n/* harmony export */   encrypt: () => (/* binding */ encrypt)\n/* harmony export */ });\n/* harmony import */ var _subtle_rsaes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subtle_rsaes.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/subtle_rsaes.js\");\n/* harmony import */ var _bogus_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bogus.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/bogus.js\");\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/crypto_key.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/crypto_key.js\");\n/* harmony import */ var _check_key_length_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./check_key_length.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/check_key_length.js\");\n/* harmony import */ var _lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../lib/invalid_key_input.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/invalid_key_input.js\");\n/* harmony import */ var _is_key_like_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./is_key_like.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/is_key_like.js\");\n\n\n\n\n\n\n\nconst encrypt = async (alg, key, cek)=>{\n    if (!(0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_2__.isCryptoKey)(key)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(key, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_6__.types));\n    }\n    (0,_lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_3__.checkEncCryptoKey)(key, alg, \"encrypt\", \"wrapKey\");\n    (0,_check_key_length_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(alg, key);\n    if (key.usages.includes(\"encrypt\")) {\n        return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].subtle.encrypt((0,_subtle_rsaes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(alg), key, cek));\n    }\n    if (key.usages.includes(\"wrapKey\")) {\n        const cryptoKeyCek = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].subtle.importKey(\"raw\", cek, ..._bogus_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n        return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].subtle.wrapKey(\"raw\", cryptoKeyCek, key, (0,_subtle_rsaes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(alg)));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"encrypt\" or \"wrapKey\" for this operation');\n};\nconst decrypt = async (alg, key, encryptedKey)=>{\n    if (!(0,_webcrypto_js__WEBPACK_IMPORTED_MODULE_2__.isCryptoKey)(key)) {\n        throw new TypeError((0,_lib_invalid_key_input_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(key, ..._is_key_like_js__WEBPACK_IMPORTED_MODULE_6__.types));\n    }\n    (0,_lib_crypto_key_js__WEBPACK_IMPORTED_MODULE_3__.checkEncCryptoKey)(key, alg, \"decrypt\", \"unwrapKey\");\n    (0,_check_key_length_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(alg, key);\n    if (key.usages.includes(\"decrypt\")) {\n        return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].subtle.decrypt((0,_subtle_rsaes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(alg), key, encryptedKey));\n    }\n    if (key.usages.includes(\"unwrapKey\")) {\n        const cryptoKeyCek = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].subtle.unwrapKey(\"raw\", encryptedKey, key, (0,_subtle_rsaes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(alg), ..._bogus_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n        return new Uint8Array(await _webcrypto_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].subtle.exportKey(\"raw\", cryptoKeyCek));\n    }\n    throw new TypeError('RSA-OAEP key \"usages\" must include \"decrypt\" or \"unwrapKey\" for this operation');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvcnNhZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQ1I7QUFDYTtBQUNJO0FBQ047QUFDTztBQUNqQjtBQUNsQyxNQUFNUSxVQUFVLE9BQU9DLEtBQUtDLEtBQUtDO0lBQ3BDLElBQUksQ0FBQ1IsMERBQVdBLENBQUNPLE1BQU07UUFDbkIsTUFBTSxJQUFJRSxVQUFVTixxRUFBZUEsQ0FBQ0ksUUFBUUgsa0RBQUtBO0lBQ3JEO0lBQ0FILHFFQUFpQkEsQ0FBQ00sS0FBS0QsS0FBSyxXQUFXO0lBQ3ZDSixnRUFBY0EsQ0FBQ0ksS0FBS0M7SUFDcEIsSUFBSUEsSUFBSUcsTUFBTSxDQUFDQyxRQUFRLENBQUMsWUFBWTtRQUNoQyxPQUFPLElBQUlDLFdBQVcsTUFBTWIscURBQU1BLENBQUNjLE1BQU0sQ0FBQ1IsT0FBTyxDQUFDUiw0REFBZUEsQ0FBQ1MsTUFBTUMsS0FBS0M7SUFDakY7SUFDQSxJQUFJRCxJQUFJRyxNQUFNLENBQUNDLFFBQVEsQ0FBQyxZQUFZO1FBQ2hDLE1BQU1HLGVBQWUsTUFBTWYscURBQU1BLENBQUNjLE1BQU0sQ0FBQ0UsU0FBUyxDQUFDLE9BQU9QLFFBQVFWLGlEQUFjQTtRQUNoRixPQUFPLElBQUljLFdBQVcsTUFBTWIscURBQU1BLENBQUNjLE1BQU0sQ0FBQ0csT0FBTyxDQUFDLE9BQU9GLGNBQWNQLEtBQUtWLDREQUFlQSxDQUFDUztJQUNoRztJQUNBLE1BQU0sSUFBSUcsVUFBVTtBQUN4QixFQUFFO0FBQ0ssTUFBTVEsVUFBVSxPQUFPWCxLQUFLQyxLQUFLVztJQUNwQyxJQUFJLENBQUNsQiwwREFBV0EsQ0FBQ08sTUFBTTtRQUNuQixNQUFNLElBQUlFLFVBQVVOLHFFQUFlQSxDQUFDSSxRQUFRSCxrREFBS0E7SUFDckQ7SUFDQUgscUVBQWlCQSxDQUFDTSxLQUFLRCxLQUFLLFdBQVc7SUFDdkNKLGdFQUFjQSxDQUFDSSxLQUFLQztJQUNwQixJQUFJQSxJQUFJRyxNQUFNLENBQUNDLFFBQVEsQ0FBQyxZQUFZO1FBQ2hDLE9BQU8sSUFBSUMsV0FBVyxNQUFNYixxREFBTUEsQ0FBQ2MsTUFBTSxDQUFDSSxPQUFPLENBQUNwQiw0REFBZUEsQ0FBQ1MsTUFBTUMsS0FBS1c7SUFDakY7SUFDQSxJQUFJWCxJQUFJRyxNQUFNLENBQUNDLFFBQVEsQ0FBQyxjQUFjO1FBQ2xDLE1BQU1HLGVBQWUsTUFBTWYscURBQU1BLENBQUNjLE1BQU0sQ0FBQ00sU0FBUyxDQUFDLE9BQU9ELGNBQWNYLEtBQUtWLDREQUFlQSxDQUFDUyxTQUFTUixpREFBY0E7UUFDcEgsT0FBTyxJQUFJYyxXQUFXLE1BQU1iLHFEQUFNQSxDQUFDYyxNQUFNLENBQUNPLFNBQVMsQ0FBQyxPQUFPTjtJQUMvRDtJQUNBLE1BQU0sSUFBSUwsVUFBVTtBQUN4QixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL3JzYWVzLmpzP2MwNzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN1YnRsZUFsZ29yaXRobSBmcm9tICcuL3N1YnRsZV9yc2Flcy5qcyc7XG5pbXBvcnQgYm9ndXNXZWJDcnlwdG8gZnJvbSAnLi9ib2d1cy5qcyc7XG5pbXBvcnQgY3J5cHRvLCB7IGlzQ3J5cHRvS2V5IH0gZnJvbSAnLi93ZWJjcnlwdG8uanMnO1xuaW1wb3J0IHsgY2hlY2tFbmNDcnlwdG9LZXkgfSBmcm9tICcuLi9saWIvY3J5cHRvX2tleS5qcyc7XG5pbXBvcnQgY2hlY2tLZXlMZW5ndGggZnJvbSAnLi9jaGVja19rZXlfbGVuZ3RoLmpzJztcbmltcG9ydCBpbnZhbGlkS2V5SW5wdXQgZnJvbSAnLi4vbGliL2ludmFsaWRfa2V5X2lucHV0LmpzJztcbmltcG9ydCB7IHR5cGVzIH0gZnJvbSAnLi9pc19rZXlfbGlrZS5qcyc7XG5leHBvcnQgY29uc3QgZW5jcnlwdCA9IGFzeW5jIChhbGcsIGtleSwgY2VrKSA9PiB7XG4gICAgaWYgKCFpc0NyeXB0b0tleShrZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoaW52YWxpZEtleUlucHV0KGtleSwgLi4udHlwZXMpKTtcbiAgICB9XG4gICAgY2hlY2tFbmNDcnlwdG9LZXkoa2V5LCBhbGcsICdlbmNyeXB0JywgJ3dyYXBLZXknKTtcbiAgICBjaGVja0tleUxlbmd0aChhbGcsIGtleSk7XG4gICAgaWYgKGtleS51c2FnZXMuaW5jbHVkZXMoJ2VuY3J5cHQnKSkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoYXdhaXQgY3J5cHRvLnN1YnRsZS5lbmNyeXB0KHN1YnRsZUFsZ29yaXRobShhbGcpLCBrZXksIGNlaykpO1xuICAgIH1cbiAgICBpZiAoa2V5LnVzYWdlcy5pbmNsdWRlcygnd3JhcEtleScpKSB7XG4gICAgICAgIGNvbnN0IGNyeXB0b0tleUNlayA9IGF3YWl0IGNyeXB0by5zdWJ0bGUuaW1wb3J0S2V5KCdyYXcnLCBjZWssIC4uLmJvZ3VzV2ViQ3J5cHRvKTtcbiAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGF3YWl0IGNyeXB0by5zdWJ0bGUud3JhcEtleSgncmF3JywgY3J5cHRvS2V5Q2VrLCBrZXksIHN1YnRsZUFsZ29yaXRobShhbGcpKSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1JTQS1PQUVQIGtleSBcInVzYWdlc1wiIG11c3QgaW5jbHVkZSBcImVuY3J5cHRcIiBvciBcIndyYXBLZXlcIiBmb3IgdGhpcyBvcGVyYXRpb24nKTtcbn07XG5leHBvcnQgY29uc3QgZGVjcnlwdCA9IGFzeW5jIChhbGcsIGtleSwgZW5jcnlwdGVkS2V5KSA9PiB7XG4gICAgaWYgKCFpc0NyeXB0b0tleShrZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoaW52YWxpZEtleUlucHV0KGtleSwgLi4udHlwZXMpKTtcbiAgICB9XG4gICAgY2hlY2tFbmNDcnlwdG9LZXkoa2V5LCBhbGcsICdkZWNyeXB0JywgJ3Vud3JhcEtleScpO1xuICAgIGNoZWNrS2V5TGVuZ3RoKGFsZywga2V5KTtcbiAgICBpZiAoa2V5LnVzYWdlcy5pbmNsdWRlcygnZGVjcnlwdCcpKSB7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShhd2FpdCBjcnlwdG8uc3VidGxlLmRlY3J5cHQoc3VidGxlQWxnb3JpdGhtKGFsZyksIGtleSwgZW5jcnlwdGVkS2V5KSk7XG4gICAgfVxuICAgIGlmIChrZXkudXNhZ2VzLmluY2x1ZGVzKCd1bndyYXBLZXknKSkge1xuICAgICAgICBjb25zdCBjcnlwdG9LZXlDZWsgPSBhd2FpdCBjcnlwdG8uc3VidGxlLnVud3JhcEtleSgncmF3JywgZW5jcnlwdGVkS2V5LCBrZXksIHN1YnRsZUFsZ29yaXRobShhbGcpLCAuLi5ib2d1c1dlYkNyeXB0byk7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShhd2FpdCBjcnlwdG8uc3VidGxlLmV4cG9ydEtleSgncmF3JywgY3J5cHRvS2V5Q2VrKSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1JTQS1PQUVQIGtleSBcInVzYWdlc1wiIG11c3QgaW5jbHVkZSBcImRlY3J5cHRcIiBvciBcInVud3JhcEtleVwiIGZvciB0aGlzIG9wZXJhdGlvbicpO1xufTtcbiJdLCJuYW1lcyI6WyJzdWJ0bGVBbGdvcml0aG0iLCJib2d1c1dlYkNyeXB0byIsImNyeXB0byIsImlzQ3J5cHRvS2V5IiwiY2hlY2tFbmNDcnlwdG9LZXkiLCJjaGVja0tleUxlbmd0aCIsImludmFsaWRLZXlJbnB1dCIsInR5cGVzIiwiZW5jcnlwdCIsImFsZyIsImtleSIsImNlayIsIlR5cGVFcnJvciIsInVzYWdlcyIsImluY2x1ZGVzIiwiVWludDhBcnJheSIsInN1YnRsZSIsImNyeXB0b0tleUNlayIsImltcG9ydEtleSIsIndyYXBLZXkiLCJkZWNyeXB0IiwiZW5jcnlwdGVkS2V5IiwidW53cmFwS2V5IiwiZXhwb3J0S2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/rsaes.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/runtime.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/runtime.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"WebCryptoAPI\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUsZ0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvcnVudGltZS5qcz9mZWQwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0ICdXZWJDcnlwdG9BUEknO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/sign.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/sign.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _subtle_dsa_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subtle_dsa.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/subtle_dsa.js\");\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _check_key_length_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./check_key_length.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/check_key_length.js\");\n/* harmony import */ var _get_sign_verify_key_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./get_sign_verify_key.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/get_sign_verify_key.js\");\n\n\n\n\nconst sign = async (alg, key, data)=>{\n    const cryptoKey = await (0,_get_sign_verify_key_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(alg, key, \"sign\");\n    (0,_check_key_length_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(alg, cryptoKey);\n    const signature = await _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtle.sign((0,_subtle_dsa_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(alg, cryptoKey.algorithm), cryptoKey, data);\n    return new Uint8Array(signature);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sign);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvc2lnbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE4QztBQUNWO0FBQ2U7QUFDRDtBQUNsRCxNQUFNSSxPQUFPLE9BQU9DLEtBQUtDLEtBQUtDO0lBQzFCLE1BQU1DLFlBQVksTUFBTUwsbUVBQVVBLENBQUNFLEtBQUtDLEtBQUs7SUFDN0NKLGdFQUFjQSxDQUFDRyxLQUFLRztJQUNwQixNQUFNQyxZQUFZLE1BQU1SLHFEQUFNQSxDQUFDUyxNQUFNLENBQUNOLElBQUksQ0FBQ0osMERBQWVBLENBQUNLLEtBQUtHLFVBQVVHLFNBQVMsR0FBR0gsV0FBV0Q7SUFDakcsT0FBTyxJQUFJSyxXQUFXSDtBQUMxQjtBQUNBLGlFQUFlTCxJQUFJQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL3NpZ24uanM/YTExZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3VidGxlQWxnb3JpdGhtIGZyb20gJy4vc3VidGxlX2RzYS5qcyc7XG5pbXBvcnQgY3J5cHRvIGZyb20gJy4vd2ViY3J5cHRvLmpzJztcbmltcG9ydCBjaGVja0tleUxlbmd0aCBmcm9tICcuL2NoZWNrX2tleV9sZW5ndGguanMnO1xuaW1wb3J0IGdldFNpZ25LZXkgZnJvbSAnLi9nZXRfc2lnbl92ZXJpZnlfa2V5LmpzJztcbmNvbnN0IHNpZ24gPSBhc3luYyAoYWxnLCBrZXksIGRhdGEpID0+IHtcbiAgICBjb25zdCBjcnlwdG9LZXkgPSBhd2FpdCBnZXRTaWduS2V5KGFsZywga2V5LCAnc2lnbicpO1xuICAgIGNoZWNrS2V5TGVuZ3RoKGFsZywgY3J5cHRvS2V5KTtcbiAgICBjb25zdCBzaWduYXR1cmUgPSBhd2FpdCBjcnlwdG8uc3VidGxlLnNpZ24oc3VidGxlQWxnb3JpdGhtKGFsZywgY3J5cHRvS2V5LmFsZ29yaXRobSksIGNyeXB0b0tleSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KHNpZ25hdHVyZSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgc2lnbjtcbiJdLCJuYW1lcyI6WyJzdWJ0bGVBbGdvcml0aG0iLCJjcnlwdG8iLCJjaGVja0tleUxlbmd0aCIsImdldFNpZ25LZXkiLCJzaWduIiwiYWxnIiwia2V5IiwiZGF0YSIsImNyeXB0b0tleSIsInNpZ25hdHVyZSIsInN1YnRsZSIsImFsZ29yaXRobSIsIlVpbnQ4QXJyYXkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/sign.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/subtle_dsa.js":
/*!**************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/subtle_dsa.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ subtleDsa)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\nfunction subtleDsa(alg, algorithm) {\n    const hash = `SHA-${alg.slice(-3)}`;\n    switch(alg){\n        case \"HS256\":\n        case \"HS384\":\n        case \"HS512\":\n            return {\n                hash,\n                name: \"HMAC\"\n            };\n        case \"PS256\":\n        case \"PS384\":\n        case \"PS512\":\n            return {\n                hash,\n                name: \"RSA-PSS\",\n                saltLength: alg.slice(-3) >> 3\n            };\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n            return {\n                hash,\n                name: \"RSASSA-PKCS1-v1_5\"\n            };\n        case \"ES256\":\n        case \"ES384\":\n        case \"ES512\":\n            return {\n                hash,\n                name: \"ECDSA\",\n                namedCurve: algorithm.namedCurve\n            };\n        case \"EdDSA\":\n            return {\n                name: algorithm.name\n            };\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvc3VidGxlX2RzYS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUN0QyxTQUFTQyxVQUFVQyxHQUFHLEVBQUVDLFNBQVM7SUFDNUMsTUFBTUMsT0FBTyxDQUFDLElBQUksRUFBRUYsSUFBSUcsS0FBSyxDQUFDLENBQUMsR0FBRyxDQUFDO0lBQ25DLE9BQVFIO1FBQ0osS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBTztnQkFBRUU7Z0JBQU1FLE1BQU07WUFBTztRQUNoQyxLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7WUFDRCxPQUFPO2dCQUFFRjtnQkFBTUUsTUFBTTtnQkFBV0MsWUFBWUwsSUFBSUcsS0FBSyxDQUFDLENBQUMsTUFBTTtZQUFFO1FBQ25FLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU87Z0JBQUVEO2dCQUFNRSxNQUFNO1lBQW9CO1FBQzdDLEtBQUs7UUFDTCxLQUFLO1FBQ0wsS0FBSztZQUNELE9BQU87Z0JBQUVGO2dCQUFNRSxNQUFNO2dCQUFTRSxZQUFZTCxVQUFVSyxVQUFVO1lBQUM7UUFDbkUsS0FBSztZQUNELE9BQU87Z0JBQUVGLE1BQU1ILFVBQVVHLElBQUk7WUFBQztRQUNsQztZQUNJLE1BQU0sSUFBSU4sNkRBQWdCQSxDQUFDLENBQUMsSUFBSSxFQUFFRSxJQUFJLDJEQUEyRCxDQUFDO0lBQzFHO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvc3VidGxlX2RzYS5qcz8yNTliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEpPU0VOb3RTdXBwb3J0ZWQgfSBmcm9tICcuLi91dGlsL2Vycm9ycy5qcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzdWJ0bGVEc2EoYWxnLCBhbGdvcml0aG0pIHtcbiAgICBjb25zdCBoYXNoID0gYFNIQS0ke2FsZy5zbGljZSgtMyl9YDtcbiAgICBzd2l0Y2ggKGFsZykge1xuICAgICAgICBjYXNlICdIUzI1Nic6XG4gICAgICAgIGNhc2UgJ0hTMzg0JzpcbiAgICAgICAgY2FzZSAnSFM1MTInOlxuICAgICAgICAgICAgcmV0dXJuIHsgaGFzaCwgbmFtZTogJ0hNQUMnIH07XG4gICAgICAgIGNhc2UgJ1BTMjU2JzpcbiAgICAgICAgY2FzZSAnUFMzODQnOlxuICAgICAgICBjYXNlICdQUzUxMic6XG4gICAgICAgICAgICByZXR1cm4geyBoYXNoLCBuYW1lOiAnUlNBLVBTUycsIHNhbHRMZW5ndGg6IGFsZy5zbGljZSgtMykgPj4gMyB9O1xuICAgICAgICBjYXNlICdSUzI1Nic6XG4gICAgICAgIGNhc2UgJ1JTMzg0JzpcbiAgICAgICAgY2FzZSAnUlM1MTInOlxuICAgICAgICAgICAgcmV0dXJuIHsgaGFzaCwgbmFtZTogJ1JTQVNTQS1QS0NTMS12MV81JyB9O1xuICAgICAgICBjYXNlICdFUzI1Nic6XG4gICAgICAgIGNhc2UgJ0VTMzg0JzpcbiAgICAgICAgY2FzZSAnRVM1MTInOlxuICAgICAgICAgICAgcmV0dXJuIHsgaGFzaCwgbmFtZTogJ0VDRFNBJywgbmFtZWRDdXJ2ZTogYWxnb3JpdGhtLm5hbWVkQ3VydmUgfTtcbiAgICAgICAgY2FzZSAnRWREU0EnOlxuICAgICAgICAgICAgcmV0dXJuIHsgbmFtZTogYWxnb3JpdGhtLm5hbWUgfTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBKT1NFTm90U3VwcG9ydGVkKGBhbGcgJHthbGd9IGlzIG5vdCBzdXBwb3J0ZWQgZWl0aGVyIGJ5IEpPU0Ugb3IgeW91ciBqYXZhc2NyaXB0IHJ1bnRpbWVgKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsiSk9TRU5vdFN1cHBvcnRlZCIsInN1YnRsZURzYSIsImFsZyIsImFsZ29yaXRobSIsImhhc2giLCJzbGljZSIsIm5hbWUiLCJzYWx0TGVuZ3RoIiwibmFtZWRDdXJ2ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/subtle_dsa.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/subtle_rsaes.js":
/*!****************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/subtle_rsaes.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ subtleRsaEs)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\nfunction subtleRsaEs(alg) {\n    switch(alg){\n        case \"RSA-OAEP\":\n        case \"RSA-OAEP-256\":\n        case \"RSA-OAEP-384\":\n        case \"RSA-OAEP-512\":\n            return \"RSA-OAEP\";\n        default:\n            throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvc3VidGxlX3JzYWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBQ3RDLFNBQVNDLFlBQVlDLEdBQUc7SUFDbkMsT0FBUUE7UUFDSixLQUFLO1FBQ0wsS0FBSztRQUNMLEtBQUs7UUFDTCxLQUFLO1lBQ0QsT0FBTztRQUNYO1lBQ0ksTUFBTSxJQUFJRiw2REFBZ0JBLENBQUMsQ0FBQyxJQUFJLEVBQUVFLElBQUksMkRBQTJELENBQUM7SUFDMUc7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvcnVudGltZS9zdWJ0bGVfcnNhZXMuanM/ZTkyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBKT1NFTm90U3VwcG9ydGVkIH0gZnJvbSAnLi4vdXRpbC9lcnJvcnMuanMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3VidGxlUnNhRXMoYWxnKSB7XG4gICAgc3dpdGNoIChhbGcpIHtcbiAgICAgICAgY2FzZSAnUlNBLU9BRVAnOlxuICAgICAgICBjYXNlICdSU0EtT0FFUC0yNTYnOlxuICAgICAgICBjYXNlICdSU0EtT0FFUC0zODQnOlxuICAgICAgICBjYXNlICdSU0EtT0FFUC01MTInOlxuICAgICAgICAgICAgcmV0dXJuICdSU0EtT0FFUCc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgSk9TRU5vdFN1cHBvcnRlZChgYWxnICR7YWxnfSBpcyBub3Qgc3VwcG9ydGVkIGVpdGhlciBieSBKT1NFIG9yIHlvdXIgamF2YXNjcmlwdCBydW50aW1lYCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbIkpPU0VOb3RTdXBwb3J0ZWQiLCJzdWJ0bGVSc2FFcyIsImFsZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/subtle_rsaes.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/timing_safe_equal.js":
/*!*********************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/timing_safe_equal.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst timingSafeEqual = (a, b)=>{\n    if (!(a instanceof Uint8Array)) {\n        throw new TypeError(\"First argument must be a buffer\");\n    }\n    if (!(b instanceof Uint8Array)) {\n        throw new TypeError(\"Second argument must be a buffer\");\n    }\n    if (a.length !== b.length) {\n        throw new TypeError(\"Input buffers must have the same length\");\n    }\n    const len = a.length;\n    let out = 0;\n    let i = -1;\n    while(++i < len){\n        out |= a[i] ^ b[i];\n    }\n    return out === 0;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (timingSafeEqual);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvdGltaW5nX3NhZmVfZXF1YWwuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE1BQU1BLGtCQUFrQixDQUFDQyxHQUFHQztJQUN4QixJQUFJLENBQUVELENBQUFBLGFBQWFFLFVBQVMsR0FBSTtRQUM1QixNQUFNLElBQUlDLFVBQVU7SUFDeEI7SUFDQSxJQUFJLENBQUVGLENBQUFBLGFBQWFDLFVBQVMsR0FBSTtRQUM1QixNQUFNLElBQUlDLFVBQVU7SUFDeEI7SUFDQSxJQUFJSCxFQUFFSSxNQUFNLEtBQUtILEVBQUVHLE1BQU0sRUFBRTtRQUN2QixNQUFNLElBQUlELFVBQVU7SUFDeEI7SUFDQSxNQUFNRSxNQUFNTCxFQUFFSSxNQUFNO0lBQ3BCLElBQUlFLE1BQU07SUFDVixJQUFJQyxJQUFJLENBQUM7SUFDVCxNQUFPLEVBQUVBLElBQUlGLElBQUs7UUFDZEMsT0FBT04sQ0FBQyxDQUFDTyxFQUFFLEdBQUdOLENBQUMsQ0FBQ00sRUFBRTtJQUN0QjtJQUNBLE9BQU9ELFFBQVE7QUFDbkI7QUFDQSxpRUFBZVAsZUFBZUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvcnVudGltZS90aW1pbmdfc2FmZV9lcXVhbC5qcz84NGM1Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHRpbWluZ1NhZmVFcXVhbCA9IChhLCBiKSA9PiB7XG4gICAgaWYgKCEoYSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBidWZmZXInKTtcbiAgICB9XG4gICAgaWYgKCEoYiBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ1NlY29uZCBhcmd1bWVudCBtdXN0IGJlIGEgYnVmZmVyJyk7XG4gICAgfVxuICAgIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignSW5wdXQgYnVmZmVycyBtdXN0IGhhdmUgdGhlIHNhbWUgbGVuZ3RoJyk7XG4gICAgfVxuICAgIGNvbnN0IGxlbiA9IGEubGVuZ3RoO1xuICAgIGxldCBvdXQgPSAwO1xuICAgIGxldCBpID0gLTE7XG4gICAgd2hpbGUgKCsraSA8IGxlbikge1xuICAgICAgICBvdXQgfD0gYVtpXSBeIGJbaV07XG4gICAgfVxuICAgIHJldHVybiBvdXQgPT09IDA7XG59O1xuZXhwb3J0IGRlZmF1bHQgdGltaW5nU2FmZUVxdWFsO1xuIl0sIm5hbWVzIjpbInRpbWluZ1NhZmVFcXVhbCIsImEiLCJiIiwiVWludDhBcnJheSIsIlR5cGVFcnJvciIsImxlbmd0aCIsImxlbiIsIm91dCIsImkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/timing_safe_equal.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/verify.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/verify.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _subtle_dsa_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subtle_dsa.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/subtle_dsa.js\");\n/* harmony import */ var _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webcrypto.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\");\n/* harmony import */ var _check_key_length_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./check_key_length.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/check_key_length.js\");\n/* harmony import */ var _get_sign_verify_key_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./get_sign_verify_key.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/get_sign_verify_key.js\");\n\n\n\n\nconst verify = async (alg, key, signature, data)=>{\n    const cryptoKey = await (0,_get_sign_verify_key_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(alg, key, \"verify\");\n    (0,_check_key_length_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(alg, cryptoKey);\n    const algorithm = (0,_subtle_dsa_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(alg, cryptoKey.algorithm);\n    try {\n        return await _webcrypto_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].subtle.verify(algorithm, cryptoKey, signature, data);\n    } catch (_a) {\n        return false;\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (verify);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvdmVyaWZ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQThDO0FBQ1Y7QUFDZTtBQUNDO0FBQ3BELE1BQU1JLFNBQVMsT0FBT0MsS0FBS0MsS0FBS0MsV0FBV0M7SUFDdkMsTUFBTUMsWUFBWSxNQUFNTixtRUFBWUEsQ0FBQ0UsS0FBS0MsS0FBSztJQUMvQ0osZ0VBQWNBLENBQUNHLEtBQUtJO0lBQ3BCLE1BQU1DLFlBQVlWLDBEQUFlQSxDQUFDSyxLQUFLSSxVQUFVQyxTQUFTO0lBQzFELElBQUk7UUFDQSxPQUFPLE1BQU1ULHFEQUFNQSxDQUFDVSxNQUFNLENBQUNQLE1BQU0sQ0FBQ00sV0FBV0QsV0FBV0YsV0FBV0M7SUFDdkUsRUFDQSxPQUFPSSxJQUFJO1FBQ1AsT0FBTztJQUNYO0FBQ0o7QUFDQSxpRUFBZVIsTUFBTUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvcnVudGltZS92ZXJpZnkuanM/N2I1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgc3VidGxlQWxnb3JpdGhtIGZyb20gJy4vc3VidGxlX2RzYS5qcyc7XG5pbXBvcnQgY3J5cHRvIGZyb20gJy4vd2ViY3J5cHRvLmpzJztcbmltcG9ydCBjaGVja0tleUxlbmd0aCBmcm9tICcuL2NoZWNrX2tleV9sZW5ndGguanMnO1xuaW1wb3J0IGdldFZlcmlmeUtleSBmcm9tICcuL2dldF9zaWduX3ZlcmlmeV9rZXkuanMnO1xuY29uc3QgdmVyaWZ5ID0gYXN5bmMgKGFsZywga2V5LCBzaWduYXR1cmUsIGRhdGEpID0+IHtcbiAgICBjb25zdCBjcnlwdG9LZXkgPSBhd2FpdCBnZXRWZXJpZnlLZXkoYWxnLCBrZXksICd2ZXJpZnknKTtcbiAgICBjaGVja0tleUxlbmd0aChhbGcsIGNyeXB0b0tleSk7XG4gICAgY29uc3QgYWxnb3JpdGhtID0gc3VidGxlQWxnb3JpdGhtKGFsZywgY3J5cHRvS2V5LmFsZ29yaXRobSk7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IGNyeXB0by5zdWJ0bGUudmVyaWZ5KGFsZ29yaXRobSwgY3J5cHRvS2V5LCBzaWduYXR1cmUsIGRhdGEpO1xuICAgIH1cbiAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn07XG5leHBvcnQgZGVmYXVsdCB2ZXJpZnk7XG4iXSwibmFtZXMiOlsic3VidGxlQWxnb3JpdGhtIiwiY3J5cHRvIiwiY2hlY2tLZXlMZW5ndGgiLCJnZXRWZXJpZnlLZXkiLCJ2ZXJpZnkiLCJhbGciLCJrZXkiLCJzaWduYXR1cmUiLCJkYXRhIiwiY3J5cHRvS2V5IiwiYWxnb3JpdGhtIiwic3VidGxlIiwiX2EiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/verify.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js":
/*!*************************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/webcrypto.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   isCryptoKey: () => (/* binding */ isCryptoKey)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (crypto);\nconst isCryptoKey = (key)=>key instanceof CryptoKey;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvd2ViY3J5cHRvLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsaUVBQWVBLE1BQU1BLEVBQUM7QUFDZixNQUFNQyxjQUFjLENBQUNDLE1BQVFBLGVBQWVDLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvd2ViY3J5cHRvLmpzPzQ0ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY3J5cHRvO1xuZXhwb3J0IGNvbnN0IGlzQ3J5cHRvS2V5ID0gKGtleSkgPT4ga2V5IGluc3RhbmNlb2YgQ3J5cHRvS2V5O1xuIl0sIm5hbWVzIjpbImNyeXB0byIsImlzQ3J5cHRvS2V5Iiwia2V5IiwiQ3J5cHRvS2V5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/webcrypto.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/runtime/zlib.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/browser/runtime/zlib.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deflate: () => (/* binding */ deflate),\n/* harmony export */   inflate: () => (/* binding */ inflate)\n/* harmony export */ });\n/* harmony import */ var _util_errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\nconst inflate = async ()=>{\n    throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `inflateRaw` decrypt option to provide Inflate Raw implementation.');\n};\nconst deflate = async ()=>{\n    throw new _util_errors_js__WEBPACK_IMPORTED_MODULE_0__.JOSENotSupported('JWE \"zip\" (Compression Algorithm) Header Parameter is not supported by your javascript runtime. You need to use the `deflateRaw` encrypt option to provide Deflate Raw implementation.');\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3J1bnRpbWUvemxpYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFDOUMsTUFBTUMsVUFBVTtJQUNuQixNQUFNLElBQUlELDZEQUFnQkEsQ0FBQztBQUMvQixFQUFFO0FBQ0ssTUFBTUUsVUFBVTtJQUNuQixNQUFNLElBQUlGLDZEQUFnQkEsQ0FBQztBQUMvQixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9qb3NlL2Rpc3QvYnJvd3Nlci9ydW50aW1lL3psaWIuanM/N2NlMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBKT1NFTm90U3VwcG9ydGVkIH0gZnJvbSAnLi4vdXRpbC9lcnJvcnMuanMnO1xuZXhwb3J0IGNvbnN0IGluZmxhdGUgPSBhc3luYyAoKSA9PiB7XG4gICAgdGhyb3cgbmV3IEpPU0VOb3RTdXBwb3J0ZWQoJ0pXRSBcInppcFwiIChDb21wcmVzc2lvbiBBbGdvcml0aG0pIEhlYWRlciBQYXJhbWV0ZXIgaXMgbm90IHN1cHBvcnRlZCBieSB5b3VyIGphdmFzY3JpcHQgcnVudGltZS4gWW91IG5lZWQgdG8gdXNlIHRoZSBgaW5mbGF0ZVJhd2AgZGVjcnlwdCBvcHRpb24gdG8gcHJvdmlkZSBJbmZsYXRlIFJhdyBpbXBsZW1lbnRhdGlvbi4nKTtcbn07XG5leHBvcnQgY29uc3QgZGVmbGF0ZSA9IGFzeW5jICgpID0+IHtcbiAgICB0aHJvdyBuZXcgSk9TRU5vdFN1cHBvcnRlZCgnSldFIFwiemlwXCIgKENvbXByZXNzaW9uIEFsZ29yaXRobSkgSGVhZGVyIFBhcmFtZXRlciBpcyBub3Qgc3VwcG9ydGVkIGJ5IHlvdXIgamF2YXNjcmlwdCBydW50aW1lLiBZb3UgbmVlZCB0byB1c2UgdGhlIGBkZWZsYXRlUmF3YCBlbmNyeXB0IG9wdGlvbiB0byBwcm92aWRlIERlZmxhdGUgUmF3IGltcGxlbWVudGF0aW9uLicpO1xufTtcbiJdLCJuYW1lcyI6WyJKT1NFTm90U3VwcG9ydGVkIiwiaW5mbGF0ZSIsImRlZmxhdGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/runtime/zlib.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/util/base64url.js":
/*!**********************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/base64url.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decode: () => (/* binding */ decode),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/base64url.js\");\n\nconst encode = _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.encode;\nconst decode = _runtime_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3V0aWwvYmFzZTY0dXJsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUM5QyxNQUFNQyxTQUFTRCx5REFBZ0IsQ0FBQztBQUNoQyxNQUFNRSxTQUFTRix5REFBZ0IsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvam9zZS9kaXN0L2Jyb3dzZXIvdXRpbC9iYXNlNjR1cmwuanM/NjE0MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBiYXNlNjR1cmwgZnJvbSAnLi4vcnVudGltZS9iYXNlNjR1cmwuanMnO1xuZXhwb3J0IGNvbnN0IGVuY29kZSA9IGJhc2U2NHVybC5lbmNvZGU7XG5leHBvcnQgY29uc3QgZGVjb2RlID0gYmFzZTY0dXJsLmRlY29kZTtcbiJdLCJuYW1lcyI6WyJiYXNlNjR1cmwiLCJlbmNvZGUiLCJkZWNvZGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/util/base64url.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/util/decode_jwt.js":
/*!***********************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/decode_jwt.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeJwt: () => (/* binding */ decodeJwt)\n/* harmony export */ });\n/* harmony import */ var _base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/util/base64url.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.js */ \"(middleware)/./node_modules/jose/dist/browser/util/errors.js\");\n\n\n\n\nfunction decodeJwt(jwt) {\n    if (typeof jwt !== \"string\") throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.JWTInvalid(\"JWTs must use Compact JWS serialization, JWT must be a string\");\n    const { 1: payload, length } = jwt.split(\".\");\n    if (length === 5) throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.JWTInvalid(\"Only JWTs using Compact JWS serialization can be decoded\");\n    if (length !== 3) throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.JWTInvalid(\"Invalid JWT\");\n    if (!payload) throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.JWTInvalid(\"JWTs must contain a payload\");\n    let decoded;\n    try {\n        decoded = (0,_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(payload);\n    } catch (_a) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.JWTInvalid(\"Failed to base64url decode the payload\");\n    }\n    let result;\n    try {\n        result = JSON.parse(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__.decoder.decode(decoded));\n    } catch (_b) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.JWTInvalid(\"Failed to parse the decoded payload as JSON\");\n    }\n    if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(result)) throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.JWTInvalid(\"Invalid JWT Claims Set\");\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3V0aWwvZGVjb2RlX2p3dC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRDtBQUNKO0FBQ047QUFDRjtBQUNsQyxTQUFTSyxVQUFVQyxHQUFHO0lBQ3pCLElBQUksT0FBT0EsUUFBUSxVQUNmLE1BQU0sSUFBSUYsa0RBQVVBLENBQUM7SUFDekIsTUFBTSxFQUFFLEdBQUdHLE9BQU8sRUFBRUMsTUFBTSxFQUFFLEdBQUdGLElBQUlHLEtBQUssQ0FBQztJQUN6QyxJQUFJRCxXQUFXLEdBQ1gsTUFBTSxJQUFJSixrREFBVUEsQ0FBQztJQUN6QixJQUFJSSxXQUFXLEdBQ1gsTUFBTSxJQUFJSixrREFBVUEsQ0FBQztJQUN6QixJQUFJLENBQUNHLFNBQ0QsTUFBTSxJQUFJSCxrREFBVUEsQ0FBQztJQUN6QixJQUFJTTtJQUNKLElBQUk7UUFDQUEsVUFBVVQscURBQVNBLENBQUNNO0lBQ3hCLEVBQ0EsT0FBT0ksSUFBSTtRQUNQLE1BQU0sSUFBSVAsa0RBQVVBLENBQUM7SUFDekI7SUFDQSxJQUFJUTtJQUNKLElBQUk7UUFDQUEsU0FBU0MsS0FBS0MsS0FBSyxDQUFDWix5REFBT0EsQ0FBQ0YsTUFBTSxDQUFDVTtJQUN2QyxFQUNBLE9BQU9LLElBQUk7UUFDUCxNQUFNLElBQUlYLGtEQUFVQSxDQUFDO0lBQ3pCO0lBQ0EsSUFBSSxDQUFDRCw2REFBUUEsQ0FBQ1MsU0FDVixNQUFNLElBQUlSLGtEQUFVQSxDQUFDO0lBQ3pCLE9BQU9RO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3V0aWwvZGVjb2RlX2p3dC5qcz84YzJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRlY29kZSBhcyBiYXNlNjR1cmwgfSBmcm9tICcuL2Jhc2U2NHVybC5qcyc7XG5pbXBvcnQgeyBkZWNvZGVyIH0gZnJvbSAnLi4vbGliL2J1ZmZlcl91dGlscy5qcyc7XG5pbXBvcnQgaXNPYmplY3QgZnJvbSAnLi4vbGliL2lzX29iamVjdC5qcyc7XG5pbXBvcnQgeyBKV1RJbnZhbGlkIH0gZnJvbSAnLi9lcnJvcnMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUp3dChqd3QpIHtcbiAgICBpZiAodHlwZW9mIGp3dCAhPT0gJ3N0cmluZycpXG4gICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdKV1RzIG11c3QgdXNlIENvbXBhY3QgSldTIHNlcmlhbGl6YXRpb24sIEpXVCBtdXN0IGJlIGEgc3RyaW5nJyk7XG4gICAgY29uc3QgeyAxOiBwYXlsb2FkLCBsZW5ndGggfSA9IGp3dC5zcGxpdCgnLicpO1xuICAgIGlmIChsZW5ndGggPT09IDUpXG4gICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdPbmx5IEpXVHMgdXNpbmcgQ29tcGFjdCBKV1Mgc2VyaWFsaXphdGlvbiBjYW4gYmUgZGVjb2RlZCcpO1xuICAgIGlmIChsZW5ndGggIT09IDMpXG4gICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdJbnZhbGlkIEpXVCcpO1xuICAgIGlmICghcGF5bG9hZClcbiAgICAgICAgdGhyb3cgbmV3IEpXVEludmFsaWQoJ0pXVHMgbXVzdCBjb250YWluIGEgcGF5bG9hZCcpO1xuICAgIGxldCBkZWNvZGVkO1xuICAgIHRyeSB7XG4gICAgICAgIGRlY29kZWQgPSBiYXNlNjR1cmwocGF5bG9hZCk7XG4gICAgfVxuICAgIGNhdGNoIChfYSkge1xuICAgICAgICB0aHJvdyBuZXcgSldUSW52YWxpZCgnRmFpbGVkIHRvIGJhc2U2NHVybCBkZWNvZGUgdGhlIHBheWxvYWQnKTtcbiAgICB9XG4gICAgbGV0IHJlc3VsdDtcbiAgICB0cnkge1xuICAgICAgICByZXN1bHQgPSBKU09OLnBhcnNlKGRlY29kZXIuZGVjb2RlKGRlY29kZWQpKTtcbiAgICB9XG4gICAgY2F0Y2ggKF9iKSB7XG4gICAgICAgIHRocm93IG5ldyBKV1RJbnZhbGlkKCdGYWlsZWQgdG8gcGFyc2UgdGhlIGRlY29kZWQgcGF5bG9hZCBhcyBKU09OJyk7XG4gICAgfVxuICAgIGlmICghaXNPYmplY3QocmVzdWx0KSlcbiAgICAgICAgdGhyb3cgbmV3IEpXVEludmFsaWQoJ0ludmFsaWQgSldUIENsYWltcyBTZXQnKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbImRlY29kZSIsImJhc2U2NHVybCIsImRlY29kZXIiLCJpc09iamVjdCIsIkpXVEludmFsaWQiLCJkZWNvZGVKd3QiLCJqd3QiLCJwYXlsb2FkIiwibGVuZ3RoIiwic3BsaXQiLCJkZWNvZGVkIiwiX2EiLCJyZXN1bHQiLCJKU09OIiwicGFyc2UiLCJfYiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/util/decode_jwt.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/util/decode_protected_header.js":
/*!************************************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/decode_protected_header.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeProtectedHeader: () => (/* binding */ decodeProtectedHeader)\n/* harmony export */ });\n/* harmony import */ var _base64url_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base64url.js */ \"(middleware)/./node_modules/jose/dist/browser/util/base64url.js\");\n/* harmony import */ var _lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../lib/buffer_utils.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/buffer_utils.js\");\n/* harmony import */ var _lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/is_object.js */ \"(middleware)/./node_modules/jose/dist/browser/lib/is_object.js\");\n\n\n\nfunction decodeProtectedHeader(token) {\n    let protectedB64u;\n    if (typeof token === \"string\") {\n        const parts = token.split(\".\");\n        if (parts.length === 3 || parts.length === 5) {\n            ;\n            [protectedB64u] = parts;\n        }\n    } else if (typeof token === \"object\" && token) {\n        if (\"protected\" in token) {\n            protectedB64u = token.protected;\n        } else {\n            throw new TypeError(\"Token does not contain a Protected Header\");\n        }\n    }\n    try {\n        if (typeof protectedB64u !== \"string\" || !protectedB64u) {\n            throw new Error();\n        }\n        const result = JSON.parse(_lib_buffer_utils_js__WEBPACK_IMPORTED_MODULE_1__.decoder.decode((0,_base64url_js__WEBPACK_IMPORTED_MODULE_0__.decode)(protectedB64u)));\n        if (!(0,_lib_is_object_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(result)) {\n            throw new Error();\n        }\n        return result;\n    } catch (_a) {\n        throw new TypeError(\"Invalid Token or Protected Header formatting\");\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3V0aWwvZGVjb2RlX3Byb3RlY3RlZF9oZWFkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRDtBQUNKO0FBQ047QUFDcEMsU0FBU0ksc0JBQXNCQyxLQUFLO0lBQ3ZDLElBQUlDO0lBQ0osSUFBSSxPQUFPRCxVQUFVLFVBQVU7UUFDM0IsTUFBTUUsUUFBUUYsTUFBTUcsS0FBSyxDQUFDO1FBQzFCLElBQUlELE1BQU1FLE1BQU0sS0FBSyxLQUFLRixNQUFNRSxNQUFNLEtBQUssR0FBRzs7WUFFMUMsQ0FBQ0gsY0FBYyxHQUFHQztRQUN0QjtJQUNKLE9BQ0ssSUFBSSxPQUFPRixVQUFVLFlBQVlBLE9BQU87UUFDekMsSUFBSSxlQUFlQSxPQUFPO1lBQ3RCQyxnQkFBZ0JELE1BQU1LLFNBQVM7UUFDbkMsT0FDSztZQUNELE1BQU0sSUFBSUMsVUFBVTtRQUN4QjtJQUNKO0lBQ0EsSUFBSTtRQUNBLElBQUksT0FBT0wsa0JBQWtCLFlBQVksQ0FBQ0EsZUFBZTtZQUNyRCxNQUFNLElBQUlNO1FBQ2Q7UUFDQSxNQUFNQyxTQUFTQyxLQUFLQyxLQUFLLENBQUNiLHlEQUFPQSxDQUFDRixNQUFNLENBQUNDLHFEQUFTQSxDQUFDSztRQUNuRCxJQUFJLENBQUNILDZEQUFRQSxDQUFDVSxTQUFTO1lBQ25CLE1BQU0sSUFBSUQ7UUFDZDtRQUNBLE9BQU9DO0lBQ1gsRUFDQSxPQUFPRyxJQUFJO1FBQ1AsTUFBTSxJQUFJTCxVQUFVO0lBQ3hCO0FBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3V0aWwvZGVjb2RlX3Byb3RlY3RlZF9oZWFkZXIuanM/ZTZkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWNvZGUgYXMgYmFzZTY0dXJsIH0gZnJvbSAnLi9iYXNlNjR1cmwuanMnO1xuaW1wb3J0IHsgZGVjb2RlciB9IGZyb20gJy4uL2xpYi9idWZmZXJfdXRpbHMuanMnO1xuaW1wb3J0IGlzT2JqZWN0IGZyb20gJy4uL2xpYi9pc19vYmplY3QuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZVByb3RlY3RlZEhlYWRlcih0b2tlbikge1xuICAgIGxldCBwcm90ZWN0ZWRCNjR1O1xuICAgIGlmICh0eXBlb2YgdG9rZW4gPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGNvbnN0IHBhcnRzID0gdG9rZW4uc3BsaXQoJy4nKTtcbiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMyB8fCBwYXJ0cy5sZW5ndGggPT09IDUpIHtcbiAgICAgICAgICAgIDtcbiAgICAgICAgICAgIFtwcm90ZWN0ZWRCNjR1XSA9IHBhcnRzO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB0b2tlbiA9PT0gJ29iamVjdCcgJiYgdG9rZW4pIHtcbiAgICAgICAgaWYgKCdwcm90ZWN0ZWQnIGluIHRva2VuKSB7XG4gICAgICAgICAgICBwcm90ZWN0ZWRCNjR1ID0gdG9rZW4ucHJvdGVjdGVkO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVG9rZW4gZG9lcyBub3QgY29udGFpbiBhIFByb3RlY3RlZCBIZWFkZXInKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBpZiAodHlwZW9mIHByb3RlY3RlZEI2NHUgIT09ICdzdHJpbmcnIHx8ICFwcm90ZWN0ZWRCNjR1KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXN1bHQgPSBKU09OLnBhcnNlKGRlY29kZXIuZGVjb2RlKGJhc2U2NHVybChwcm90ZWN0ZWRCNjR1KSkpO1xuICAgICAgICBpZiAoIWlzT2JqZWN0KHJlc3VsdCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGNhdGNoIChfYSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIFRva2VuIG9yIFByb3RlY3RlZCBIZWFkZXIgZm9ybWF0dGluZycpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJkZWNvZGUiLCJiYXNlNjR1cmwiLCJkZWNvZGVyIiwiaXNPYmplY3QiLCJkZWNvZGVQcm90ZWN0ZWRIZWFkZXIiLCJ0b2tlbiIsInByb3RlY3RlZEI2NHUiLCJwYXJ0cyIsInNwbGl0IiwibGVuZ3RoIiwicHJvdGVjdGVkIiwiVHlwZUVycm9yIiwiRXJyb3IiLCJyZXN1bHQiLCJKU09OIiwicGFyc2UiLCJfYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/util/decode_protected_header.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/util/errors.js":
/*!*******************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/errors.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JOSEAlgNotAllowed: () => (/* binding */ JOSEAlgNotAllowed),\n/* harmony export */   JOSEError: () => (/* binding */ JOSEError),\n/* harmony export */   JOSENotSupported: () => (/* binding */ JOSENotSupported),\n/* harmony export */   JWEDecryptionFailed: () => (/* binding */ JWEDecryptionFailed),\n/* harmony export */   JWEInvalid: () => (/* binding */ JWEInvalid),\n/* harmony export */   JWKInvalid: () => (/* binding */ JWKInvalid),\n/* harmony export */   JWKSInvalid: () => (/* binding */ JWKSInvalid),\n/* harmony export */   JWKSMultipleMatchingKeys: () => (/* binding */ JWKSMultipleMatchingKeys),\n/* harmony export */   JWKSNoMatchingKey: () => (/* binding */ JWKSNoMatchingKey),\n/* harmony export */   JWKSTimeout: () => (/* binding */ JWKSTimeout),\n/* harmony export */   JWSInvalid: () => (/* binding */ JWSInvalid),\n/* harmony export */   JWSSignatureVerificationFailed: () => (/* binding */ JWSSignatureVerificationFailed),\n/* harmony export */   JWTClaimValidationFailed: () => (/* binding */ JWTClaimValidationFailed),\n/* harmony export */   JWTExpired: () => (/* binding */ JWTExpired),\n/* harmony export */   JWTInvalid: () => (/* binding */ JWTInvalid)\n/* harmony export */ });\nclass JOSEError extends Error {\n    static get code() {\n        return \"ERR_JOSE_GENERIC\";\n    }\n    constructor(message){\n        var _a;\n        super(message);\n        this.code = \"ERR_JOSE_GENERIC\";\n        this.name = this.constructor.name;\n        (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, this, this.constructor);\n    }\n}\nclass JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return \"ERR_JWT_CLAIM_VALIDATION_FAILED\";\n    }\n    constructor(message, claim = \"unspecified\", reason = \"unspecified\"){\n        super(message);\n        this.code = \"ERR_JWT_CLAIM_VALIDATION_FAILED\";\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nclass JWTExpired extends JOSEError {\n    static get code() {\n        return \"ERR_JWT_EXPIRED\";\n    }\n    constructor(message, claim = \"unspecified\", reason = \"unspecified\"){\n        super(message);\n        this.code = \"ERR_JWT_EXPIRED\";\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nclass JOSEAlgNotAllowed extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JOSE_ALG_NOT_ALLOWED\";\n    }\n    static get code() {\n        return \"ERR_JOSE_ALG_NOT_ALLOWED\";\n    }\n}\nclass JOSENotSupported extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JOSE_NOT_SUPPORTED\";\n    }\n    static get code() {\n        return \"ERR_JOSE_NOT_SUPPORTED\";\n    }\n}\nclass JWEDecryptionFailed extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWE_DECRYPTION_FAILED\";\n        this.message = \"decryption operation failed\";\n    }\n    static get code() {\n        return \"ERR_JWE_DECRYPTION_FAILED\";\n    }\n}\nclass JWEInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWE_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWE_INVALID\";\n    }\n}\nclass JWSInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWS_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWS_INVALID\";\n    }\n}\nclass JWTInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWT_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWT_INVALID\";\n    }\n}\nclass JWKInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWK_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWK_INVALID\";\n    }\n}\nclass JWKSInvalid extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_INVALID\";\n    }\n    static get code() {\n        return \"ERR_JWKS_INVALID\";\n    }\n}\nclass JWKSNoMatchingKey extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_NO_MATCHING_KEY\";\n        this.message = \"no applicable key found in the JSON Web Key Set\";\n    }\n    static get code() {\n        return \"ERR_JWKS_NO_MATCHING_KEY\";\n    }\n}\nclass JWKSMultipleMatchingKeys extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_MULTIPLE_MATCHING_KEYS\";\n        this.message = \"multiple matching keys found in the JSON Web Key Set\";\n    }\n    static get code() {\n        return \"ERR_JWKS_MULTIPLE_MATCHING_KEYS\";\n    }\n}\nSymbol.asyncIterator;\nclass JWKSTimeout extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWKS_TIMEOUT\";\n        this.message = \"request timed out\";\n    }\n    static get code() {\n        return \"ERR_JWKS_TIMEOUT\";\n    }\n}\nclass JWSSignatureVerificationFailed extends JOSEError {\n    constructor(){\n        super(...arguments);\n        this.code = \"ERR_JWS_SIGNATURE_VERIFICATION_FAILED\";\n        this.message = \"signature verification failed\";\n    }\n    static get code() {\n        return \"ERR_JWS_SIGNATURE_VERIFICATION_FAILED\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/util/errors.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/jose/dist/browser/util/runtime.js":
/*!********************************************************!*\
  !*** ./node_modules/jose/dist/browser/util/runtime.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/runtime.js */ \"(middleware)/./node_modules/jose/dist/browser/runtime/runtime.js\");\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKG1pZGRsZXdhcmUpLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3V0aWwvcnVudGltZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEwQztBQUMxQyxpRUFBZUEsMkRBQUtBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL2pvc2UvZGlzdC9icm93c2VyL3V0aWwvcnVudGltZS5qcz8wZDRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2YWx1ZSBmcm9tICcuLi9ydW50aW1lL3J1bnRpbWUuanMnO1xuZXhwb3J0IGRlZmF1bHQgdmFsdWU7XG4iXSwibmFtZXMiOlsidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/jose/dist/browser/util/runtime.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/oauth4webapi/build/index.js":
/*!**************************************************!*\
  !*** ./node_modules/oauth4webapi/build/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OperationProcessingError: () => (/* binding */ OperationProcessingError),\n/* harmony export */   UnsupportedOperationError: () => (/* binding */ UnsupportedOperationError),\n/* harmony export */   authorizationCodeGrantRequest: () => (/* binding */ authorizationCodeGrantRequest),\n/* harmony export */   calculatePKCECodeChallenge: () => (/* binding */ calculatePKCECodeChallenge),\n/* harmony export */   clientCredentialsGrantRequest: () => (/* binding */ clientCredentialsGrantRequest),\n/* harmony export */   clockSkew: () => (/* binding */ clockSkew),\n/* harmony export */   clockTolerance: () => (/* binding */ clockTolerance),\n/* harmony export */   deviceAuthorizationRequest: () => (/* binding */ deviceAuthorizationRequest),\n/* harmony export */   deviceCodeGrantRequest: () => (/* binding */ deviceCodeGrantRequest),\n/* harmony export */   discoveryRequest: () => (/* binding */ discoveryRequest),\n/* harmony export */   expectNoNonce: () => (/* binding */ expectNoNonce),\n/* harmony export */   expectNoState: () => (/* binding */ expectNoState),\n/* harmony export */   generateKeyPair: () => (/* binding */ generateKeyPair),\n/* harmony export */   generateRandomCodeVerifier: () => (/* binding */ generateRandomCodeVerifier),\n/* harmony export */   generateRandomNonce: () => (/* binding */ generateRandomNonce),\n/* harmony export */   generateRandomState: () => (/* binding */ generateRandomState),\n/* harmony export */   getValidatedIdTokenClaims: () => (/* binding */ getValidatedIdTokenClaims),\n/* harmony export */   introspectionRequest: () => (/* binding */ introspectionRequest),\n/* harmony export */   isOAuth2Error: () => (/* binding */ isOAuth2Error),\n/* harmony export */   issueRequestObject: () => (/* binding */ issueRequestObject),\n/* harmony export */   parseWwwAuthenticateChallenges: () => (/* binding */ parseWwwAuthenticateChallenges),\n/* harmony export */   processAuthorizationCodeOAuth2Response: () => (/* binding */ processAuthorizationCodeOAuth2Response),\n/* harmony export */   processAuthorizationCodeOpenIDResponse: () => (/* binding */ processAuthorizationCodeOpenIDResponse),\n/* harmony export */   processClientCredentialsResponse: () => (/* binding */ processClientCredentialsResponse),\n/* harmony export */   processDeviceAuthorizationResponse: () => (/* binding */ processDeviceAuthorizationResponse),\n/* harmony export */   processDeviceCodeResponse: () => (/* binding */ processDeviceCodeResponse),\n/* harmony export */   processDiscoveryResponse: () => (/* binding */ processDiscoveryResponse),\n/* harmony export */   processIntrospectionResponse: () => (/* binding */ processIntrospectionResponse),\n/* harmony export */   processPushedAuthorizationResponse: () => (/* binding */ processPushedAuthorizationResponse),\n/* harmony export */   processRefreshTokenResponse: () => (/* binding */ processRefreshTokenResponse),\n/* harmony export */   processRevocationResponse: () => (/* binding */ processRevocationResponse),\n/* harmony export */   processUserInfoResponse: () => (/* binding */ processUserInfoResponse),\n/* harmony export */   protectedResourceRequest: () => (/* binding */ protectedResourceRequest),\n/* harmony export */   pushedAuthorizationRequest: () => (/* binding */ pushedAuthorizationRequest),\n/* harmony export */   refreshTokenGrantRequest: () => (/* binding */ refreshTokenGrantRequest),\n/* harmony export */   revocationRequest: () => (/* binding */ revocationRequest),\n/* harmony export */   skipAuthTimeCheck: () => (/* binding */ skipAuthTimeCheck),\n/* harmony export */   skipStateCheck: () => (/* binding */ skipStateCheck),\n/* harmony export */   skipSubjectCheck: () => (/* binding */ skipSubjectCheck),\n/* harmony export */   userInfoRequest: () => (/* binding */ userInfoRequest),\n/* harmony export */   validateAuthResponse: () => (/* binding */ validateAuthResponse),\n/* harmony export */   validateJwtAuthResponse: () => (/* binding */ validateJwtAuthResponse)\n/* harmony export */ });\nlet USER_AGENT;\nif (typeof navigator === \"undefined\" || !navigator.userAgent?.startsWith?.(\"Mozilla/5.0 \")) {\n    const NAME = \"oauth4webapi\";\n    const VERSION = \"v2.4.0\";\n    USER_AGENT = `${NAME}/${VERSION}`;\n}\nconst clockSkew = Symbol();\nconst clockTolerance = Symbol();\nconst encoder = new TextEncoder();\nconst decoder = new TextDecoder();\nfunction buf(input) {\n    if (typeof input === \"string\") {\n        return encoder.encode(input);\n    }\n    return decoder.decode(input);\n}\nconst CHUNK_SIZE = 0x8000;\nfunction encodeBase64Url(input) {\n    if (input instanceof ArrayBuffer) {\n        input = new Uint8Array(input);\n    }\n    const arr = [];\n    for(let i = 0; i < input.byteLength; i += CHUNK_SIZE){\n        arr.push(String.fromCharCode.apply(null, input.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(\"\")).replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction decodeBase64Url(input) {\n    try {\n        const binary = atob(input.replace(/-/g, \"+\").replace(/_/g, \"/\").replace(/\\s/g, \"\"));\n        const bytes = new Uint8Array(binary.length);\n        for(let i = 0; i < binary.length; i++){\n            bytes[i] = binary.charCodeAt(i);\n        }\n        return bytes;\n    } catch (cause) {\n        throw new OPE(\"The input to be decoded is not correctly encoded.\", {\n            cause\n        });\n    }\n}\nfunction b64u(input) {\n    if (typeof input === \"string\") {\n        return decodeBase64Url(input);\n    }\n    return encodeBase64Url(input);\n}\nclass LRU {\n    constructor(maxSize){\n        this.cache = new Map();\n        this._cache = new Map();\n        this.maxSize = maxSize;\n    }\n    get(key) {\n        let v = this.cache.get(key);\n        if (v) {\n            return v;\n        }\n        if (v = this._cache.get(key)) {\n            this.update(key, v);\n            return v;\n        }\n        return undefined;\n    }\n    has(key) {\n        return this.cache.has(key) || this._cache.has(key);\n    }\n    set(key, value) {\n        if (this.cache.has(key)) {\n            this.cache.set(key, value);\n        } else {\n            this.update(key, value);\n        }\n        return this;\n    }\n    delete(key) {\n        if (this.cache.has(key)) {\n            return this.cache.delete(key);\n        }\n        if (this._cache.has(key)) {\n            return this._cache.delete(key);\n        }\n        return false;\n    }\n    update(key, value) {\n        this.cache.set(key, value);\n        if (this.cache.size >= this.maxSize) {\n            this._cache = this.cache;\n            this.cache = new Map();\n        }\n    }\n}\nclass UnsupportedOperationError extends Error {\n    constructor(message){\n        super(message ?? \"operation not supported\");\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nclass OperationProcessingError extends Error {\n    constructor(message, options){\n        super(message, options);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nconst OPE = OperationProcessingError;\nconst dpopNonces = new LRU(100);\nfunction isCryptoKey(key) {\n    return key instanceof CryptoKey;\n}\nfunction isPrivateKey(key) {\n    return isCryptoKey(key) && key.type === \"private\";\n}\nfunction isPublicKey(key) {\n    return isCryptoKey(key) && key.type === \"public\";\n}\nconst SUPPORTED_JWS_ALGS = [\n    \"PS256\",\n    \"ES256\",\n    \"RS256\",\n    \"PS384\",\n    \"ES384\",\n    \"RS384\",\n    \"PS512\",\n    \"ES512\",\n    \"RS512\",\n    \"EdDSA\"\n];\nfunction processDpopNonce(response) {\n    const url = new URL(response.url);\n    if (response.headers.has(\"dpop-nonce\")) {\n        dpopNonces.set(url.origin, response.headers.get(\"dpop-nonce\"));\n    }\n    return response;\n}\nfunction normalizeTyp(value) {\n    return value.toLowerCase().replace(/^application\\//, \"\");\n}\nfunction isJsonObject(input) {\n    if (input === null || typeof input !== \"object\" || Array.isArray(input)) {\n        return false;\n    }\n    return true;\n}\nfunction prepareHeaders(input) {\n    if (input !== undefined && !(input instanceof Headers)) {\n        throw new TypeError('\"options.headers\" must be an instance of Headers');\n    }\n    const headers = new Headers(input);\n    if (USER_AGENT && !headers.has(\"user-agent\")) {\n        headers.set(\"user-agent\", USER_AGENT);\n    }\n    if (headers.has(\"authorization\")) {\n        throw new TypeError('\"options.headers\" must not include the \"authorization\" header name');\n    }\n    if (headers.has(\"dpop\")) {\n        throw new TypeError('\"options.headers\" must not include the \"dpop\" header name');\n    }\n    return headers;\n}\nfunction signal(value) {\n    if (typeof value === \"function\") {\n        value = value();\n    }\n    if (!(value instanceof AbortSignal)) {\n        throw new TypeError('\"options.signal\" must return or be an instance of AbortSignal');\n    }\n    return value;\n}\nasync function discoveryRequest(issuerIdentifier, options) {\n    if (!(issuerIdentifier instanceof URL)) {\n        throw new TypeError('\"issuerIdentifier\" must be an instance of URL');\n    }\n    if (issuerIdentifier.protocol !== \"https:\" && issuerIdentifier.protocol !== \"http:\") {\n        throw new TypeError('\"issuer.protocol\" must be \"https:\" or \"http:\"');\n    }\n    const url = new URL(issuerIdentifier.href);\n    switch(options?.algorithm){\n        case undefined:\n        case \"oidc\":\n            url.pathname = `${url.pathname}/.well-known/openid-configuration`.replace(\"//\", \"/\");\n            break;\n        case \"oauth2\":\n            if (url.pathname === \"/\") {\n                url.pathname = `.well-known/oauth-authorization-server`;\n            } else {\n                url.pathname = `.well-known/oauth-authorization-server/${url.pathname}`.replace(\"//\", \"/\");\n            }\n            break;\n        default:\n            throw new TypeError('\"options.algorithm\" must be \"oidc\" (default), or \"oauth2\"');\n    }\n    const headers = prepareHeaders(options?.headers);\n    headers.set(\"accept\", \"application/json\");\n    return fetch(url.href, {\n        headers,\n        method: \"GET\",\n        redirect: \"manual\",\n        signal: options?.signal ? signal(options.signal) : null\n    }).then(processDpopNonce);\n}\nfunction validateString(input) {\n    return typeof input === \"string\" && input.length !== 0;\n}\nasync function processDiscoveryResponse(expectedIssuerIdentifier, response) {\n    if (!(expectedIssuerIdentifier instanceof URL)) {\n        throw new TypeError('\"expectedIssuer\" must be an instance of URL');\n    }\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform Authorization Server Metadata response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    } catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', {\n            cause\n        });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.issuer)) {\n        throw new OPE('\"response\" body \"issuer\" property must be a non-empty string');\n    }\n    if (new URL(json.issuer).href !== expectedIssuerIdentifier.href) {\n        throw new OPE('\"response\" body \"issuer\" does not match \"expectedIssuer\"');\n    }\n    return json;\n}\nfunction randomBytes() {\n    return b64u(crypto.getRandomValues(new Uint8Array(32)));\n}\nfunction generateRandomCodeVerifier() {\n    return randomBytes();\n}\nfunction generateRandomState() {\n    return randomBytes();\n}\nfunction generateRandomNonce() {\n    return randomBytes();\n}\nasync function calculatePKCECodeChallenge(codeVerifier) {\n    if (!validateString(codeVerifier)) {\n        throw new TypeError('\"codeVerifier\" must be a non-empty string');\n    }\n    return b64u(await crypto.subtle.digest(\"SHA-256\", buf(codeVerifier)));\n}\nfunction getKeyAndKid(input) {\n    if (input instanceof CryptoKey) {\n        return {\n            key: input\n        };\n    }\n    if (!(input?.key instanceof CryptoKey)) {\n        return {};\n    }\n    if (input.kid !== undefined && !validateString(input.kid)) {\n        throw new TypeError('\"kid\" must be a non-empty string');\n    }\n    return {\n        key: input.key,\n        kid: input.kid\n    };\n}\nfunction formUrlEncode(token) {\n    return encodeURIComponent(token).replace(/%20/g, \"+\");\n}\nfunction clientSecretBasic(clientId, clientSecret) {\n    const username = formUrlEncode(clientId);\n    const password = formUrlEncode(clientSecret);\n    const credentials = btoa(`${username}:${password}`);\n    return `Basic ${credentials}`;\n}\nfunction psAlg(key) {\n    switch(key.algorithm.hash.name){\n        case \"SHA-256\":\n            return \"PS256\";\n        case \"SHA-384\":\n            return \"PS384\";\n        case \"SHA-512\":\n            return \"PS512\";\n        default:\n            throw new UnsupportedOperationError(\"unsupported RsaHashedKeyAlgorithm hash name\");\n    }\n}\nfunction rsAlg(key) {\n    switch(key.algorithm.hash.name){\n        case \"SHA-256\":\n            return \"RS256\";\n        case \"SHA-384\":\n            return \"RS384\";\n        case \"SHA-512\":\n            return \"RS512\";\n        default:\n            throw new UnsupportedOperationError(\"unsupported RsaHashedKeyAlgorithm hash name\");\n    }\n}\nfunction esAlg(key) {\n    switch(key.algorithm.namedCurve){\n        case \"P-256\":\n            return \"ES256\";\n        case \"P-384\":\n            return \"ES384\";\n        case \"P-521\":\n            return \"ES512\";\n        default:\n            throw new UnsupportedOperationError(\"unsupported EcKeyAlgorithm namedCurve\");\n    }\n}\nfunction keyToJws(key) {\n    switch(key.algorithm.name){\n        case \"RSA-PSS\":\n            return psAlg(key);\n        case \"RSASSA-PKCS1-v1_5\":\n            return rsAlg(key);\n        case \"ECDSA\":\n            return esAlg(key);\n        case \"Ed25519\":\n        case \"Ed448\":\n            return \"EdDSA\";\n        default:\n            throw new UnsupportedOperationError(\"unsupported CryptoKey algorithm name\");\n    }\n}\nfunction getClockSkew(client) {\n    if (Number.isFinite(client[clockSkew])) {\n        return client[clockSkew];\n    }\n    return 0;\n}\nfunction getClockTolerance(client) {\n    const tolerance = client[clockTolerance];\n    if (Number.isFinite(tolerance) && Math.sign(tolerance) !== -1) {\n        return tolerance;\n    }\n    return 30;\n}\nfunction epochTime() {\n    return Math.floor(Date.now() / 1000);\n}\nfunction clientAssertion(as, client) {\n    const now = epochTime() + getClockSkew(client);\n    return {\n        jti: randomBytes(),\n        aud: [\n            as.issuer,\n            as.token_endpoint\n        ],\n        exp: now + 60,\n        iat: now,\n        nbf: now,\n        iss: client.client_id,\n        sub: client.client_id\n    };\n}\nasync function privateKeyJwt(as, client, key, kid) {\n    return jwt({\n        alg: keyToJws(key),\n        kid\n    }, clientAssertion(as, client), key);\n}\nfunction assertAs(as) {\n    if (typeof as !== \"object\" || as === null) {\n        throw new TypeError('\"as\" must be an object');\n    }\n    if (!validateString(as.issuer)) {\n        throw new TypeError('\"as.issuer\" property must be a non-empty string');\n    }\n    return true;\n}\nfunction assertClient(client) {\n    if (typeof client !== \"object\" || client === null) {\n        throw new TypeError('\"client\" must be an object');\n    }\n    if (!validateString(client.client_id)) {\n        throw new TypeError('\"client.client_id\" property must be a non-empty string');\n    }\n    return true;\n}\nfunction assertClientSecret(clientSecret) {\n    if (!validateString(clientSecret)) {\n        throw new TypeError('\"client.client_secret\" property must be a non-empty string');\n    }\n    return clientSecret;\n}\nfunction assertNoClientPrivateKey(clientAuthMethod, clientPrivateKey) {\n    if (clientPrivateKey !== undefined) {\n        throw new TypeError(`\"options.clientPrivateKey\" property must not be provided when ${clientAuthMethod} client authentication method is used.`);\n    }\n}\nfunction assertNoClientSecret(clientAuthMethod, clientSecret) {\n    if (clientSecret !== undefined) {\n        throw new TypeError(`\"client.client_secret\" property must not be provided when ${clientAuthMethod} client authentication method is used.`);\n    }\n}\nasync function clientAuthentication(as, client, body, headers, clientPrivateKey) {\n    body.delete(\"client_secret\");\n    body.delete(\"client_assertion_type\");\n    body.delete(\"client_assertion\");\n    switch(client.token_endpoint_auth_method){\n        case undefined:\n        case \"client_secret_basic\":\n            {\n                assertNoClientPrivateKey(\"client_secret_basic\", clientPrivateKey);\n                headers.set(\"authorization\", clientSecretBasic(client.client_id, assertClientSecret(client.client_secret)));\n                break;\n            }\n        case \"client_secret_post\":\n            {\n                assertNoClientPrivateKey(\"client_secret_post\", clientPrivateKey);\n                body.set(\"client_id\", client.client_id);\n                body.set(\"client_secret\", assertClientSecret(client.client_secret));\n                break;\n            }\n        case \"private_key_jwt\":\n            {\n                assertNoClientSecret(\"private_key_jwt\", client.client_secret);\n                if (clientPrivateKey === undefined) {\n                    throw new TypeError('\"options.clientPrivateKey\" must be provided when \"client.token_endpoint_auth_method\" is \"private_key_jwt\"');\n                }\n                const { key, kid } = getKeyAndKid(clientPrivateKey);\n                if (!isPrivateKey(key)) {\n                    throw new TypeError('\"options.clientPrivateKey.key\" must be a private CryptoKey');\n                }\n                body.set(\"client_id\", client.client_id);\n                body.set(\"client_assertion_type\", \"urn:ietf:params:oauth:client-assertion-type:jwt-bearer\");\n                body.set(\"client_assertion\", await privateKeyJwt(as, client, key, kid));\n                break;\n            }\n        case \"none\":\n            {\n                assertNoClientSecret(\"none\", client.client_secret);\n                assertNoClientPrivateKey(\"none\", clientPrivateKey);\n                body.set(\"client_id\", client.client_id);\n                break;\n            }\n        default:\n            throw new UnsupportedOperationError(\"unsupported client token_endpoint_auth_method\");\n    }\n}\nasync function jwt(header, claimsSet, key) {\n    if (!key.usages.includes(\"sign\")) {\n        throw new TypeError('CryptoKey instances used for signing assertions must include \"sign\" in their \"usages\"');\n    }\n    const input = `${b64u(buf(JSON.stringify(header)))}.${b64u(buf(JSON.stringify(claimsSet)))}`;\n    const signature = b64u(await crypto.subtle.sign(keyToSubtle(key), key, buf(input)));\n    return `${input}.${signature}`;\n}\nasync function issueRequestObject(as, client, parameters, privateKey) {\n    assertAs(as);\n    assertClient(client);\n    parameters = new URLSearchParams(parameters);\n    const { key, kid } = getKeyAndKid(privateKey);\n    if (!isPrivateKey(key)) {\n        throw new TypeError('\"privateKey.key\" must be a private CryptoKey');\n    }\n    parameters.set(\"client_id\", client.client_id);\n    const now = epochTime() + getClockSkew(client);\n    const claims = {\n        ...Object.fromEntries(parameters.entries()),\n        jti: randomBytes(),\n        aud: as.issuer,\n        exp: now + 60,\n        iat: now,\n        nbf: now,\n        iss: client.client_id\n    };\n    let resource;\n    if (parameters.has(\"resource\") && (resource = parameters.getAll(\"resource\")) && resource.length > 1) {\n        claims.resource = resource;\n    }\n    if (parameters.has(\"claims\")) {\n        const value = parameters.get(\"claims\");\n        if (value === \"[object Object]\") {\n            throw new OPE('\"claims\" parameter must be passed as a UTF-8 encoded JSON');\n        }\n        try {\n            claims.claims = JSON.parse(value);\n        } catch (cause) {\n            throw new OPE('failed to parse the \"claims\" parameter as JSON', {\n                cause\n            });\n        }\n        if (!isJsonObject(claims.claims)) {\n            throw new OPE('\"claims\" parameter must be a top level object');\n        }\n    }\n    return jwt({\n        alg: keyToJws(key),\n        typ: \"oauth-authz-req+jwt\",\n        kid\n    }, claims, key);\n}\nasync function dpopProofJwt(headers, options, url, htm, clockSkew, accessToken) {\n    const { privateKey, publicKey, nonce = dpopNonces.get(url.origin) } = options;\n    if (!isPrivateKey(privateKey)) {\n        throw new TypeError('\"DPoP.privateKey\" must be a private CryptoKey');\n    }\n    if (!isPublicKey(publicKey)) {\n        throw new TypeError('\"DPoP.publicKey\" must be a public CryptoKey');\n    }\n    if (nonce !== undefined && !validateString(nonce)) {\n        throw new TypeError('\"DPoP.nonce\" must be a non-empty string or undefined');\n    }\n    if (!publicKey.extractable) {\n        throw new TypeError('\"DPoP.publicKey.extractable\" must be true');\n    }\n    const now = epochTime() + clockSkew;\n    const proof = await jwt({\n        alg: keyToJws(privateKey),\n        typ: \"dpop+jwt\",\n        jwk: await publicJwk(publicKey)\n    }, {\n        iat: now,\n        jti: randomBytes(),\n        htm,\n        nonce,\n        htu: `${url.origin}${url.pathname}`,\n        ath: accessToken ? b64u(await crypto.subtle.digest(\"SHA-256\", buf(accessToken))) : undefined\n    }, privateKey);\n    headers.set(\"dpop\", proof);\n}\nlet jwkCache;\nasync function publicJwk(key) {\n    jwkCache || (jwkCache = new WeakMap());\n    if (jwkCache.has(key)) {\n        return jwkCache.get(key);\n    }\n    const { kty, e, n, x, y, crv } = await crypto.subtle.exportKey(\"jwk\", key);\n    const jwk = {\n        kty,\n        e,\n        n,\n        x,\n        y,\n        crv\n    };\n    jwkCache.set(key, jwk);\n    return jwk;\n}\nasync function pushedAuthorizationRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    if (typeof as.pushed_authorization_request_endpoint !== \"string\") {\n        throw new TypeError('\"as.pushed_authorization_request_endpoint\" must be a string');\n    }\n    const url = new URL(as.pushed_authorization_request_endpoint);\n    const body = new URLSearchParams(parameters);\n    body.set(\"client_id\", client.client_id);\n    const headers = prepareHeaders(options?.headers);\n    headers.set(\"accept\", \"application/json\");\n    if (options?.DPoP !== undefined) {\n        await dpopProofJwt(headers, options.DPoP, url, \"POST\", getClockSkew(client));\n    }\n    return authenticatedRequest(as, client, \"POST\", url, body, headers, options);\n}\nfunction isOAuth2Error(input) {\n    const value = input;\n    if (typeof value !== \"object\" || Array.isArray(value) || value === null) {\n        return false;\n    }\n    return value.error !== undefined;\n}\nfunction unquote(value) {\n    if (value.length >= 2 && value[0] === '\"' && value[value.length - 1] === '\"') {\n        return value.slice(1, -1);\n    }\n    return value;\n}\nconst SPLIT_REGEXP = /((?:,|, )?[0-9a-zA-Z!#$%&'*+-.^_`|~]+=)/;\nconst SCHEMES_REGEXP = /(?:^|, ?)([0-9a-zA-Z!#$%&'*+\\-.^_`|~]+)(?=$|[ ,])/g;\nfunction wwwAuth(scheme, params) {\n    const arr = params.split(SPLIT_REGEXP).slice(1);\n    if (!arr.length) {\n        return {\n            scheme: scheme.toLowerCase(),\n            parameters: {}\n        };\n    }\n    arr[arr.length - 1] = arr[arr.length - 1].replace(/,$/, \"\");\n    const parameters = {};\n    for(let i = 1; i < arr.length; i += 2){\n        const idx = i;\n        if (arr[idx][0] === '\"') {\n            while(arr[idx].slice(-1) !== '\"' && ++i < arr.length){\n                arr[idx] += arr[i];\n            }\n        }\n        const key = arr[idx - 1].replace(/^(?:, ?)|=$/g, \"\").toLowerCase();\n        parameters[key] = unquote(arr[idx]);\n    }\n    return {\n        scheme: scheme.toLowerCase(),\n        parameters\n    };\n}\nfunction parseWwwAuthenticateChallenges(response) {\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (!response.headers.has(\"www-authenticate\")) {\n        return undefined;\n    }\n    const header = response.headers.get(\"www-authenticate\");\n    const result = [];\n    for (const { 1: scheme, index } of header.matchAll(SCHEMES_REGEXP)){\n        result.push([\n            scheme,\n            index\n        ]);\n    }\n    if (!result.length) {\n        return undefined;\n    }\n    const challenges = result.map(([scheme, indexOf], i, others)=>{\n        const next = others[i + 1];\n        let parameters;\n        if (next) {\n            parameters = header.slice(indexOf, next[1]);\n        } else {\n            parameters = header.slice(indexOf);\n        }\n        return wwwAuth(scheme, parameters);\n    });\n    return challenges;\n}\nasync function processPushedAuthorizationResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 201) {\n        let err;\n        if (err = await handleOAuthBodyError(response)) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Pushed Authorization Request Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    } catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', {\n            cause\n        });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.request_uri)) {\n        throw new OPE('\"response\" body \"request_uri\" property must be a non-empty string');\n    }\n    if (typeof json.expires_in !== \"number\" || json.expires_in <= 0) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    return json;\n}\nasync function protectedResourceRequest(accessToken, method, url, headers, body, options) {\n    if (!validateString(accessToken)) {\n        throw new TypeError('\"accessToken\" must be a non-empty string');\n    }\n    if (!(url instanceof URL)) {\n        throw new TypeError('\"url\" must be an instance of URL');\n    }\n    headers = prepareHeaders(headers);\n    if (options?.DPoP === undefined) {\n        headers.set(\"authorization\", `Bearer ${accessToken}`);\n    } else {\n        await dpopProofJwt(headers, options.DPoP, url, \"GET\", getClockSkew({\n            [clockSkew]: options?.clockSkew\n        }), accessToken);\n        headers.set(\"authorization\", `DPoP ${accessToken}`);\n    }\n    return fetch(url.href, {\n        body,\n        headers,\n        method,\n        redirect: \"manual\",\n        signal: options?.signal ? signal(options.signal) : null\n    }).then(processDpopNonce);\n}\nasync function userInfoRequest(as, client, accessToken, options) {\n    assertAs(as);\n    assertClient(client);\n    if (typeof as.userinfo_endpoint !== \"string\") {\n        throw new TypeError('\"as.userinfo_endpoint\" must be a string');\n    }\n    const url = new URL(as.userinfo_endpoint);\n    const headers = prepareHeaders(options?.headers);\n    if (client.userinfo_signed_response_alg) {\n        headers.set(\"accept\", \"application/jwt\");\n    } else {\n        headers.set(\"accept\", \"application/json\");\n        headers.append(\"accept\", \"application/jwt\");\n    }\n    return protectedResourceRequest(accessToken, \"GET\", url, headers, null, {\n        ...options,\n        clockSkew: getClockSkew(client)\n    });\n}\nlet jwksCache;\nasync function getPublicSigKeyFromIssuerJwksUri(as, options, header) {\n    const { alg, kid } = header;\n    checkSupportedJwsAlg(alg);\n    let jwks;\n    let age;\n    jwksCache || (jwksCache = new WeakMap());\n    if (jwksCache.has(as)) {\n        ;\n        ({ jwks, age } = jwksCache.get(as));\n        if (age >= 300) {\n            jwksCache.delete(as);\n            return getPublicSigKeyFromIssuerJwksUri(as, options, header);\n        }\n    } else {\n        jwks = await jwksRequest(as, options).then(processJwksResponse);\n        age = 0;\n        jwksCache.set(as, {\n            jwks,\n            iat: epochTime(),\n            get age () {\n                return epochTime() - this.iat;\n            }\n        });\n    }\n    let kty;\n    switch(alg.slice(0, 2)){\n        case \"RS\":\n        case \"PS\":\n            kty = \"RSA\";\n            break;\n        case \"ES\":\n            kty = \"EC\";\n            break;\n        case \"Ed\":\n            kty = \"OKP\";\n            break;\n        default:\n            throw new UnsupportedOperationError();\n    }\n    const candidates = jwks.keys.filter((jwk)=>{\n        if (jwk.kty !== kty) {\n            return false;\n        }\n        if (kid !== undefined && kid !== jwk.kid) {\n            return false;\n        }\n        if (jwk.alg !== undefined && alg !== jwk.alg) {\n            return false;\n        }\n        if (jwk.use !== undefined && jwk.use !== \"sig\") {\n            return false;\n        }\n        if (jwk.key_ops?.includes(\"verify\") === false) {\n            return false;\n        }\n        switch(true){\n            case alg === \"ES256\" && jwk.crv !== \"P-256\":\n            case alg === \"ES384\" && jwk.crv !== \"P-384\":\n            case alg === \"ES512\" && jwk.crv !== \"P-521\":\n            case alg === \"EdDSA\" && !(jwk.crv === \"Ed25519\" || jwk.crv === \"Ed448\"):\n                return false;\n        }\n        return true;\n    });\n    const { 0: jwk, length } = candidates;\n    if (!length) {\n        if (age >= 60) {\n            jwksCache.delete(as);\n            return getPublicSigKeyFromIssuerJwksUri(as, options, header);\n        }\n        throw new OPE(\"error when selecting a JWT verification key, no applicable keys found\");\n    } else if (length !== 1) {\n        throw new OPE('error when selecting a JWT verification key, multiple applicable keys found, a \"kid\" JWT Header Parameter is required');\n    }\n    const key = await importJwk(alg, jwk);\n    if (key.type !== \"public\") {\n        throw new OPE(\"jwks_uri must only contain public keys\");\n    }\n    return key;\n}\nconst skipSubjectCheck = Symbol();\nfunction getContentType(response) {\n    return response.headers.get(\"content-type\")?.split(\";\")[0];\n}\nasync function processUserInfoResponse(as, client, expectedSubject, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform UserInfo Endpoint response');\n    }\n    let json;\n    if (getContentType(response) === \"application/jwt\") {\n        assertReadableResponse(response);\n        const { claims } = await validateJwt(await response.text(), checkSigningAlgorithm.bind(undefined, client.userinfo_signed_response_alg, as.userinfo_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client)).then(validateOptionalAudience.bind(undefined, client.client_id)).then(validateOptionalIssuer.bind(undefined, as.issuer));\n        json = claims;\n    } else {\n        if (client.userinfo_signed_response_alg) {\n            throw new OPE(\"JWT UserInfo Response expected\");\n        }\n        assertReadableResponse(response);\n        try {\n            json = await response.json();\n        } catch (cause) {\n            throw new OPE('failed to parse \"response\" body as JSON', {\n                cause\n            });\n        }\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.sub)) {\n        throw new OPE('\"response\" body \"sub\" property must be a non-empty string');\n    }\n    switch(expectedSubject){\n        case skipSubjectCheck:\n            break;\n        default:\n            if (!validateString(expectedSubject)) {\n                throw new OPE('\"expectedSubject\" must be a non-empty string');\n            }\n            if (json.sub !== expectedSubject) {\n                throw new OPE('unexpected \"response\" body \"sub\" value');\n            }\n    }\n    return json;\n}\nasync function authenticatedRequest(as, client, method, url, body, headers, options) {\n    await clientAuthentication(as, client, body, headers, options?.clientPrivateKey);\n    headers.set(\"content-type\", \"application/x-www-form-urlencoded;charset=UTF-8\");\n    return fetch(url.href, {\n        body,\n        headers,\n        method,\n        redirect: \"manual\",\n        signal: options?.signal ? signal(options.signal) : null\n    }).then(processDpopNonce);\n}\nasync function tokenEndpointRequest(as, client, grantType, parameters, options) {\n    if (typeof as.token_endpoint !== \"string\") {\n        throw new TypeError('\"as.token_endpoint\" must be a string');\n    }\n    const url = new URL(as.token_endpoint);\n    parameters.set(\"grant_type\", grantType);\n    const headers = prepareHeaders(options?.headers);\n    headers.set(\"accept\", \"application/json\");\n    if (options?.DPoP !== undefined) {\n        await dpopProofJwt(headers, options.DPoP, url, \"POST\", getClockSkew(client));\n    }\n    return authenticatedRequest(as, client, \"POST\", url, parameters, headers, options);\n}\nasync function refreshTokenGrantRequest(as, client, refreshToken, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(refreshToken)) {\n        throw new TypeError('\"refreshToken\" must be a non-empty string');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set(\"refresh_token\", refreshToken);\n    return tokenEndpointRequest(as, client, \"refresh_token\", parameters, options);\n}\nconst idTokenClaims = new WeakMap();\nfunction getValidatedIdTokenClaims(ref) {\n    if (!ref.id_token) {\n        return undefined;\n    }\n    const claims = idTokenClaims.get(ref);\n    if (!claims) {\n        throw new TypeError('\"ref\" was already garbage collected or did not resolve from the proper sources');\n    }\n    return claims;\n}\nasync function processGenericAccessTokenResponse(as, client, response, ignoreIdToken = false, ignoreRefreshToken = false) {\n    assertAs(as);\n    assertClient(client);\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if (err = await handleOAuthBodyError(response)) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Token Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    } catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', {\n            cause\n        });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.access_token)) {\n        throw new OPE('\"response\" body \"access_token\" property must be a non-empty string');\n    }\n    if (!validateString(json.token_type)) {\n        throw new OPE('\"response\" body \"token_type\" property must be a non-empty string');\n    }\n    json.token_type = json.token_type.toLowerCase();\n    if (json.token_type !== \"dpop\" && json.token_type !== \"bearer\") {\n        throw new UnsupportedOperationError(\"unsupported `token_type` value\");\n    }\n    if (json.expires_in !== undefined && (typeof json.expires_in !== \"number\" || json.expires_in <= 0)) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    if (!ignoreRefreshToken && json.refresh_token !== undefined && !validateString(json.refresh_token)) {\n        throw new OPE('\"response\" body \"refresh_token\" property must be a non-empty string');\n    }\n    if (json.scope !== undefined && typeof json.scope !== \"string\") {\n        throw new OPE('\"response\" body \"scope\" property must be a string');\n    }\n    if (!ignoreIdToken) {\n        if (json.id_token !== undefined && !validateString(json.id_token)) {\n            throw new OPE('\"response\" body \"id_token\" property must be a non-empty string');\n        }\n        if (json.id_token) {\n            const { claims } = await validateJwt(json.id_token, checkSigningAlgorithm.bind(undefined, client.id_token_signed_response_alg, as.id_token_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client)).then(validatePresence.bind(undefined, [\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"iss\",\n                \"sub\"\n            ])).then(validateIssuer.bind(undefined, as.issuer)).then(validateAudience.bind(undefined, client.client_id));\n            if (Array.isArray(claims.aud) && claims.aud.length !== 1 && claims.azp !== client.client_id) {\n                throw new OPE('unexpected ID Token \"azp\" (authorized party) claim value');\n            }\n            if (client.require_auth_time && typeof claims.auth_time !== \"number\") {\n                throw new OPE('unexpected ID Token \"auth_time\" (authentication time) claim value');\n            }\n            idTokenClaims.set(json, claims);\n        }\n    }\n    return json;\n}\nasync function processRefreshTokenResponse(as, client, response) {\n    return processGenericAccessTokenResponse(as, client, response);\n}\nfunction validateOptionalAudience(expected, result) {\n    if (result.claims.aud !== undefined) {\n        return validateAudience(expected, result);\n    }\n    return result;\n}\nfunction validateAudience(expected, result) {\n    if (Array.isArray(result.claims.aud)) {\n        if (!result.claims.aud.includes(expected)) {\n            throw new OPE('unexpected JWT \"aud\" (audience) claim value');\n        }\n    } else if (result.claims.aud !== expected) {\n        throw new OPE('unexpected JWT \"aud\" (audience) claim value');\n    }\n    return result;\n}\nfunction validateOptionalIssuer(expected, result) {\n    if (result.claims.iss !== undefined) {\n        return validateIssuer(expected, result);\n    }\n    return result;\n}\nfunction validateIssuer(expected, result) {\n    if (result.claims.iss !== expected) {\n        throw new OPE('unexpected JWT \"iss\" (issuer) claim value');\n    }\n    return result;\n}\nconst branded = new WeakSet();\nfunction brand(searchParams) {\n    branded.add(searchParams);\n    return searchParams;\n}\nasync function authorizationCodeGrantRequest(as, client, callbackParameters, redirectUri, codeVerifier, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!branded.has(callbackParameters)) {\n        throw new TypeError('\"callbackParameters\" must be an instance of URLSearchParams obtained from \"validateAuthResponse()\", or \"validateJwtAuthResponse()');\n    }\n    if (!validateString(redirectUri)) {\n        throw new TypeError('\"redirectUri\" must be a non-empty string');\n    }\n    if (!validateString(codeVerifier)) {\n        throw new TypeError('\"codeVerifier\" must be a non-empty string');\n    }\n    const code = getURLSearchParameter(callbackParameters, \"code\");\n    if (!code) {\n        throw new OPE('no authorization code in \"callbackParameters\"');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set(\"redirect_uri\", redirectUri);\n    parameters.set(\"code_verifier\", codeVerifier);\n    parameters.set(\"code\", code);\n    return tokenEndpointRequest(as, client, \"authorization_code\", parameters, options);\n}\nconst claimNames = {\n    aud: \"audience\",\n    exp: \"expiration time\",\n    iat: \"issued at\",\n    iss: \"issuer\",\n    sub: \"subject\"\n};\nfunction validatePresence(required, result) {\n    for (const claim of required){\n        if (result.claims[claim] === undefined) {\n            throw new OPE(`JWT \"${claim}\" (${claimNames[claim]}) claim missing`);\n        }\n    }\n    return result;\n}\nconst expectNoNonce = Symbol();\nconst skipAuthTimeCheck = Symbol();\nasync function processAuthorizationCodeOpenIDResponse(as, client, response, expectedNonce, maxAge) {\n    const result = await processGenericAccessTokenResponse(as, client, response);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    if (!validateString(result.id_token)) {\n        throw new OPE('\"response\" body \"id_token\" property must be a non-empty string');\n    }\n    maxAge ?? (maxAge = client.default_max_age ?? skipAuthTimeCheck);\n    const claims = getValidatedIdTokenClaims(result);\n    if ((client.require_auth_time || maxAge !== skipAuthTimeCheck) && claims.auth_time === undefined) {\n        throw new OPE('ID Token \"auth_time\" (authentication time) claim missing');\n    }\n    if (maxAge !== skipAuthTimeCheck) {\n        if (typeof maxAge !== \"number\" || maxAge < 0) {\n            throw new TypeError('\"options.max_age\" must be a non-negative number');\n        }\n        const now = epochTime() + getClockSkew(client);\n        const tolerance = getClockTolerance(client);\n        if (claims.auth_time + maxAge < now - tolerance) {\n            throw new OPE(\"too much time has elapsed since the last End-User authentication\");\n        }\n    }\n    switch(expectedNonce){\n        case undefined:\n        case expectNoNonce:\n            if (claims.nonce !== undefined) {\n                throw new OPE('unexpected ID Token \"nonce\" claim value');\n            }\n            break;\n        default:\n            if (!validateString(expectedNonce)) {\n                throw new TypeError('\"expectedNonce\" must be a non-empty string');\n            }\n            if (claims.nonce === undefined) {\n                throw new OPE('ID Token \"nonce\" claim missing');\n            }\n            if (claims.nonce !== expectedNonce) {\n                throw new OPE('unexpected ID Token \"nonce\" claim value');\n            }\n    }\n    return result;\n}\nasync function processAuthorizationCodeOAuth2Response(as, client, response) {\n    const result = await processGenericAccessTokenResponse(as, client, response, true);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    if (result.id_token !== undefined) {\n        if (typeof result.id_token === \"string\" && result.id_token.length) {\n            throw new OPE(\"Unexpected ID Token returned, use processAuthorizationCodeOpenIDResponse() for OpenID Connect callback processing\");\n        }\n        delete result.id_token;\n    }\n    return result;\n}\nfunction checkJwtType(expected, result) {\n    if (typeof result.header.typ !== \"string\" || normalizeTyp(result.header.typ) !== expected) {\n        throw new OPE('unexpected JWT \"typ\" header parameter value');\n    }\n    return result;\n}\nasync function clientCredentialsGrantRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    return tokenEndpointRequest(as, client, \"client_credentials\", new URLSearchParams(parameters), options);\n}\nasync function processClientCredentialsResponse(as, client, response) {\n    const result = await processGenericAccessTokenResponse(as, client, response, true, true);\n    if (isOAuth2Error(result)) {\n        return result;\n    }\n    return result;\n}\nasync function revocationRequest(as, client, token, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(token)) {\n        throw new TypeError('\"token\" must be a non-empty string');\n    }\n    if (typeof as.revocation_endpoint !== \"string\") {\n        throw new TypeError('\"as.revocation_endpoint\" must be a string');\n    }\n    const url = new URL(as.revocation_endpoint);\n    const body = new URLSearchParams(options?.additionalParameters);\n    body.set(\"token\", token);\n    const headers = prepareHeaders(options?.headers);\n    headers.delete(\"accept\");\n    return authenticatedRequest(as, client, \"POST\", url, body, headers, options);\n}\nasync function processRevocationResponse(response) {\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if (err = await handleOAuthBodyError(response)) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Revocation Endpoint response');\n    }\n    return undefined;\n}\nfunction assertReadableResponse(response) {\n    if (response.bodyUsed) {\n        throw new TypeError('\"response\" body has been used already');\n    }\n}\nasync function introspectionRequest(as, client, token, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(token)) {\n        throw new TypeError('\"token\" must be a non-empty string');\n    }\n    if (typeof as.introspection_endpoint !== \"string\") {\n        throw new TypeError('\"as.introspection_endpoint\" must be a string');\n    }\n    const url = new URL(as.introspection_endpoint);\n    const body = new URLSearchParams(options?.additionalParameters);\n    body.set(\"token\", token);\n    const headers = prepareHeaders(options?.headers);\n    if (options?.requestJwtResponse ?? client.introspection_signed_response_alg) {\n        headers.set(\"accept\", \"application/token-introspection+jwt\");\n    } else {\n        headers.set(\"accept\", \"application/json\");\n    }\n    return authenticatedRequest(as, client, \"POST\", url, body, headers, options);\n}\nasync function processIntrospectionResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if (err = await handleOAuthBodyError(response)) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Introspection Endpoint response');\n    }\n    let json;\n    if (getContentType(response) === \"application/token-introspection+jwt\") {\n        assertReadableResponse(response);\n        const { claims } = await validateJwt(await response.text(), checkSigningAlgorithm.bind(undefined, client.introspection_signed_response_alg, as.introspection_signing_alg_values_supported), noSignatureCheck, getClockSkew(client), getClockTolerance(client)).then(checkJwtType.bind(undefined, \"token-introspection+jwt\")).then(validatePresence.bind(undefined, [\n            \"aud\",\n            \"iat\",\n            \"iss\"\n        ])).then(validateIssuer.bind(undefined, as.issuer)).then(validateAudience.bind(undefined, client.client_id));\n        json = claims.token_introspection;\n        if (!isJsonObject(json)) {\n            throw new OPE('JWT \"token_introspection\" claim must be a JSON object');\n        }\n    } else {\n        assertReadableResponse(response);\n        try {\n            json = await response.json();\n        } catch (cause) {\n            throw new OPE('failed to parse \"response\" body as JSON', {\n                cause\n            });\n        }\n        if (!isJsonObject(json)) {\n            throw new OPE('\"response\" body must be a top level object');\n        }\n    }\n    if (typeof json.active !== \"boolean\") {\n        throw new OPE('\"response\" body \"active\" property must be a boolean');\n    }\n    return json;\n}\nasync function jwksRequest(as, options) {\n    assertAs(as);\n    if (typeof as.jwks_uri !== \"string\") {\n        throw new TypeError('\"as.jwks_uri\" must be a string');\n    }\n    const url = new URL(as.jwks_uri);\n    const headers = prepareHeaders(options?.headers);\n    headers.set(\"accept\", \"application/json\");\n    headers.append(\"accept\", \"application/jwk-set+json\");\n    return fetch(url.href, {\n        headers,\n        method: \"GET\",\n        redirect: \"manual\",\n        signal: options?.signal ? signal(options.signal) : null\n    }).then(processDpopNonce);\n}\nasync function processJwksResponse(response) {\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        throw new OPE('\"response\" is not a conform JSON Web Key Set response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    } catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', {\n            cause\n        });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!Array.isArray(json.keys)) {\n        throw new OPE('\"response\" body \"keys\" property must be an array');\n    }\n    if (!Array.prototype.every.call(json.keys, isJsonObject)) {\n        throw new OPE('\"response\" body \"keys\" property members must be JWK formatted objects');\n    }\n    return json;\n}\nasync function handleOAuthBodyError(response) {\n    if (response.status > 399 && response.status < 500) {\n        assertReadableResponse(response);\n        try {\n            const json = await response.json();\n            if (isJsonObject(json) && typeof json.error === \"string\" && json.error.length) {\n                if (json.error_description !== undefined && typeof json.error_description !== \"string\") {\n                    delete json.error_description;\n                }\n                if (json.error_uri !== undefined && typeof json.error_uri !== \"string\") {\n                    delete json.error_uri;\n                }\n                if (json.algs !== undefined && typeof json.algs !== \"string\") {\n                    delete json.algs;\n                }\n                if (json.scope !== undefined && typeof json.scope !== \"string\") {\n                    delete json.scope;\n                }\n                return json;\n            }\n        } catch  {}\n    }\n    return undefined;\n}\nfunction checkSupportedJwsAlg(alg) {\n    if (!SUPPORTED_JWS_ALGS.includes(alg)) {\n        throw new UnsupportedOperationError('unsupported JWS \"alg\" identifier');\n    }\n    return alg;\n}\nfunction checkRsaKeyAlgorithm(algorithm) {\n    if (typeof algorithm.modulusLength !== \"number\" || algorithm.modulusLength < 2048) {\n        throw new OPE(`${algorithm.name} modulusLength must be at least 2048 bits`);\n    }\n}\nfunction ecdsaHashName(namedCurve) {\n    switch(namedCurve){\n        case \"P-256\":\n            return \"SHA-256\";\n        case \"P-384\":\n            return \"SHA-384\";\n        case \"P-521\":\n            return \"SHA-512\";\n        default:\n            throw new UnsupportedOperationError();\n    }\n}\nfunction keyToSubtle(key) {\n    switch(key.algorithm.name){\n        case \"ECDSA\":\n            return {\n                name: key.algorithm.name,\n                hash: ecdsaHashName(key.algorithm.namedCurve)\n            };\n        case \"RSA-PSS\":\n            {\n                checkRsaKeyAlgorithm(key.algorithm);\n                switch(key.algorithm.hash.name){\n                    case \"SHA-256\":\n                    case \"SHA-384\":\n                    case \"SHA-512\":\n                        return {\n                            name: key.algorithm.name,\n                            saltLength: parseInt(key.algorithm.hash.name.slice(-3), 10) >> 3\n                        };\n                    default:\n                        throw new UnsupportedOperationError();\n                }\n            }\n        case \"RSASSA-PKCS1-v1_5\":\n            checkRsaKeyAlgorithm(key.algorithm);\n            return key.algorithm.name;\n        case \"Ed448\":\n        case \"Ed25519\":\n            return key.algorithm.name;\n    }\n    throw new UnsupportedOperationError();\n}\nconst noSignatureCheck = Symbol();\nasync function validateJwt(jws, checkAlg, getKey, clockSkew, clockTolerance) {\n    const { 0: protectedHeader, 1: payload, 2: encodedSignature, length } = jws.split(\".\");\n    if (length === 5) {\n        throw new UnsupportedOperationError(\"JWE structure JWTs are not supported\");\n    }\n    if (length !== 3) {\n        throw new OPE(\"Invalid JWT\");\n    }\n    let header;\n    try {\n        header = JSON.parse(buf(b64u(protectedHeader)));\n    } catch (cause) {\n        throw new OPE(\"failed to parse JWT Header body as base64url encoded JSON\", {\n            cause\n        });\n    }\n    if (!isJsonObject(header)) {\n        throw new OPE(\"JWT Header must be a top level object\");\n    }\n    checkAlg(header);\n    if (header.crit !== undefined) {\n        throw new OPE('unexpected JWT \"crit\" header parameter');\n    }\n    const signature = b64u(encodedSignature);\n    if (getKey !== noSignatureCheck) {\n        const key = await getKey(header);\n        const input = `${protectedHeader}.${payload}`;\n        const verified = await crypto.subtle.verify(keyToSubtle(key), key, signature, buf(input));\n        if (!verified) {\n            throw new OPE(\"JWT signature verification failed\");\n        }\n    }\n    let claims;\n    try {\n        claims = JSON.parse(buf(b64u(payload)));\n    } catch (cause) {\n        throw new OPE(\"failed to parse JWT Payload body as base64url encoded JSON\", {\n            cause\n        });\n    }\n    if (!isJsonObject(claims)) {\n        throw new OPE(\"JWT Payload must be a top level object\");\n    }\n    const now = epochTime() + clockSkew;\n    if (claims.exp !== undefined) {\n        if (typeof claims.exp !== \"number\") {\n            throw new OPE('unexpected JWT \"exp\" (expiration time) claim type');\n        }\n        if (claims.exp <= now - clockTolerance) {\n            throw new OPE('unexpected JWT \"exp\" (expiration time) claim value, timestamp is <= now()');\n        }\n    }\n    if (claims.iat !== undefined) {\n        if (typeof claims.iat !== \"number\") {\n            throw new OPE('unexpected JWT \"iat\" (issued at) claim type');\n        }\n    }\n    if (claims.iss !== undefined) {\n        if (typeof claims.iss !== \"string\") {\n            throw new OPE('unexpected JWT \"iss\" (issuer) claim type');\n        }\n    }\n    if (claims.nbf !== undefined) {\n        if (typeof claims.nbf !== \"number\") {\n            throw new OPE('unexpected JWT \"nbf\" (not before) claim type');\n        }\n        if (claims.nbf > now + clockTolerance) {\n            throw new OPE('unexpected JWT \"nbf\" (not before) claim value, timestamp is > now()');\n        }\n    }\n    if (claims.aud !== undefined) {\n        if (typeof claims.aud !== \"string\" && !Array.isArray(claims.aud)) {\n            throw new OPE('unexpected JWT \"aud\" (audience) claim type');\n        }\n    }\n    return {\n        header,\n        claims,\n        signature\n    };\n}\nasync function validateJwtAuthResponse(as, client, parameters, expectedState, options) {\n    assertAs(as);\n    assertClient(client);\n    if (parameters instanceof URL) {\n        parameters = parameters.searchParams;\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        throw new TypeError('\"parameters\" must be an instance of URLSearchParams, or URL');\n    }\n    const response = getURLSearchParameter(parameters, \"response\");\n    if (!response) {\n        throw new OPE('\"parameters\" does not contain a JARM response');\n    }\n    if (typeof as.jwks_uri !== \"string\") {\n        throw new TypeError('\"as.jwks_uri\" must be a string');\n    }\n    const { claims } = await validateJwt(response, checkSigningAlgorithm.bind(undefined, client.authorization_signed_response_alg, as.authorization_signing_alg_values_supported), getPublicSigKeyFromIssuerJwksUri.bind(undefined, as, options), getClockSkew(client), getClockTolerance(client)).then(validatePresence.bind(undefined, [\n        \"aud\",\n        \"exp\",\n        \"iss\"\n    ])).then(validateIssuer.bind(undefined, as.issuer)).then(validateAudience.bind(undefined, client.client_id));\n    const result = new URLSearchParams();\n    for (const [key, value] of Object.entries(claims)){\n        if (typeof value === \"string\" && key !== \"aud\") {\n            result.set(key, value);\n        }\n    }\n    return validateAuthResponse(as, client, result, expectedState);\n}\nfunction checkSigningAlgorithm(client, issuer, header) {\n    if (client !== undefined) {\n        if (header.alg !== client) {\n            throw new OPE('unexpected JWT \"alg\" header parameter');\n        }\n        return;\n    }\n    if (Array.isArray(issuer)) {\n        if (!issuer.includes(header.alg)) {\n            throw new OPE('unexpected JWT \"alg\" header parameter');\n        }\n        return;\n    }\n    if (header.alg !== \"RS256\") {\n        throw new OPE('unexpected JWT \"alg\" header parameter');\n    }\n}\nfunction getURLSearchParameter(parameters, name) {\n    const { 0: value, length } = parameters.getAll(name);\n    if (length > 1) {\n        throw new OPE(`\"${name}\" parameter must be provided only once`);\n    }\n    return value;\n}\nconst skipStateCheck = Symbol();\nconst expectNoState = Symbol();\nfunction validateAuthResponse(as, client, parameters, expectedState) {\n    assertAs(as);\n    assertClient(client);\n    if (parameters instanceof URL) {\n        parameters = parameters.searchParams;\n    }\n    if (!(parameters instanceof URLSearchParams)) {\n        throw new TypeError('\"parameters\" must be an instance of URLSearchParams, or URL');\n    }\n    if (getURLSearchParameter(parameters, \"response\")) {\n        throw new OPE('\"parameters\" contains a JARM response, use validateJwtAuthResponse() instead of validateAuthResponse()');\n    }\n    const iss = getURLSearchParameter(parameters, \"iss\");\n    const state = getURLSearchParameter(parameters, \"state\");\n    if (!iss && as.authorization_response_iss_parameter_supported) {\n        throw new OPE('response parameter \"iss\" (issuer) missing');\n    }\n    if (iss && iss !== as.issuer) {\n        throw new OPE('unexpected \"iss\" (issuer) response parameter value');\n    }\n    switch(expectedState){\n        case undefined:\n        case expectNoState:\n            if (state !== undefined) {\n                throw new OPE('unexpected \"state\" response parameter encountered');\n            }\n            break;\n        case skipStateCheck:\n            break;\n        default:\n            if (!validateString(expectedState)) {\n                throw new OPE('\"expectedState\" must be a non-empty string');\n            }\n            if (state === undefined) {\n                throw new OPE('response parameter \"state\" missing');\n            }\n            if (state !== expectedState) {\n                throw new OPE('unexpected \"state\" response parameter value');\n            }\n    }\n    const error = getURLSearchParameter(parameters, \"error\");\n    if (error) {\n        return {\n            error,\n            error_description: getURLSearchParameter(parameters, \"error_description\"),\n            error_uri: getURLSearchParameter(parameters, \"error_uri\")\n        };\n    }\n    const id_token = getURLSearchParameter(parameters, \"id_token\");\n    const token = getURLSearchParameter(parameters, \"token\");\n    if (id_token !== undefined || token !== undefined) {\n        throw new UnsupportedOperationError(\"implicit and hybrid flows are not supported\");\n    }\n    return brand(new URLSearchParams(parameters));\n}\nfunction algToSubtle(alg, crv) {\n    switch(alg){\n        case \"PS256\":\n        case \"PS384\":\n        case \"PS512\":\n            return {\n                name: \"RSA-PSS\",\n                hash: `SHA-${alg.slice(-3)}`\n            };\n        case \"RS256\":\n        case \"RS384\":\n        case \"RS512\":\n            return {\n                name: \"RSASSA-PKCS1-v1_5\",\n                hash: `SHA-${alg.slice(-3)}`\n            };\n        case \"ES256\":\n        case \"ES384\":\n            return {\n                name: \"ECDSA\",\n                namedCurve: `P-${alg.slice(-3)}`\n            };\n        case \"ES512\":\n            return {\n                name: \"ECDSA\",\n                namedCurve: \"P-521\"\n            };\n        case \"EdDSA\":\n            {\n                switch(crv){\n                    case \"Ed25519\":\n                    case \"Ed448\":\n                        return crv;\n                    default:\n                        throw new UnsupportedOperationError();\n                }\n            }\n        default:\n            throw new UnsupportedOperationError();\n    }\n}\nasync function importJwk(alg, jwk) {\n    const { ext, key_ops, use, ...key } = jwk;\n    return crypto.subtle.importKey(\"jwk\", key, algToSubtle(alg, jwk.crv), true, [\n        \"verify\"\n    ]);\n}\nasync function deviceAuthorizationRequest(as, client, parameters, options) {\n    assertAs(as);\n    assertClient(client);\n    if (typeof as.device_authorization_endpoint !== \"string\") {\n        throw new TypeError('\"as.device_authorization_endpoint\" must be a string');\n    }\n    const url = new URL(as.device_authorization_endpoint);\n    const body = new URLSearchParams(parameters);\n    body.set(\"client_id\", client.client_id);\n    const headers = prepareHeaders(options?.headers);\n    headers.set(\"accept\", \"application/json\");\n    return authenticatedRequest(as, client, \"POST\", url, body, headers, options);\n}\nasync function processDeviceAuthorizationResponse(as, client, response) {\n    assertAs(as);\n    assertClient(client);\n    if (!(response instanceof Response)) {\n        throw new TypeError('\"response\" must be an instance of Response');\n    }\n    if (response.status !== 200) {\n        let err;\n        if (err = await handleOAuthBodyError(response)) {\n            return err;\n        }\n        throw new OPE('\"response\" is not a conform Device Authorization Endpoint response');\n    }\n    assertReadableResponse(response);\n    let json;\n    try {\n        json = await response.json();\n    } catch (cause) {\n        throw new OPE('failed to parse \"response\" body as JSON', {\n            cause\n        });\n    }\n    if (!isJsonObject(json)) {\n        throw new OPE('\"response\" body must be a top level object');\n    }\n    if (!validateString(json.device_code)) {\n        throw new OPE('\"response\" body \"device_code\" property must be a non-empty string');\n    }\n    if (!validateString(json.user_code)) {\n        throw new OPE('\"response\" body \"user_code\" property must be a non-empty string');\n    }\n    if (!validateString(json.verification_uri)) {\n        throw new OPE('\"response\" body \"verification_uri\" property must be a non-empty string');\n    }\n    if (typeof json.expires_in !== \"number\" || json.expires_in <= 0) {\n        throw new OPE('\"response\" body \"expires_in\" property must be a positive number');\n    }\n    if (json.verification_uri_complete !== undefined && !validateString(json.verification_uri_complete)) {\n        throw new OPE('\"response\" body \"verification_uri_complete\" property must be a non-empty string');\n    }\n    if (json.interval !== undefined && (typeof json.interval !== \"number\" || json.interval <= 0)) {\n        throw new OPE('\"response\" body \"interval\" property must be a positive number');\n    }\n    return json;\n}\nasync function deviceCodeGrantRequest(as, client, deviceCode, options) {\n    assertAs(as);\n    assertClient(client);\n    if (!validateString(deviceCode)) {\n        throw new TypeError('\"deviceCode\" must be a non-empty string');\n    }\n    const parameters = new URLSearchParams(options?.additionalParameters);\n    parameters.set(\"device_code\", deviceCode);\n    return tokenEndpointRequest(as, client, \"urn:ietf:params:oauth:grant-type:device_code\", parameters, options);\n}\nasync function processDeviceCodeResponse(as, client, response) {\n    return processGenericAccessTokenResponse(as, client, response);\n}\nasync function generateKeyPair(alg, options) {\n    if (!validateString(alg)) {\n        throw new TypeError('\"alg\" must be a non-empty string');\n    }\n    const algorithm = algToSubtle(alg, alg === \"EdDSA\" ? options?.crv ?? \"Ed25519\" : undefined);\n    if (alg.startsWith(\"PS\") || alg.startsWith(\"RS\")) {\n        Object.assign(algorithm, {\n            modulusLength: options?.modulusLength ?? 2048,\n            publicExponent: new Uint8Array([\n                0x01,\n                0x00,\n                0x01\n            ])\n        });\n    }\n    return crypto.subtle.generateKey(algorithm, options?.extractable ?? false, [\n        \"sign\",\n        \"verify\"\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/oauth4webapi/build/index.js\n");

/***/ }),

/***/ "(middleware)/./node_modules/tslib/tslib.es6.mjs":
/*!******************************************!*\
  !*** ./node_modules/tslib/tslib.es6.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __addDisposableResource: () => (/* binding */ __addDisposableResource),\n/* harmony export */   __assign: () => (/* binding */ __assign),\n/* harmony export */   __asyncDelegator: () => (/* binding */ __asyncDelegator),\n/* harmony export */   __asyncGenerator: () => (/* binding */ __asyncGenerator),\n/* harmony export */   __asyncValues: () => (/* binding */ __asyncValues),\n/* harmony export */   __await: () => (/* binding */ __await),\n/* harmony export */   __awaiter: () => (/* binding */ __awaiter),\n/* harmony export */   __classPrivateFieldGet: () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   __classPrivateFieldIn: () => (/* binding */ __classPrivateFieldIn),\n/* harmony export */   __classPrivateFieldSet: () => (/* binding */ __classPrivateFieldSet),\n/* harmony export */   __createBinding: () => (/* binding */ __createBinding),\n/* harmony export */   __decorate: () => (/* binding */ __decorate),\n/* harmony export */   __disposeResources: () => (/* binding */ __disposeResources),\n/* harmony export */   __esDecorate: () => (/* binding */ __esDecorate),\n/* harmony export */   __exportStar: () => (/* binding */ __exportStar),\n/* harmony export */   __extends: () => (/* binding */ __extends),\n/* harmony export */   __generator: () => (/* binding */ __generator),\n/* harmony export */   __importDefault: () => (/* binding */ __importDefault),\n/* harmony export */   __importStar: () => (/* binding */ __importStar),\n/* harmony export */   __makeTemplateObject: () => (/* binding */ __makeTemplateObject),\n/* harmony export */   __metadata: () => (/* binding */ __metadata),\n/* harmony export */   __param: () => (/* binding */ __param),\n/* harmony export */   __propKey: () => (/* binding */ __propKey),\n/* harmony export */   __read: () => (/* binding */ __read),\n/* harmony export */   __rest: () => (/* binding */ __rest),\n/* harmony export */   __runInitializers: () => (/* binding */ __runInitializers),\n/* harmony export */   __setFunctionName: () => (/* binding */ __setFunctionName),\n/* harmony export */   __spread: () => (/* binding */ __spread),\n/* harmony export */   __spreadArray: () => (/* binding */ __spreadArray),\n/* harmony export */   __spreadArrays: () => (/* binding */ __spreadArrays),\n/* harmony export */   __values: () => (/* binding */ __values),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */ /* global Reflect, Promise, SuppressedError, Symbol */ var extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf || ({\n        __proto__: []\n    }) instanceof Array && function(d, b) {\n        d.__proto__ = b;\n    } || function(d, b) {\n        for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n};\nfunction __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n        this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\nvar __assign = function() {\n    __assign = Object.assign || function __assign(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction __rest(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){\n        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n}\nfunction __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for(var i = decorators.length - 1; i >= 0; i--)if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nfunction __param(paramIndex, decorator) {\n    return function(target, key) {\n        decorator(target, key, paramIndex);\n    };\n}\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n    function accept(f) {\n        if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\");\n        return f;\n    }\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n    var _, done = false;\n    for(var i = decorators.length - 1; i >= 0; i--){\n        var context = {};\n        for(var p in contextIn)context[p] = p === \"access\" ? {} : contextIn[p];\n        for(var p in contextIn.access)context.access[p] = contextIn.access[p];\n        context.addInitializer = function(f) {\n            if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\");\n            extraInitializers.push(accept(f || null));\n        };\n        var result = (0, decorators[i])(kind === \"accessor\" ? {\n            get: descriptor.get,\n            set: descriptor.set\n        } : descriptor[key], context);\n        if (kind === \"accessor\") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        } else if (_ = accept(result)) {\n            if (kind === \"field\") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\n    done = true;\n}\n;\nfunction __runInitializers(thisArg, initializers, value) {\n    var useValue = arguments.length > 2;\n    for(var i = 0; i < initializers.length; i++){\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n}\n;\nfunction __propKey(x) {\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\n}\n;\nfunction __setFunctionName(f, name, prefix) {\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n    return Object.defineProperty(f, \"name\", {\n        configurable: true,\n        value: prefix ? \"\".concat(prefix, \" \", name) : name\n    });\n}\n;\nfunction __metadata(metadataKey, metadataValue) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nfunction __awaiter(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n}\nfunction __generator(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n}\nvar __createBinding = Object.create ? function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n        desc = {\n            enumerable: true,\n            get: function() {\n                return m[k];\n            }\n        };\n    }\n    Object.defineProperty(o, k2, desc);\n} : function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n};\nfunction __exportStar(m, o) {\n    for(var p in m)if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\nfunction __values(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nfunction __read(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n}\n/** @deprecated */ function __spread() {\n    for(var ar = [], i = 0; i < arguments.length; i++)ar = ar.concat(__read(arguments[i]));\n    return ar;\n}\n/** @deprecated */ function __spreadArrays() {\n    for(var s = 0, i = 0, il = arguments.length; i < il; i++)s += arguments[i].length;\n    for(var r = Array(s), k = 0, i = 0; i < il; i++)for(var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)r[k] = a[j];\n    return r;\n}\nfunction __spreadArray(to, from, pack) {\n    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n}\nfunction __await(v) {\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nfunction __asyncGenerator(thisArg, _arguments, generator) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i;\n    function verb(n) {\n        if (g[n]) i[n] = function(v) {\n            return new Promise(function(a, b) {\n                q.push([\n                    n,\n                    v,\n                    a,\n                    b\n                ]) > 1 || resume(n, v);\n            });\n        };\n    }\n    function resume(n, v) {\n        try {\n            step(g[n](v));\n        } catch (e) {\n            settle(q[0][3], e);\n        }\n    }\n    function step(r) {\n        r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n    }\n    function fulfill(value) {\n        resume(\"next\", value);\n    }\n    function reject(value) {\n        resume(\"throw\", value);\n    }\n    function settle(f, v) {\n        if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n    }\n}\nfunction __asyncDelegator(o) {\n    var i, p;\n    return i = {}, verb(\"next\"), verb(\"throw\", function(e) {\n        throw e;\n    }), verb(\"return\"), i[Symbol.iterator] = function() {\n        return this;\n    }, i;\n    function verb(n, f) {\n        i[n] = o[n] ? function(v) {\n            return (p = !p) ? {\n                value: __await(o[n](v)),\n                done: false\n            } : f ? f(v) : v;\n        } : f;\n    }\n}\nfunction __asyncValues(o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function() {\n        return this;\n    }, i);\n    function verb(n) {\n        i[n] = o[n] && function(v) {\n            return new Promise(function(resolve, reject) {\n                v = o[n](v), settle(resolve, reject, v.done, v.value);\n            });\n        };\n    }\n    function settle(resolve, reject, d, v) {\n        Promise.resolve(v).then(function(v) {\n            resolve({\n                value: v,\n                done: d\n            });\n        }, reject);\n    }\n}\nfunction __makeTemplateObject(cooked, raw) {\n    if (Object.defineProperty) {\n        Object.defineProperty(cooked, \"raw\", {\n            value: raw\n        });\n    } else {\n        cooked.raw = raw;\n    }\n    return cooked;\n}\n;\nvar __setModuleDefault = Object.create ? function(o, v) {\n    Object.defineProperty(o, \"default\", {\n        enumerable: true,\n        value: v\n    });\n} : function(o, v) {\n    o[\"default\"] = v;\n};\nfunction __importStar(mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) {\n        for(var k in mod)if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    }\n    __setModuleDefault(result, mod);\n    return result;\n}\nfunction __importDefault(mod) {\n    return mod && mod.__esModule ? mod : {\n        default: mod\n    };\n}\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n}\nfunction __classPrivateFieldIn(state, receiver) {\n    if (receiver === null || typeof receiver !== \"object\" && typeof receiver !== \"function\") throw new TypeError(\"Cannot use 'in' operator on non-object\");\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\nfunction __addDisposableResource(env, value, async) {\n    if (value !== null && value !== void 0) {\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n        var dispose;\n        if (async) {\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n            dispose = value[Symbol.asyncDispose];\n        }\n        if (dispose === void 0) {\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n            dispose = value[Symbol.dispose];\n        }\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n        env.stack.push({\n            value: value,\n            dispose: dispose,\n            async: async\n        });\n    } else if (async) {\n        env.stack.push({\n            async: true\n        });\n    }\n    return value;\n}\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function(error, suppressed, message) {\n    var e = new Error(message);\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\nfunction __disposeResources(env) {\n    function fail(e) {\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n        env.hasError = true;\n    }\n    function next() {\n        while(env.stack.length){\n            var rec = env.stack.pop();\n            try {\n                var result = rec.dispose && rec.dispose.call(rec.value);\n                if (rec.async) return Promise.resolve(result).then(next, function(e) {\n                    fail(e);\n                    return next();\n                });\n            } catch (e) {\n                fail(e);\n            }\n        }\n        if (env.hasError) throw env.error;\n    }\n    return next();\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    __extends,\n    __assign,\n    __rest,\n    __decorate,\n    __param,\n    __metadata,\n    __awaiter,\n    __generator,\n    __createBinding,\n    __exportStar,\n    __values,\n    __read,\n    __spread,\n    __spreadArrays,\n    __spreadArray,\n    __await,\n    __asyncGenerator,\n    __asyncDelegator,\n    __asyncValues,\n    __makeTemplateObject,\n    __importStar,\n    __importDefault,\n    __classPrivateFieldGet,\n    __classPrivateFieldSet,\n    __classPrivateFieldIn,\n    __addDisposableResource,\n    __disposeResources\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(middleware)/./node_modules/tslib/tslib.es6.mjs\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ var __webpack_exports__ = (__webpack_exec__("(middleware)/./node_modules/next/dist/build/webpack/loaders/next-middleware-loader.js?absolutePagePath=C%3A%5CUsers%5CDuyChinhPro%5CDocuments%5Cf8-fullstack-KS2%5Cmind-map%5Csrc%5Cmiddleware.js&page=%2Fsrc%2Fmiddleware&rootDir=C%3A%5CUsers%5CDuyChinhPro%5CDocuments%5Cf8-fullstack-KS2%5Cmind-map&matchers=&preferredRegion=&middlewareConfig=e30%3D!"));
/******/ (_ENTRIES = typeof _ENTRIES === "undefined" ? {} : _ENTRIES)["middleware_src/middleware"] = __webpack_exports__;
/******/ }
]);